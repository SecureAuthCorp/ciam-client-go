// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/acp/models"
)

// GetScriptReader is a Reader for the GetScript structure.
type GetScriptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScriptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScriptOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetScriptUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScriptForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScriptNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScriptTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetScriptOK creates a GetScriptOK with default headers values
func NewGetScriptOK() *GetScriptOK {
	return &GetScriptOK{}
}

/* GetScriptOK describes a response with status code 200, with default header values.

Script
*/
type GetScriptOK struct {
	Payload *models.Script
}

func (o *GetScriptOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/scripts/{script}][%d] getScriptOK  %+v", 200, o.Payload)
}
func (o *GetScriptOK) GetPayload() *models.Script {
	return o.Payload
}

func (o *GetScriptOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Script)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptUnauthorized creates a GetScriptUnauthorized with default headers values
func NewGetScriptUnauthorized() *GetScriptUnauthorized {
	return &GetScriptUnauthorized{}
}

/* GetScriptUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetScriptUnauthorized struct {
	Payload *models.Error
}

func (o *GetScriptUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/scripts/{script}][%d] getScriptUnauthorized  %+v", 401, o.Payload)
}
func (o *GetScriptUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScriptUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptForbidden creates a GetScriptForbidden with default headers values
func NewGetScriptForbidden() *GetScriptForbidden {
	return &GetScriptForbidden{}
}

/* GetScriptForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetScriptForbidden struct {
	Payload *models.Error
}

func (o *GetScriptForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/scripts/{script}][%d] getScriptForbidden  %+v", 403, o.Payload)
}
func (o *GetScriptForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScriptForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptNotFound creates a GetScriptNotFound with default headers values
func NewGetScriptNotFound() *GetScriptNotFound {
	return &GetScriptNotFound{}
}

/* GetScriptNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetScriptNotFound struct {
	Payload *models.Error
}

func (o *GetScriptNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/scripts/{script}][%d] getScriptNotFound  %+v", 404, o.Payload)
}
func (o *GetScriptNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScriptNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScriptTooManyRequests creates a GetScriptTooManyRequests with default headers values
func NewGetScriptTooManyRequests() *GetScriptTooManyRequests {
	return &GetScriptTooManyRequests{}
}

/* GetScriptTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetScriptTooManyRequests struct {
	Payload *models.Error
}

func (o *GetScriptTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/scripts/{script}][%d] getScriptTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetScriptTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScriptTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
