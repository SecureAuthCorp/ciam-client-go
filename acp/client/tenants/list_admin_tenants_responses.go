// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/acp/models"
)

// ListAdminTenantsReader is a Reader for the ListAdminTenants structure.
type ListAdminTenantsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAdminTenantsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAdminTenantsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAdminTenantsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAdminTenantsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListAdminTenantsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListAdminTenantsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListAdminTenantsOK creates a ListAdminTenantsOK with default headers values
func NewListAdminTenantsOK() *ListAdminTenantsOK {
	return &ListAdminTenantsOK{}
}

/* ListAdminTenantsOK describes a response with status code 200, with default header values.

ListTenantsResponse
*/
type ListAdminTenantsOK struct {
	Payload *models.ListTenantsResponse
}

func (o *ListAdminTenantsOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants][%d] listAdminTenantsOK  %+v", 200, o.Payload)
}
func (o *ListAdminTenantsOK) GetPayload() *models.ListTenantsResponse {
	return o.Payload
}

func (o *ListAdminTenantsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListTenantsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAdminTenantsUnauthorized creates a ListAdminTenantsUnauthorized with default headers values
func NewListAdminTenantsUnauthorized() *ListAdminTenantsUnauthorized {
	return &ListAdminTenantsUnauthorized{}
}

/* ListAdminTenantsUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type ListAdminTenantsUnauthorized struct {
	Payload *models.Error
}

func (o *ListAdminTenantsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants][%d] listAdminTenantsUnauthorized  %+v", 401, o.Payload)
}
func (o *ListAdminTenantsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAdminTenantsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAdminTenantsForbidden creates a ListAdminTenantsForbidden with default headers values
func NewListAdminTenantsForbidden() *ListAdminTenantsForbidden {
	return &ListAdminTenantsForbidden{}
}

/* ListAdminTenantsForbidden describes a response with status code 403, with default header values.

HttpError
*/
type ListAdminTenantsForbidden struct {
	Payload *models.Error
}

func (o *ListAdminTenantsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants][%d] listAdminTenantsForbidden  %+v", 403, o.Payload)
}
func (o *ListAdminTenantsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAdminTenantsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAdminTenantsNotFound creates a ListAdminTenantsNotFound with default headers values
func NewListAdminTenantsNotFound() *ListAdminTenantsNotFound {
	return &ListAdminTenantsNotFound{}
}

/* ListAdminTenantsNotFound describes a response with status code 404, with default header values.

HttpError
*/
type ListAdminTenantsNotFound struct {
	Payload *models.Error
}

func (o *ListAdminTenantsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants][%d] listAdminTenantsNotFound  %+v", 404, o.Payload)
}
func (o *ListAdminTenantsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAdminTenantsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAdminTenantsTooManyRequests creates a ListAdminTenantsTooManyRequests with default headers values
func NewListAdminTenantsTooManyRequests() *ListAdminTenantsTooManyRequests {
	return &ListAdminTenantsTooManyRequests{}
}

/* ListAdminTenantsTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type ListAdminTenantsTooManyRequests struct {
	Payload *models.Error
}

func (o *ListAdminTenantsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants][%d] listAdminTenantsTooManyRequests  %+v", 429, o.Payload)
}
func (o *ListAdminTenantsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAdminTenantsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
