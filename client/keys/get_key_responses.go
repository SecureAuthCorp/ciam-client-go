// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetKeyReader is a Reader for the GetKey structure.
type GetKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKeyOK creates a GetKeyOK with default headers values
func NewGetKeyOK() *GetKeyOK {
	return &GetKeyOK{}
}

/* GetKeyOK describes a response with status code 200, with default header values.

ClientJWK
*/
type GetKeyOK struct {
	Payload *models.ClientJWK
}

func (o *GetKeyOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys/{kid}/raw][%d] getKeyOK  %+v", 200, o.Payload)
}
func (o *GetKeyOK) GetPayload() *models.ClientJWK {
	return o.Payload
}

func (o *GetKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientJWK)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyUnauthorized creates a GetKeyUnauthorized with default headers values
func NewGetKeyUnauthorized() *GetKeyUnauthorized {
	return &GetKeyUnauthorized{}
}

/* GetKeyUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetKeyUnauthorized struct {
	Payload *models.Error
}

func (o *GetKeyUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys/{kid}/raw][%d] getKeyUnauthorized  %+v", 401, o.Payload)
}
func (o *GetKeyUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyForbidden creates a GetKeyForbidden with default headers values
func NewGetKeyForbidden() *GetKeyForbidden {
	return &GetKeyForbidden{}
}

/* GetKeyForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetKeyForbidden struct {
	Payload *models.Error
}

func (o *GetKeyForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys/{kid}/raw][%d] getKeyForbidden  %+v", 403, o.Payload)
}
func (o *GetKeyForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeyNotFound creates a GetKeyNotFound with default headers values
func NewGetKeyNotFound() *GetKeyNotFound {
	return &GetKeyNotFound{}
}

/* GetKeyNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetKeyNotFound struct {
	Payload *models.Error
}

func (o *GetKeyNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys/{kid}/raw][%d] getKeyNotFound  %+v", 404, o.Payload)
}
func (o *GetKeyNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
