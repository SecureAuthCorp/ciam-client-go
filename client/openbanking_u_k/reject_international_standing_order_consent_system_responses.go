// Code generated by go-swagger; DO NOT EDIT.

package openbanking_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// RejectInternationalStandingOrderConsentSystemReader is a Reader for the RejectInternationalStandingOrderConsentSystem structure.
type RejectInternationalStandingOrderConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectInternationalStandingOrderConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectInternationalStandingOrderConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRejectInternationalStandingOrderConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectInternationalStandingOrderConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectInternationalStandingOrderConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRejectInternationalStandingOrderConsentSystemOK creates a RejectInternationalStandingOrderConsentSystemOK with default headers values
func NewRejectInternationalStandingOrderConsentSystemOK() *RejectInternationalStandingOrderConsentSystemOK {
	return &RejectInternationalStandingOrderConsentSystemOK{}
}

/* RejectInternationalStandingOrderConsentSystemOK describes a response with status code 200, with default header values.

ConsentRejected
*/
type RejectInternationalStandingOrderConsentSystemOK struct {
	Payload *models.ConsentRejected
}

func (o *RejectInternationalStandingOrderConsentSystemOK) Error() string {
	return fmt.Sprintf("[POST /api/system/{tid}/open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemOK  %+v", 200, o.Payload)
}
func (o *RejectInternationalStandingOrderConsentSystemOK) GetPayload() *models.ConsentRejected {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentRejected)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemUnauthorized creates a RejectInternationalStandingOrderConsentSystemUnauthorized with default headers values
func NewRejectInternationalStandingOrderConsentSystemUnauthorized() *RejectInternationalStandingOrderConsentSystemUnauthorized {
	return &RejectInternationalStandingOrderConsentSystemUnauthorized{}
}

/* RejectInternationalStandingOrderConsentSystemUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type RejectInternationalStandingOrderConsentSystemUnauthorized struct {
	Payload *models.Error
}

func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/system/{tid}/open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemUnauthorized  %+v", 401, o.Payload)
}
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemForbidden creates a RejectInternationalStandingOrderConsentSystemForbidden with default headers values
func NewRejectInternationalStandingOrderConsentSystemForbidden() *RejectInternationalStandingOrderConsentSystemForbidden {
	return &RejectInternationalStandingOrderConsentSystemForbidden{}
}

/* RejectInternationalStandingOrderConsentSystemForbidden describes a response with status code 403, with default header values.

HttpError
*/
type RejectInternationalStandingOrderConsentSystemForbidden struct {
	Payload *models.Error
}

func (o *RejectInternationalStandingOrderConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[POST /api/system/{tid}/open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemForbidden  %+v", 403, o.Payload)
}
func (o *RejectInternationalStandingOrderConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemNotFound creates a RejectInternationalStandingOrderConsentSystemNotFound with default headers values
func NewRejectInternationalStandingOrderConsentSystemNotFound() *RejectInternationalStandingOrderConsentSystemNotFound {
	return &RejectInternationalStandingOrderConsentSystemNotFound{}
}

/* RejectInternationalStandingOrderConsentSystemNotFound describes a response with status code 404, with default header values.

HttpError
*/
type RejectInternationalStandingOrderConsentSystemNotFound struct {
	Payload *models.Error
}

func (o *RejectInternationalStandingOrderConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[POST /api/system/{tid}/open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemNotFound  %+v", 404, o.Payload)
}
func (o *RejectInternationalStandingOrderConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
