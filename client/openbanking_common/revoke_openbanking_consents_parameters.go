// Code generated by go-swagger; DO NOT EDIT.

package openbanking_common

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewRevokeOpenbankingConsentsParams creates a new RevokeOpenbankingConsentsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRevokeOpenbankingConsentsParams() *RevokeOpenbankingConsentsParams {
	return &RevokeOpenbankingConsentsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRevokeOpenbankingConsentsParamsWithTimeout creates a new RevokeOpenbankingConsentsParams object
// with the ability to set a timeout on a request.
func NewRevokeOpenbankingConsentsParamsWithTimeout(timeout time.Duration) *RevokeOpenbankingConsentsParams {
	return &RevokeOpenbankingConsentsParams{
		timeout: timeout,
	}
}

// NewRevokeOpenbankingConsentsParamsWithContext creates a new RevokeOpenbankingConsentsParams object
// with the ability to set a context for a request.
func NewRevokeOpenbankingConsentsParamsWithContext(ctx context.Context) *RevokeOpenbankingConsentsParams {
	return &RevokeOpenbankingConsentsParams{
		Context: ctx,
	}
}

// NewRevokeOpenbankingConsentsParamsWithHTTPClient creates a new RevokeOpenbankingConsentsParams object
// with the ability to set a custom HTTPClient for a request.
func NewRevokeOpenbankingConsentsParamsWithHTTPClient(client *http.Client) *RevokeOpenbankingConsentsParams {
	return &RevokeOpenbankingConsentsParams{
		HTTPClient: client,
	}
}

/* RevokeOpenbankingConsentsParams contains all the parameters to send to the API endpoint
   for the revoke openbanking consents operation.

   Typically these are written to a http.Request.
*/
type RevokeOpenbankingConsentsParams struct {

	/* Aid.

	   Authorization server id

	   Default: "default"
	*/
	Aid string

	/* ClientID.

	   Client ID
	*/
	ClientID *string

	/* ConsentTypes.

	   Required consent types
	*/
	ConsentTypes []string

	/* Tid.

	   Tenant id

	   Default: "default"
	*/
	Tid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the revoke openbanking consents params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RevokeOpenbankingConsentsParams) WithDefaults() *RevokeOpenbankingConsentsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the revoke openbanking consents params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RevokeOpenbankingConsentsParams) SetDefaults() {
	var (
		aidDefault = string("default")

		tidDefault = string("default")
	)

	val := RevokeOpenbankingConsentsParams{
		Aid: aidDefault,
		Tid: tidDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithTimeout(timeout time.Duration) *RevokeOpenbankingConsentsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithContext(ctx context.Context) *RevokeOpenbankingConsentsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithHTTPClient(client *http.Client) *RevokeOpenbankingConsentsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAid adds the aid to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithAid(aid string) *RevokeOpenbankingConsentsParams {
	o.SetAid(aid)
	return o
}

// SetAid adds the aid to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetAid(aid string) {
	o.Aid = aid
}

// WithClientID adds the clientID to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithClientID(clientID *string) *RevokeOpenbankingConsentsParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetClientID(clientID *string) {
	o.ClientID = clientID
}

// WithConsentTypes adds the consentTypes to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithConsentTypes(consentTypes []string) *RevokeOpenbankingConsentsParams {
	o.SetConsentTypes(consentTypes)
	return o
}

// SetConsentTypes adds the consentTypes to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetConsentTypes(consentTypes []string) {
	o.ConsentTypes = consentTypes
}

// WithTid adds the tid to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) WithTid(tid string) *RevokeOpenbankingConsentsParams {
	o.SetTid(tid)
	return o
}

// SetTid adds the tid to the revoke openbanking consents params
func (o *RevokeOpenbankingConsentsParams) SetTid(tid string) {
	o.Tid = tid
}

// WriteToRequest writes these params to a swagger request
func (o *RevokeOpenbankingConsentsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param aid
	if err := r.SetPathParam("aid", o.Aid); err != nil {
		return err
	}

	if o.ClientID != nil {

		// query param client_id
		var qrClientID string

		if o.ClientID != nil {
			qrClientID = *o.ClientID
		}
		qClientID := qrClientID
		if qClientID != "" {

			if err := r.SetQueryParam("client_id", qClientID); err != nil {
				return err
			}
		}
	}

	if o.ConsentTypes != nil {

		// binding items for consent_types
		joinedConsentTypes := o.bindParamConsentTypes(reg)

		// query array param consent_types
		if err := r.SetQueryParam("consent_types", joinedConsentTypes...); err != nil {
			return err
		}
	}

	// path param tid
	if err := r.SetPathParam("tid", o.Tid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamRevokeOpenbankingConsents binds the parameter consent_types
func (o *RevokeOpenbankingConsentsParams) bindParamConsentTypes(formats strfmt.Registry) []string {
	consentTypesIR := o.ConsentTypes

	var consentTypesIC []string
	for _, consentTypesIIR := range consentTypesIR { // explode []string

		consentTypesIIV := consentTypesIIR // string as string
		consentTypesIC = append(consentTypesIC, consentTypesIIV)
	}

	// items.CollectionFormat: ""
	consentTypesIS := swag.JoinByFormat(consentTypesIC, "")

	return consentTypesIS
}
