// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetDomesticScheduledPaymentConsentsReader is a Reader for the GetDomesticScheduledPaymentConsents structure.
type GetDomesticScheduledPaymentConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomesticScheduledPaymentConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomesticScheduledPaymentConsentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDomesticScheduledPaymentConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomesticScheduledPaymentConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDomesticScheduledPaymentConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDomesticScheduledPaymentConsentsOK creates a GetDomesticScheduledPaymentConsentsOK with default headers values
func NewGetDomesticScheduledPaymentConsentsOK() *GetDomesticScheduledPaymentConsentsOK {
	return &GetDomesticScheduledPaymentConsentsOK{}
}

/* GetDomesticScheduledPaymentConsentsOK describes a response with status code 200, with default header values.

ListDomesticScheduledPaymentConsentsWithClient
*/
type GetDomesticScheduledPaymentConsentsOK struct {
	Payload *models.ListDomesticScheduledPaymentConsentsWithClient
}

func (o *GetDomesticScheduledPaymentConsentsOK) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/domestic-scheduled-payment-consents][%d] getDomesticScheduledPaymentConsentsOK  %+v", 200, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentsOK) GetPayload() *models.ListDomesticScheduledPaymentConsentsWithClient {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListDomesticScheduledPaymentConsentsWithClient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentsUnauthorized creates a GetDomesticScheduledPaymentConsentsUnauthorized with default headers values
func NewGetDomesticScheduledPaymentConsentsUnauthorized() *GetDomesticScheduledPaymentConsentsUnauthorized {
	return &GetDomesticScheduledPaymentConsentsUnauthorized{}
}

/* GetDomesticScheduledPaymentConsentsUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetDomesticScheduledPaymentConsentsUnauthorized struct {
	Payload *models.Error
}

func (o *GetDomesticScheduledPaymentConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/domestic-scheduled-payment-consents][%d] getDomesticScheduledPaymentConsentsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentsForbidden creates a GetDomesticScheduledPaymentConsentsForbidden with default headers values
func NewGetDomesticScheduledPaymentConsentsForbidden() *GetDomesticScheduledPaymentConsentsForbidden {
	return &GetDomesticScheduledPaymentConsentsForbidden{}
}

/* GetDomesticScheduledPaymentConsentsForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetDomesticScheduledPaymentConsentsForbidden struct {
	Payload *models.Error
}

func (o *GetDomesticScheduledPaymentConsentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/domestic-scheduled-payment-consents][%d] getDomesticScheduledPaymentConsentsForbidden  %+v", 403, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentsNotFound creates a GetDomesticScheduledPaymentConsentsNotFound with default headers values
func NewGetDomesticScheduledPaymentConsentsNotFound() *GetDomesticScheduledPaymentConsentsNotFound {
	return &GetDomesticScheduledPaymentConsentsNotFound{}
}

/* GetDomesticScheduledPaymentConsentsNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetDomesticScheduledPaymentConsentsNotFound struct {
	Payload *models.Error
}

func (o *GetDomesticScheduledPaymentConsentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/domestic-scheduled-payment-consents][%d] getDomesticScheduledPaymentConsentsNotFound  %+v", 404, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
