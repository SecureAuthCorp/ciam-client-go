// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetInternationalScheduledPaymentConsentSystemReader is a Reader for the GetInternationalScheduledPaymentConsentSystem structure.
type GetInternationalScheduledPaymentConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInternationalScheduledPaymentConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInternationalScheduledPaymentConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetInternationalScheduledPaymentConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInternationalScheduledPaymentConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInternationalScheduledPaymentConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInternationalScheduledPaymentConsentSystemOK creates a GetInternationalScheduledPaymentConsentSystemOK with default headers values
func NewGetInternationalScheduledPaymentConsentSystemOK() *GetInternationalScheduledPaymentConsentSystemOK {
	return &GetInternationalScheduledPaymentConsentSystemOK{}
}

/* GetInternationalScheduledPaymentConsentSystemOK describes a response with status code 200, with default header values.

GetInternationalScheduledPaymentConsentResponse
*/
type GetInternationalScheduledPaymentConsentSystemOK struct {
	Payload *models.GetInternationalScheduledPaymentConsentResponse
}

func (o *GetInternationalScheduledPaymentConsentSystemOK) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemOK  %+v", 200, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentSystemOK) GetPayload() *models.GetInternationalScheduledPaymentConsentResponse {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetInternationalScheduledPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemUnauthorized creates a GetInternationalScheduledPaymentConsentSystemUnauthorized with default headers values
func NewGetInternationalScheduledPaymentConsentSystemUnauthorized() *GetInternationalScheduledPaymentConsentSystemUnauthorized {
	return &GetInternationalScheduledPaymentConsentSystemUnauthorized{}
}

/* GetInternationalScheduledPaymentConsentSystemUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetInternationalScheduledPaymentConsentSystemUnauthorized struct {
	Payload *models.Error
}

func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemUnauthorized  %+v", 401, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemForbidden creates a GetInternationalScheduledPaymentConsentSystemForbidden with default headers values
func NewGetInternationalScheduledPaymentConsentSystemForbidden() *GetInternationalScheduledPaymentConsentSystemForbidden {
	return &GetInternationalScheduledPaymentConsentSystemForbidden{}
}

/* GetInternationalScheduledPaymentConsentSystemForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetInternationalScheduledPaymentConsentSystemForbidden struct {
	Payload *models.Error
}

func (o *GetInternationalScheduledPaymentConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemForbidden  %+v", 403, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemNotFound creates a GetInternationalScheduledPaymentConsentSystemNotFound with default headers values
func NewGetInternationalScheduledPaymentConsentSystemNotFound() *GetInternationalScheduledPaymentConsentSystemNotFound {
	return &GetInternationalScheduledPaymentConsentSystemNotFound{}
}

/* GetInternationalScheduledPaymentConsentSystemNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetInternationalScheduledPaymentConsentSystemNotFound struct {
	Payload *models.Error
}

func (o *GetInternationalScheduledPaymentConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemNotFound  %+v", 404, o.Payload)
}
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
