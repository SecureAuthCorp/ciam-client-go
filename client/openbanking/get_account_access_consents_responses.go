// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetAccountAccessConsentsReader is a Reader for the GetAccountAccessConsents structure.
type GetAccountAccessConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountAccessConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountAccessConsentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAccountAccessConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountAccessConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountAccessConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAccountAccessConsentsOK creates a GetAccountAccessConsentsOK with default headers values
func NewGetAccountAccessConsentsOK() *GetAccountAccessConsentsOK {
	return &GetAccountAccessConsentsOK{}
}

/* GetAccountAccessConsentsOK describes a response with status code 200, with default header values.

ListAccountAccessConsentsWithClient
*/
type GetAccountAccessConsentsOK struct {
	Payload *models.ListAccountAccessConsentsWithClient
}

func (o *GetAccountAccessConsentsOK) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/account-access-consents][%d] getAccountAccessConsentsOK  %+v", 200, o.Payload)
}
func (o *GetAccountAccessConsentsOK) GetPayload() *models.ListAccountAccessConsentsWithClient {
	return o.Payload
}

func (o *GetAccountAccessConsentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListAccountAccessConsentsWithClient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountAccessConsentsUnauthorized creates a GetAccountAccessConsentsUnauthorized with default headers values
func NewGetAccountAccessConsentsUnauthorized() *GetAccountAccessConsentsUnauthorized {
	return &GetAccountAccessConsentsUnauthorized{}
}

/* GetAccountAccessConsentsUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetAccountAccessConsentsUnauthorized struct {
	Payload *models.Error
}

func (o *GetAccountAccessConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/account-access-consents][%d] getAccountAccessConsentsUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAccountAccessConsentsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountAccessConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountAccessConsentsForbidden creates a GetAccountAccessConsentsForbidden with default headers values
func NewGetAccountAccessConsentsForbidden() *GetAccountAccessConsentsForbidden {
	return &GetAccountAccessConsentsForbidden{}
}

/* GetAccountAccessConsentsForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetAccountAccessConsentsForbidden struct {
	Payload *models.Error
}

func (o *GetAccountAccessConsentsForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/account-access-consents][%d] getAccountAccessConsentsForbidden  %+v", 403, o.Payload)
}
func (o *GetAccountAccessConsentsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountAccessConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountAccessConsentsNotFound creates a GetAccountAccessConsentsNotFound with default headers values
func NewGetAccountAccessConsentsNotFound() *GetAccountAccessConsentsNotFound {
	return &GetAccountAccessConsentsNotFound{}
}

/* GetAccountAccessConsentsNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetAccountAccessConsentsNotFound struct {
	Payload *models.Error
}

func (o *GetAccountAccessConsentsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/servers/{aid}/open-banking/account-access-consents][%d] getAccountAccessConsentsNotFound  %+v", 404, o.Payload)
}
func (o *GetAccountAccessConsentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAccountAccessConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
