// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// CreateInternationalPaymentConsentReader is a Reader for the CreateInternationalPaymentConsent structure.
type CreateInternationalPaymentConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInternationalPaymentConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInternationalPaymentConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInternationalPaymentConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInternationalPaymentConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInternationalPaymentConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateInternationalPaymentConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateInternationalPaymentConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateInternationalPaymentConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateInternationalPaymentConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInternationalPaymentConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateInternationalPaymentConsentCreated creates a CreateInternationalPaymentConsentCreated with default headers values
func NewCreateInternationalPaymentConsentCreated() *CreateInternationalPaymentConsentCreated {
	return &CreateInternationalPaymentConsentCreated{}
}

/* CreateInternationalPaymentConsentCreated describes a response with status code 201, with default header values.

InternationalPaymentConsentResponse
*/
type CreateInternationalPaymentConsentCreated struct {
	Payload *models.InternationalPaymentConsentResponse
}

func (o *CreateInternationalPaymentConsentCreated) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentCreated  %+v", 201, o.Payload)
}
func (o *CreateInternationalPaymentConsentCreated) GetPayload() *models.InternationalPaymentConsentResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternationalPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentBadRequest creates a CreateInternationalPaymentConsentBadRequest with default headers values
func NewCreateInternationalPaymentConsentBadRequest() *CreateInternationalPaymentConsentBadRequest {
	return &CreateInternationalPaymentConsentBadRequest{}
}

/* CreateInternationalPaymentConsentBadRequest describes a response with status code 400, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentBadRequest) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentBadRequest  %+v", 400, o.Payload)
}
func (o *CreateInternationalPaymentConsentBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentUnauthorized creates a CreateInternationalPaymentConsentUnauthorized with default headers values
func NewCreateInternationalPaymentConsentUnauthorized() *CreateInternationalPaymentConsentUnauthorized {
	return &CreateInternationalPaymentConsentUnauthorized{}
}

/* CreateInternationalPaymentConsentUnauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentUnauthorized  %+v", 401, o.Payload)
}
func (o *CreateInternationalPaymentConsentUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentForbidden creates a CreateInternationalPaymentConsentForbidden with default headers values
func NewCreateInternationalPaymentConsentForbidden() *CreateInternationalPaymentConsentForbidden {
	return &CreateInternationalPaymentConsentForbidden{}
}

/* CreateInternationalPaymentConsentForbidden describes a response with status code 403, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentForbidden struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentForbidden) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentForbidden  %+v", 403, o.Payload)
}
func (o *CreateInternationalPaymentConsentForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentMethodNotAllowed creates a CreateInternationalPaymentConsentMethodNotAllowed with default headers values
func NewCreateInternationalPaymentConsentMethodNotAllowed() *CreateInternationalPaymentConsentMethodNotAllowed {
	return &CreateInternationalPaymentConsentMethodNotAllowed{}
}

/* CreateInternationalPaymentConsentMethodNotAllowed describes a response with status code 405, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *CreateInternationalPaymentConsentMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentNotAcceptable creates a CreateInternationalPaymentConsentNotAcceptable with default headers values
func NewCreateInternationalPaymentConsentNotAcceptable() *CreateInternationalPaymentConsentNotAcceptable {
	return &CreateInternationalPaymentConsentNotAcceptable{}
}

/* CreateInternationalPaymentConsentNotAcceptable describes a response with status code 406, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentNotAcceptable struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentNotAcceptable  %+v", 406, o.Payload)
}
func (o *CreateInternationalPaymentConsentNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentUnsupportedMediaType creates a CreateInternationalPaymentConsentUnsupportedMediaType with default headers values
func NewCreateInternationalPaymentConsentUnsupportedMediaType() *CreateInternationalPaymentConsentUnsupportedMediaType {
	return &CreateInternationalPaymentConsentUnsupportedMediaType{}
}

/* CreateInternationalPaymentConsentUnsupportedMediaType describes a response with status code 415, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentTooManyRequests creates a CreateInternationalPaymentConsentTooManyRequests with default headers values
func NewCreateInternationalPaymentConsentTooManyRequests() *CreateInternationalPaymentConsentTooManyRequests {
	return &CreateInternationalPaymentConsentTooManyRequests{}
}

/* CreateInternationalPaymentConsentTooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentTooManyRequests  %+v", 429, o.Payload)
}
func (o *CreateInternationalPaymentConsentTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentInternalServerError creates a CreateInternationalPaymentConsentInternalServerError with default headers values
func NewCreateInternationalPaymentConsentInternalServerError() *CreateInternationalPaymentConsentInternalServerError {
	return &CreateInternationalPaymentConsentInternalServerError{}
}

/* CreateInternationalPaymentConsentInternalServerError describes a response with status code 500, with default header values.

ErrorResponse
*/
type CreateInternationalPaymentConsentInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *CreateInternationalPaymentConsentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /{tid}/{aid}/open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentInternalServerError  %+v", 500, o.Payload)
}
func (o *CreateInternationalPaymentConsentInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
