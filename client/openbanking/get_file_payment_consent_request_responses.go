// Code generated by go-swagger; DO NOT EDIT.

package openbanking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/models"
)

// GetFilePaymentConsentRequestReader is a Reader for the GetFilePaymentConsentRequest structure.
type GetFilePaymentConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFilePaymentConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFilePaymentConsentRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFilePaymentConsentRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetFilePaymentConsentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFilePaymentConsentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetFilePaymentConsentRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetFilePaymentConsentRequestNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetFilePaymentConsentRequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetFilePaymentConsentRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFilePaymentConsentRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetFilePaymentConsentRequestOK creates a GetFilePaymentConsentRequestOK with default headers values
func NewGetFilePaymentConsentRequestOK() *GetFilePaymentConsentRequestOK {
	return &GetFilePaymentConsentRequestOK{}
}

/* GetFilePaymentConsentRequestOK describes a response with status code 200, with default header values.

FilePaymentConsentResponse
*/
type GetFilePaymentConsentRequestOK struct {
	Payload *models.FilePaymentConsentResponse
}

func (o *GetFilePaymentConsentRequestOK) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestOK  %+v", 200, o.Payload)
}
func (o *GetFilePaymentConsentRequestOK) GetPayload() *models.FilePaymentConsentResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FilePaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestBadRequest creates a GetFilePaymentConsentRequestBadRequest with default headers values
func NewGetFilePaymentConsentRequestBadRequest() *GetFilePaymentConsentRequestBadRequest {
	return &GetFilePaymentConsentRequestBadRequest{}
}

/* GetFilePaymentConsentRequestBadRequest describes a response with status code 400, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestBadRequest) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestBadRequest  %+v", 400, o.Payload)
}
func (o *GetFilePaymentConsentRequestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestUnauthorized creates a GetFilePaymentConsentRequestUnauthorized with default headers values
func NewGetFilePaymentConsentRequestUnauthorized() *GetFilePaymentConsentRequestUnauthorized {
	return &GetFilePaymentConsentRequestUnauthorized{}
}

/* GetFilePaymentConsentRequestUnauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestUnauthorized  %+v", 401, o.Payload)
}
func (o *GetFilePaymentConsentRequestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestForbidden creates a GetFilePaymentConsentRequestForbidden with default headers values
func NewGetFilePaymentConsentRequestForbidden() *GetFilePaymentConsentRequestForbidden {
	return &GetFilePaymentConsentRequestForbidden{}
}

/* GetFilePaymentConsentRequestForbidden describes a response with status code 403, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestForbidden  %+v", 403, o.Payload)
}
func (o *GetFilePaymentConsentRequestForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestMethodNotAllowed creates a GetFilePaymentConsentRequestMethodNotAllowed with default headers values
func NewGetFilePaymentConsentRequestMethodNotAllowed() *GetFilePaymentConsentRequestMethodNotAllowed {
	return &GetFilePaymentConsentRequestMethodNotAllowed{}
}

/* GetFilePaymentConsentRequestMethodNotAllowed describes a response with status code 405, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *GetFilePaymentConsentRequestMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestNotAcceptable creates a GetFilePaymentConsentRequestNotAcceptable with default headers values
func NewGetFilePaymentConsentRequestNotAcceptable() *GetFilePaymentConsentRequestNotAcceptable {
	return &GetFilePaymentConsentRequestNotAcceptable{}
}

/* GetFilePaymentConsentRequestNotAcceptable describes a response with status code 406, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestNotAcceptable struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestNotAcceptable  %+v", 406, o.Payload)
}
func (o *GetFilePaymentConsentRequestNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestUnsupportedMediaType creates a GetFilePaymentConsentRequestUnsupportedMediaType with default headers values
func NewGetFilePaymentConsentRequestUnsupportedMediaType() *GetFilePaymentConsentRequestUnsupportedMediaType {
	return &GetFilePaymentConsentRequestUnsupportedMediaType{}
}

/* GetFilePaymentConsentRequestUnsupportedMediaType describes a response with status code 415, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *GetFilePaymentConsentRequestUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestTooManyRequests creates a GetFilePaymentConsentRequestTooManyRequests with default headers values
func NewGetFilePaymentConsentRequestTooManyRequests() *GetFilePaymentConsentRequestTooManyRequests {
	return &GetFilePaymentConsentRequestTooManyRequests{}
}

/* GetFilePaymentConsentRequestTooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetFilePaymentConsentRequestTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFilePaymentConsentRequestInternalServerError creates a GetFilePaymentConsentRequestInternalServerError with default headers values
func NewGetFilePaymentConsentRequestInternalServerError() *GetFilePaymentConsentRequestInternalServerError {
	return &GetFilePaymentConsentRequestInternalServerError{}
}

/* GetFilePaymentConsentRequestInternalServerError describes a response with status code 500, with default header values.

ErrorResponse
*/
type GetFilePaymentConsentRequestInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetFilePaymentConsentRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{tid}/{aid}/open-banking/v3.1/pisp/file-payment-consents/{consentID}][%d] getFilePaymentConsentRequestInternalServerError  %+v", 500, o.Payload)
}
func (o *GetFilePaymentConsentRequestInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetFilePaymentConsentRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
