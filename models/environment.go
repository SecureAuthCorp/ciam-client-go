// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Environment environment
//
// swagger:model Environment
type Environment struct {

	// commit
	Commit string `json:"commit,omitempty"`

	// enables demo app endpoints
	DemoApp bool `json:"demo_app,omitempty"`

	// realod templates, adds local redirects urls to frontend apps
	DevMode bool `json:"dev_mode,omitempty"`

	// display workspace wizard
	DisplayWorkspaceWizard bool `json:"display_workspace_wizard,omitempty"`

	// default not secure embedded script runtime or fission
	FaasProvider string `json:"faas_provider,omitempty"`

	// enables import, export, global accept, deny, introspect endpoints
	IntegrationEndpoints bool `json:"integration_endpoints,omitempty"`

	// enable jwt bearer grant type
	JwtBearerGrantType bool `json:"jwt_bearer_grant_type,omitempty"`

	// enable openbanking domestic payment consent apis
	OpenbankingDomesticPaymentConsents bool `json:"openbanking_domestic_payment_consents,omitempty"`

	// enable openbanking domestic scheduled payment consent apis
	OpenbankingDomesticScheduledPaymentConsents bool `json:"openbanking_domestic_scheduled_payment_consents,omitempty"`

	// enable openbanking domestic standing order consent apis
	OpenbankingDomesticStandingOrderConsents bool `json:"openbanking_domestic_standing_order_consents,omitempty"`

	// enable openbanking file payment consent apis
	OpenbankingFilePaymentConsents bool `json:"openbanking_file_payment_consents,omitempty"`

	// enable openbanking international payment consent apis
	OpenbankingInternationalPaymentConsents bool `json:"openbanking_international_payment_consents,omitempty"`

	// enable openbanking international scheduled payment consent apis
	OpenbankingInternationalScheduledPaymentConsents bool `json:"openbanking_international_scheduled_payment_consents,omitempty"`

	// enable openbanking international standing order consent apis
	OpenbankingInternationalStandingOrderConsents bool `json:"openbanking_international_standing_order_consents,omitempty"`

	// enable verification middleware for POST payment consent endpoints
	OpenbankingJwsVerification bool `json:"openbanking_jws_verification,omitempty"`

	// enable, when ACP is running on-prem, and Pyron is used as gateway
	PyronOnPrem bool `json:"pyron_on_prem,omitempty"`

	// enable javascript transformer
	ScriptTransformer bool `json:"script_transformer,omitempty"`

	// enables swagger ui
	SwaggerUI bool `json:"swagger_ui,omitempty"`

	// enable system client management apis
	SystemClientsManagement bool `json:"system_clients_management,omitempty"`

	// enable system openbanking consent management apis
	SystemOpenbankingConsentsManagement bool `json:"system_openbanking_consents_management,omitempty"`

	// version
	Version string `json:"version,omitempty"`

	// enable roatation keys in frontend
	WebRotationKeys bool `json:"web_rotation_keys,omitempty"`
}

// Validate validates this environment
func (m *Environment) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this environment based on context it is used
func (m *Environment) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Environment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Environment) UnmarshalBinary(b []byte) error {
	var res Environment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
