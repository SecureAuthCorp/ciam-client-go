// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CDRAdminRequestMetaDataUpdateData CDRAdminRequestMetaDataUpdateData RequestMetaDataUpdate_data
// Example: {"action":"REFRESH"}
//
// swagger:model CDRAdminRequestMetaDataUpdate_data
type CDRAdminRequestMetaDataUpdateData struct {

	// The action to take for the meta data. At the moment the only option is REFRESH which requires the data holder to call the ACCC to refresh meta data as soon as practicable
	// Example: REFRESH
	// Required: true
	Action string `json:"action" yaml:"action"`
}

// Validate validates this c d r admin request meta data update data
func (m *CDRAdminRequestMetaDataUpdateData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CDRAdminRequestMetaDataUpdateData) validateAction(formats strfmt.Registry) error {

	if err := validate.RequiredString("action", "body", m.Action); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this c d r admin request meta data update data based on context it is used
func (m *CDRAdminRequestMetaDataUpdateData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CDRAdminRequestMetaDataUpdateData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CDRAdminRequestMetaDataUpdateData) UnmarshalBinary(b []byte) error {
	var res CDRAdminRequestMetaDataUpdateData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
