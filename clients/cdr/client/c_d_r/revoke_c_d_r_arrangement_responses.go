// Code generated by go-swagger; DO NOT EDIT.

package c_d_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/cdr/models"
)

// RevokeCDRArrangementReader is a Reader for the RevokeCDRArrangement structure.
type RevokeCDRArrangementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeCDRArrangementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRevokeCDRArrangementNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeCDRArrangementBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeCDRArrangementUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeCDRArrangementForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeCDRArrangementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRevokeCDRArrangementUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeCDRArrangementTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeCDRArrangementNoContent creates a RevokeCDRArrangementNoContent with default headers values
func NewRevokeCDRArrangementNoContent() *RevokeCDRArrangementNoContent {
	return &RevokeCDRArrangementNoContent{}
}

/*
RevokeCDRArrangementNoContent describes a response with status code 204, with default header values.

	CDR arrangement revoked
*/
type RevokeCDRArrangementNoContent struct {
}

// IsSuccess returns true when this revoke c d r arrangement no content response has a 2xx status code
func (o *RevokeCDRArrangementNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke c d r arrangement no content response has a 3xx status code
func (o *RevokeCDRArrangementNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement no content response has a 4xx status code
func (o *RevokeCDRArrangementNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke c d r arrangement no content response has a 5xx status code
func (o *RevokeCDRArrangementNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement no content response a status code equal to that given
func (o *RevokeCDRArrangementNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the revoke c d r arrangement no content response
func (o *RevokeCDRArrangementNoContent) Code() int {
	return 204
}

func (o *RevokeCDRArrangementNoContent) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementNoContent ", 204)
}

func (o *RevokeCDRArrangementNoContent) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementNoContent ", 204)
}

func (o *RevokeCDRArrangementNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeCDRArrangementBadRequest creates a RevokeCDRArrangementBadRequest with default headers values
func NewRevokeCDRArrangementBadRequest() *RevokeCDRArrangementBadRequest {
	return &RevokeCDRArrangementBadRequest{}
}

/*
RevokeCDRArrangementBadRequest describes a response with status code 400, with default header values.

CDR Error
*/
type RevokeCDRArrangementBadRequest struct {
	Payload *models.CDRErrorResponse
}

// IsSuccess returns true when this revoke c d r arrangement bad request response has a 2xx status code
func (o *RevokeCDRArrangementBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangement bad request response has a 3xx status code
func (o *RevokeCDRArrangementBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement bad request response has a 4xx status code
func (o *RevokeCDRArrangementBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangement bad request response has a 5xx status code
func (o *RevokeCDRArrangementBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement bad request response a status code equal to that given
func (o *RevokeCDRArrangementBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke c d r arrangement bad request response
func (o *RevokeCDRArrangementBadRequest) Code() int {
	return 400
}

func (o *RevokeCDRArrangementBadRequest) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeCDRArrangementBadRequest) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeCDRArrangementBadRequest) GetPayload() *models.CDRErrorResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementUnauthorized creates a RevokeCDRArrangementUnauthorized with default headers values
func NewRevokeCDRArrangementUnauthorized() *RevokeCDRArrangementUnauthorized {
	return &RevokeCDRArrangementUnauthorized{}
}

/*
RevokeCDRArrangementUnauthorized describes a response with status code 401, with default header values.

CDR Error
*/
type RevokeCDRArrangementUnauthorized struct {
	Payload *models.CDRErrorResponse
}

// IsSuccess returns true when this revoke c d r arrangement unauthorized response has a 2xx status code
func (o *RevokeCDRArrangementUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangement unauthorized response has a 3xx status code
func (o *RevokeCDRArrangementUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement unauthorized response has a 4xx status code
func (o *RevokeCDRArrangementUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangement unauthorized response has a 5xx status code
func (o *RevokeCDRArrangementUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement unauthorized response a status code equal to that given
func (o *RevokeCDRArrangementUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke c d r arrangement unauthorized response
func (o *RevokeCDRArrangementUnauthorized) Code() int {
	return 401
}

func (o *RevokeCDRArrangementUnauthorized) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeCDRArrangementUnauthorized) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeCDRArrangementUnauthorized) GetPayload() *models.CDRErrorResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementForbidden creates a RevokeCDRArrangementForbidden with default headers values
func NewRevokeCDRArrangementForbidden() *RevokeCDRArrangementForbidden {
	return &RevokeCDRArrangementForbidden{}
}

/*
RevokeCDRArrangementForbidden describes a response with status code 403, with default header values.

CDR Error
*/
type RevokeCDRArrangementForbidden struct {
	Payload *models.CDRErrorResponse
}

// IsSuccess returns true when this revoke c d r arrangement forbidden response has a 2xx status code
func (o *RevokeCDRArrangementForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangement forbidden response has a 3xx status code
func (o *RevokeCDRArrangementForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement forbidden response has a 4xx status code
func (o *RevokeCDRArrangementForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangement forbidden response has a 5xx status code
func (o *RevokeCDRArrangementForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement forbidden response a status code equal to that given
func (o *RevokeCDRArrangementForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke c d r arrangement forbidden response
func (o *RevokeCDRArrangementForbidden) Code() int {
	return 403
}

func (o *RevokeCDRArrangementForbidden) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementForbidden  %+v", 403, o.Payload)
}

func (o *RevokeCDRArrangementForbidden) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementForbidden  %+v", 403, o.Payload)
}

func (o *RevokeCDRArrangementForbidden) GetPayload() *models.CDRErrorResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementNotFound creates a RevokeCDRArrangementNotFound with default headers values
func NewRevokeCDRArrangementNotFound() *RevokeCDRArrangementNotFound {
	return &RevokeCDRArrangementNotFound{}
}

/*
RevokeCDRArrangementNotFound describes a response with status code 404, with default header values.

CDR Error
*/
type RevokeCDRArrangementNotFound struct {
	Payload *models.CDRErrorResponse
}

// IsSuccess returns true when this revoke c d r arrangement not found response has a 2xx status code
func (o *RevokeCDRArrangementNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangement not found response has a 3xx status code
func (o *RevokeCDRArrangementNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement not found response has a 4xx status code
func (o *RevokeCDRArrangementNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangement not found response has a 5xx status code
func (o *RevokeCDRArrangementNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement not found response a status code equal to that given
func (o *RevokeCDRArrangementNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke c d r arrangement not found response
func (o *RevokeCDRArrangementNotFound) Code() int {
	return 404
}

func (o *RevokeCDRArrangementNotFound) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementNotFound  %+v", 404, o.Payload)
}

func (o *RevokeCDRArrangementNotFound) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementNotFound  %+v", 404, o.Payload)
}

func (o *RevokeCDRArrangementNotFound) GetPayload() *models.CDRErrorResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementUnprocessableEntity creates a RevokeCDRArrangementUnprocessableEntity with default headers values
func NewRevokeCDRArrangementUnprocessableEntity() *RevokeCDRArrangementUnprocessableEntity {
	return &RevokeCDRArrangementUnprocessableEntity{}
}

/*
RevokeCDRArrangementUnprocessableEntity describes a response with status code 422, with default header values.

CDR Error
*/
type RevokeCDRArrangementUnprocessableEntity struct {
	Payload *models.CDRErrorResponse
}

// IsSuccess returns true when this revoke c d r arrangement unprocessable entity response has a 2xx status code
func (o *RevokeCDRArrangementUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangement unprocessable entity response has a 3xx status code
func (o *RevokeCDRArrangementUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement unprocessable entity response has a 4xx status code
func (o *RevokeCDRArrangementUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangement unprocessable entity response has a 5xx status code
func (o *RevokeCDRArrangementUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement unprocessable entity response a status code equal to that given
func (o *RevokeCDRArrangementUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the revoke c d r arrangement unprocessable entity response
func (o *RevokeCDRArrangementUnprocessableEntity) Code() int {
	return 422
}

func (o *RevokeCDRArrangementUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RevokeCDRArrangementUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RevokeCDRArrangementUnprocessableEntity) GetPayload() *models.CDRErrorResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementTooManyRequests creates a RevokeCDRArrangementTooManyRequests with default headers values
func NewRevokeCDRArrangementTooManyRequests() *RevokeCDRArrangementTooManyRequests {
	return &RevokeCDRArrangementTooManyRequests{}
}

/*
RevokeCDRArrangementTooManyRequests describes a response with status code 429, with default header values.

CDR Error
*/
type RevokeCDRArrangementTooManyRequests struct {
	Payload *models.CDRErrorResponse
}

// IsSuccess returns true when this revoke c d r arrangement too many requests response has a 2xx status code
func (o *RevokeCDRArrangementTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangement too many requests response has a 3xx status code
func (o *RevokeCDRArrangementTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangement too many requests response has a 4xx status code
func (o *RevokeCDRArrangementTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangement too many requests response has a 5xx status code
func (o *RevokeCDRArrangementTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangement too many requests response a status code equal to that given
func (o *RevokeCDRArrangementTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke c d r arrangement too many requests response
func (o *RevokeCDRArrangementTooManyRequests) Code() int {
	return 429
}

func (o *RevokeCDRArrangementTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeCDRArrangementTooManyRequests) String() string {
	return fmt.Sprintf("[POST /arrangements/revoke][%d] revokeCDRArrangementTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeCDRArrangementTooManyRequests) GetPayload() *models.CDRErrorResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
