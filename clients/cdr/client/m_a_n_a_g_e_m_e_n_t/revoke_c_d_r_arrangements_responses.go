// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/cdr/models"
)

// RevokeCDRArrangementsReader is a Reader for the RevokeCDRArrangements structure.
type RevokeCDRArrangementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeCDRArrangementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeCDRArrangementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeCDRArrangementsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeCDRArrangementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeCDRArrangementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeCDRArrangementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeCDRArrangementsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /servers/{wid}/cdr/arrangements] revokeCDRArrangements", response, response.Code())
	}
}

// NewRevokeCDRArrangementsOK creates a RevokeCDRArrangementsOK with default headers values
func NewRevokeCDRArrangementsOK() *RevokeCDRArrangementsOK {
	return &RevokeCDRArrangementsOK{}
}

/*
RevokeCDRArrangementsOK describes a response with status code 200, with default header values.

Consents Revoked
*/
type RevokeCDRArrangementsOK struct {
	Payload *models.ConsentsRemovedResponse
}

// IsSuccess returns true when this revoke c d r arrangements o k response has a 2xx status code
func (o *RevokeCDRArrangementsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke c d r arrangements o k response has a 3xx status code
func (o *RevokeCDRArrangementsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangements o k response has a 4xx status code
func (o *RevokeCDRArrangementsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke c d r arrangements o k response has a 5xx status code
func (o *RevokeCDRArrangementsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangements o k response a status code equal to that given
func (o *RevokeCDRArrangementsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the revoke c d r arrangements o k response
func (o *RevokeCDRArrangementsOK) Code() int {
	return 200
}

func (o *RevokeCDRArrangementsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsOK %s", 200, payload)
}

func (o *RevokeCDRArrangementsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsOK %s", 200, payload)
}

func (o *RevokeCDRArrangementsOK) GetPayload() *models.ConsentsRemovedResponse {
	return o.Payload
}

func (o *RevokeCDRArrangementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsRemovedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementsBadRequest creates a RevokeCDRArrangementsBadRequest with default headers values
func NewRevokeCDRArrangementsBadRequest() *RevokeCDRArrangementsBadRequest {
	return &RevokeCDRArrangementsBadRequest{}
}

/*
RevokeCDRArrangementsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RevokeCDRArrangementsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r arrangements bad request response has a 2xx status code
func (o *RevokeCDRArrangementsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangements bad request response has a 3xx status code
func (o *RevokeCDRArrangementsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangements bad request response has a 4xx status code
func (o *RevokeCDRArrangementsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangements bad request response has a 5xx status code
func (o *RevokeCDRArrangementsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangements bad request response a status code equal to that given
func (o *RevokeCDRArrangementsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke c d r arrangements bad request response
func (o *RevokeCDRArrangementsBadRequest) Code() int {
	return 400
}

func (o *RevokeCDRArrangementsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsBadRequest %s", 400, payload)
}

func (o *RevokeCDRArrangementsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsBadRequest %s", 400, payload)
}

func (o *RevokeCDRArrangementsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRArrangementsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementsUnauthorized creates a RevokeCDRArrangementsUnauthorized with default headers values
func NewRevokeCDRArrangementsUnauthorized() *RevokeCDRArrangementsUnauthorized {
	return &RevokeCDRArrangementsUnauthorized{}
}

/*
RevokeCDRArrangementsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeCDRArrangementsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r arrangements unauthorized response has a 2xx status code
func (o *RevokeCDRArrangementsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangements unauthorized response has a 3xx status code
func (o *RevokeCDRArrangementsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangements unauthorized response has a 4xx status code
func (o *RevokeCDRArrangementsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangements unauthorized response has a 5xx status code
func (o *RevokeCDRArrangementsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangements unauthorized response a status code equal to that given
func (o *RevokeCDRArrangementsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke c d r arrangements unauthorized response
func (o *RevokeCDRArrangementsUnauthorized) Code() int {
	return 401
}

func (o *RevokeCDRArrangementsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsUnauthorized %s", 401, payload)
}

func (o *RevokeCDRArrangementsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsUnauthorized %s", 401, payload)
}

func (o *RevokeCDRArrangementsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRArrangementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementsForbidden creates a RevokeCDRArrangementsForbidden with default headers values
func NewRevokeCDRArrangementsForbidden() *RevokeCDRArrangementsForbidden {
	return &RevokeCDRArrangementsForbidden{}
}

/*
RevokeCDRArrangementsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeCDRArrangementsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r arrangements forbidden response has a 2xx status code
func (o *RevokeCDRArrangementsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangements forbidden response has a 3xx status code
func (o *RevokeCDRArrangementsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangements forbidden response has a 4xx status code
func (o *RevokeCDRArrangementsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangements forbidden response has a 5xx status code
func (o *RevokeCDRArrangementsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangements forbidden response a status code equal to that given
func (o *RevokeCDRArrangementsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke c d r arrangements forbidden response
func (o *RevokeCDRArrangementsForbidden) Code() int {
	return 403
}

func (o *RevokeCDRArrangementsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsForbidden %s", 403, payload)
}

func (o *RevokeCDRArrangementsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsForbidden %s", 403, payload)
}

func (o *RevokeCDRArrangementsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRArrangementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementsNotFound creates a RevokeCDRArrangementsNotFound with default headers values
func NewRevokeCDRArrangementsNotFound() *RevokeCDRArrangementsNotFound {
	return &RevokeCDRArrangementsNotFound{}
}

/*
RevokeCDRArrangementsNotFound describes a response with status code 404, with default header values.

Not found
*/
type RevokeCDRArrangementsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r arrangements not found response has a 2xx status code
func (o *RevokeCDRArrangementsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangements not found response has a 3xx status code
func (o *RevokeCDRArrangementsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangements not found response has a 4xx status code
func (o *RevokeCDRArrangementsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangements not found response has a 5xx status code
func (o *RevokeCDRArrangementsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangements not found response a status code equal to that given
func (o *RevokeCDRArrangementsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke c d r arrangements not found response
func (o *RevokeCDRArrangementsNotFound) Code() int {
	return 404
}

func (o *RevokeCDRArrangementsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsNotFound %s", 404, payload)
}

func (o *RevokeCDRArrangementsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsNotFound %s", 404, payload)
}

func (o *RevokeCDRArrangementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRArrangementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRArrangementsTooManyRequests creates a RevokeCDRArrangementsTooManyRequests with default headers values
func NewRevokeCDRArrangementsTooManyRequests() *RevokeCDRArrangementsTooManyRequests {
	return &RevokeCDRArrangementsTooManyRequests{}
}

/*
RevokeCDRArrangementsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RevokeCDRArrangementsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r arrangements too many requests response has a 2xx status code
func (o *RevokeCDRArrangementsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r arrangements too many requests response has a 3xx status code
func (o *RevokeCDRArrangementsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r arrangements too many requests response has a 4xx status code
func (o *RevokeCDRArrangementsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r arrangements too many requests response has a 5xx status code
func (o *RevokeCDRArrangementsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r arrangements too many requests response a status code equal to that given
func (o *RevokeCDRArrangementsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke c d r arrangements too many requests response
func (o *RevokeCDRArrangementsTooManyRequests) Code() int {
	return 429
}

func (o *RevokeCDRArrangementsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsTooManyRequests %s", 429, payload)
}

func (o *RevokeCDRArrangementsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/arrangements][%d] revokeCDRArrangementsTooManyRequests %s", 429, payload)
}

func (o *RevokeCDRArrangementsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRArrangementsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
