// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/cdr/models"
)

// ListCDRCustomerArrangementsReader is a Reader for the ListCDRCustomerArrangements structure.
type ListCDRCustomerArrangementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCDRCustomerArrangementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCDRCustomerArrangementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListCDRCustomerArrangementsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListCDRCustomerArrangementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListCDRCustomerArrangementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCDRCustomerArrangementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListCDRCustomerArrangementsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListCDRCustomerArrangementsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListCDRCustomerArrangementsOK creates a ListCDRCustomerArrangementsOK with default headers values
func NewListCDRCustomerArrangementsOK() *ListCDRCustomerArrangementsOK {
	return &ListCDRCustomerArrangementsOK{}
}

/*
ListCDRCustomerArrangementsOK describes a response with status code 200, with default header values.

CDRArrangements
*/
type ListCDRCustomerArrangementsOK struct {
	Payload *models.CDRArrangements
}

// IsSuccess returns true when this list c d r customer arrangements o k response has a 2xx status code
func (o *ListCDRCustomerArrangementsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list c d r customer arrangements o k response has a 3xx status code
func (o *ListCDRCustomerArrangementsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements o k response has a 4xx status code
func (o *ListCDRCustomerArrangementsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list c d r customer arrangements o k response has a 5xx status code
func (o *ListCDRCustomerArrangementsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements o k response a status code equal to that given
func (o *ListCDRCustomerArrangementsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list c d r customer arrangements o k response
func (o *ListCDRCustomerArrangementsOK) Code() int {
	return 200
}

func (o *ListCDRCustomerArrangementsOK) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsOK  %+v", 200, o.Payload)
}

func (o *ListCDRCustomerArrangementsOK) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsOK  %+v", 200, o.Payload)
}

func (o *ListCDRCustomerArrangementsOK) GetPayload() *models.CDRArrangements {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CDRArrangements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCDRCustomerArrangementsBadRequest creates a ListCDRCustomerArrangementsBadRequest with default headers values
func NewListCDRCustomerArrangementsBadRequest() *ListCDRCustomerArrangementsBadRequest {
	return &ListCDRCustomerArrangementsBadRequest{}
}

/*
ListCDRCustomerArrangementsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListCDRCustomerArrangementsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list c d r customer arrangements bad request response has a 2xx status code
func (o *ListCDRCustomerArrangementsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list c d r customer arrangements bad request response has a 3xx status code
func (o *ListCDRCustomerArrangementsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements bad request response has a 4xx status code
func (o *ListCDRCustomerArrangementsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list c d r customer arrangements bad request response has a 5xx status code
func (o *ListCDRCustomerArrangementsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements bad request response a status code equal to that given
func (o *ListCDRCustomerArrangementsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list c d r customer arrangements bad request response
func (o *ListCDRCustomerArrangementsBadRequest) Code() int {
	return 400
}

func (o *ListCDRCustomerArrangementsBadRequest) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsBadRequest  %+v", 400, o.Payload)
}

func (o *ListCDRCustomerArrangementsBadRequest) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsBadRequest  %+v", 400, o.Payload)
}

func (o *ListCDRCustomerArrangementsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCDRCustomerArrangementsUnauthorized creates a ListCDRCustomerArrangementsUnauthorized with default headers values
func NewListCDRCustomerArrangementsUnauthorized() *ListCDRCustomerArrangementsUnauthorized {
	return &ListCDRCustomerArrangementsUnauthorized{}
}

/*
ListCDRCustomerArrangementsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListCDRCustomerArrangementsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list c d r customer arrangements unauthorized response has a 2xx status code
func (o *ListCDRCustomerArrangementsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list c d r customer arrangements unauthorized response has a 3xx status code
func (o *ListCDRCustomerArrangementsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements unauthorized response has a 4xx status code
func (o *ListCDRCustomerArrangementsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list c d r customer arrangements unauthorized response has a 5xx status code
func (o *ListCDRCustomerArrangementsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements unauthorized response a status code equal to that given
func (o *ListCDRCustomerArrangementsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list c d r customer arrangements unauthorized response
func (o *ListCDRCustomerArrangementsUnauthorized) Code() int {
	return 401
}

func (o *ListCDRCustomerArrangementsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListCDRCustomerArrangementsUnauthorized) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListCDRCustomerArrangementsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCDRCustomerArrangementsForbidden creates a ListCDRCustomerArrangementsForbidden with default headers values
func NewListCDRCustomerArrangementsForbidden() *ListCDRCustomerArrangementsForbidden {
	return &ListCDRCustomerArrangementsForbidden{}
}

/*
ListCDRCustomerArrangementsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListCDRCustomerArrangementsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list c d r customer arrangements forbidden response has a 2xx status code
func (o *ListCDRCustomerArrangementsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list c d r customer arrangements forbidden response has a 3xx status code
func (o *ListCDRCustomerArrangementsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements forbidden response has a 4xx status code
func (o *ListCDRCustomerArrangementsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list c d r customer arrangements forbidden response has a 5xx status code
func (o *ListCDRCustomerArrangementsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements forbidden response a status code equal to that given
func (o *ListCDRCustomerArrangementsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list c d r customer arrangements forbidden response
func (o *ListCDRCustomerArrangementsForbidden) Code() int {
	return 403
}

func (o *ListCDRCustomerArrangementsForbidden) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsForbidden  %+v", 403, o.Payload)
}

func (o *ListCDRCustomerArrangementsForbidden) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsForbidden  %+v", 403, o.Payload)
}

func (o *ListCDRCustomerArrangementsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCDRCustomerArrangementsNotFound creates a ListCDRCustomerArrangementsNotFound with default headers values
func NewListCDRCustomerArrangementsNotFound() *ListCDRCustomerArrangementsNotFound {
	return &ListCDRCustomerArrangementsNotFound{}
}

/*
ListCDRCustomerArrangementsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListCDRCustomerArrangementsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list c d r customer arrangements not found response has a 2xx status code
func (o *ListCDRCustomerArrangementsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list c d r customer arrangements not found response has a 3xx status code
func (o *ListCDRCustomerArrangementsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements not found response has a 4xx status code
func (o *ListCDRCustomerArrangementsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list c d r customer arrangements not found response has a 5xx status code
func (o *ListCDRCustomerArrangementsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements not found response a status code equal to that given
func (o *ListCDRCustomerArrangementsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list c d r customer arrangements not found response
func (o *ListCDRCustomerArrangementsNotFound) Code() int {
	return 404
}

func (o *ListCDRCustomerArrangementsNotFound) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsNotFound  %+v", 404, o.Payload)
}

func (o *ListCDRCustomerArrangementsNotFound) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsNotFound  %+v", 404, o.Payload)
}

func (o *ListCDRCustomerArrangementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCDRCustomerArrangementsUnprocessableEntity creates a ListCDRCustomerArrangementsUnprocessableEntity with default headers values
func NewListCDRCustomerArrangementsUnprocessableEntity() *ListCDRCustomerArrangementsUnprocessableEntity {
	return &ListCDRCustomerArrangementsUnprocessableEntity{}
}

/*
ListCDRCustomerArrangementsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ListCDRCustomerArrangementsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this list c d r customer arrangements unprocessable entity response has a 2xx status code
func (o *ListCDRCustomerArrangementsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list c d r customer arrangements unprocessable entity response has a 3xx status code
func (o *ListCDRCustomerArrangementsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements unprocessable entity response has a 4xx status code
func (o *ListCDRCustomerArrangementsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list c d r customer arrangements unprocessable entity response has a 5xx status code
func (o *ListCDRCustomerArrangementsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements unprocessable entity response a status code equal to that given
func (o *ListCDRCustomerArrangementsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list c d r customer arrangements unprocessable entity response
func (o *ListCDRCustomerArrangementsUnprocessableEntity) Code() int {
	return 422
}

func (o *ListCDRCustomerArrangementsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ListCDRCustomerArrangementsUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ListCDRCustomerArrangementsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCDRCustomerArrangementsTooManyRequests creates a ListCDRCustomerArrangementsTooManyRequests with default headers values
func NewListCDRCustomerArrangementsTooManyRequests() *ListCDRCustomerArrangementsTooManyRequests {
	return &ListCDRCustomerArrangementsTooManyRequests{}
}

/*
ListCDRCustomerArrangementsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListCDRCustomerArrangementsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list c d r customer arrangements too many requests response has a 2xx status code
func (o *ListCDRCustomerArrangementsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list c d r customer arrangements too many requests response has a 3xx status code
func (o *ListCDRCustomerArrangementsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list c d r customer arrangements too many requests response has a 4xx status code
func (o *ListCDRCustomerArrangementsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list c d r customer arrangements too many requests response has a 5xx status code
func (o *ListCDRCustomerArrangementsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list c d r customer arrangements too many requests response a status code equal to that given
func (o *ListCDRCustomerArrangementsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list c d r customer arrangements too many requests response
func (o *ListCDRCustomerArrangementsTooManyRequests) Code() int {
	return 429
}

func (o *ListCDRCustomerArrangementsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListCDRCustomerArrangementsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/cdr/customer-arrangements][%d] listCDRCustomerArrangementsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListCDRCustomerArrangementsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCDRCustomerArrangementsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
