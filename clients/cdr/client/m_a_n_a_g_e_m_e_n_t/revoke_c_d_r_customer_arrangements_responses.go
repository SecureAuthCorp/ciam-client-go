// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/cdr/models"
)

// RevokeCDRCustomerArrangementsReader is a Reader for the RevokeCDRCustomerArrangements structure.
type RevokeCDRCustomerArrangementsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeCDRCustomerArrangementsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeCDRCustomerArrangementsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeCDRCustomerArrangementsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeCDRCustomerArrangementsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeCDRCustomerArrangementsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeCDRCustomerArrangementsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRevokeCDRCustomerArrangementsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeCDRCustomerArrangementsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeCDRCustomerArrangementsOK creates a RevokeCDRCustomerArrangementsOK with default headers values
func NewRevokeCDRCustomerArrangementsOK() *RevokeCDRCustomerArrangementsOK {
	return &RevokeCDRCustomerArrangementsOK{}
}

/*
RevokeCDRCustomerArrangementsOK describes a response with status code 200, with default header values.

ConsentsRemovedResponse
*/
type RevokeCDRCustomerArrangementsOK struct {
	Payload *models.ConsentsRemovedResponse
}

// IsSuccess returns true when this revoke c d r customer arrangements o k response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke c d r customer arrangements o k response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements o k response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke c d r customer arrangements o k response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements o k response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the revoke c d r customer arrangements o k response
func (o *RevokeCDRCustomerArrangementsOK) Code() int {
	return 200
}

func (o *RevokeCDRCustomerArrangementsOK) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsOK  %+v", 200, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsOK) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsOK  %+v", 200, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsOK) GetPayload() *models.ConsentsRemovedResponse {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsRemovedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRCustomerArrangementsBadRequest creates a RevokeCDRCustomerArrangementsBadRequest with default headers values
func NewRevokeCDRCustomerArrangementsBadRequest() *RevokeCDRCustomerArrangementsBadRequest {
	return &RevokeCDRCustomerArrangementsBadRequest{}
}

/*
RevokeCDRCustomerArrangementsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RevokeCDRCustomerArrangementsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r customer arrangements bad request response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r customer arrangements bad request response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements bad request response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r customer arrangements bad request response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements bad request response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke c d r customer arrangements bad request response
func (o *RevokeCDRCustomerArrangementsBadRequest) Code() int {
	return 400
}

func (o *RevokeCDRCustomerArrangementsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRCustomerArrangementsUnauthorized creates a RevokeCDRCustomerArrangementsUnauthorized with default headers values
func NewRevokeCDRCustomerArrangementsUnauthorized() *RevokeCDRCustomerArrangementsUnauthorized {
	return &RevokeCDRCustomerArrangementsUnauthorized{}
}

/*
RevokeCDRCustomerArrangementsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeCDRCustomerArrangementsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r customer arrangements unauthorized response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r customer arrangements unauthorized response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements unauthorized response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r customer arrangements unauthorized response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements unauthorized response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke c d r customer arrangements unauthorized response
func (o *RevokeCDRCustomerArrangementsUnauthorized) Code() int {
	return 401
}

func (o *RevokeCDRCustomerArrangementsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRCustomerArrangementsForbidden creates a RevokeCDRCustomerArrangementsForbidden with default headers values
func NewRevokeCDRCustomerArrangementsForbidden() *RevokeCDRCustomerArrangementsForbidden {
	return &RevokeCDRCustomerArrangementsForbidden{}
}

/*
RevokeCDRCustomerArrangementsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeCDRCustomerArrangementsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r customer arrangements forbidden response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r customer arrangements forbidden response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements forbidden response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r customer arrangements forbidden response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements forbidden response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke c d r customer arrangements forbidden response
func (o *RevokeCDRCustomerArrangementsForbidden) Code() int {
	return 403
}

func (o *RevokeCDRCustomerArrangementsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsForbidden  %+v", 403, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsForbidden  %+v", 403, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRCustomerArrangementsNotFound creates a RevokeCDRCustomerArrangementsNotFound with default headers values
func NewRevokeCDRCustomerArrangementsNotFound() *RevokeCDRCustomerArrangementsNotFound {
	return &RevokeCDRCustomerArrangementsNotFound{}
}

/*
RevokeCDRCustomerArrangementsNotFound describes a response with status code 404, with default header values.

Not found
*/
type RevokeCDRCustomerArrangementsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r customer arrangements not found response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r customer arrangements not found response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements not found response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r customer arrangements not found response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements not found response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke c d r customer arrangements not found response
func (o *RevokeCDRCustomerArrangementsNotFound) Code() int {
	return 404
}

func (o *RevokeCDRCustomerArrangementsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsNotFound  %+v", 404, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsNotFound) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsNotFound  %+v", 404, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRCustomerArrangementsUnprocessableEntity creates a RevokeCDRCustomerArrangementsUnprocessableEntity with default headers values
func NewRevokeCDRCustomerArrangementsUnprocessableEntity() *RevokeCDRCustomerArrangementsUnprocessableEntity {
	return &RevokeCDRCustomerArrangementsUnprocessableEntity{}
}

/*
RevokeCDRCustomerArrangementsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type RevokeCDRCustomerArrangementsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r customer arrangements unprocessable entity response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r customer arrangements unprocessable entity response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements unprocessable entity response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r customer arrangements unprocessable entity response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements unprocessable entity response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the revoke c d r customer arrangements unprocessable entity response
func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) Code() int {
	return 422
}

func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeCDRCustomerArrangementsTooManyRequests creates a RevokeCDRCustomerArrangementsTooManyRequests with default headers values
func NewRevokeCDRCustomerArrangementsTooManyRequests() *RevokeCDRCustomerArrangementsTooManyRequests {
	return &RevokeCDRCustomerArrangementsTooManyRequests{}
}

/*
RevokeCDRCustomerArrangementsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RevokeCDRCustomerArrangementsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke c d r customer arrangements too many requests response has a 2xx status code
func (o *RevokeCDRCustomerArrangementsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke c d r customer arrangements too many requests response has a 3xx status code
func (o *RevokeCDRCustomerArrangementsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke c d r customer arrangements too many requests response has a 4xx status code
func (o *RevokeCDRCustomerArrangementsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke c d r customer arrangements too many requests response has a 5xx status code
func (o *RevokeCDRCustomerArrangementsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke c d r customer arrangements too many requests response a status code equal to that given
func (o *RevokeCDRCustomerArrangementsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke c d r customer arrangements too many requests response
func (o *RevokeCDRCustomerArrangementsTooManyRequests) Code() int {
	return 429
}

func (o *RevokeCDRCustomerArrangementsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/cdr/customer-arrangements][%d] revokeCDRCustomerArrangementsTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeCDRCustomerArrangementsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeCDRCustomerArrangementsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
