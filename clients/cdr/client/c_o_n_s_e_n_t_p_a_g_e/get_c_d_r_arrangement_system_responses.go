// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/cdr/models"
)

// GetCDRArrangementSystemReader is a Reader for the GetCDRArrangementSystem structure.
type GetCDRArrangementSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCDRArrangementSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCDRArrangementSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCDRArrangementSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCDRArrangementSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCDRArrangementSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCDRArrangementSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cdr/cdr-arrangement/{login}] getCDRArrangementSystem", response, response.Code())
	}
}

// NewGetCDRArrangementSystemOK creates a GetCDRArrangementSystemOK with default headers values
func NewGetCDRArrangementSystemOK() *GetCDRArrangementSystemOK {
	return &GetCDRArrangementSystemOK{}
}

/*
GetCDRArrangementSystemOK describes a response with status code 200, with default header values.

GetCDRConsentResponse
*/
type GetCDRArrangementSystemOK struct {
	Payload *models.GetCDRConsentResponse
}

// IsSuccess returns true when this get c d r arrangement system o k response has a 2xx status code
func (o *GetCDRArrangementSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c d r arrangement system o k response has a 3xx status code
func (o *GetCDRArrangementSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c d r arrangement system o k response has a 4xx status code
func (o *GetCDRArrangementSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c d r arrangement system o k response has a 5xx status code
func (o *GetCDRArrangementSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c d r arrangement system o k response a status code equal to that given
func (o *GetCDRArrangementSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c d r arrangement system o k response
func (o *GetCDRArrangementSystemOK) Code() int {
	return 200
}

func (o *GetCDRArrangementSystemOK) Error() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemOK  %+v", 200, o.Payload)
}

func (o *GetCDRArrangementSystemOK) String() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemOK  %+v", 200, o.Payload)
}

func (o *GetCDRArrangementSystemOK) GetPayload() *models.GetCDRConsentResponse {
	return o.Payload
}

func (o *GetCDRArrangementSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetCDRConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCDRArrangementSystemUnauthorized creates a GetCDRArrangementSystemUnauthorized with default headers values
func NewGetCDRArrangementSystemUnauthorized() *GetCDRArrangementSystemUnauthorized {
	return &GetCDRArrangementSystemUnauthorized{}
}

/*
GetCDRArrangementSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCDRArrangementSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get c d r arrangement system unauthorized response has a 2xx status code
func (o *GetCDRArrangementSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c d r arrangement system unauthorized response has a 3xx status code
func (o *GetCDRArrangementSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c d r arrangement system unauthorized response has a 4xx status code
func (o *GetCDRArrangementSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c d r arrangement system unauthorized response has a 5xx status code
func (o *GetCDRArrangementSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get c d r arrangement system unauthorized response a status code equal to that given
func (o *GetCDRArrangementSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get c d r arrangement system unauthorized response
func (o *GetCDRArrangementSystemUnauthorized) Code() int {
	return 401
}

func (o *GetCDRArrangementSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCDRArrangementSystemUnauthorized) String() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCDRArrangementSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCDRArrangementSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCDRArrangementSystemForbidden creates a GetCDRArrangementSystemForbidden with default headers values
func NewGetCDRArrangementSystemForbidden() *GetCDRArrangementSystemForbidden {
	return &GetCDRArrangementSystemForbidden{}
}

/*
GetCDRArrangementSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCDRArrangementSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get c d r arrangement system forbidden response has a 2xx status code
func (o *GetCDRArrangementSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c d r arrangement system forbidden response has a 3xx status code
func (o *GetCDRArrangementSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c d r arrangement system forbidden response has a 4xx status code
func (o *GetCDRArrangementSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c d r arrangement system forbidden response has a 5xx status code
func (o *GetCDRArrangementSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get c d r arrangement system forbidden response a status code equal to that given
func (o *GetCDRArrangementSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get c d r arrangement system forbidden response
func (o *GetCDRArrangementSystemForbidden) Code() int {
	return 403
}

func (o *GetCDRArrangementSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemForbidden  %+v", 403, o.Payload)
}

func (o *GetCDRArrangementSystemForbidden) String() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemForbidden  %+v", 403, o.Payload)
}

func (o *GetCDRArrangementSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCDRArrangementSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCDRArrangementSystemNotFound creates a GetCDRArrangementSystemNotFound with default headers values
func NewGetCDRArrangementSystemNotFound() *GetCDRArrangementSystemNotFound {
	return &GetCDRArrangementSystemNotFound{}
}

/*
GetCDRArrangementSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetCDRArrangementSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get c d r arrangement system not found response has a 2xx status code
func (o *GetCDRArrangementSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c d r arrangement system not found response has a 3xx status code
func (o *GetCDRArrangementSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c d r arrangement system not found response has a 4xx status code
func (o *GetCDRArrangementSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c d r arrangement system not found response has a 5xx status code
func (o *GetCDRArrangementSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get c d r arrangement system not found response a status code equal to that given
func (o *GetCDRArrangementSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get c d r arrangement system not found response
func (o *GetCDRArrangementSystemNotFound) Code() int {
	return 404
}

func (o *GetCDRArrangementSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemNotFound  %+v", 404, o.Payload)
}

func (o *GetCDRArrangementSystemNotFound) String() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemNotFound  %+v", 404, o.Payload)
}

func (o *GetCDRArrangementSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCDRArrangementSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCDRArrangementSystemTooManyRequests creates a GetCDRArrangementSystemTooManyRequests with default headers values
func NewGetCDRArrangementSystemTooManyRequests() *GetCDRArrangementSystemTooManyRequests {
	return &GetCDRArrangementSystemTooManyRequests{}
}

/*
GetCDRArrangementSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetCDRArrangementSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get c d r arrangement system too many requests response has a 2xx status code
func (o *GetCDRArrangementSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c d r arrangement system too many requests response has a 3xx status code
func (o *GetCDRArrangementSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c d r arrangement system too many requests response has a 4xx status code
func (o *GetCDRArrangementSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c d r arrangement system too many requests response has a 5xx status code
func (o *GetCDRArrangementSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get c d r arrangement system too many requests response a status code equal to that given
func (o *GetCDRArrangementSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get c d r arrangement system too many requests response
func (o *GetCDRArrangementSystemTooManyRequests) Code() int {
	return 429
}

func (o *GetCDRArrangementSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCDRArrangementSystemTooManyRequests) String() string {
	return fmt.Sprintf("[GET /cdr/cdr-arrangement/{login}][%d] getCDRArrangementSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCDRArrangementSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCDRArrangementSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
