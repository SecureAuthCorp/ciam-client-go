// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/cdr/models"
)

// NewRejectCDRArrangementSystemParams creates a new RejectCDRArrangementSystemParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRejectCDRArrangementSystemParams() *RejectCDRArrangementSystemParams {
	return &RejectCDRArrangementSystemParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRejectCDRArrangementSystemParamsWithTimeout creates a new RejectCDRArrangementSystemParams object
// with the ability to set a timeout on a request.
func NewRejectCDRArrangementSystemParamsWithTimeout(timeout time.Duration) *RejectCDRArrangementSystemParams {
	return &RejectCDRArrangementSystemParams{
		timeout: timeout,
	}
}

// NewRejectCDRArrangementSystemParamsWithContext creates a new RejectCDRArrangementSystemParams object
// with the ability to set a context for a request.
func NewRejectCDRArrangementSystemParamsWithContext(ctx context.Context) *RejectCDRArrangementSystemParams {
	return &RejectCDRArrangementSystemParams{
		Context: ctx,
	}
}

// NewRejectCDRArrangementSystemParamsWithHTTPClient creates a new RejectCDRArrangementSystemParams object
// with the ability to set a custom HTTPClient for a request.
func NewRejectCDRArrangementSystemParamsWithHTTPClient(client *http.Client) *RejectCDRArrangementSystemParams {
	return &RejectCDRArrangementSystemParams{
		HTTPClient: client,
	}
}

/*
RejectCDRArrangementSystemParams contains all the parameters to send to the API endpoint

	for the reject c d r arrangement system operation.

	Typically these are written to a http.Request.
*/
type RejectCDRArrangementSystemParams struct {

	/* RejectConsent.

	     Reject Consent Request

	To give more context on why the user rejected the request.
	*/
	RejectConsent *models.RejectCDRConsentRequest

	/* Login.

	     Login session identifier.

	Cloudentity passes the login session identifier with the `login_id` query parameter when redirecting a user to the consent page.
	*/
	Login string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the reject c d r arrangement system params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RejectCDRArrangementSystemParams) WithDefaults() *RejectCDRArrangementSystemParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the reject c d r arrangement system params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RejectCDRArrangementSystemParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) WithTimeout(timeout time.Duration) *RejectCDRArrangementSystemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) WithContext(ctx context.Context) *RejectCDRArrangementSystemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) WithHTTPClient(client *http.Client) *RejectCDRArrangementSystemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRejectConsent adds the rejectConsent to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) WithRejectConsent(rejectConsent *models.RejectCDRConsentRequest) *RejectCDRArrangementSystemParams {
	o.SetRejectConsent(rejectConsent)
	return o
}

// SetRejectConsent adds the rejectConsent to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) SetRejectConsent(rejectConsent *models.RejectCDRConsentRequest) {
	o.RejectConsent = rejectConsent
}

// WithLogin adds the login to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) WithLogin(login string) *RejectCDRArrangementSystemParams {
	o.SetLogin(login)
	return o
}

// SetLogin adds the login to the reject c d r arrangement system params
func (o *RejectCDRArrangementSystemParams) SetLogin(login string) {
	o.Login = login
}

// WriteToRequest writes these params to a swagger request
func (o *RejectCDRArrangementSystemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.RejectConsent != nil {
		if err := r.SetBodyParam(o.RejectConsent); err != nil {
			return err
		}
	}

	// path param login
	if err := r.SetPathParam("login", o.Login); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
