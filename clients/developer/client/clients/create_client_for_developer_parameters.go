// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/developer/models"
)

// NewCreateClientForDeveloperParams creates a new CreateClientForDeveloperParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateClientForDeveloperParams() *CreateClientForDeveloperParams {
	return &CreateClientForDeveloperParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateClientForDeveloperParamsWithTimeout creates a new CreateClientForDeveloperParams object
// with the ability to set a timeout on a request.
func NewCreateClientForDeveloperParamsWithTimeout(timeout time.Duration) *CreateClientForDeveloperParams {
	return &CreateClientForDeveloperParams{
		timeout: timeout,
	}
}

// NewCreateClientForDeveloperParamsWithContext creates a new CreateClientForDeveloperParams object
// with the ability to set a context for a request.
func NewCreateClientForDeveloperParamsWithContext(ctx context.Context) *CreateClientForDeveloperParams {
	return &CreateClientForDeveloperParams{
		Context: ctx,
	}
}

// NewCreateClientForDeveloperParamsWithHTTPClient creates a new CreateClientForDeveloperParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateClientForDeveloperParamsWithHTTPClient(client *http.Client) *CreateClientForDeveloperParams {
	return &CreateClientForDeveloperParams{
		HTTPClient: client,
	}
}

/* CreateClientForDeveloperParams contains all the parameters to send to the API endpoint
   for the create client for developer operation.

   Typically these are written to a http.Request.
*/
type CreateClientForDeveloperParams struct {

	// Client.
	Client *models.CreateClientDeveloperRequest

	// ApplicationPurpose.
	ApplicationPurpose *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create client for developer params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateClientForDeveloperParams) WithDefaults() *CreateClientForDeveloperParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create client for developer params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateClientForDeveloperParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create client for developer params
func (o *CreateClientForDeveloperParams) WithTimeout(timeout time.Duration) *CreateClientForDeveloperParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create client for developer params
func (o *CreateClientForDeveloperParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create client for developer params
func (o *CreateClientForDeveloperParams) WithContext(ctx context.Context) *CreateClientForDeveloperParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create client for developer params
func (o *CreateClientForDeveloperParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create client for developer params
func (o *CreateClientForDeveloperParams) WithHTTPClient(client *http.Client) *CreateClientForDeveloperParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create client for developer params
func (o *CreateClientForDeveloperParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClient adds the client to the create client for developer params
func (o *CreateClientForDeveloperParams) WithClient(client *models.CreateClientDeveloperRequest) *CreateClientForDeveloperParams {
	o.SetClient(client)
	return o
}

// SetClient adds the client to the create client for developer params
func (o *CreateClientForDeveloperParams) SetClient(client *models.CreateClientDeveloperRequest) {
	o.Client = client
}

// WithApplicationPurpose adds the applicationPurpose to the create client for developer params
func (o *CreateClientForDeveloperParams) WithApplicationPurpose(applicationPurpose *string) *CreateClientForDeveloperParams {
	o.SetApplicationPurpose(applicationPurpose)
	return o
}

// SetApplicationPurpose adds the applicationPurpose to the create client for developer params
func (o *CreateClientForDeveloperParams) SetApplicationPurpose(applicationPurpose *string) {
	o.ApplicationPurpose = applicationPurpose
}

// WriteToRequest writes these params to a swagger request
func (o *CreateClientForDeveloperParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Client != nil {
		if err := r.SetBodyParam(o.Client); err != nil {
			return err
		}
	}

	if o.ApplicationPurpose != nil {

		// query param application_purpose
		var qrApplicationPurpose string

		if o.ApplicationPurpose != nil {
			qrApplicationPurpose = *o.ApplicationPurpose
		}
		qApplicationPurpose := qrApplicationPurpose
		if qApplicationPurpose != "" {

			if err := r.SetQueryParam("application_purpose", qApplicationPurpose); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
