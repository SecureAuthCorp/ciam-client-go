// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/developer/models"
)

// GetClientForDeveloperReader is a Reader for the GetClientForDeveloper structure.
type GetClientForDeveloperReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClientForDeveloperReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClientForDeveloperOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClientForDeveloperUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClientForDeveloperForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClientForDeveloperNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetClientForDeveloperTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /clients/{cid}] getClientForDeveloper", response, response.Code())
	}
}

// NewGetClientForDeveloperOK creates a GetClientForDeveloperOK with default headers values
func NewGetClientForDeveloperOK() *GetClientForDeveloperOK {
	return &GetClientForDeveloperOK{}
}

/*
GetClientForDeveloperOK describes a response with status code 200, with default header values.

Get client
*/
type GetClientForDeveloperOK struct {
	Payload *models.ClientDeveloperResponse
}

// IsSuccess returns true when this get client for developer o k response has a 2xx status code
func (o *GetClientForDeveloperOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get client for developer o k response has a 3xx status code
func (o *GetClientForDeveloperOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client for developer o k response has a 4xx status code
func (o *GetClientForDeveloperOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get client for developer o k response has a 5xx status code
func (o *GetClientForDeveloperOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get client for developer o k response a status code equal to that given
func (o *GetClientForDeveloperOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get client for developer o k response
func (o *GetClientForDeveloperOK) Code() int {
	return 200
}

func (o *GetClientForDeveloperOK) Error() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperOK  %+v", 200, o.Payload)
}

func (o *GetClientForDeveloperOK) String() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperOK  %+v", 200, o.Payload)
}

func (o *GetClientForDeveloperOK) GetPayload() *models.ClientDeveloperResponse {
	return o.Payload
}

func (o *GetClientForDeveloperOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientDeveloperResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperUnauthorized creates a GetClientForDeveloperUnauthorized with default headers values
func NewGetClientForDeveloperUnauthorized() *GetClientForDeveloperUnauthorized {
	return &GetClientForDeveloperUnauthorized{}
}

/*
GetClientForDeveloperUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClientForDeveloperUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get client for developer unauthorized response has a 2xx status code
func (o *GetClientForDeveloperUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client for developer unauthorized response has a 3xx status code
func (o *GetClientForDeveloperUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client for developer unauthorized response has a 4xx status code
func (o *GetClientForDeveloperUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client for developer unauthorized response has a 5xx status code
func (o *GetClientForDeveloperUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get client for developer unauthorized response a status code equal to that given
func (o *GetClientForDeveloperUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get client for developer unauthorized response
func (o *GetClientForDeveloperUnauthorized) Code() int {
	return 401
}

func (o *GetClientForDeveloperUnauthorized) Error() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperUnauthorized  %+v", 401, o.Payload)
}

func (o *GetClientForDeveloperUnauthorized) String() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperUnauthorized  %+v", 401, o.Payload)
}

func (o *GetClientForDeveloperUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperForbidden creates a GetClientForDeveloperForbidden with default headers values
func NewGetClientForDeveloperForbidden() *GetClientForDeveloperForbidden {
	return &GetClientForDeveloperForbidden{}
}

/*
GetClientForDeveloperForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClientForDeveloperForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get client for developer forbidden response has a 2xx status code
func (o *GetClientForDeveloperForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client for developer forbidden response has a 3xx status code
func (o *GetClientForDeveloperForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client for developer forbidden response has a 4xx status code
func (o *GetClientForDeveloperForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client for developer forbidden response has a 5xx status code
func (o *GetClientForDeveloperForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get client for developer forbidden response a status code equal to that given
func (o *GetClientForDeveloperForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get client for developer forbidden response
func (o *GetClientForDeveloperForbidden) Code() int {
	return 403
}

func (o *GetClientForDeveloperForbidden) Error() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperForbidden  %+v", 403, o.Payload)
}

func (o *GetClientForDeveloperForbidden) String() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperForbidden  %+v", 403, o.Payload)
}

func (o *GetClientForDeveloperForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperNotFound creates a GetClientForDeveloperNotFound with default headers values
func NewGetClientForDeveloperNotFound() *GetClientForDeveloperNotFound {
	return &GetClientForDeveloperNotFound{}
}

/*
GetClientForDeveloperNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetClientForDeveloperNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get client for developer not found response has a 2xx status code
func (o *GetClientForDeveloperNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client for developer not found response has a 3xx status code
func (o *GetClientForDeveloperNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client for developer not found response has a 4xx status code
func (o *GetClientForDeveloperNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client for developer not found response has a 5xx status code
func (o *GetClientForDeveloperNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get client for developer not found response a status code equal to that given
func (o *GetClientForDeveloperNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get client for developer not found response
func (o *GetClientForDeveloperNotFound) Code() int {
	return 404
}

func (o *GetClientForDeveloperNotFound) Error() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperNotFound  %+v", 404, o.Payload)
}

func (o *GetClientForDeveloperNotFound) String() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperNotFound  %+v", 404, o.Payload)
}

func (o *GetClientForDeveloperNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClientForDeveloperTooManyRequests creates a GetClientForDeveloperTooManyRequests with default headers values
func NewGetClientForDeveloperTooManyRequests() *GetClientForDeveloperTooManyRequests {
	return &GetClientForDeveloperTooManyRequests{}
}

/*
GetClientForDeveloperTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetClientForDeveloperTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get client for developer too many requests response has a 2xx status code
func (o *GetClientForDeveloperTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get client for developer too many requests response has a 3xx status code
func (o *GetClientForDeveloperTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get client for developer too many requests response has a 4xx status code
func (o *GetClientForDeveloperTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get client for developer too many requests response has a 5xx status code
func (o *GetClientForDeveloperTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get client for developer too many requests response a status code equal to that given
func (o *GetClientForDeveloperTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get client for developer too many requests response
func (o *GetClientForDeveloperTooManyRequests) Code() int {
	return 429
}

func (o *GetClientForDeveloperTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetClientForDeveloperTooManyRequests) String() string {
	return fmt.Sprintf("[GET /clients/{cid}][%d] getClientForDeveloperTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetClientForDeveloperTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetClientForDeveloperTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
