// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/developer/models"
)

// ListClientsForDeveloperReader is a Reader for the ListClientsForDeveloper structure.
type ListClientsForDeveloperReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListClientsForDeveloperReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListClientsForDeveloperOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListClientsForDeveloperUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListClientsForDeveloperForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListClientsForDeveloperNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListClientsForDeveloperTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /clients] listClientsForDeveloper", response, response.Code())
	}
}

// NewListClientsForDeveloperOK creates a ListClientsForDeveloperOK with default headers values
func NewListClientsForDeveloperOK() *ListClientsForDeveloperOK {
	return &ListClientsForDeveloperOK{}
}

/*
ListClientsForDeveloperOK describes a response with status code 200, with default header values.

List clients
*/
type ListClientsForDeveloperOK struct {
	Payload *models.ClientsForDeveloper
}

// IsSuccess returns true when this list clients for developer o k response has a 2xx status code
func (o *ListClientsForDeveloperOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list clients for developer o k response has a 3xx status code
func (o *ListClientsForDeveloperOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients for developer o k response has a 4xx status code
func (o *ListClientsForDeveloperOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list clients for developer o k response has a 5xx status code
func (o *ListClientsForDeveloperOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients for developer o k response a status code equal to that given
func (o *ListClientsForDeveloperOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list clients for developer o k response
func (o *ListClientsForDeveloperOK) Code() int {
	return 200
}

func (o *ListClientsForDeveloperOK) Error() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperOK  %+v", 200, o.Payload)
}

func (o *ListClientsForDeveloperOK) String() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperOK  %+v", 200, o.Payload)
}

func (o *ListClientsForDeveloperOK) GetPayload() *models.ClientsForDeveloper {
	return o.Payload
}

func (o *ListClientsForDeveloperOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClientsForDeveloper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsForDeveloperUnauthorized creates a ListClientsForDeveloperUnauthorized with default headers values
func NewListClientsForDeveloperUnauthorized() *ListClientsForDeveloperUnauthorized {
	return &ListClientsForDeveloperUnauthorized{}
}

/*
ListClientsForDeveloperUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListClientsForDeveloperUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients for developer unauthorized response has a 2xx status code
func (o *ListClientsForDeveloperUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients for developer unauthorized response has a 3xx status code
func (o *ListClientsForDeveloperUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients for developer unauthorized response has a 4xx status code
func (o *ListClientsForDeveloperUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients for developer unauthorized response has a 5xx status code
func (o *ListClientsForDeveloperUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients for developer unauthorized response a status code equal to that given
func (o *ListClientsForDeveloperUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list clients for developer unauthorized response
func (o *ListClientsForDeveloperUnauthorized) Code() int {
	return 401
}

func (o *ListClientsForDeveloperUnauthorized) Error() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperUnauthorized  %+v", 401, o.Payload)
}

func (o *ListClientsForDeveloperUnauthorized) String() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperUnauthorized  %+v", 401, o.Payload)
}

func (o *ListClientsForDeveloperUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsForDeveloperUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsForDeveloperForbidden creates a ListClientsForDeveloperForbidden with default headers values
func NewListClientsForDeveloperForbidden() *ListClientsForDeveloperForbidden {
	return &ListClientsForDeveloperForbidden{}
}

/*
ListClientsForDeveloperForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListClientsForDeveloperForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients for developer forbidden response has a 2xx status code
func (o *ListClientsForDeveloperForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients for developer forbidden response has a 3xx status code
func (o *ListClientsForDeveloperForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients for developer forbidden response has a 4xx status code
func (o *ListClientsForDeveloperForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients for developer forbidden response has a 5xx status code
func (o *ListClientsForDeveloperForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients for developer forbidden response a status code equal to that given
func (o *ListClientsForDeveloperForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list clients for developer forbidden response
func (o *ListClientsForDeveloperForbidden) Code() int {
	return 403
}

func (o *ListClientsForDeveloperForbidden) Error() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperForbidden  %+v", 403, o.Payload)
}

func (o *ListClientsForDeveloperForbidden) String() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperForbidden  %+v", 403, o.Payload)
}

func (o *ListClientsForDeveloperForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsForDeveloperForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsForDeveloperNotFound creates a ListClientsForDeveloperNotFound with default headers values
func NewListClientsForDeveloperNotFound() *ListClientsForDeveloperNotFound {
	return &ListClientsForDeveloperNotFound{}
}

/*
ListClientsForDeveloperNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListClientsForDeveloperNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients for developer not found response has a 2xx status code
func (o *ListClientsForDeveloperNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients for developer not found response has a 3xx status code
func (o *ListClientsForDeveloperNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients for developer not found response has a 4xx status code
func (o *ListClientsForDeveloperNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients for developer not found response has a 5xx status code
func (o *ListClientsForDeveloperNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients for developer not found response a status code equal to that given
func (o *ListClientsForDeveloperNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list clients for developer not found response
func (o *ListClientsForDeveloperNotFound) Code() int {
	return 404
}

func (o *ListClientsForDeveloperNotFound) Error() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperNotFound  %+v", 404, o.Payload)
}

func (o *ListClientsForDeveloperNotFound) String() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperNotFound  %+v", 404, o.Payload)
}

func (o *ListClientsForDeveloperNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsForDeveloperNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsForDeveloperTooManyRequests creates a ListClientsForDeveloperTooManyRequests with default headers values
func NewListClientsForDeveloperTooManyRequests() *ListClientsForDeveloperTooManyRequests {
	return &ListClientsForDeveloperTooManyRequests{}
}

/*
ListClientsForDeveloperTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListClientsForDeveloperTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients for developer too many requests response has a 2xx status code
func (o *ListClientsForDeveloperTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients for developer too many requests response has a 3xx status code
func (o *ListClientsForDeveloperTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients for developer too many requests response has a 4xx status code
func (o *ListClientsForDeveloperTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients for developer too many requests response has a 5xx status code
func (o *ListClientsForDeveloperTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients for developer too many requests response a status code equal to that given
func (o *ListClientsForDeveloperTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list clients for developer too many requests response
func (o *ListClientsForDeveloperTooManyRequests) Code() int {
	return 429
}

func (o *ListClientsForDeveloperTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListClientsForDeveloperTooManyRequests) String() string {
	return fmt.Sprintf("[GET /clients][%d] listClientsForDeveloperTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListClientsForDeveloperTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsForDeveloperTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
