// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SetRateLimitRequest set rate limit request
//
// swagger:model SetRateLimitRequest
type SetRateLimitRequest struct {

	// max burst
	Burst int64 `json:"burst,omitempty"`

	// period
	// Format: duration
	Period strfmt.Duration `json:"period,omitempty"`

	// rate
	Rate int64 `json:"rate,omitempty"`
}

// Validate validates this set rate limit request
func (m *SetRateLimitRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePeriod(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SetRateLimitRequest) validatePeriod(formats strfmt.Registry) error {
	if swag.IsZero(m.Period) { // not required
		return nil
	}

	if err := validate.FormatOf("period", "body", "duration", m.Period.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this set rate limit request based on context it is used
func (m *SetRateLimitRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SetRateLimitRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SetRateLimitRequest) UnmarshalBinary(b []byte) error {
	var res SetRateLimitRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
