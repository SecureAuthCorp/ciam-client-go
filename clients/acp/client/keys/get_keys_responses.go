// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/acp/models"
)

// GetKeysReader is a Reader for the GetKeys structure.
type GetKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetKeysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKeysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKeysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetKeysTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKeysOK creates a GetKeysOK with default headers values
func NewGetKeysOK() *GetKeysOK {
	return &GetKeysOK{}
}

/* GetKeysOK describes a response with status code 200, with default header values.

KeysResponse
*/
type GetKeysOK struct {
	Payload *models.KeysResponse
}

func (o *GetKeysOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys][%d] getKeysOK  %+v", 200, o.Payload)
}
func (o *GetKeysOK) GetPayload() *models.KeysResponse {
	return o.Payload
}

func (o *GetKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KeysResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeysUnauthorized creates a GetKeysUnauthorized with default headers values
func NewGetKeysUnauthorized() *GetKeysUnauthorized {
	return &GetKeysUnauthorized{}
}

/* GetKeysUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetKeysUnauthorized struct {
	Payload *models.Error
}

func (o *GetKeysUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys][%d] getKeysUnauthorized  %+v", 401, o.Payload)
}
func (o *GetKeysUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeysForbidden creates a GetKeysForbidden with default headers values
func NewGetKeysForbidden() *GetKeysForbidden {
	return &GetKeysForbidden{}
}

/* GetKeysForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetKeysForbidden struct {
	Payload *models.Error
}

func (o *GetKeysForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys][%d] getKeysForbidden  %+v", 403, o.Payload)
}
func (o *GetKeysForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeysNotFound creates a GetKeysNotFound with default headers values
func NewGetKeysNotFound() *GetKeysNotFound {
	return &GetKeysNotFound{}
}

/* GetKeysNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetKeysNotFound struct {
	Payload *models.Error
}

func (o *GetKeysNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys][%d] getKeysNotFound  %+v", 404, o.Payload)
}
func (o *GetKeysNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKeysTooManyRequests creates a GetKeysTooManyRequests with default headers values
func NewGetKeysTooManyRequests() *GetKeysTooManyRequests {
	return &GetKeysTooManyRequests{}
}

/* GetKeysTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetKeysTooManyRequests struct {
	Payload *models.Error
}

func (o *GetKeysTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/admin/{tid}/servers/{aid}/keys][%d] getKeysTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetKeysTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetKeysTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
