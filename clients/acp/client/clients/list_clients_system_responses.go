// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/acp/models"
)

// ListClientsSystemReader is a Reader for the ListClientsSystem structure.
type ListClientsSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListClientsSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListClientsSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListClientsSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListClientsSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListClientsSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListClientsSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListClientsSystemOK creates a ListClientsSystemOK with default headers values
func NewListClientsSystemOK() *ListClientsSystemOK {
	return &ListClientsSystemOK{}
}

/* ListClientsSystemOK describes a response with status code 200, with default header values.

Clients
*/
type ListClientsSystemOK struct {
	Payload *models.Clients
}

func (o *ListClientsSystemOK) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/clients/{aid}][%d] listClientsSystemOK  %+v", 200, o.Payload)
}
func (o *ListClientsSystemOK) GetPayload() *models.Clients {
	return o.Payload
}

func (o *ListClientsSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Clients)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemUnauthorized creates a ListClientsSystemUnauthorized with default headers values
func NewListClientsSystemUnauthorized() *ListClientsSystemUnauthorized {
	return &ListClientsSystemUnauthorized{}
}

/* ListClientsSystemUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type ListClientsSystemUnauthorized struct {
	Payload *models.Error
}

func (o *ListClientsSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/clients/{aid}][%d] listClientsSystemUnauthorized  %+v", 401, o.Payload)
}
func (o *ListClientsSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemForbidden creates a ListClientsSystemForbidden with default headers values
func NewListClientsSystemForbidden() *ListClientsSystemForbidden {
	return &ListClientsSystemForbidden{}
}

/* ListClientsSystemForbidden describes a response with status code 403, with default header values.

HttpError
*/
type ListClientsSystemForbidden struct {
	Payload *models.Error
}

func (o *ListClientsSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/clients/{aid}][%d] listClientsSystemForbidden  %+v", 403, o.Payload)
}
func (o *ListClientsSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemNotFound creates a ListClientsSystemNotFound with default headers values
func NewListClientsSystemNotFound() *ListClientsSystemNotFound {
	return &ListClientsSystemNotFound{}
}

/* ListClientsSystemNotFound describes a response with status code 404, with default header values.

HttpError
*/
type ListClientsSystemNotFound struct {
	Payload *models.Error
}

func (o *ListClientsSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/clients/{aid}][%d] listClientsSystemNotFound  %+v", 404, o.Payload)
}
func (o *ListClientsSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemTooManyRequests creates a ListClientsSystemTooManyRequests with default headers values
func NewListClientsSystemTooManyRequests() *ListClientsSystemTooManyRequests {
	return &ListClientsSystemTooManyRequests{}
}

/* ListClientsSystemTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type ListClientsSystemTooManyRequests struct {
	Payload *models.Error
}

func (o *ListClientsSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/system/{tid}/clients/{aid}][%d] listClientsSystemTooManyRequests  %+v", 429, o.Payload)
}
func (o *ListClientsSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
