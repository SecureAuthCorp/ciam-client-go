// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identityself/models"
)

// SetTotpSecretReader is a Reader for the SetTotpSecret structure.
type SetTotpSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetTotpSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSetTotpSecretNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetTotpSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetTotpSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetTotpSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetTotpSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSetTotpSecretPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetTotpSecretUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSetTotpSecretTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v2/self/set-totp-secret] setTotpSecret", response, response.Code())
	}
}

// NewSetTotpSecretNoContent creates a SetTotpSecretNoContent with default headers values
func NewSetTotpSecretNoContent() *SetTotpSecretNoContent {
	return &SetTotpSecretNoContent{}
}

/*
SetTotpSecretNoContent describes a response with status code 204, with default header values.

	Totp secret set successfully
*/
type SetTotpSecretNoContent struct {
}

// IsSuccess returns true when this set totp secret no content response has a 2xx status code
func (o *SetTotpSecretNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set totp secret no content response has a 3xx status code
func (o *SetTotpSecretNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret no content response has a 4xx status code
func (o *SetTotpSecretNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this set totp secret no content response has a 5xx status code
func (o *SetTotpSecretNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret no content response a status code equal to that given
func (o *SetTotpSecretNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the set totp secret no content response
func (o *SetTotpSecretNoContent) Code() int {
	return 204
}

func (o *SetTotpSecretNoContent) Error() string {
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretNoContent", 204)
}

func (o *SetTotpSecretNoContent) String() string {
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretNoContent", 204)
}

func (o *SetTotpSecretNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetTotpSecretBadRequest creates a SetTotpSecretBadRequest with default headers values
func NewSetTotpSecretBadRequest() *SetTotpSecretBadRequest {
	return &SetTotpSecretBadRequest{}
}

/*
SetTotpSecretBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SetTotpSecretBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret bad request response has a 2xx status code
func (o *SetTotpSecretBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret bad request response has a 3xx status code
func (o *SetTotpSecretBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret bad request response has a 4xx status code
func (o *SetTotpSecretBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret bad request response has a 5xx status code
func (o *SetTotpSecretBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret bad request response a status code equal to that given
func (o *SetTotpSecretBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set totp secret bad request response
func (o *SetTotpSecretBadRequest) Code() int {
	return 400
}

func (o *SetTotpSecretBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretBadRequest %s", 400, payload)
}

func (o *SetTotpSecretBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretBadRequest %s", 400, payload)
}

func (o *SetTotpSecretBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTotpSecretUnauthorized creates a SetTotpSecretUnauthorized with default headers values
func NewSetTotpSecretUnauthorized() *SetTotpSecretUnauthorized {
	return &SetTotpSecretUnauthorized{}
}

/*
SetTotpSecretUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetTotpSecretUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret unauthorized response has a 2xx status code
func (o *SetTotpSecretUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret unauthorized response has a 3xx status code
func (o *SetTotpSecretUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret unauthorized response has a 4xx status code
func (o *SetTotpSecretUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret unauthorized response has a 5xx status code
func (o *SetTotpSecretUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret unauthorized response a status code equal to that given
func (o *SetTotpSecretUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set totp secret unauthorized response
func (o *SetTotpSecretUnauthorized) Code() int {
	return 401
}

func (o *SetTotpSecretUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretUnauthorized %s", 401, payload)
}

func (o *SetTotpSecretUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretUnauthorized %s", 401, payload)
}

func (o *SetTotpSecretUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTotpSecretForbidden creates a SetTotpSecretForbidden with default headers values
func NewSetTotpSecretForbidden() *SetTotpSecretForbidden {
	return &SetTotpSecretForbidden{}
}

/*
SetTotpSecretForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetTotpSecretForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret forbidden response has a 2xx status code
func (o *SetTotpSecretForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret forbidden response has a 3xx status code
func (o *SetTotpSecretForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret forbidden response has a 4xx status code
func (o *SetTotpSecretForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret forbidden response has a 5xx status code
func (o *SetTotpSecretForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret forbidden response a status code equal to that given
func (o *SetTotpSecretForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set totp secret forbidden response
func (o *SetTotpSecretForbidden) Code() int {
	return 403
}

func (o *SetTotpSecretForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretForbidden %s", 403, payload)
}

func (o *SetTotpSecretForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretForbidden %s", 403, payload)
}

func (o *SetTotpSecretForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTotpSecretNotFound creates a SetTotpSecretNotFound with default headers values
func NewSetTotpSecretNotFound() *SetTotpSecretNotFound {
	return &SetTotpSecretNotFound{}
}

/*
SetTotpSecretNotFound describes a response with status code 404, with default header values.

Not found
*/
type SetTotpSecretNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret not found response has a 2xx status code
func (o *SetTotpSecretNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret not found response has a 3xx status code
func (o *SetTotpSecretNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret not found response has a 4xx status code
func (o *SetTotpSecretNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret not found response has a 5xx status code
func (o *SetTotpSecretNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret not found response a status code equal to that given
func (o *SetTotpSecretNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set totp secret not found response
func (o *SetTotpSecretNotFound) Code() int {
	return 404
}

func (o *SetTotpSecretNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretNotFound %s", 404, payload)
}

func (o *SetTotpSecretNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretNotFound %s", 404, payload)
}

func (o *SetTotpSecretNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTotpSecretPreconditionFailed creates a SetTotpSecretPreconditionFailed with default headers values
func NewSetTotpSecretPreconditionFailed() *SetTotpSecretPreconditionFailed {
	return &SetTotpSecretPreconditionFailed{}
}

/*
SetTotpSecretPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type SetTotpSecretPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret precondition failed response has a 2xx status code
func (o *SetTotpSecretPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret precondition failed response has a 3xx status code
func (o *SetTotpSecretPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret precondition failed response has a 4xx status code
func (o *SetTotpSecretPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret precondition failed response has a 5xx status code
func (o *SetTotpSecretPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret precondition failed response a status code equal to that given
func (o *SetTotpSecretPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the set totp secret precondition failed response
func (o *SetTotpSecretPreconditionFailed) Code() int {
	return 412
}

func (o *SetTotpSecretPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretPreconditionFailed %s", 412, payload)
}

func (o *SetTotpSecretPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretPreconditionFailed %s", 412, payload)
}

func (o *SetTotpSecretPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTotpSecretUnprocessableEntity creates a SetTotpSecretUnprocessableEntity with default headers values
func NewSetTotpSecretUnprocessableEntity() *SetTotpSecretUnprocessableEntity {
	return &SetTotpSecretUnprocessableEntity{}
}

/*
SetTotpSecretUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SetTotpSecretUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret unprocessable entity response has a 2xx status code
func (o *SetTotpSecretUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret unprocessable entity response has a 3xx status code
func (o *SetTotpSecretUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret unprocessable entity response has a 4xx status code
func (o *SetTotpSecretUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret unprocessable entity response has a 5xx status code
func (o *SetTotpSecretUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret unprocessable entity response a status code equal to that given
func (o *SetTotpSecretUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set totp secret unprocessable entity response
func (o *SetTotpSecretUnprocessableEntity) Code() int {
	return 422
}

func (o *SetTotpSecretUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretUnprocessableEntity %s", 422, payload)
}

func (o *SetTotpSecretUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretUnprocessableEntity %s", 422, payload)
}

func (o *SetTotpSecretUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTotpSecretTooManyRequests creates a SetTotpSecretTooManyRequests with default headers values
func NewSetTotpSecretTooManyRequests() *SetTotpSecretTooManyRequests {
	return &SetTotpSecretTooManyRequests{}
}

/*
SetTotpSecretTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SetTotpSecretTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this set totp secret too many requests response has a 2xx status code
func (o *SetTotpSecretTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set totp secret too many requests response has a 3xx status code
func (o *SetTotpSecretTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set totp secret too many requests response has a 4xx status code
func (o *SetTotpSecretTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this set totp secret too many requests response has a 5xx status code
func (o *SetTotpSecretTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this set totp secret too many requests response a status code equal to that given
func (o *SetTotpSecretTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the set totp secret too many requests response
func (o *SetTotpSecretTooManyRequests) Code() int {
	return 429
}

func (o *SetTotpSecretTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretTooManyRequests %s", 429, payload)
}

func (o *SetTotpSecretTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v2/self/set-totp-secret][%d] setTotpSecretTooManyRequests %s", 429, payload)
}

func (o *SetTotpSecretTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTotpSecretTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
