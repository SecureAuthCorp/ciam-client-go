// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identityself/models"
)

// NewSetTotpSecretParams creates a new SetTotpSecretParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetTotpSecretParams() *SetTotpSecretParams {
	return &SetTotpSecretParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetTotpSecretParamsWithTimeout creates a new SetTotpSecretParams object
// with the ability to set a timeout on a request.
func NewSetTotpSecretParamsWithTimeout(timeout time.Duration) *SetTotpSecretParams {
	return &SetTotpSecretParams{
		timeout: timeout,
	}
}

// NewSetTotpSecretParamsWithContext creates a new SetTotpSecretParams object
// with the ability to set a context for a request.
func NewSetTotpSecretParamsWithContext(ctx context.Context) *SetTotpSecretParams {
	return &SetTotpSecretParams{
		Context: ctx,
	}
}

// NewSetTotpSecretParamsWithHTTPClient creates a new SetTotpSecretParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetTotpSecretParamsWithHTTPClient(client *http.Client) *SetTotpSecretParams {
	return &SetTotpSecretParams{
		HTTPClient: client,
	}
}

/*
SetTotpSecretParams contains all the parameters to send to the API endpoint

	for the set totp secret operation.

	Typically these are written to a http.Request.
*/
type SetTotpSecretParams struct {

	// SetTotpSecret.
	SetTotpSecret *models.SetTotpSecret

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set totp secret params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetTotpSecretParams) WithDefaults() *SetTotpSecretParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set totp secret params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetTotpSecretParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set totp secret params
func (o *SetTotpSecretParams) WithTimeout(timeout time.Duration) *SetTotpSecretParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set totp secret params
func (o *SetTotpSecretParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set totp secret params
func (o *SetTotpSecretParams) WithContext(ctx context.Context) *SetTotpSecretParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set totp secret params
func (o *SetTotpSecretParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set totp secret params
func (o *SetTotpSecretParams) WithHTTPClient(client *http.Client) *SetTotpSecretParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set totp secret params
func (o *SetTotpSecretParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSetTotpSecret adds the setTotpSecret to the set totp secret params
func (o *SetTotpSecretParams) WithSetTotpSecret(setTotpSecret *models.SetTotpSecret) *SetTotpSecretParams {
	o.SetSetTotpSecret(setTotpSecret)
	return o
}

// SetSetTotpSecret adds the setTotpSecret to the set totp secret params
func (o *SetTotpSecretParams) SetSetTotpSecret(setTotpSecret *models.SetTotpSecret) {
	o.SetTotpSecret = setTotpSecret
}

// WithIfMatch adds the ifMatch to the set totp secret params
func (o *SetTotpSecretParams) WithIfMatch(ifMatch *string) *SetTotpSecretParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the set totp secret params
func (o *SetTotpSecretParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WriteToRequest writes these params to a swagger request
func (o *SetTotpSecretParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.SetTotpSecret != nil {
		if err := r.SetBodyParam(o.SetTotpSecret); err != nil {
			return err
		}
	}

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
