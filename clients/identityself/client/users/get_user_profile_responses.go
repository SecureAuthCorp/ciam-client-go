// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identityself/models"
)

// GetUserProfileReader is a Reader for the GetUserProfile structure.
type GetUserProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetUserProfileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetUserProfileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetUserProfileTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserProfileOK creates a GetUserProfileOK with default headers values
func NewGetUserProfileOK() *GetUserProfileOK {
	return &GetUserProfileOK{}
}

/* GetUserProfileOK describes a response with status code 200, with default header values.

Self
*/
type GetUserProfileOK struct {
	Payload *models.SelfUserWithData
}

func (o *GetUserProfileOK) Error() string {
	return fmt.Sprintf("[GET /self/me][%d] getUserProfileOK  %+v", 200, o.Payload)
}
func (o *GetUserProfileOK) GetPayload() *models.SelfUserWithData {
	return o.Payload
}

func (o *GetUserProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SelfUserWithData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileUnauthorized creates a GetUserProfileUnauthorized with default headers values
func NewGetUserProfileUnauthorized() *GetUserProfileUnauthorized {
	return &GetUserProfileUnauthorized{}
}

/* GetUserProfileUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetUserProfileUnauthorized struct {
	Payload *models.Error
}

func (o *GetUserProfileUnauthorized) Error() string {
	return fmt.Sprintf("[GET /self/me][%d] getUserProfileUnauthorized  %+v", 401, o.Payload)
}
func (o *GetUserProfileUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProfileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileForbidden creates a GetUserProfileForbidden with default headers values
func NewGetUserProfileForbidden() *GetUserProfileForbidden {
	return &GetUserProfileForbidden{}
}

/* GetUserProfileForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetUserProfileForbidden struct {
	Payload *models.Error
}

func (o *GetUserProfileForbidden) Error() string {
	return fmt.Sprintf("[GET /self/me][%d] getUserProfileForbidden  %+v", 403, o.Payload)
}
func (o *GetUserProfileForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProfileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileNotFound creates a GetUserProfileNotFound with default headers values
func NewGetUserProfileNotFound() *GetUserProfileNotFound {
	return &GetUserProfileNotFound{}
}

/* GetUserProfileNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetUserProfileNotFound struct {
	Payload *models.Error
}

func (o *GetUserProfileNotFound) Error() string {
	return fmt.Sprintf("[GET /self/me][%d] getUserProfileNotFound  %+v", 404, o.Payload)
}
func (o *GetUserProfileNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserProfileTooManyRequests creates a GetUserProfileTooManyRequests with default headers values
func NewGetUserProfileTooManyRequests() *GetUserProfileTooManyRequests {
	return &GetUserProfileTooManyRequests{}
}

/* GetUserProfileTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetUserProfileTooManyRequests struct {
	Payload *models.Error
}

func (o *GetUserProfileTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /self/me][%d] getUserProfileTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetUserProfileTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetUserProfileTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
