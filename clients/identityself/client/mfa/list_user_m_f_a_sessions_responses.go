// Code generated by go-swagger; DO NOT EDIT.

package mfa

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identityself/models"
)

// ListUserMFASessionsReader is a Reader for the ListUserMFASessions structure.
type ListUserMFASessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserMFASessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserMFASessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserMFASessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserMFASessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserMFASessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserMFASessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v2/self/mfa/sessions] listUserMFASessions", response, response.Code())
	}
}

// NewListUserMFASessionsOK creates a ListUserMFASessionsOK with default headers values
func NewListUserMFASessionsOK() *ListUserMFASessionsOK {
	return &ListUserMFASessionsOK{}
}

/*
ListUserMFASessionsOK describes a response with status code 200, with default header values.

User MFA sessions
*/
type ListUserMFASessionsOK struct {
	Payload *models.ListUserMFASessions
}

// IsSuccess returns true when this list user m f a sessions o k response has a 2xx status code
func (o *ListUserMFASessionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user m f a sessions o k response has a 3xx status code
func (o *ListUserMFASessionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user m f a sessions o k response has a 4xx status code
func (o *ListUserMFASessionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user m f a sessions o k response has a 5xx status code
func (o *ListUserMFASessionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user m f a sessions o k response a status code equal to that given
func (o *ListUserMFASessionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user m f a sessions o k response
func (o *ListUserMFASessionsOK) Code() int {
	return 200
}

func (o *ListUserMFASessionsOK) Error() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsOK  %+v", 200, o.Payload)
}

func (o *ListUserMFASessionsOK) String() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsOK  %+v", 200, o.Payload)
}

func (o *ListUserMFASessionsOK) GetPayload() *models.ListUserMFASessions {
	return o.Payload
}

func (o *ListUserMFASessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListUserMFASessions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMFASessionsUnauthorized creates a ListUserMFASessionsUnauthorized with default headers values
func NewListUserMFASessionsUnauthorized() *ListUserMFASessionsUnauthorized {
	return &ListUserMFASessionsUnauthorized{}
}

/*
ListUserMFASessionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserMFASessionsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user m f a sessions unauthorized response has a 2xx status code
func (o *ListUserMFASessionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user m f a sessions unauthorized response has a 3xx status code
func (o *ListUserMFASessionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user m f a sessions unauthorized response has a 4xx status code
func (o *ListUserMFASessionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user m f a sessions unauthorized response has a 5xx status code
func (o *ListUserMFASessionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user m f a sessions unauthorized response a status code equal to that given
func (o *ListUserMFASessionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user m f a sessions unauthorized response
func (o *ListUserMFASessionsUnauthorized) Code() int {
	return 401
}

func (o *ListUserMFASessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserMFASessionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserMFASessionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserMFASessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMFASessionsForbidden creates a ListUserMFASessionsForbidden with default headers values
func NewListUserMFASessionsForbidden() *ListUserMFASessionsForbidden {
	return &ListUserMFASessionsForbidden{}
}

/*
ListUserMFASessionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserMFASessionsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user m f a sessions forbidden response has a 2xx status code
func (o *ListUserMFASessionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user m f a sessions forbidden response has a 3xx status code
func (o *ListUserMFASessionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user m f a sessions forbidden response has a 4xx status code
func (o *ListUserMFASessionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user m f a sessions forbidden response has a 5xx status code
func (o *ListUserMFASessionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user m f a sessions forbidden response a status code equal to that given
func (o *ListUserMFASessionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user m f a sessions forbidden response
func (o *ListUserMFASessionsForbidden) Code() int {
	return 403
}

func (o *ListUserMFASessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsForbidden  %+v", 403, o.Payload)
}

func (o *ListUserMFASessionsForbidden) String() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsForbidden  %+v", 403, o.Payload)
}

func (o *ListUserMFASessionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserMFASessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMFASessionsNotFound creates a ListUserMFASessionsNotFound with default headers values
func NewListUserMFASessionsNotFound() *ListUserMFASessionsNotFound {
	return &ListUserMFASessionsNotFound{}
}

/*
ListUserMFASessionsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUserMFASessionsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user m f a sessions not found response has a 2xx status code
func (o *ListUserMFASessionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user m f a sessions not found response has a 3xx status code
func (o *ListUserMFASessionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user m f a sessions not found response has a 4xx status code
func (o *ListUserMFASessionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user m f a sessions not found response has a 5xx status code
func (o *ListUserMFASessionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user m f a sessions not found response a status code equal to that given
func (o *ListUserMFASessionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user m f a sessions not found response
func (o *ListUserMFASessionsNotFound) Code() int {
	return 404
}

func (o *ListUserMFASessionsNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsNotFound  %+v", 404, o.Payload)
}

func (o *ListUserMFASessionsNotFound) String() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsNotFound  %+v", 404, o.Payload)
}

func (o *ListUserMFASessionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserMFASessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMFASessionsTooManyRequests creates a ListUserMFASessionsTooManyRequests with default headers values
func NewListUserMFASessionsTooManyRequests() *ListUserMFASessionsTooManyRequests {
	return &ListUserMFASessionsTooManyRequests{}
}

/*
ListUserMFASessionsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUserMFASessionsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user m f a sessions too many requests response has a 2xx status code
func (o *ListUserMFASessionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user m f a sessions too many requests response has a 3xx status code
func (o *ListUserMFASessionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user m f a sessions too many requests response has a 4xx status code
func (o *ListUserMFASessionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user m f a sessions too many requests response has a 5xx status code
func (o *ListUserMFASessionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user m f a sessions too many requests response a status code equal to that given
func (o *ListUserMFASessionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list user m f a sessions too many requests response
func (o *ListUserMFASessionsTooManyRequests) Code() int {
	return 429
}

func (o *ListUserMFASessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserMFASessionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /v2/self/mfa/sessions][%d] listUserMFASessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserMFASessionsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserMFASessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
