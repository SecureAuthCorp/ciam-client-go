// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// DeletePoolReader is a Reader for the DeletePool structure.
type DeletePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeletePoolNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeletePoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeletePoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeletePoolTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /admin/pools/{ipID}] deletePool", response, response.Code())
	}
}

// NewDeletePoolNoContent creates a DeletePoolNoContent with default headers values
func NewDeletePoolNoContent() *DeletePoolNoContent {
	return &DeletePoolNoContent{}
}

/*
DeletePoolNoContent describes a response with status code 204, with default header values.

	Identity Pool Deleted
*/
type DeletePoolNoContent struct {
}

// IsSuccess returns true when this delete pool no content response has a 2xx status code
func (o *DeletePoolNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete pool no content response has a 3xx status code
func (o *DeletePoolNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pool no content response has a 4xx status code
func (o *DeletePoolNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete pool no content response has a 5xx status code
func (o *DeletePoolNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pool no content response a status code equal to that given
func (o *DeletePoolNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete pool no content response
func (o *DeletePoolNoContent) Code() int {
	return 204
}

func (o *DeletePoolNoContent) Error() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolNoContent ", 204)
}

func (o *DeletePoolNoContent) String() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolNoContent ", 204)
}

func (o *DeletePoolNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePoolUnauthorized creates a DeletePoolUnauthorized with default headers values
func NewDeletePoolUnauthorized() *DeletePoolUnauthorized {
	return &DeletePoolUnauthorized{}
}

/*
DeletePoolUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeletePoolUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete pool unauthorized response has a 2xx status code
func (o *DeletePoolUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pool unauthorized response has a 3xx status code
func (o *DeletePoolUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pool unauthorized response has a 4xx status code
func (o *DeletePoolUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pool unauthorized response has a 5xx status code
func (o *DeletePoolUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pool unauthorized response a status code equal to that given
func (o *DeletePoolUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete pool unauthorized response
func (o *DeletePoolUnauthorized) Code() int {
	return 401
}

func (o *DeletePoolUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePoolUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolUnauthorized  %+v", 401, o.Payload)
}

func (o *DeletePoolUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePoolForbidden creates a DeletePoolForbidden with default headers values
func NewDeletePoolForbidden() *DeletePoolForbidden {
	return &DeletePoolForbidden{}
}

/*
DeletePoolForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeletePoolForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete pool forbidden response has a 2xx status code
func (o *DeletePoolForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pool forbidden response has a 3xx status code
func (o *DeletePoolForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pool forbidden response has a 4xx status code
func (o *DeletePoolForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pool forbidden response has a 5xx status code
func (o *DeletePoolForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pool forbidden response a status code equal to that given
func (o *DeletePoolForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete pool forbidden response
func (o *DeletePoolForbidden) Code() int {
	return 403
}

func (o *DeletePoolForbidden) Error() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolForbidden  %+v", 403, o.Payload)
}

func (o *DeletePoolForbidden) String() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolForbidden  %+v", 403, o.Payload)
}

func (o *DeletePoolForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePoolNotFound creates a DeletePoolNotFound with default headers values
func NewDeletePoolNotFound() *DeletePoolNotFound {
	return &DeletePoolNotFound{}
}

/*
DeletePoolNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeletePoolNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete pool not found response has a 2xx status code
func (o *DeletePoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pool not found response has a 3xx status code
func (o *DeletePoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pool not found response has a 4xx status code
func (o *DeletePoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pool not found response has a 5xx status code
func (o *DeletePoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pool not found response a status code equal to that given
func (o *DeletePoolNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete pool not found response
func (o *DeletePoolNotFound) Code() int {
	return 404
}

func (o *DeletePoolNotFound) Error() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolNotFound  %+v", 404, o.Payload)
}

func (o *DeletePoolNotFound) String() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolNotFound  %+v", 404, o.Payload)
}

func (o *DeletePoolNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePoolTooManyRequests creates a DeletePoolTooManyRequests with default headers values
func NewDeletePoolTooManyRequests() *DeletePoolTooManyRequests {
	return &DeletePoolTooManyRequests{}
}

/*
DeletePoolTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeletePoolTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete pool too many requests response has a 2xx status code
func (o *DeletePoolTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete pool too many requests response has a 3xx status code
func (o *DeletePoolTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete pool too many requests response has a 4xx status code
func (o *DeletePoolTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete pool too many requests response has a 5xx status code
func (o *DeletePoolTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete pool too many requests response a status code equal to that given
func (o *DeletePoolTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete pool too many requests response
func (o *DeletePoolTooManyRequests) Code() int {
	return 429
}

func (o *DeletePoolTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeletePoolTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /admin/pools/{ipID}][%d] deletePoolTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeletePoolTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeletePoolTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
