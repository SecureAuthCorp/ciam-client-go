// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// UpdatePoolReader is a Reader for the UpdatePool structure.
type UpdatePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdatePoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdatePoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdatePoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdatePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdatePoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdatePoolUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdatePoolTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdatePoolOK creates a UpdatePoolOK with default headers values
func NewUpdatePoolOK() *UpdatePoolOK {
	return &UpdatePoolOK{}
}

/* UpdatePoolOK describes a response with status code 200, with default header values.

Pool
*/
type UpdatePoolOK struct {
	Payload *models.Pool
}

func (o *UpdatePoolOK) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolOK  %+v", 200, o.Payload)
}
func (o *UpdatePoolOK) GetPayload() *models.Pool {
	return o.Payload
}

func (o *UpdatePoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolBadRequest creates a UpdatePoolBadRequest with default headers values
func NewUpdatePoolBadRequest() *UpdatePoolBadRequest {
	return &UpdatePoolBadRequest{}
}

/* UpdatePoolBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type UpdatePoolBadRequest struct {
	Payload *models.Error
}

func (o *UpdatePoolBadRequest) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolBadRequest  %+v", 400, o.Payload)
}
func (o *UpdatePoolBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolUnauthorized creates a UpdatePoolUnauthorized with default headers values
func NewUpdatePoolUnauthorized() *UpdatePoolUnauthorized {
	return &UpdatePoolUnauthorized{}
}

/* UpdatePoolUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type UpdatePoolUnauthorized struct {
	Payload *models.Error
}

func (o *UpdatePoolUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdatePoolUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolForbidden creates a UpdatePoolForbidden with default headers values
func NewUpdatePoolForbidden() *UpdatePoolForbidden {
	return &UpdatePoolForbidden{}
}

/* UpdatePoolForbidden describes a response with status code 403, with default header values.

HttpError
*/
type UpdatePoolForbidden struct {
	Payload *models.Error
}

func (o *UpdatePoolForbidden) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolForbidden  %+v", 403, o.Payload)
}
func (o *UpdatePoolForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolNotFound creates a UpdatePoolNotFound with default headers values
func NewUpdatePoolNotFound() *UpdatePoolNotFound {
	return &UpdatePoolNotFound{}
}

/* UpdatePoolNotFound describes a response with status code 404, with default header values.

HttpError
*/
type UpdatePoolNotFound struct {
	Payload *models.Error
}

func (o *UpdatePoolNotFound) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolNotFound  %+v", 404, o.Payload)
}
func (o *UpdatePoolNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolConflict creates a UpdatePoolConflict with default headers values
func NewUpdatePoolConflict() *UpdatePoolConflict {
	return &UpdatePoolConflict{}
}

/* UpdatePoolConflict describes a response with status code 409, with default header values.

HttpError
*/
type UpdatePoolConflict struct {
	Payload *models.Error
}

func (o *UpdatePoolConflict) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolConflict  %+v", 409, o.Payload)
}
func (o *UpdatePoolConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolUnprocessableEntity creates a UpdatePoolUnprocessableEntity with default headers values
func NewUpdatePoolUnprocessableEntity() *UpdatePoolUnprocessableEntity {
	return &UpdatePoolUnprocessableEntity{}
}

/* UpdatePoolUnprocessableEntity describes a response with status code 422, with default header values.

HttpError
*/
type UpdatePoolUnprocessableEntity struct {
	Payload *models.Error
}

func (o *UpdatePoolUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UpdatePoolUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdatePoolTooManyRequests creates a UpdatePoolTooManyRequests with default headers values
func NewUpdatePoolTooManyRequests() *UpdatePoolTooManyRequests {
	return &UpdatePoolTooManyRequests{}
}

/* UpdatePoolTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type UpdatePoolTooManyRequests struct {
	Payload *models.Error
}

func (o *UpdatePoolTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /admin/pools/{ipID}][%d] updatePoolTooManyRequests  %+v", 429, o.Payload)
}
func (o *UpdatePoolTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdatePoolTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
