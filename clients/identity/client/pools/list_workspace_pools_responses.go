// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// ListWorkspacePoolsReader is a Reader for the ListWorkspacePools structure.
type ListWorkspacePoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListWorkspacePoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListWorkspacePoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListWorkspacePoolsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListWorkspacePoolsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListWorkspacePoolsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin/workspace/{wid}/pools] listWorkspacePools", response, response.Code())
	}
}

// NewListWorkspacePoolsOK creates a ListWorkspacePoolsOK with default headers values
func NewListWorkspacePoolsOK() *ListWorkspacePoolsOK {
	return &ListWorkspacePoolsOK{}
}

/*
ListWorkspacePoolsOK describes a response with status code 200, with default header values.

Pools
*/
type ListWorkspacePoolsOK struct {
	Payload *models.Pools
}

// IsSuccess returns true when this list workspace pools o k response has a 2xx status code
func (o *ListWorkspacePoolsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list workspace pools o k response has a 3xx status code
func (o *ListWorkspacePoolsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace pools o k response has a 4xx status code
func (o *ListWorkspacePoolsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list workspace pools o k response has a 5xx status code
func (o *ListWorkspacePoolsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace pools o k response a status code equal to that given
func (o *ListWorkspacePoolsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list workspace pools o k response
func (o *ListWorkspacePoolsOK) Code() int {
	return 200
}

func (o *ListWorkspacePoolsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsOK %s", 200, payload)
}

func (o *ListWorkspacePoolsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsOK %s", 200, payload)
}

func (o *ListWorkspacePoolsOK) GetPayload() *models.Pools {
	return o.Payload
}

func (o *ListWorkspacePoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pools)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspacePoolsUnauthorized creates a ListWorkspacePoolsUnauthorized with default headers values
func NewListWorkspacePoolsUnauthorized() *ListWorkspacePoolsUnauthorized {
	return &ListWorkspacePoolsUnauthorized{}
}

/*
ListWorkspacePoolsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListWorkspacePoolsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace pools unauthorized response has a 2xx status code
func (o *ListWorkspacePoolsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace pools unauthorized response has a 3xx status code
func (o *ListWorkspacePoolsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace pools unauthorized response has a 4xx status code
func (o *ListWorkspacePoolsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace pools unauthorized response has a 5xx status code
func (o *ListWorkspacePoolsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace pools unauthorized response a status code equal to that given
func (o *ListWorkspacePoolsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list workspace pools unauthorized response
func (o *ListWorkspacePoolsUnauthorized) Code() int {
	return 401
}

func (o *ListWorkspacePoolsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsUnauthorized %s", 401, payload)
}

func (o *ListWorkspacePoolsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsUnauthorized %s", 401, payload)
}

func (o *ListWorkspacePoolsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspacePoolsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspacePoolsForbidden creates a ListWorkspacePoolsForbidden with default headers values
func NewListWorkspacePoolsForbidden() *ListWorkspacePoolsForbidden {
	return &ListWorkspacePoolsForbidden{}
}

/*
ListWorkspacePoolsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListWorkspacePoolsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace pools forbidden response has a 2xx status code
func (o *ListWorkspacePoolsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace pools forbidden response has a 3xx status code
func (o *ListWorkspacePoolsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace pools forbidden response has a 4xx status code
func (o *ListWorkspacePoolsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace pools forbidden response has a 5xx status code
func (o *ListWorkspacePoolsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace pools forbidden response a status code equal to that given
func (o *ListWorkspacePoolsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list workspace pools forbidden response
func (o *ListWorkspacePoolsForbidden) Code() int {
	return 403
}

func (o *ListWorkspacePoolsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsForbidden %s", 403, payload)
}

func (o *ListWorkspacePoolsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsForbidden %s", 403, payload)
}

func (o *ListWorkspacePoolsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspacePoolsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspacePoolsTooManyRequests creates a ListWorkspacePoolsTooManyRequests with default headers values
func NewListWorkspacePoolsTooManyRequests() *ListWorkspacePoolsTooManyRequests {
	return &ListWorkspacePoolsTooManyRequests{}
}

/*
ListWorkspacePoolsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListWorkspacePoolsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace pools too many requests response has a 2xx status code
func (o *ListWorkspacePoolsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace pools too many requests response has a 3xx status code
func (o *ListWorkspacePoolsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace pools too many requests response has a 4xx status code
func (o *ListWorkspacePoolsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace pools too many requests response has a 5xx status code
func (o *ListWorkspacePoolsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace pools too many requests response a status code equal to that given
func (o *ListWorkspacePoolsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list workspace pools too many requests response
func (o *ListWorkspacePoolsTooManyRequests) Code() int {
	return 429
}

func (o *ListWorkspacePoolsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsTooManyRequests %s", 429, payload)
}

func (o *ListWorkspacePoolsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/pools][%d] listWorkspacePoolsTooManyRequests %s", 429, payload)
}

func (o *ListWorkspacePoolsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspacePoolsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
