// Code generated by go-swagger; DO NOT EDIT.

package pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// CreateWorkspacePoolReader is a Reader for the CreateWorkspacePool structure.
type CreateWorkspacePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkspacePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateWorkspacePoolCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWorkspacePoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateWorkspacePoolUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateWorkspacePoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateWorkspacePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateWorkspacePoolConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateWorkspacePoolUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateWorkspacePoolTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /admin/workspace/{wid}/pools] createWorkspacePool", response, response.Code())
	}
}

// NewCreateWorkspacePoolCreated creates a CreateWorkspacePoolCreated with default headers values
func NewCreateWorkspacePoolCreated() *CreateWorkspacePoolCreated {
	return &CreateWorkspacePoolCreated{}
}

/*
CreateWorkspacePoolCreated describes a response with status code 201, with default header values.

Identity Pool
*/
type CreateWorkspacePoolCreated struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.PoolResponse
}

// IsSuccess returns true when this create workspace pool created response has a 2xx status code
func (o *CreateWorkspacePoolCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create workspace pool created response has a 3xx status code
func (o *CreateWorkspacePoolCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool created response has a 4xx status code
func (o *CreateWorkspacePoolCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workspace pool created response has a 5xx status code
func (o *CreateWorkspacePoolCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool created response a status code equal to that given
func (o *CreateWorkspacePoolCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create workspace pool created response
func (o *CreateWorkspacePoolCreated) Code() int {
	return 201
}

func (o *CreateWorkspacePoolCreated) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolCreated  %+v", 201, o.Payload)
}

func (o *CreateWorkspacePoolCreated) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolCreated  %+v", 201, o.Payload)
}

func (o *CreateWorkspacePoolCreated) GetPayload() *models.PoolResponse {
	return o.Payload
}

func (o *CreateWorkspacePoolCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.PoolResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolBadRequest creates a CreateWorkspacePoolBadRequest with default headers values
func NewCreateWorkspacePoolBadRequest() *CreateWorkspacePoolBadRequest {
	return &CreateWorkspacePoolBadRequest{}
}

/*
CreateWorkspacePoolBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateWorkspacePoolBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool bad request response has a 2xx status code
func (o *CreateWorkspacePoolBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool bad request response has a 3xx status code
func (o *CreateWorkspacePoolBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool bad request response has a 4xx status code
func (o *CreateWorkspacePoolBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool bad request response has a 5xx status code
func (o *CreateWorkspacePoolBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool bad request response a status code equal to that given
func (o *CreateWorkspacePoolBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create workspace pool bad request response
func (o *CreateWorkspacePoolBadRequest) Code() int {
	return 400
}

func (o *CreateWorkspacePoolBadRequest) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolBadRequest  %+v", 400, o.Payload)
}

func (o *CreateWorkspacePoolBadRequest) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolBadRequest  %+v", 400, o.Payload)
}

func (o *CreateWorkspacePoolBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolUnauthorized creates a CreateWorkspacePoolUnauthorized with default headers values
func NewCreateWorkspacePoolUnauthorized() *CreateWorkspacePoolUnauthorized {
	return &CreateWorkspacePoolUnauthorized{}
}

/*
CreateWorkspacePoolUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateWorkspacePoolUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool unauthorized response has a 2xx status code
func (o *CreateWorkspacePoolUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool unauthorized response has a 3xx status code
func (o *CreateWorkspacePoolUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool unauthorized response has a 4xx status code
func (o *CreateWorkspacePoolUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool unauthorized response has a 5xx status code
func (o *CreateWorkspacePoolUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool unauthorized response a status code equal to that given
func (o *CreateWorkspacePoolUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create workspace pool unauthorized response
func (o *CreateWorkspacePoolUnauthorized) Code() int {
	return 401
}

func (o *CreateWorkspacePoolUnauthorized) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateWorkspacePoolUnauthorized) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateWorkspacePoolUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolForbidden creates a CreateWorkspacePoolForbidden with default headers values
func NewCreateWorkspacePoolForbidden() *CreateWorkspacePoolForbidden {
	return &CreateWorkspacePoolForbidden{}
}

/*
CreateWorkspacePoolForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateWorkspacePoolForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool forbidden response has a 2xx status code
func (o *CreateWorkspacePoolForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool forbidden response has a 3xx status code
func (o *CreateWorkspacePoolForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool forbidden response has a 4xx status code
func (o *CreateWorkspacePoolForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool forbidden response has a 5xx status code
func (o *CreateWorkspacePoolForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool forbidden response a status code equal to that given
func (o *CreateWorkspacePoolForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create workspace pool forbidden response
func (o *CreateWorkspacePoolForbidden) Code() int {
	return 403
}

func (o *CreateWorkspacePoolForbidden) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolForbidden  %+v", 403, o.Payload)
}

func (o *CreateWorkspacePoolForbidden) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolForbidden  %+v", 403, o.Payload)
}

func (o *CreateWorkspacePoolForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolNotFound creates a CreateWorkspacePoolNotFound with default headers values
func NewCreateWorkspacePoolNotFound() *CreateWorkspacePoolNotFound {
	return &CreateWorkspacePoolNotFound{}
}

/*
CreateWorkspacePoolNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateWorkspacePoolNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool not found response has a 2xx status code
func (o *CreateWorkspacePoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool not found response has a 3xx status code
func (o *CreateWorkspacePoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool not found response has a 4xx status code
func (o *CreateWorkspacePoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool not found response has a 5xx status code
func (o *CreateWorkspacePoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool not found response a status code equal to that given
func (o *CreateWorkspacePoolNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create workspace pool not found response
func (o *CreateWorkspacePoolNotFound) Code() int {
	return 404
}

func (o *CreateWorkspacePoolNotFound) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolNotFound  %+v", 404, o.Payload)
}

func (o *CreateWorkspacePoolNotFound) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolNotFound  %+v", 404, o.Payload)
}

func (o *CreateWorkspacePoolNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolConflict creates a CreateWorkspacePoolConflict with default headers values
func NewCreateWorkspacePoolConflict() *CreateWorkspacePoolConflict {
	return &CreateWorkspacePoolConflict{}
}

/*
CreateWorkspacePoolConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateWorkspacePoolConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool conflict response has a 2xx status code
func (o *CreateWorkspacePoolConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool conflict response has a 3xx status code
func (o *CreateWorkspacePoolConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool conflict response has a 4xx status code
func (o *CreateWorkspacePoolConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool conflict response has a 5xx status code
func (o *CreateWorkspacePoolConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool conflict response a status code equal to that given
func (o *CreateWorkspacePoolConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create workspace pool conflict response
func (o *CreateWorkspacePoolConflict) Code() int {
	return 409
}

func (o *CreateWorkspacePoolConflict) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolConflict  %+v", 409, o.Payload)
}

func (o *CreateWorkspacePoolConflict) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolConflict  %+v", 409, o.Payload)
}

func (o *CreateWorkspacePoolConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolUnprocessableEntity creates a CreateWorkspacePoolUnprocessableEntity with default headers values
func NewCreateWorkspacePoolUnprocessableEntity() *CreateWorkspacePoolUnprocessableEntity {
	return &CreateWorkspacePoolUnprocessableEntity{}
}

/*
CreateWorkspacePoolUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateWorkspacePoolUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool unprocessable entity response has a 2xx status code
func (o *CreateWorkspacePoolUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool unprocessable entity response has a 3xx status code
func (o *CreateWorkspacePoolUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool unprocessable entity response has a 4xx status code
func (o *CreateWorkspacePoolUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool unprocessable entity response has a 5xx status code
func (o *CreateWorkspacePoolUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool unprocessable entity response a status code equal to that given
func (o *CreateWorkspacePoolUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create workspace pool unprocessable entity response
func (o *CreateWorkspacePoolUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateWorkspacePoolUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateWorkspacePoolUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateWorkspacePoolUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkspacePoolTooManyRequests creates a CreateWorkspacePoolTooManyRequests with default headers values
func NewCreateWorkspacePoolTooManyRequests() *CreateWorkspacePoolTooManyRequests {
	return &CreateWorkspacePoolTooManyRequests{}
}

/*
CreateWorkspacePoolTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateWorkspacePoolTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create workspace pool too many requests response has a 2xx status code
func (o *CreateWorkspacePoolTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workspace pool too many requests response has a 3xx status code
func (o *CreateWorkspacePoolTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workspace pool too many requests response has a 4xx status code
func (o *CreateWorkspacePoolTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workspace pool too many requests response has a 5xx status code
func (o *CreateWorkspacePoolTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create workspace pool too many requests response a status code equal to that given
func (o *CreateWorkspacePoolTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create workspace pool too many requests response
func (o *CreateWorkspacePoolTooManyRequests) Code() int {
	return 429
}

func (o *CreateWorkspacePoolTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateWorkspacePoolTooManyRequests) String() string {
	return fmt.Sprintf("[POST /admin/workspace/{wid}/pools][%d] createWorkspacePoolTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateWorkspacePoolTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWorkspacePoolTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
