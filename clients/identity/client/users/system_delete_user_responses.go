// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// SystemDeleteUserReader is a Reader for the SystemDeleteUser structure.
type SystemDeleteUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemDeleteUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSystemDeleteUserNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemDeleteUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemDeleteUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemDeleteUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemDeleteUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSystemDeleteUserNoContent creates a SystemDeleteUserNoContent with default headers values
func NewSystemDeleteUserNoContent() *SystemDeleteUserNoContent {
	return &SystemDeleteUserNoContent{}
}

/* SystemDeleteUserNoContent describes a response with status code 204, with default header values.

User has been deleted
*/
type SystemDeleteUserNoContent struct {
}

func (o *SystemDeleteUserNoContent) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}][%d] systemDeleteUserNoContent ", 204)
}

func (o *SystemDeleteUserNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemDeleteUserUnauthorized creates a SystemDeleteUserUnauthorized with default headers values
func NewSystemDeleteUserUnauthorized() *SystemDeleteUserUnauthorized {
	return &SystemDeleteUserUnauthorized{}
}

/* SystemDeleteUserUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type SystemDeleteUserUnauthorized struct {
	Payload *models.Error
}

func (o *SystemDeleteUserUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}][%d] systemDeleteUserUnauthorized  %+v", 401, o.Payload)
}
func (o *SystemDeleteUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteUserForbidden creates a SystemDeleteUserForbidden with default headers values
func NewSystemDeleteUserForbidden() *SystemDeleteUserForbidden {
	return &SystemDeleteUserForbidden{}
}

/* SystemDeleteUserForbidden describes a response with status code 403, with default header values.

HttpError
*/
type SystemDeleteUserForbidden struct {
	Payload *models.Error
}

func (o *SystemDeleteUserForbidden) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}][%d] systemDeleteUserForbidden  %+v", 403, o.Payload)
}
func (o *SystemDeleteUserForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteUserNotFound creates a SystemDeleteUserNotFound with default headers values
func NewSystemDeleteUserNotFound() *SystemDeleteUserNotFound {
	return &SystemDeleteUserNotFound{}
}

/* SystemDeleteUserNotFound describes a response with status code 404, with default header values.

HttpError
*/
type SystemDeleteUserNotFound struct {
	Payload *models.Error
}

func (o *SystemDeleteUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}][%d] systemDeleteUserNotFound  %+v", 404, o.Payload)
}
func (o *SystemDeleteUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteUserTooManyRequests creates a SystemDeleteUserTooManyRequests with default headers values
func NewSystemDeleteUserTooManyRequests() *SystemDeleteUserTooManyRequests {
	return &SystemDeleteUserTooManyRequests{}
}

/* SystemDeleteUserTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type SystemDeleteUserTooManyRequests struct {
	Payload *models.Error
}

func (o *SystemDeleteUserTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}][%d] systemDeleteUserTooManyRequests  %+v", 429, o.Payload)
}
func (o *SystemDeleteUserTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
