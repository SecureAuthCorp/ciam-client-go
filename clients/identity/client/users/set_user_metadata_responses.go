// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// SetUserMetadataReader is a Reader for the SetUserMetadata structure.
type SetUserMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetUserMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetUserMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetUserMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetUserMetadataUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetUserMetadataForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetUserMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetUserMetadataUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSetUserMetadataTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}] setUserMetadata", response, response.Code())
	}
}

// NewSetUserMetadataOK creates a SetUserMetadataOK with default headers values
func NewSetUserMetadataOK() *SetUserMetadataOK {
	return &SetUserMetadataOK{}
}

/*
SetUserMetadataOK describes a response with status code 200, with default header values.

UserMetadata
*/
type SetUserMetadataOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserMetadataWithSchema
}

// IsSuccess returns true when this set user metadata o k response has a 2xx status code
func (o *SetUserMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set user metadata o k response has a 3xx status code
func (o *SetUserMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata o k response has a 4xx status code
func (o *SetUserMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set user metadata o k response has a 5xx status code
func (o *SetUserMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata o k response a status code equal to that given
func (o *SetUserMetadataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set user metadata o k response
func (o *SetUserMetadataOK) Code() int {
	return 200
}

func (o *SetUserMetadataOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataOK %s", 200, payload)
}

func (o *SetUserMetadataOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataOK %s", 200, payload)
}

func (o *SetUserMetadataOK) GetPayload() *models.UserMetadataWithSchema {
	return o.Payload
}

func (o *SetUserMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserMetadataWithSchema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetUserMetadataBadRequest creates a SetUserMetadataBadRequest with default headers values
func NewSetUserMetadataBadRequest() *SetUserMetadataBadRequest {
	return &SetUserMetadataBadRequest{}
}

/*
SetUserMetadataBadRequest describes a response with status code 400, with default header values.

Unauthorized
*/
type SetUserMetadataBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set user metadata bad request response has a 2xx status code
func (o *SetUserMetadataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set user metadata bad request response has a 3xx status code
func (o *SetUserMetadataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata bad request response has a 4xx status code
func (o *SetUserMetadataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set user metadata bad request response has a 5xx status code
func (o *SetUserMetadataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata bad request response a status code equal to that given
func (o *SetUserMetadataBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set user metadata bad request response
func (o *SetUserMetadataBadRequest) Code() int {
	return 400
}

func (o *SetUserMetadataBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataBadRequest %s", 400, payload)
}

func (o *SetUserMetadataBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataBadRequest %s", 400, payload)
}

func (o *SetUserMetadataBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetUserMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetUserMetadataUnauthorized creates a SetUserMetadataUnauthorized with default headers values
func NewSetUserMetadataUnauthorized() *SetUserMetadataUnauthorized {
	return &SetUserMetadataUnauthorized{}
}

/*
SetUserMetadataUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetUserMetadataUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this set user metadata unauthorized response has a 2xx status code
func (o *SetUserMetadataUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set user metadata unauthorized response has a 3xx status code
func (o *SetUserMetadataUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata unauthorized response has a 4xx status code
func (o *SetUserMetadataUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set user metadata unauthorized response has a 5xx status code
func (o *SetUserMetadataUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata unauthorized response a status code equal to that given
func (o *SetUserMetadataUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set user metadata unauthorized response
func (o *SetUserMetadataUnauthorized) Code() int {
	return 401
}

func (o *SetUserMetadataUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataUnauthorized %s", 401, payload)
}

func (o *SetUserMetadataUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataUnauthorized %s", 401, payload)
}

func (o *SetUserMetadataUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetUserMetadataUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetUserMetadataForbidden creates a SetUserMetadataForbidden with default headers values
func NewSetUserMetadataForbidden() *SetUserMetadataForbidden {
	return &SetUserMetadataForbidden{}
}

/*
SetUserMetadataForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetUserMetadataForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this set user metadata forbidden response has a 2xx status code
func (o *SetUserMetadataForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set user metadata forbidden response has a 3xx status code
func (o *SetUserMetadataForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata forbidden response has a 4xx status code
func (o *SetUserMetadataForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set user metadata forbidden response has a 5xx status code
func (o *SetUserMetadataForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata forbidden response a status code equal to that given
func (o *SetUserMetadataForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set user metadata forbidden response
func (o *SetUserMetadataForbidden) Code() int {
	return 403
}

func (o *SetUserMetadataForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataForbidden %s", 403, payload)
}

func (o *SetUserMetadataForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataForbidden %s", 403, payload)
}

func (o *SetUserMetadataForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetUserMetadataForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetUserMetadataNotFound creates a SetUserMetadataNotFound with default headers values
func NewSetUserMetadataNotFound() *SetUserMetadataNotFound {
	return &SetUserMetadataNotFound{}
}

/*
SetUserMetadataNotFound describes a response with status code 404, with default header values.

Not found
*/
type SetUserMetadataNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this set user metadata not found response has a 2xx status code
func (o *SetUserMetadataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set user metadata not found response has a 3xx status code
func (o *SetUserMetadataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata not found response has a 4xx status code
func (o *SetUserMetadataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set user metadata not found response has a 5xx status code
func (o *SetUserMetadataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata not found response a status code equal to that given
func (o *SetUserMetadataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set user metadata not found response
func (o *SetUserMetadataNotFound) Code() int {
	return 404
}

func (o *SetUserMetadataNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataNotFound %s", 404, payload)
}

func (o *SetUserMetadataNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataNotFound %s", 404, payload)
}

func (o *SetUserMetadataNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetUserMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetUserMetadataUnprocessableEntity creates a SetUserMetadataUnprocessableEntity with default headers values
func NewSetUserMetadataUnprocessableEntity() *SetUserMetadataUnprocessableEntity {
	return &SetUserMetadataUnprocessableEntity{}
}

/*
SetUserMetadataUnprocessableEntity describes a response with status code 422, with default header values.

Not found
*/
type SetUserMetadataUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this set user metadata unprocessable entity response has a 2xx status code
func (o *SetUserMetadataUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set user metadata unprocessable entity response has a 3xx status code
func (o *SetUserMetadataUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata unprocessable entity response has a 4xx status code
func (o *SetUserMetadataUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set user metadata unprocessable entity response has a 5xx status code
func (o *SetUserMetadataUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata unprocessable entity response a status code equal to that given
func (o *SetUserMetadataUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set user metadata unprocessable entity response
func (o *SetUserMetadataUnprocessableEntity) Code() int {
	return 422
}

func (o *SetUserMetadataUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataUnprocessableEntity %s", 422, payload)
}

func (o *SetUserMetadataUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataUnprocessableEntity %s", 422, payload)
}

func (o *SetUserMetadataUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetUserMetadataUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetUserMetadataTooManyRequests creates a SetUserMetadataTooManyRequests with default headers values
func NewSetUserMetadataTooManyRequests() *SetUserMetadataTooManyRequests {
	return &SetUserMetadataTooManyRequests{}
}

/*
SetUserMetadataTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SetUserMetadataTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this set user metadata too many requests response has a 2xx status code
func (o *SetUserMetadataTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set user metadata too many requests response has a 3xx status code
func (o *SetUserMetadataTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set user metadata too many requests response has a 4xx status code
func (o *SetUserMetadataTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this set user metadata too many requests response has a 5xx status code
func (o *SetUserMetadataTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this set user metadata too many requests response a status code equal to that given
func (o *SetUserMetadataTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the set user metadata too many requests response
func (o *SetUserMetadataTooManyRequests) Code() int {
	return 429
}

func (o *SetUserMetadataTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataTooManyRequests %s", 429, payload)
}

func (o *SetUserMetadataTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /admin/pools/{ipID}/users/{userID}/metadata/{metadataType}][%d] setUserMetadataTooManyRequests %s", 429, payload)
}

func (o *SetUserMetadataTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetUserMetadataTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
