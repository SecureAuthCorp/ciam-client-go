// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// GetWorkspaceSchemaReader is a Reader for the GetWorkspaceSchema structure.
type GetWorkspaceSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkspaceSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkspaceSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkspaceSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkspaceSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkspaceSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWorkspaceSchemaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin/workspace/{wid}/schemas/{schID}] getWorkspaceSchema", response, response.Code())
	}
}

// NewGetWorkspaceSchemaOK creates a GetWorkspaceSchemaOK with default headers values
func NewGetWorkspaceSchemaOK() *GetWorkspaceSchemaOK {
	return &GetWorkspaceSchemaOK{}
}

/*
GetWorkspaceSchemaOK describes a response with status code 200, with default header values.

Identity Schema
*/
type GetWorkspaceSchemaOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.Schema
}

// IsSuccess returns true when this get workspace schema o k response has a 2xx status code
func (o *GetWorkspaceSchemaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workspace schema o k response has a 3xx status code
func (o *GetWorkspaceSchemaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace schema o k response has a 4xx status code
func (o *GetWorkspaceSchemaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workspace schema o k response has a 5xx status code
func (o *GetWorkspaceSchemaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace schema o k response a status code equal to that given
func (o *GetWorkspaceSchemaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workspace schema o k response
func (o *GetWorkspaceSchemaOK) Code() int {
	return 200
}

func (o *GetWorkspaceSchemaOK) Error() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaOK  %+v", 200, o.Payload)
}

func (o *GetWorkspaceSchemaOK) String() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaOK  %+v", 200, o.Payload)
}

func (o *GetWorkspaceSchemaOK) GetPayload() *models.Schema {
	return o.Payload
}

func (o *GetWorkspaceSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.Schema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceSchemaUnauthorized creates a GetWorkspaceSchemaUnauthorized with default headers values
func NewGetWorkspaceSchemaUnauthorized() *GetWorkspaceSchemaUnauthorized {
	return &GetWorkspaceSchemaUnauthorized{}
}

/*
GetWorkspaceSchemaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetWorkspaceSchemaUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace schema unauthorized response has a 2xx status code
func (o *GetWorkspaceSchemaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace schema unauthorized response has a 3xx status code
func (o *GetWorkspaceSchemaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace schema unauthorized response has a 4xx status code
func (o *GetWorkspaceSchemaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace schema unauthorized response has a 5xx status code
func (o *GetWorkspaceSchemaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace schema unauthorized response a status code equal to that given
func (o *GetWorkspaceSchemaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workspace schema unauthorized response
func (o *GetWorkspaceSchemaUnauthorized) Code() int {
	return 401
}

func (o *GetWorkspaceSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkspaceSchemaUnauthorized) String() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkspaceSchemaUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceSchemaForbidden creates a GetWorkspaceSchemaForbidden with default headers values
func NewGetWorkspaceSchemaForbidden() *GetWorkspaceSchemaForbidden {
	return &GetWorkspaceSchemaForbidden{}
}

/*
GetWorkspaceSchemaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWorkspaceSchemaForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace schema forbidden response has a 2xx status code
func (o *GetWorkspaceSchemaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace schema forbidden response has a 3xx status code
func (o *GetWorkspaceSchemaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace schema forbidden response has a 4xx status code
func (o *GetWorkspaceSchemaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace schema forbidden response has a 5xx status code
func (o *GetWorkspaceSchemaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace schema forbidden response a status code equal to that given
func (o *GetWorkspaceSchemaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workspace schema forbidden response
func (o *GetWorkspaceSchemaForbidden) Code() int {
	return 403
}

func (o *GetWorkspaceSchemaForbidden) Error() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkspaceSchemaForbidden) String() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkspaceSchemaForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceSchemaNotFound creates a GetWorkspaceSchemaNotFound with default headers values
func NewGetWorkspaceSchemaNotFound() *GetWorkspaceSchemaNotFound {
	return &GetWorkspaceSchemaNotFound{}
}

/*
GetWorkspaceSchemaNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetWorkspaceSchemaNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace schema not found response has a 2xx status code
func (o *GetWorkspaceSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace schema not found response has a 3xx status code
func (o *GetWorkspaceSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace schema not found response has a 4xx status code
func (o *GetWorkspaceSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace schema not found response has a 5xx status code
func (o *GetWorkspaceSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace schema not found response a status code equal to that given
func (o *GetWorkspaceSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workspace schema not found response
func (o *GetWorkspaceSchemaNotFound) Code() int {
	return 404
}

func (o *GetWorkspaceSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkspaceSchemaNotFound) String() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkspaceSchemaNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceSchemaTooManyRequests creates a GetWorkspaceSchemaTooManyRequests with default headers values
func NewGetWorkspaceSchemaTooManyRequests() *GetWorkspaceSchemaTooManyRequests {
	return &GetWorkspaceSchemaTooManyRequests{}
}

/*
GetWorkspaceSchemaTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetWorkspaceSchemaTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace schema too many requests response has a 2xx status code
func (o *GetWorkspaceSchemaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace schema too many requests response has a 3xx status code
func (o *GetWorkspaceSchemaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace schema too many requests response has a 4xx status code
func (o *GetWorkspaceSchemaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace schema too many requests response has a 5xx status code
func (o *GetWorkspaceSchemaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace schema too many requests response a status code equal to that given
func (o *GetWorkspaceSchemaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get workspace schema too many requests response
func (o *GetWorkspaceSchemaTooManyRequests) Code() int {
	return 429
}

func (o *GetWorkspaceSchemaTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWorkspaceSchemaTooManyRequests) String() string {
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas/{schID}][%d] getWorkspaceSchemaTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWorkspaceSchemaTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceSchemaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
