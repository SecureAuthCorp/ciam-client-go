// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// UpdateSchemaReader is a Reader for the UpdateSchema structure.
type UpdateSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateSchemaConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateSchemaUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateSchemaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSchemaOK creates a UpdateSchemaOK with default headers values
func NewUpdateSchemaOK() *UpdateSchemaOK {
	return &UpdateSchemaOK{}
}

/* UpdateSchemaOK describes a response with status code 200, with default header values.

Schema
*/
type UpdateSchemaOK struct {
	Payload *models.Schema
}

func (o *UpdateSchemaOK) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaOK  %+v", 200, o.Payload)
}
func (o *UpdateSchemaOK) GetPayload() *models.Schema {
	return o.Payload
}

func (o *UpdateSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaBadRequest creates a UpdateSchemaBadRequest with default headers values
func NewUpdateSchemaBadRequest() *UpdateSchemaBadRequest {
	return &UpdateSchemaBadRequest{}
}

/* UpdateSchemaBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type UpdateSchemaBadRequest struct {
	Payload *models.Error
}

func (o *UpdateSchemaBadRequest) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateSchemaBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaUnauthorized creates a UpdateSchemaUnauthorized with default headers values
func NewUpdateSchemaUnauthorized() *UpdateSchemaUnauthorized {
	return &UpdateSchemaUnauthorized{}
}

/* UpdateSchemaUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type UpdateSchemaUnauthorized struct {
	Payload *models.Error
}

func (o *UpdateSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateSchemaUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaForbidden creates a UpdateSchemaForbidden with default headers values
func NewUpdateSchemaForbidden() *UpdateSchemaForbidden {
	return &UpdateSchemaForbidden{}
}

/* UpdateSchemaForbidden describes a response with status code 403, with default header values.

HttpError
*/
type UpdateSchemaForbidden struct {
	Payload *models.Error
}

func (o *UpdateSchemaForbidden) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaForbidden  %+v", 403, o.Payload)
}
func (o *UpdateSchemaForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaNotFound creates a UpdateSchemaNotFound with default headers values
func NewUpdateSchemaNotFound() *UpdateSchemaNotFound {
	return &UpdateSchemaNotFound{}
}

/* UpdateSchemaNotFound describes a response with status code 404, with default header values.

HttpError
*/
type UpdateSchemaNotFound struct {
	Payload *models.Error
}

func (o *UpdateSchemaNotFound) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaNotFound  %+v", 404, o.Payload)
}
func (o *UpdateSchemaNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaConflict creates a UpdateSchemaConflict with default headers values
func NewUpdateSchemaConflict() *UpdateSchemaConflict {
	return &UpdateSchemaConflict{}
}

/* UpdateSchemaConflict describes a response with status code 409, with default header values.

HttpError
*/
type UpdateSchemaConflict struct {
	Payload *models.Error
}

func (o *UpdateSchemaConflict) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaConflict  %+v", 409, o.Payload)
}
func (o *UpdateSchemaConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaUnprocessableEntity creates a UpdateSchemaUnprocessableEntity with default headers values
func NewUpdateSchemaUnprocessableEntity() *UpdateSchemaUnprocessableEntity {
	return &UpdateSchemaUnprocessableEntity{}
}

/* UpdateSchemaUnprocessableEntity describes a response with status code 422, with default header values.

HttpError
*/
type UpdateSchemaUnprocessableEntity struct {
	Payload *models.Error
}

func (o *UpdateSchemaUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *UpdateSchemaUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSchemaTooManyRequests creates a UpdateSchemaTooManyRequests with default headers values
func NewUpdateSchemaTooManyRequests() *UpdateSchemaTooManyRequests {
	return &UpdateSchemaTooManyRequests{}
}

/* UpdateSchemaTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type UpdateSchemaTooManyRequests struct {
	Payload *models.Error
}

func (o *UpdateSchemaTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /admin/schemas/{schID}][%d] updateSchemaTooManyRequests  %+v", 429, o.Payload)
}
func (o *UpdateSchemaTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateSchemaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
