// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// ListWorkspaceSchemasReader is a Reader for the ListWorkspaceSchemas structure.
type ListWorkspaceSchemasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListWorkspaceSchemasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListWorkspaceSchemasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListWorkspaceSchemasUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListWorkspaceSchemasForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListWorkspaceSchemasTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin/workspace/{wid}/schemas] listWorkspaceSchemas", response, response.Code())
	}
}

// NewListWorkspaceSchemasOK creates a ListWorkspaceSchemasOK with default headers values
func NewListWorkspaceSchemasOK() *ListWorkspaceSchemasOK {
	return &ListWorkspaceSchemasOK{}
}

/*
ListWorkspaceSchemasOK describes a response with status code 200, with default header values.

Schemas
*/
type ListWorkspaceSchemasOK struct {
	Payload *models.Schemas
}

// IsSuccess returns true when this list workspace schemas o k response has a 2xx status code
func (o *ListWorkspaceSchemasOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list workspace schemas o k response has a 3xx status code
func (o *ListWorkspaceSchemasOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace schemas o k response has a 4xx status code
func (o *ListWorkspaceSchemasOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list workspace schemas o k response has a 5xx status code
func (o *ListWorkspaceSchemasOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace schemas o k response a status code equal to that given
func (o *ListWorkspaceSchemasOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list workspace schemas o k response
func (o *ListWorkspaceSchemasOK) Code() int {
	return 200
}

func (o *ListWorkspaceSchemasOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasOK %s", 200, payload)
}

func (o *ListWorkspaceSchemasOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasOK %s", 200, payload)
}

func (o *ListWorkspaceSchemasOK) GetPayload() *models.Schemas {
	return o.Payload
}

func (o *ListWorkspaceSchemasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schemas)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceSchemasUnauthorized creates a ListWorkspaceSchemasUnauthorized with default headers values
func NewListWorkspaceSchemasUnauthorized() *ListWorkspaceSchemasUnauthorized {
	return &ListWorkspaceSchemasUnauthorized{}
}

/*
ListWorkspaceSchemasUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListWorkspaceSchemasUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace schemas unauthorized response has a 2xx status code
func (o *ListWorkspaceSchemasUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace schemas unauthorized response has a 3xx status code
func (o *ListWorkspaceSchemasUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace schemas unauthorized response has a 4xx status code
func (o *ListWorkspaceSchemasUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace schemas unauthorized response has a 5xx status code
func (o *ListWorkspaceSchemasUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace schemas unauthorized response a status code equal to that given
func (o *ListWorkspaceSchemasUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list workspace schemas unauthorized response
func (o *ListWorkspaceSchemasUnauthorized) Code() int {
	return 401
}

func (o *ListWorkspaceSchemasUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasUnauthorized %s", 401, payload)
}

func (o *ListWorkspaceSchemasUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasUnauthorized %s", 401, payload)
}

func (o *ListWorkspaceSchemasUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceSchemasUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceSchemasForbidden creates a ListWorkspaceSchemasForbidden with default headers values
func NewListWorkspaceSchemasForbidden() *ListWorkspaceSchemasForbidden {
	return &ListWorkspaceSchemasForbidden{}
}

/*
ListWorkspaceSchemasForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListWorkspaceSchemasForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace schemas forbidden response has a 2xx status code
func (o *ListWorkspaceSchemasForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace schemas forbidden response has a 3xx status code
func (o *ListWorkspaceSchemasForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace schemas forbidden response has a 4xx status code
func (o *ListWorkspaceSchemasForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace schemas forbidden response has a 5xx status code
func (o *ListWorkspaceSchemasForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace schemas forbidden response a status code equal to that given
func (o *ListWorkspaceSchemasForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list workspace schemas forbidden response
func (o *ListWorkspaceSchemasForbidden) Code() int {
	return 403
}

func (o *ListWorkspaceSchemasForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasForbidden %s", 403, payload)
}

func (o *ListWorkspaceSchemasForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasForbidden %s", 403, payload)
}

func (o *ListWorkspaceSchemasForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceSchemasForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceSchemasTooManyRequests creates a ListWorkspaceSchemasTooManyRequests with default headers values
func NewListWorkspaceSchemasTooManyRequests() *ListWorkspaceSchemasTooManyRequests {
	return &ListWorkspaceSchemasTooManyRequests{}
}

/*
ListWorkspaceSchemasTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListWorkspaceSchemasTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace schemas too many requests response has a 2xx status code
func (o *ListWorkspaceSchemasTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace schemas too many requests response has a 3xx status code
func (o *ListWorkspaceSchemasTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace schemas too many requests response has a 4xx status code
func (o *ListWorkspaceSchemasTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace schemas too many requests response has a 5xx status code
func (o *ListWorkspaceSchemasTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace schemas too many requests response a status code equal to that given
func (o *ListWorkspaceSchemasTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list workspace schemas too many requests response
func (o *ListWorkspaceSchemasTooManyRequests) Code() int {
	return 429
}

func (o *ListWorkspaceSchemasTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasTooManyRequests %s", 429, payload)
}

func (o *ListWorkspaceSchemasTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/workspace/{wid}/schemas][%d] listWorkspaceSchemasTooManyRequests %s", 429, payload)
}

func (o *ListWorkspaceSchemasTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceSchemasTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
