// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// GetSchemaReader is a Reader for the GetSchema structure.
type GetSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSchemaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSchemaOK creates a GetSchemaOK with default headers values
func NewGetSchemaOK() *GetSchemaOK {
	return &GetSchemaOK{}
}

/* GetSchemaOK describes a response with status code 200, with default header values.

Identity Schema
*/
type GetSchemaOK struct {
	Payload *models.Schema
}

func (o *GetSchemaOK) Error() string {
	return fmt.Sprintf("[GET /admin/schemas/{schID}][%d] getSchemaOK  %+v", 200, o.Payload)
}
func (o *GetSchemaOK) GetPayload() *models.Schema {
	return o.Payload
}

func (o *GetSchemaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaUnauthorized creates a GetSchemaUnauthorized with default headers values
func NewGetSchemaUnauthorized() *GetSchemaUnauthorized {
	return &GetSchemaUnauthorized{}
}

/* GetSchemaUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetSchemaUnauthorized struct {
	Payload *models.Error
}

func (o *GetSchemaUnauthorized) Error() string {
	return fmt.Sprintf("[GET /admin/schemas/{schID}][%d] getSchemaUnauthorized  %+v", 401, o.Payload)
}
func (o *GetSchemaUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaForbidden creates a GetSchemaForbidden with default headers values
func NewGetSchemaForbidden() *GetSchemaForbidden {
	return &GetSchemaForbidden{}
}

/* GetSchemaForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetSchemaForbidden struct {
	Payload *models.Error
}

func (o *GetSchemaForbidden) Error() string {
	return fmt.Sprintf("[GET /admin/schemas/{schID}][%d] getSchemaForbidden  %+v", 403, o.Payload)
}
func (o *GetSchemaForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaNotFound creates a GetSchemaNotFound with default headers values
func NewGetSchemaNotFound() *GetSchemaNotFound {
	return &GetSchemaNotFound{}
}

/* GetSchemaNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetSchemaNotFound struct {
	Payload *models.Error
}

func (o *GetSchemaNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/schemas/{schID}][%d] getSchemaNotFound  %+v", 404, o.Payload)
}
func (o *GetSchemaNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaTooManyRequests creates a GetSchemaTooManyRequests with default headers values
func NewGetSchemaTooManyRequests() *GetSchemaTooManyRequests {
	return &GetSchemaTooManyRequests{}
}

/* GetSchemaTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetSchemaTooManyRequests struct {
	Payload *models.Error
}

func (o *GetSchemaTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /admin/schemas/{schID}][%d] getSchemaTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetSchemaTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSchemaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
