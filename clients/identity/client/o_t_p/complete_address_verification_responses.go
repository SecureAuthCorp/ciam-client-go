// Code generated by go-swagger; DO NOT EDIT.

package o_t_p

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// CompleteAddressVerificationReader is a Reader for the CompleteAddressVerification structure.
type CompleteAddressVerificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CompleteAddressVerificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCompleteAddressVerificationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCompleteAddressVerificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCompleteAddressVerificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCompleteAddressVerificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCompleteAddressVerificationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCompleteAddressVerificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCompleteAddressVerificationNoContent creates a CompleteAddressVerificationNoContent with default headers values
func NewCompleteAddressVerificationNoContent() *CompleteAddressVerificationNoContent {
	return &CompleteAddressVerificationNoContent{}
}

/* CompleteAddressVerificationNoContent describes a response with status code 204, with default header values.

Request accepted
*/
type CompleteAddressVerificationNoContent struct {
}

func (o *CompleteAddressVerificationNoContent) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/address/verification/complete][%d] completeAddressVerificationNoContent ", 204)
}

func (o *CompleteAddressVerificationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteAddressVerificationBadRequest creates a CompleteAddressVerificationBadRequest with default headers values
func NewCompleteAddressVerificationBadRequest() *CompleteAddressVerificationBadRequest {
	return &CompleteAddressVerificationBadRequest{}
}

/* CompleteAddressVerificationBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type CompleteAddressVerificationBadRequest struct {
	Payload *models.Error
}

func (o *CompleteAddressVerificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/address/verification/complete][%d] completeAddressVerificationBadRequest  %+v", 400, o.Payload)
}
func (o *CompleteAddressVerificationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddressVerificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteAddressVerificationUnauthorized creates a CompleteAddressVerificationUnauthorized with default headers values
func NewCompleteAddressVerificationUnauthorized() *CompleteAddressVerificationUnauthorized {
	return &CompleteAddressVerificationUnauthorized{}
}

/* CompleteAddressVerificationUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type CompleteAddressVerificationUnauthorized struct {
	Payload *models.Error
}

func (o *CompleteAddressVerificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/address/verification/complete][%d] completeAddressVerificationUnauthorized  %+v", 401, o.Payload)
}
func (o *CompleteAddressVerificationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddressVerificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteAddressVerificationNotFound creates a CompleteAddressVerificationNotFound with default headers values
func NewCompleteAddressVerificationNotFound() *CompleteAddressVerificationNotFound {
	return &CompleteAddressVerificationNotFound{}
}

/* CompleteAddressVerificationNotFound describes a response with status code 404, with default header values.

HttpError
*/
type CompleteAddressVerificationNotFound struct {
	Payload *models.Error
}

func (o *CompleteAddressVerificationNotFound) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/address/verification/complete][%d] completeAddressVerificationNotFound  %+v", 404, o.Payload)
}
func (o *CompleteAddressVerificationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddressVerificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteAddressVerificationConflict creates a CompleteAddressVerificationConflict with default headers values
func NewCompleteAddressVerificationConflict() *CompleteAddressVerificationConflict {
	return &CompleteAddressVerificationConflict{}
}

/* CompleteAddressVerificationConflict describes a response with status code 409, with default header values.

HttpError
*/
type CompleteAddressVerificationConflict struct {
	Payload *models.Error
}

func (o *CompleteAddressVerificationConflict) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/address/verification/complete][%d] completeAddressVerificationConflict  %+v", 409, o.Payload)
}
func (o *CompleteAddressVerificationConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddressVerificationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteAddressVerificationUnprocessableEntity creates a CompleteAddressVerificationUnprocessableEntity with default headers values
func NewCompleteAddressVerificationUnprocessableEntity() *CompleteAddressVerificationUnprocessableEntity {
	return &CompleteAddressVerificationUnprocessableEntity{}
}

/* CompleteAddressVerificationUnprocessableEntity describes a response with status code 422, with default header values.

HttpError
*/
type CompleteAddressVerificationUnprocessableEntity struct {
	Payload *models.Error
}

func (o *CompleteAddressVerificationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/address/verification/complete][%d] completeAddressVerificationUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *CompleteAddressVerificationUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddressVerificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
