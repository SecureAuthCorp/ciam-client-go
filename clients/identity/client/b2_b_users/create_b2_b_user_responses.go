// Code generated by go-swagger; DO NOT EDIT.

package b2_b_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// CreateB2BUserReader is a Reader for the CreateB2BUser structure.
type CreateB2BUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateB2BUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateB2BUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateB2BUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateB2BUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateB2BUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateB2BUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateB2BUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateB2BUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateB2BUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /admin/b2b/pools/{ipID}/users] createB2BUser", response, response.Code())
	}
}

// NewCreateB2BUserCreated creates a CreateB2BUserCreated with default headers values
func NewCreateB2BUserCreated() *CreateB2BUserCreated {
	return &CreateB2BUserCreated{}
}

/*
CreateB2BUserCreated describes a response with status code 201, with default header values.

User
*/
type CreateB2BUserCreated struct {
	Payload *models.BaseUserWithData
}

// IsSuccess returns true when this create b2 b user created response has a 2xx status code
func (o *CreateB2BUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create b2 b user created response has a 3xx status code
func (o *CreateB2BUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user created response has a 4xx status code
func (o *CreateB2BUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create b2 b user created response has a 5xx status code
func (o *CreateB2BUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user created response a status code equal to that given
func (o *CreateB2BUserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create b2 b user created response
func (o *CreateB2BUserCreated) Code() int {
	return 201
}

func (o *CreateB2BUserCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserCreated %s", 201, payload)
}

func (o *CreateB2BUserCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserCreated %s", 201, payload)
}

func (o *CreateB2BUserCreated) GetPayload() *models.BaseUserWithData {
	return o.Payload
}

func (o *CreateB2BUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseUserWithData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserBadRequest creates a CreateB2BUserBadRequest with default headers values
func NewCreateB2BUserBadRequest() *CreateB2BUserBadRequest {
	return &CreateB2BUserBadRequest{}
}

/*
CreateB2BUserBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateB2BUserBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user bad request response has a 2xx status code
func (o *CreateB2BUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user bad request response has a 3xx status code
func (o *CreateB2BUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user bad request response has a 4xx status code
func (o *CreateB2BUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user bad request response has a 5xx status code
func (o *CreateB2BUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user bad request response a status code equal to that given
func (o *CreateB2BUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create b2 b user bad request response
func (o *CreateB2BUserBadRequest) Code() int {
	return 400
}

func (o *CreateB2BUserBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserBadRequest %s", 400, payload)
}

func (o *CreateB2BUserBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserBadRequest %s", 400, payload)
}

func (o *CreateB2BUserBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserUnauthorized creates a CreateB2BUserUnauthorized with default headers values
func NewCreateB2BUserUnauthorized() *CreateB2BUserUnauthorized {
	return &CreateB2BUserUnauthorized{}
}

/*
CreateB2BUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateB2BUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user unauthorized response has a 2xx status code
func (o *CreateB2BUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user unauthorized response has a 3xx status code
func (o *CreateB2BUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user unauthorized response has a 4xx status code
func (o *CreateB2BUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user unauthorized response has a 5xx status code
func (o *CreateB2BUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user unauthorized response a status code equal to that given
func (o *CreateB2BUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create b2 b user unauthorized response
func (o *CreateB2BUserUnauthorized) Code() int {
	return 401
}

func (o *CreateB2BUserUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserUnauthorized %s", 401, payload)
}

func (o *CreateB2BUserUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserUnauthorized %s", 401, payload)
}

func (o *CreateB2BUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserForbidden creates a CreateB2BUserForbidden with default headers values
func NewCreateB2BUserForbidden() *CreateB2BUserForbidden {
	return &CreateB2BUserForbidden{}
}

/*
CreateB2BUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateB2BUserForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user forbidden response has a 2xx status code
func (o *CreateB2BUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user forbidden response has a 3xx status code
func (o *CreateB2BUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user forbidden response has a 4xx status code
func (o *CreateB2BUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user forbidden response has a 5xx status code
func (o *CreateB2BUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user forbidden response a status code equal to that given
func (o *CreateB2BUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create b2 b user forbidden response
func (o *CreateB2BUserForbidden) Code() int {
	return 403
}

func (o *CreateB2BUserForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserForbidden %s", 403, payload)
}

func (o *CreateB2BUserForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserForbidden %s", 403, payload)
}

func (o *CreateB2BUserForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserNotFound creates a CreateB2BUserNotFound with default headers values
func NewCreateB2BUserNotFound() *CreateB2BUserNotFound {
	return &CreateB2BUserNotFound{}
}

/*
CreateB2BUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateB2BUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user not found response has a 2xx status code
func (o *CreateB2BUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user not found response has a 3xx status code
func (o *CreateB2BUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user not found response has a 4xx status code
func (o *CreateB2BUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user not found response has a 5xx status code
func (o *CreateB2BUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user not found response a status code equal to that given
func (o *CreateB2BUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create b2 b user not found response
func (o *CreateB2BUserNotFound) Code() int {
	return 404
}

func (o *CreateB2BUserNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserNotFound %s", 404, payload)
}

func (o *CreateB2BUserNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserNotFound %s", 404, payload)
}

func (o *CreateB2BUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserConflict creates a CreateB2BUserConflict with default headers values
func NewCreateB2BUserConflict() *CreateB2BUserConflict {
	return &CreateB2BUserConflict{}
}

/*
CreateB2BUserConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateB2BUserConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user conflict response has a 2xx status code
func (o *CreateB2BUserConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user conflict response has a 3xx status code
func (o *CreateB2BUserConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user conflict response has a 4xx status code
func (o *CreateB2BUserConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user conflict response has a 5xx status code
func (o *CreateB2BUserConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user conflict response a status code equal to that given
func (o *CreateB2BUserConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create b2 b user conflict response
func (o *CreateB2BUserConflict) Code() int {
	return 409
}

func (o *CreateB2BUserConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserConflict %s", 409, payload)
}

func (o *CreateB2BUserConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserConflict %s", 409, payload)
}

func (o *CreateB2BUserConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserUnprocessableEntity creates a CreateB2BUserUnprocessableEntity with default headers values
func NewCreateB2BUserUnprocessableEntity() *CreateB2BUserUnprocessableEntity {
	return &CreateB2BUserUnprocessableEntity{}
}

/*
CreateB2BUserUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateB2BUserUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user unprocessable entity response has a 2xx status code
func (o *CreateB2BUserUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user unprocessable entity response has a 3xx status code
func (o *CreateB2BUserUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user unprocessable entity response has a 4xx status code
func (o *CreateB2BUserUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user unprocessable entity response has a 5xx status code
func (o *CreateB2BUserUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user unprocessable entity response a status code equal to that given
func (o *CreateB2BUserUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create b2 b user unprocessable entity response
func (o *CreateB2BUserUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateB2BUserUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserUnprocessableEntity %s", 422, payload)
}

func (o *CreateB2BUserUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserUnprocessableEntity %s", 422, payload)
}

func (o *CreateB2BUserUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateB2BUserTooManyRequests creates a CreateB2BUserTooManyRequests with default headers values
func NewCreateB2BUserTooManyRequests() *CreateB2BUserTooManyRequests {
	return &CreateB2BUserTooManyRequests{}
}

/*
CreateB2BUserTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateB2BUserTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create b2 b user too many requests response has a 2xx status code
func (o *CreateB2BUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create b2 b user too many requests response has a 3xx status code
func (o *CreateB2BUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create b2 b user too many requests response has a 4xx status code
func (o *CreateB2BUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create b2 b user too many requests response has a 5xx status code
func (o *CreateB2BUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create b2 b user too many requests response a status code equal to that given
func (o *CreateB2BUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create b2 b user too many requests response
func (o *CreateB2BUserTooManyRequests) Code() int {
	return 429
}

func (o *CreateB2BUserTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserTooManyRequests %s", 429, payload)
}

func (o *CreateB2BUserTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /admin/b2b/pools/{ipID}/users][%d] createB2BUserTooManyRequests %s", 429, payload)
}

func (o *CreateB2BUserTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateB2BUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
