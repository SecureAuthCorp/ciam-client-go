// Code generated by go-swagger; DO NOT EDIT.

package b2_b_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// GetB2BUserReader is a Reader for the GetB2BUser structure.
type GetB2BUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetB2BUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetB2BUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetB2BUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetB2BUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetB2BUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetB2BUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin/b2b/pools/{ipID}/users/{userID}] getB2BUser", response, response.Code())
	}
}

// NewGetB2BUserOK creates a GetB2BUserOK with default headers values
func NewGetB2BUserOK() *GetB2BUserOK {
	return &GetB2BUserOK{}
}

/*
GetB2BUserOK describes a response with status code 200, with default header values.

User
*/
type GetB2BUserOK struct {
	Payload *models.BaseUserWithData
}

// IsSuccess returns true when this get b2 b user o k response has a 2xx status code
func (o *GetB2BUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get b2 b user o k response has a 3xx status code
func (o *GetB2BUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get b2 b user o k response has a 4xx status code
func (o *GetB2BUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get b2 b user o k response has a 5xx status code
func (o *GetB2BUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get b2 b user o k response a status code equal to that given
func (o *GetB2BUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get b2 b user o k response
func (o *GetB2BUserOK) Code() int {
	return 200
}

func (o *GetB2BUserOK) Error() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserOK  %+v", 200, o.Payload)
}

func (o *GetB2BUserOK) String() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserOK  %+v", 200, o.Payload)
}

func (o *GetB2BUserOK) GetPayload() *models.BaseUserWithData {
	return o.Payload
}

func (o *GetB2BUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseUserWithData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetB2BUserUnauthorized creates a GetB2BUserUnauthorized with default headers values
func NewGetB2BUserUnauthorized() *GetB2BUserUnauthorized {
	return &GetB2BUserUnauthorized{}
}

/*
GetB2BUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetB2BUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get b2 b user unauthorized response has a 2xx status code
func (o *GetB2BUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get b2 b user unauthorized response has a 3xx status code
func (o *GetB2BUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get b2 b user unauthorized response has a 4xx status code
func (o *GetB2BUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get b2 b user unauthorized response has a 5xx status code
func (o *GetB2BUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get b2 b user unauthorized response a status code equal to that given
func (o *GetB2BUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get b2 b user unauthorized response
func (o *GetB2BUserUnauthorized) Code() int {
	return 401
}

func (o *GetB2BUserUnauthorized) Error() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetB2BUserUnauthorized) String() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserUnauthorized  %+v", 401, o.Payload)
}

func (o *GetB2BUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetB2BUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetB2BUserForbidden creates a GetB2BUserForbidden with default headers values
func NewGetB2BUserForbidden() *GetB2BUserForbidden {
	return &GetB2BUserForbidden{}
}

/*
GetB2BUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetB2BUserForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get b2 b user forbidden response has a 2xx status code
func (o *GetB2BUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get b2 b user forbidden response has a 3xx status code
func (o *GetB2BUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get b2 b user forbidden response has a 4xx status code
func (o *GetB2BUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get b2 b user forbidden response has a 5xx status code
func (o *GetB2BUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get b2 b user forbidden response a status code equal to that given
func (o *GetB2BUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get b2 b user forbidden response
func (o *GetB2BUserForbidden) Code() int {
	return 403
}

func (o *GetB2BUserForbidden) Error() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserForbidden  %+v", 403, o.Payload)
}

func (o *GetB2BUserForbidden) String() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserForbidden  %+v", 403, o.Payload)
}

func (o *GetB2BUserForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetB2BUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetB2BUserNotFound creates a GetB2BUserNotFound with default headers values
func NewGetB2BUserNotFound() *GetB2BUserNotFound {
	return &GetB2BUserNotFound{}
}

/*
GetB2BUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetB2BUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get b2 b user not found response has a 2xx status code
func (o *GetB2BUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get b2 b user not found response has a 3xx status code
func (o *GetB2BUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get b2 b user not found response has a 4xx status code
func (o *GetB2BUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get b2 b user not found response has a 5xx status code
func (o *GetB2BUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get b2 b user not found response a status code equal to that given
func (o *GetB2BUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get b2 b user not found response
func (o *GetB2BUserNotFound) Code() int {
	return 404
}

func (o *GetB2BUserNotFound) Error() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserNotFound  %+v", 404, o.Payload)
}

func (o *GetB2BUserNotFound) String() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserNotFound  %+v", 404, o.Payload)
}

func (o *GetB2BUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetB2BUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetB2BUserTooManyRequests creates a GetB2BUserTooManyRequests with default headers values
func NewGetB2BUserTooManyRequests() *GetB2BUserTooManyRequests {
	return &GetB2BUserTooManyRequests{}
}

/*
GetB2BUserTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetB2BUserTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get b2 b user too many requests response has a 2xx status code
func (o *GetB2BUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get b2 b user too many requests response has a 3xx status code
func (o *GetB2BUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get b2 b user too many requests response has a 4xx status code
func (o *GetB2BUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get b2 b user too many requests response has a 5xx status code
func (o *GetB2BUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get b2 b user too many requests response a status code equal to that given
func (o *GetB2BUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get b2 b user too many requests response
func (o *GetB2BUserTooManyRequests) Code() int {
	return 429
}

func (o *GetB2BUserTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetB2BUserTooManyRequests) String() string {
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users/{userID}][%d] getB2BUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetB2BUserTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetB2BUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
