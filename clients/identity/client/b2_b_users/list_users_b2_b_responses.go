// Code generated by go-swagger; DO NOT EDIT.

package b2_b_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identity/models"
)

// ListUsersB2BReader is a Reader for the ListUsersB2B structure.
type ListUsersB2BReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUsersB2BReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUsersB2BOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListUsersB2BBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListUsersB2BUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUsersB2BForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUsersB2BNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListUsersB2BUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUsersB2BTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /admin/b2b/pools/{ipID}/users] listUsersB2B", response, response.Code())
	}
}

// NewListUsersB2BOK creates a ListUsersB2BOK with default headers values
func NewListUsersB2BOK() *ListUsersB2BOK {
	return &ListUsersB2BOK{}
}

/*
ListUsersB2BOK describes a response with status code 200, with default header values.

Identity B2B Users
*/
type ListUsersB2BOK struct {
	Payload *models.B2BUsers
}

// IsSuccess returns true when this list users b2 b o k response has a 2xx status code
func (o *ListUsersB2BOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list users b2 b o k response has a 3xx status code
func (o *ListUsersB2BOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b o k response has a 4xx status code
func (o *ListUsersB2BOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list users b2 b o k response has a 5xx status code
func (o *ListUsersB2BOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b o k response a status code equal to that given
func (o *ListUsersB2BOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list users b2 b o k response
func (o *ListUsersB2BOK) Code() int {
	return 200
}

func (o *ListUsersB2BOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BOK %s", 200, payload)
}

func (o *ListUsersB2BOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BOK %s", 200, payload)
}

func (o *ListUsersB2BOK) GetPayload() *models.B2BUsers {
	return o.Payload
}

func (o *ListUsersB2BOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.B2BUsers)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsersB2BBadRequest creates a ListUsersB2BBadRequest with default headers values
func NewListUsersB2BBadRequest() *ListUsersB2BBadRequest {
	return &ListUsersB2BBadRequest{}
}

/*
ListUsersB2BBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListUsersB2BBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list users b2 b bad request response has a 2xx status code
func (o *ListUsersB2BBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users b2 b bad request response has a 3xx status code
func (o *ListUsersB2BBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b bad request response has a 4xx status code
func (o *ListUsersB2BBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users b2 b bad request response has a 5xx status code
func (o *ListUsersB2BBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b bad request response a status code equal to that given
func (o *ListUsersB2BBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list users b2 b bad request response
func (o *ListUsersB2BBadRequest) Code() int {
	return 400
}

func (o *ListUsersB2BBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BBadRequest %s", 400, payload)
}

func (o *ListUsersB2BBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BBadRequest %s", 400, payload)
}

func (o *ListUsersB2BBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUsersB2BBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsersB2BUnauthorized creates a ListUsersB2BUnauthorized with default headers values
func NewListUsersB2BUnauthorized() *ListUsersB2BUnauthorized {
	return &ListUsersB2BUnauthorized{}
}

/*
ListUsersB2BUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUsersB2BUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list users b2 b unauthorized response has a 2xx status code
func (o *ListUsersB2BUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users b2 b unauthorized response has a 3xx status code
func (o *ListUsersB2BUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b unauthorized response has a 4xx status code
func (o *ListUsersB2BUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users b2 b unauthorized response has a 5xx status code
func (o *ListUsersB2BUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b unauthorized response a status code equal to that given
func (o *ListUsersB2BUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list users b2 b unauthorized response
func (o *ListUsersB2BUnauthorized) Code() int {
	return 401
}

func (o *ListUsersB2BUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BUnauthorized %s", 401, payload)
}

func (o *ListUsersB2BUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BUnauthorized %s", 401, payload)
}

func (o *ListUsersB2BUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUsersB2BUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsersB2BForbidden creates a ListUsersB2BForbidden with default headers values
func NewListUsersB2BForbidden() *ListUsersB2BForbidden {
	return &ListUsersB2BForbidden{}
}

/*
ListUsersB2BForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUsersB2BForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list users b2 b forbidden response has a 2xx status code
func (o *ListUsersB2BForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users b2 b forbidden response has a 3xx status code
func (o *ListUsersB2BForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b forbidden response has a 4xx status code
func (o *ListUsersB2BForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users b2 b forbidden response has a 5xx status code
func (o *ListUsersB2BForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b forbidden response a status code equal to that given
func (o *ListUsersB2BForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list users b2 b forbidden response
func (o *ListUsersB2BForbidden) Code() int {
	return 403
}

func (o *ListUsersB2BForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BForbidden %s", 403, payload)
}

func (o *ListUsersB2BForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BForbidden %s", 403, payload)
}

func (o *ListUsersB2BForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUsersB2BForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsersB2BNotFound creates a ListUsersB2BNotFound with default headers values
func NewListUsersB2BNotFound() *ListUsersB2BNotFound {
	return &ListUsersB2BNotFound{}
}

/*
ListUsersB2BNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUsersB2BNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list users b2 b not found response has a 2xx status code
func (o *ListUsersB2BNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users b2 b not found response has a 3xx status code
func (o *ListUsersB2BNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b not found response has a 4xx status code
func (o *ListUsersB2BNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users b2 b not found response has a 5xx status code
func (o *ListUsersB2BNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b not found response a status code equal to that given
func (o *ListUsersB2BNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list users b2 b not found response
func (o *ListUsersB2BNotFound) Code() int {
	return 404
}

func (o *ListUsersB2BNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BNotFound %s", 404, payload)
}

func (o *ListUsersB2BNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BNotFound %s", 404, payload)
}

func (o *ListUsersB2BNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUsersB2BNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsersB2BUnprocessableEntity creates a ListUsersB2BUnprocessableEntity with default headers values
func NewListUsersB2BUnprocessableEntity() *ListUsersB2BUnprocessableEntity {
	return &ListUsersB2BUnprocessableEntity{}
}

/*
ListUsersB2BUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ListUsersB2BUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this list users b2 b unprocessable entity response has a 2xx status code
func (o *ListUsersB2BUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users b2 b unprocessable entity response has a 3xx status code
func (o *ListUsersB2BUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b unprocessable entity response has a 4xx status code
func (o *ListUsersB2BUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users b2 b unprocessable entity response has a 5xx status code
func (o *ListUsersB2BUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b unprocessable entity response a status code equal to that given
func (o *ListUsersB2BUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list users b2 b unprocessable entity response
func (o *ListUsersB2BUnprocessableEntity) Code() int {
	return 422
}

func (o *ListUsersB2BUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BUnprocessableEntity %s", 422, payload)
}

func (o *ListUsersB2BUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BUnprocessableEntity %s", 422, payload)
}

func (o *ListUsersB2BUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUsersB2BUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUsersB2BTooManyRequests creates a ListUsersB2BTooManyRequests with default headers values
func NewListUsersB2BTooManyRequests() *ListUsersB2BTooManyRequests {
	return &ListUsersB2BTooManyRequests{}
}

/*
ListUsersB2BTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUsersB2BTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list users b2 b too many requests response has a 2xx status code
func (o *ListUsersB2BTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list users b2 b too many requests response has a 3xx status code
func (o *ListUsersB2BTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list users b2 b too many requests response has a 4xx status code
func (o *ListUsersB2BTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list users b2 b too many requests response has a 5xx status code
func (o *ListUsersB2BTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list users b2 b too many requests response a status code equal to that given
func (o *ListUsersB2BTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list users b2 b too many requests response
func (o *ListUsersB2BTooManyRequests) Code() int {
	return 429
}

func (o *ListUsersB2BTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BTooManyRequests %s", 429, payload)
}

func (o *ListUsersB2BTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /admin/b2b/pools/{ipID}/users][%d] listUsersB2BTooManyRequests %s", 429, payload)
}

func (o *ListUsersB2BTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUsersB2BTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
