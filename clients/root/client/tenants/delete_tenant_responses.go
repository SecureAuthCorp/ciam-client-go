// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/root/models"
)

// DeleteTenantReader is a Reader for the DeleteTenant structure.
type DeleteTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTenantNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteTenantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTenantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTenantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteTenantTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTenantNoContent creates a DeleteTenantNoContent with default headers values
func NewDeleteTenantNoContent() *DeleteTenantNoContent {
	return &DeleteTenantNoContent{}
}

/*
DeleteTenantNoContent describes a response with status code 204, with default header values.

	Tenant has been deleted
*/
type DeleteTenantNoContent struct {
}

// IsSuccess returns true when this delete tenant no content response has a 2xx status code
func (o *DeleteTenantNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete tenant no content response has a 3xx status code
func (o *DeleteTenantNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tenant no content response has a 4xx status code
func (o *DeleteTenantNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tenant no content response has a 5xx status code
func (o *DeleteTenantNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tenant no content response a status code equal to that given
func (o *DeleteTenantNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete tenant no content response
func (o *DeleteTenantNoContent) Code() int {
	return 204
}

func (o *DeleteTenantNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantNoContent ", 204)
}

func (o *DeleteTenantNoContent) String() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantNoContent ", 204)
}

func (o *DeleteTenantNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTenantUnauthorized creates a DeleteTenantUnauthorized with default headers values
func NewDeleteTenantUnauthorized() *DeleteTenantUnauthorized {
	return &DeleteTenantUnauthorized{}
}

/*
DeleteTenantUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteTenantUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete tenant unauthorized response has a 2xx status code
func (o *DeleteTenantUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tenant unauthorized response has a 3xx status code
func (o *DeleteTenantUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tenant unauthorized response has a 4xx status code
func (o *DeleteTenantUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tenant unauthorized response has a 5xx status code
func (o *DeleteTenantUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tenant unauthorized response a status code equal to that given
func (o *DeleteTenantUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete tenant unauthorized response
func (o *DeleteTenantUnauthorized) Code() int {
	return 401
}

func (o *DeleteTenantUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTenantUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTenantUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTenantForbidden creates a DeleteTenantForbidden with default headers values
func NewDeleteTenantForbidden() *DeleteTenantForbidden {
	return &DeleteTenantForbidden{}
}

/*
DeleteTenantForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteTenantForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete tenant forbidden response has a 2xx status code
func (o *DeleteTenantForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tenant forbidden response has a 3xx status code
func (o *DeleteTenantForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tenant forbidden response has a 4xx status code
func (o *DeleteTenantForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tenant forbidden response has a 5xx status code
func (o *DeleteTenantForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tenant forbidden response a status code equal to that given
func (o *DeleteTenantForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete tenant forbidden response
func (o *DeleteTenantForbidden) Code() int {
	return 403
}

func (o *DeleteTenantForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTenantForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTenantForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTenantNotFound creates a DeleteTenantNotFound with default headers values
func NewDeleteTenantNotFound() *DeleteTenantNotFound {
	return &DeleteTenantNotFound{}
}

/*
DeleteTenantNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteTenantNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete tenant not found response has a 2xx status code
func (o *DeleteTenantNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tenant not found response has a 3xx status code
func (o *DeleteTenantNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tenant not found response has a 4xx status code
func (o *DeleteTenantNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tenant not found response has a 5xx status code
func (o *DeleteTenantNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tenant not found response a status code equal to that given
func (o *DeleteTenantNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete tenant not found response
func (o *DeleteTenantNotFound) Code() int {
	return 404
}

func (o *DeleteTenantNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTenantNotFound) String() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTenantNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTenantTooManyRequests creates a DeleteTenantTooManyRequests with default headers values
func NewDeleteTenantTooManyRequests() *DeleteTenantTooManyRequests {
	return &DeleteTenantTooManyRequests{}
}

/*
DeleteTenantTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteTenantTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete tenant too many requests response has a 2xx status code
func (o *DeleteTenantTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tenant too many requests response has a 3xx status code
func (o *DeleteTenantTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tenant too many requests response has a 4xx status code
func (o *DeleteTenantTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tenant too many requests response has a 5xx status code
func (o *DeleteTenantTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tenant too many requests response a status code equal to that given
func (o *DeleteTenantTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete tenant too many requests response
func (o *DeleteTenantTooManyRequests) Code() int {
	return 429
}

func (o *DeleteTenantTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTenantTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /api/system/tenants/{tid}][%d] deleteTenantTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTenantTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTenantTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
