// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/root/models"
)

// GetTenantReader is a Reader for the GetTenant structure.
type GetTenantReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTenantReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTenantOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTenantUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTenantForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTenantNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTenantTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/system/tenants/{tid}] getTenant", response, response.Code())
	}
}

// NewGetTenantOK creates a GetTenantOK with default headers values
func NewGetTenantOK() *GetTenantOK {
	return &GetTenantOK{}
}

/*
GetTenantOK describes a response with status code 200, with default header values.

Tenant
*/
type GetTenantOK struct {
	Payload *models.Tenant
}

// IsSuccess returns true when this get tenant o k response has a 2xx status code
func (o *GetTenantOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tenant o k response has a 3xx status code
func (o *GetTenantOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant o k response has a 4xx status code
func (o *GetTenantOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tenant o k response has a 5xx status code
func (o *GetTenantOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant o k response a status code equal to that given
func (o *GetTenantOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tenant o k response
func (o *GetTenantOK) Code() int {
	return 200
}

func (o *GetTenantOK) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantOK  %+v", 200, o.Payload)
}

func (o *GetTenantOK) String() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantOK  %+v", 200, o.Payload)
}

func (o *GetTenantOK) GetPayload() *models.Tenant {
	return o.Payload
}

func (o *GetTenantOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Tenant)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantUnauthorized creates a GetTenantUnauthorized with default headers values
func NewGetTenantUnauthorized() *GetTenantUnauthorized {
	return &GetTenantUnauthorized{}
}

/*
GetTenantUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTenantUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant unauthorized response has a 2xx status code
func (o *GetTenantUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant unauthorized response has a 3xx status code
func (o *GetTenantUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant unauthorized response has a 4xx status code
func (o *GetTenantUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant unauthorized response has a 5xx status code
func (o *GetTenantUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant unauthorized response a status code equal to that given
func (o *GetTenantUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tenant unauthorized response
func (o *GetTenantUnauthorized) Code() int {
	return 401
}

func (o *GetTenantUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTenantUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTenantUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantForbidden creates a GetTenantForbidden with default headers values
func NewGetTenantForbidden() *GetTenantForbidden {
	return &GetTenantForbidden{}
}

/*
GetTenantForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTenantForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant forbidden response has a 2xx status code
func (o *GetTenantForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant forbidden response has a 3xx status code
func (o *GetTenantForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant forbidden response has a 4xx status code
func (o *GetTenantForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant forbidden response has a 5xx status code
func (o *GetTenantForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant forbidden response a status code equal to that given
func (o *GetTenantForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get tenant forbidden response
func (o *GetTenantForbidden) Code() int {
	return 403
}

func (o *GetTenantForbidden) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantForbidden  %+v", 403, o.Payload)
}

func (o *GetTenantForbidden) String() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantForbidden  %+v", 403, o.Payload)
}

func (o *GetTenantForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantNotFound creates a GetTenantNotFound with default headers values
func NewGetTenantNotFound() *GetTenantNotFound {
	return &GetTenantNotFound{}
}

/*
GetTenantNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetTenantNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant not found response has a 2xx status code
func (o *GetTenantNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant not found response has a 3xx status code
func (o *GetTenantNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant not found response has a 4xx status code
func (o *GetTenantNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant not found response has a 5xx status code
func (o *GetTenantNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant not found response a status code equal to that given
func (o *GetTenantNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tenant not found response
func (o *GetTenantNotFound) Code() int {
	return 404
}

func (o *GetTenantNotFound) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantNotFound) String() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantTooManyRequests creates a GetTenantTooManyRequests with default headers values
func NewGetTenantTooManyRequests() *GetTenantTooManyRequests {
	return &GetTenantTooManyRequests{}
}

/*
GetTenantTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetTenantTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant too many requests response has a 2xx status code
func (o *GetTenantTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant too many requests response has a 3xx status code
func (o *GetTenantTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant too many requests response has a 4xx status code
func (o *GetTenantTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant too many requests response has a 5xx status code
func (o *GetTenantTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant too many requests response a status code equal to that given
func (o *GetTenantTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get tenant too many requests response
func (o *GetTenantTooManyRequests) Code() int {
	return 429
}

func (o *GetTenantTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTenantTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/system/tenants/{tid}][%d] getTenantTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTenantTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
