// Code generated by go-swagger; DO NOT EDIT.

package workforce

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/root/models"
)

// NewSetTenantWorkforceParams creates a new SetTenantWorkforceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetTenantWorkforceParams() *SetTenantWorkforceParams {
	return &SetTenantWorkforceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetTenantWorkforceParamsWithTimeout creates a new SetTenantWorkforceParams object
// with the ability to set a timeout on a request.
func NewSetTenantWorkforceParamsWithTimeout(timeout time.Duration) *SetTenantWorkforceParams {
	return &SetTenantWorkforceParams{
		timeout: timeout,
	}
}

// NewSetTenantWorkforceParamsWithContext creates a new SetTenantWorkforceParams object
// with the ability to set a context for a request.
func NewSetTenantWorkforceParamsWithContext(ctx context.Context) *SetTenantWorkforceParams {
	return &SetTenantWorkforceParams{
		Context: ctx,
	}
}

// NewSetTenantWorkforceParamsWithHTTPClient creates a new SetTenantWorkforceParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetTenantWorkforceParamsWithHTTPClient(client *http.Client) *SetTenantWorkforceParams {
	return &SetTenantWorkforceParams{
		HTTPClient: client,
	}
}

/*
SetTenantWorkforceParams contains all the parameters to send to the API endpoint

	for the set tenant workforce operation.

	Typically these are written to a http.Request.
*/
type SetTenantWorkforceParams struct {

	// SetTenantWorkforce.
	SetTenantWorkforce *models.WorkforceSettings

	/* Tid.

	   Tenant id

	   Default: "default"
	*/
	Tid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set tenant workforce params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetTenantWorkforceParams) WithDefaults() *SetTenantWorkforceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set tenant workforce params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetTenantWorkforceParams) SetDefaults() {
	var (
		tidDefault = string("default")
	)

	val := SetTenantWorkforceParams{
		Tid: tidDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the set tenant workforce params
func (o *SetTenantWorkforceParams) WithTimeout(timeout time.Duration) *SetTenantWorkforceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set tenant workforce params
func (o *SetTenantWorkforceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set tenant workforce params
func (o *SetTenantWorkforceParams) WithContext(ctx context.Context) *SetTenantWorkforceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set tenant workforce params
func (o *SetTenantWorkforceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set tenant workforce params
func (o *SetTenantWorkforceParams) WithHTTPClient(client *http.Client) *SetTenantWorkforceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set tenant workforce params
func (o *SetTenantWorkforceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSetTenantWorkforce adds the setTenantWorkforce to the set tenant workforce params
func (o *SetTenantWorkforceParams) WithSetTenantWorkforce(setTenantWorkforce *models.WorkforceSettings) *SetTenantWorkforceParams {
	o.SetSetTenantWorkforce(setTenantWorkforce)
	return o
}

// SetSetTenantWorkforce adds the setTenantWorkforce to the set tenant workforce params
func (o *SetTenantWorkforceParams) SetSetTenantWorkforce(setTenantWorkforce *models.WorkforceSettings) {
	o.SetTenantWorkforce = setTenantWorkforce
}

// WithTid adds the tid to the set tenant workforce params
func (o *SetTenantWorkforceParams) WithTid(tid string) *SetTenantWorkforceParams {
	o.SetTid(tid)
	return o
}

// SetTid adds the tid to the set tenant workforce params
func (o *SetTenantWorkforceParams) SetTid(tid string) {
	o.Tid = tid
}

// WriteToRequest writes these params to a swagger request
func (o *SetTenantWorkforceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.SetTenantWorkforce != nil {
		if err := r.SetBodyParam(o.SetTenantWorkforce); err != nil {
			return err
		}
	}

	// path param tid
	if err := r.SetPathParam("tid", o.Tid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
