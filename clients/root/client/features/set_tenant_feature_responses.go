// Code generated by go-swagger; DO NOT EDIT.

package features

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/root/models"
)

// SetTenantFeatureReader is a Reader for the SetTenantFeature structure.
type SetTenantFeatureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetTenantFeatureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSetTenantFeatureNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetTenantFeatureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetTenantFeatureUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetTenantFeatureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetTenantFeatureNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetTenantFeatureUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSetTenantFeatureTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/admin/tenants/{tid}/feature] setTenantFeature", response, response.Code())
	}
}

// NewSetTenantFeatureNoContent creates a SetTenantFeatureNoContent with default headers values
func NewSetTenantFeatureNoContent() *SetTenantFeatureNoContent {
	return &SetTenantFeatureNoContent{}
}

/*
SetTenantFeatureNoContent describes a response with status code 204, with default header values.

	tenant feature set
*/
type SetTenantFeatureNoContent struct {
}

// IsSuccess returns true when this set tenant feature no content response has a 2xx status code
func (o *SetTenantFeatureNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set tenant feature no content response has a 3xx status code
func (o *SetTenantFeatureNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature no content response has a 4xx status code
func (o *SetTenantFeatureNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this set tenant feature no content response has a 5xx status code
func (o *SetTenantFeatureNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature no content response a status code equal to that given
func (o *SetTenantFeatureNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the set tenant feature no content response
func (o *SetTenantFeatureNoContent) Code() int {
	return 204
}

func (o *SetTenantFeatureNoContent) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureNoContent ", 204)
}

func (o *SetTenantFeatureNoContent) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureNoContent ", 204)
}

func (o *SetTenantFeatureNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetTenantFeatureBadRequest creates a SetTenantFeatureBadRequest with default headers values
func NewSetTenantFeatureBadRequest() *SetTenantFeatureBadRequest {
	return &SetTenantFeatureBadRequest{}
}

/*
SetTenantFeatureBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SetTenantFeatureBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set tenant feature bad request response has a 2xx status code
func (o *SetTenantFeatureBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set tenant feature bad request response has a 3xx status code
func (o *SetTenantFeatureBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature bad request response has a 4xx status code
func (o *SetTenantFeatureBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set tenant feature bad request response has a 5xx status code
func (o *SetTenantFeatureBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature bad request response a status code equal to that given
func (o *SetTenantFeatureBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set tenant feature bad request response
func (o *SetTenantFeatureBadRequest) Code() int {
	return 400
}

func (o *SetTenantFeatureBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureBadRequest  %+v", 400, o.Payload)
}

func (o *SetTenantFeatureBadRequest) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureBadRequest  %+v", 400, o.Payload)
}

func (o *SetTenantFeatureBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTenantFeatureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTenantFeatureUnauthorized creates a SetTenantFeatureUnauthorized with default headers values
func NewSetTenantFeatureUnauthorized() *SetTenantFeatureUnauthorized {
	return &SetTenantFeatureUnauthorized{}
}

/*
SetTenantFeatureUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetTenantFeatureUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this set tenant feature unauthorized response has a 2xx status code
func (o *SetTenantFeatureUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set tenant feature unauthorized response has a 3xx status code
func (o *SetTenantFeatureUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature unauthorized response has a 4xx status code
func (o *SetTenantFeatureUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set tenant feature unauthorized response has a 5xx status code
func (o *SetTenantFeatureUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature unauthorized response a status code equal to that given
func (o *SetTenantFeatureUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set tenant feature unauthorized response
func (o *SetTenantFeatureUnauthorized) Code() int {
	return 401
}

func (o *SetTenantFeatureUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureUnauthorized  %+v", 401, o.Payload)
}

func (o *SetTenantFeatureUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureUnauthorized  %+v", 401, o.Payload)
}

func (o *SetTenantFeatureUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTenantFeatureUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTenantFeatureForbidden creates a SetTenantFeatureForbidden with default headers values
func NewSetTenantFeatureForbidden() *SetTenantFeatureForbidden {
	return &SetTenantFeatureForbidden{}
}

/*
SetTenantFeatureForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetTenantFeatureForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this set tenant feature forbidden response has a 2xx status code
func (o *SetTenantFeatureForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set tenant feature forbidden response has a 3xx status code
func (o *SetTenantFeatureForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature forbidden response has a 4xx status code
func (o *SetTenantFeatureForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set tenant feature forbidden response has a 5xx status code
func (o *SetTenantFeatureForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature forbidden response a status code equal to that given
func (o *SetTenantFeatureForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set tenant feature forbidden response
func (o *SetTenantFeatureForbidden) Code() int {
	return 403
}

func (o *SetTenantFeatureForbidden) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureForbidden  %+v", 403, o.Payload)
}

func (o *SetTenantFeatureForbidden) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureForbidden  %+v", 403, o.Payload)
}

func (o *SetTenantFeatureForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTenantFeatureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTenantFeatureNotFound creates a SetTenantFeatureNotFound with default headers values
func NewSetTenantFeatureNotFound() *SetTenantFeatureNotFound {
	return &SetTenantFeatureNotFound{}
}

/*
SetTenantFeatureNotFound describes a response with status code 404, with default header values.

Not found
*/
type SetTenantFeatureNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this set tenant feature not found response has a 2xx status code
func (o *SetTenantFeatureNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set tenant feature not found response has a 3xx status code
func (o *SetTenantFeatureNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature not found response has a 4xx status code
func (o *SetTenantFeatureNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set tenant feature not found response has a 5xx status code
func (o *SetTenantFeatureNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature not found response a status code equal to that given
func (o *SetTenantFeatureNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set tenant feature not found response
func (o *SetTenantFeatureNotFound) Code() int {
	return 404
}

func (o *SetTenantFeatureNotFound) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureNotFound  %+v", 404, o.Payload)
}

func (o *SetTenantFeatureNotFound) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureNotFound  %+v", 404, o.Payload)
}

func (o *SetTenantFeatureNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTenantFeatureNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTenantFeatureUnprocessableEntity creates a SetTenantFeatureUnprocessableEntity with default headers values
func NewSetTenantFeatureUnprocessableEntity() *SetTenantFeatureUnprocessableEntity {
	return &SetTenantFeatureUnprocessableEntity{}
}

/*
SetTenantFeatureUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SetTenantFeatureUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this set tenant feature unprocessable entity response has a 2xx status code
func (o *SetTenantFeatureUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set tenant feature unprocessable entity response has a 3xx status code
func (o *SetTenantFeatureUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature unprocessable entity response has a 4xx status code
func (o *SetTenantFeatureUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set tenant feature unprocessable entity response has a 5xx status code
func (o *SetTenantFeatureUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature unprocessable entity response a status code equal to that given
func (o *SetTenantFeatureUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set tenant feature unprocessable entity response
func (o *SetTenantFeatureUnprocessableEntity) Code() int {
	return 422
}

func (o *SetTenantFeatureUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SetTenantFeatureUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SetTenantFeatureUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTenantFeatureUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetTenantFeatureTooManyRequests creates a SetTenantFeatureTooManyRequests with default headers values
func NewSetTenantFeatureTooManyRequests() *SetTenantFeatureTooManyRequests {
	return &SetTenantFeatureTooManyRequests{}
}

/*
SetTenantFeatureTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SetTenantFeatureTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this set tenant feature too many requests response has a 2xx status code
func (o *SetTenantFeatureTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set tenant feature too many requests response has a 3xx status code
func (o *SetTenantFeatureTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set tenant feature too many requests response has a 4xx status code
func (o *SetTenantFeatureTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this set tenant feature too many requests response has a 5xx status code
func (o *SetTenantFeatureTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this set tenant feature too many requests response a status code equal to that given
func (o *SetTenantFeatureTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the set tenant feature too many requests response
func (o *SetTenantFeatureTooManyRequests) Code() int {
	return 429
}

func (o *SetTenantFeatureTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetTenantFeatureTooManyRequests) String() string {
	return fmt.Sprintf("[POST /api/admin/tenants/{tid}/feature][%d] setTenantFeatureTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetTenantFeatureTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetTenantFeatureTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
