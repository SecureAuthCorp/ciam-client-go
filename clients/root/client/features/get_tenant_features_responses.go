// Code generated by go-swagger; DO NOT EDIT.

package features

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/root/models"
)

// GetTenantFeaturesReader is a Reader for the GetTenantFeatures structure.
type GetTenantFeaturesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTenantFeaturesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTenantFeaturesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTenantFeaturesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTenantFeaturesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTenantFeaturesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetTenantFeaturesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTenantFeaturesOK creates a GetTenantFeaturesOK with default headers values
func NewGetTenantFeaturesOK() *GetTenantFeaturesOK {
	return &GetTenantFeaturesOK{}
}

/*
GetTenantFeaturesOK describes a response with status code 200, with default header values.

Get tenant features
*/
type GetTenantFeaturesOK struct {
	Payload *models.Features
}

// IsSuccess returns true when this get tenant features o k response has a 2xx status code
func (o *GetTenantFeaturesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tenant features o k response has a 3xx status code
func (o *GetTenantFeaturesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant features o k response has a 4xx status code
func (o *GetTenantFeaturesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tenant features o k response has a 5xx status code
func (o *GetTenantFeaturesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant features o k response a status code equal to that given
func (o *GetTenantFeaturesOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetTenantFeaturesOK) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesOK  %+v", 200, o.Payload)
}

func (o *GetTenantFeaturesOK) String() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesOK  %+v", 200, o.Payload)
}

func (o *GetTenantFeaturesOK) GetPayload() *models.Features {
	return o.Payload
}

func (o *GetTenantFeaturesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Features)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantFeaturesUnauthorized creates a GetTenantFeaturesUnauthorized with default headers values
func NewGetTenantFeaturesUnauthorized() *GetTenantFeaturesUnauthorized {
	return &GetTenantFeaturesUnauthorized{}
}

/*
GetTenantFeaturesUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetTenantFeaturesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant features unauthorized response has a 2xx status code
func (o *GetTenantFeaturesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant features unauthorized response has a 3xx status code
func (o *GetTenantFeaturesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant features unauthorized response has a 4xx status code
func (o *GetTenantFeaturesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant features unauthorized response has a 5xx status code
func (o *GetTenantFeaturesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant features unauthorized response a status code equal to that given
func (o *GetTenantFeaturesUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetTenantFeaturesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTenantFeaturesUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetTenantFeaturesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantFeaturesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantFeaturesForbidden creates a GetTenantFeaturesForbidden with default headers values
func NewGetTenantFeaturesForbidden() *GetTenantFeaturesForbidden {
	return &GetTenantFeaturesForbidden{}
}

/*
GetTenantFeaturesForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetTenantFeaturesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant features forbidden response has a 2xx status code
func (o *GetTenantFeaturesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant features forbidden response has a 3xx status code
func (o *GetTenantFeaturesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant features forbidden response has a 4xx status code
func (o *GetTenantFeaturesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant features forbidden response has a 5xx status code
func (o *GetTenantFeaturesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant features forbidden response a status code equal to that given
func (o *GetTenantFeaturesForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetTenantFeaturesForbidden) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesForbidden  %+v", 403, o.Payload)
}

func (o *GetTenantFeaturesForbidden) String() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesForbidden  %+v", 403, o.Payload)
}

func (o *GetTenantFeaturesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantFeaturesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantFeaturesNotFound creates a GetTenantFeaturesNotFound with default headers values
func NewGetTenantFeaturesNotFound() *GetTenantFeaturesNotFound {
	return &GetTenantFeaturesNotFound{}
}

/*
GetTenantFeaturesNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetTenantFeaturesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant features not found response has a 2xx status code
func (o *GetTenantFeaturesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant features not found response has a 3xx status code
func (o *GetTenantFeaturesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant features not found response has a 4xx status code
func (o *GetTenantFeaturesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant features not found response has a 5xx status code
func (o *GetTenantFeaturesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant features not found response a status code equal to that given
func (o *GetTenantFeaturesNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetTenantFeaturesNotFound) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantFeaturesNotFound) String() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantFeaturesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantFeaturesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantFeaturesTooManyRequests creates a GetTenantFeaturesTooManyRequests with default headers values
func NewGetTenantFeaturesTooManyRequests() *GetTenantFeaturesTooManyRequests {
	return &GetTenantFeaturesTooManyRequests{}
}

/*
GetTenantFeaturesTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetTenantFeaturesTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get tenant features too many requests response has a 2xx status code
func (o *GetTenantFeaturesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tenant features too many requests response has a 3xx status code
func (o *GetTenantFeaturesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tenant features too many requests response has a 4xx status code
func (o *GetTenantFeaturesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tenant features too many requests response has a 5xx status code
func (o *GetTenantFeaturesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get tenant features too many requests response a status code equal to that given
func (o *GetTenantFeaturesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetTenantFeaturesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTenantFeaturesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/admin/tenants/{tid}/features][%d] getTenantFeaturesTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetTenantFeaturesTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTenantFeaturesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
