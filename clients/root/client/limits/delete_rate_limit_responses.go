// Code generated by go-swagger; DO NOT EDIT.

package limits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/root/models"
)

// DeleteRateLimitReader is a Reader for the DeleteRateLimit structure.
type DeleteRateLimitReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRateLimitReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRateLimitNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteRateLimitUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteRateLimitForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRateLimitNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteRateLimitTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRateLimitNoContent creates a DeleteRateLimitNoContent with default headers values
func NewDeleteRateLimitNoContent() *DeleteRateLimitNoContent {
	return &DeleteRateLimitNoContent{}
}

/* DeleteRateLimitNoContent describes a response with status code 204, with default header values.

custom rate limit has been deleted
*/
type DeleteRateLimitNoContent struct {
}

func (o *DeleteRateLimitNoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/tenants/{tid}/rate-limits/{module}][%d] deleteRateLimitNoContent ", 204)
}

func (o *DeleteRateLimitNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRateLimitUnauthorized creates a DeleteRateLimitUnauthorized with default headers values
func NewDeleteRateLimitUnauthorized() *DeleteRateLimitUnauthorized {
	return &DeleteRateLimitUnauthorized{}
}

/* DeleteRateLimitUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type DeleteRateLimitUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteRateLimitUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/tenants/{tid}/rate-limits/{module}][%d] deleteRateLimitUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteRateLimitUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRateLimitUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRateLimitForbidden creates a DeleteRateLimitForbidden with default headers values
func NewDeleteRateLimitForbidden() *DeleteRateLimitForbidden {
	return &DeleteRateLimitForbidden{}
}

/* DeleteRateLimitForbidden describes a response with status code 403, with default header values.

HttpError
*/
type DeleteRateLimitForbidden struct {
	Payload *models.Error
}

func (o *DeleteRateLimitForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/tenants/{tid}/rate-limits/{module}][%d] deleteRateLimitForbidden  %+v", 403, o.Payload)
}
func (o *DeleteRateLimitForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRateLimitForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRateLimitNotFound creates a DeleteRateLimitNotFound with default headers values
func NewDeleteRateLimitNotFound() *DeleteRateLimitNotFound {
	return &DeleteRateLimitNotFound{}
}

/* DeleteRateLimitNotFound describes a response with status code 404, with default header values.

HttpError
*/
type DeleteRateLimitNotFound struct {
	Payload *models.Error
}

func (o *DeleteRateLimitNotFound) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/tenants/{tid}/rate-limits/{module}][%d] deleteRateLimitNotFound  %+v", 404, o.Payload)
}
func (o *DeleteRateLimitNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRateLimitNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRateLimitTooManyRequests creates a DeleteRateLimitTooManyRequests with default headers values
func NewDeleteRateLimitTooManyRequests() *DeleteRateLimitTooManyRequests {
	return &DeleteRateLimitTooManyRequests{}
}

/* DeleteRateLimitTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type DeleteRateLimitTooManyRequests struct {
	Payload *models.Error
}

func (o *DeleteRateLimitTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /api/admin/tenants/{tid}/rate-limits/{module}][%d] deleteRateLimitTooManyRequests  %+v", 429, o.Payload)
}
func (o *DeleteRateLimitTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRateLimitTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
