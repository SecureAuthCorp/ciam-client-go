// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GoogleWorkspaceSettings GoogleWorkspace IDP specific settings
//
// swagger:model GoogleWorkspaceSettings
type GoogleWorkspaceSettings struct {

	// The email of a super user which the service account will impersonate when listing groups
	// required if `fetch_groups` is set to `true`
	AdminEmail string `json:"admin_email,omitempty" yaml:"admin_email,omitempty"`

	// OAuth client application identifier
	// Example: client
	ClientID string `json:"client_id,omitempty" yaml:"client_id,omitempty"`

	// Fetch user groups
	FetchGroups bool `json:"fetch_groups,omitempty" yaml:"fetch_groups,omitempty"`

	// List of domains permitted for user authentication
	HostedDomains []string `json:"hosted_domains" yaml:"hosted_domains"`

	// An array of additional scopes your client requests
	// Example: ["email","profile","openid"]
	Scopes []string `json:"scopes" yaml:"scopes"`

	// Whether to send the identifier as a `login_hint` parameter to the IDP
	SendLoginHint bool `json:"send_login_hint,omitempty" yaml:"send_login_hint,omitempty"`
}

// Validate validates this google workspace settings
func (m *GoogleWorkspaceSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this google workspace settings based on context it is used
func (m *GoogleWorkspaceSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GoogleWorkspaceSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GoogleWorkspaceSettings) UnmarshalBinary(b []byte) error {
	var res GoogleWorkspaceSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
