// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Rfc6902PatchOperation rfc6902 patch operation
//
// swagger:model Rfc6902PatchOperation
type Rfc6902PatchOperation struct {

	// op
	// Enum: [add remove replace move copy test]
	Op string `json:"op,omitempty"`

	// path
	Path string `json:"path,omitempty"`

	// value
	Value interface{} `json:"value,omitempty"`
}

// Validate validates this rfc6902 patch operation
func (m *Rfc6902PatchOperation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var rfc6902PatchOperationTypeOpPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["add","remove","replace","move","copy","test"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rfc6902PatchOperationTypeOpPropEnum = append(rfc6902PatchOperationTypeOpPropEnum, v)
	}
}

const (

	// Rfc6902PatchOperationOpAdd captures enum value "add"
	Rfc6902PatchOperationOpAdd string = "add"

	// Rfc6902PatchOperationOpRemove captures enum value "remove"
	Rfc6902PatchOperationOpRemove string = "remove"

	// Rfc6902PatchOperationOpReplace captures enum value "replace"
	Rfc6902PatchOperationOpReplace string = "replace"

	// Rfc6902PatchOperationOpMove captures enum value "move"
	Rfc6902PatchOperationOpMove string = "move"

	// Rfc6902PatchOperationOpCopy captures enum value "copy"
	Rfc6902PatchOperationOpCopy string = "copy"

	// Rfc6902PatchOperationOpTest captures enum value "test"
	Rfc6902PatchOperationOpTest string = "test"
)

// prop value enum
func (m *Rfc6902PatchOperation) validateOpEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, rfc6902PatchOperationTypeOpPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Rfc6902PatchOperation) validateOp(formats strfmt.Registry) error {
	if swag.IsZero(m.Op) { // not required
		return nil
	}

	// value enum
	if err := m.validateOpEnum("op", "body", m.Op); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this rfc6902 patch operation based on context it is used
func (m *Rfc6902PatchOperation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Rfc6902PatchOperation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Rfc6902PatchOperation) UnmarshalBinary(b []byte) error {
	var res Rfc6902PatchOperation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
