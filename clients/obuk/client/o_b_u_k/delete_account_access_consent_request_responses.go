// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// DeleteAccountAccessConsentRequestReader is a Reader for the DeleteAccountAccessConsentRequest structure.
type DeleteAccountAccessConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccountAccessConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAccountAccessConsentRequestNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAccountAccessConsentRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAccountAccessConsentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAccountAccessConsentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteAccountAccessConsentRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDeleteAccountAccessConsentRequestNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteAccountAccessConsentRequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAccountAccessConsentRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAccountAccessConsentRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}] deleteAccountAccessConsentRequest", response, response.Code())
	}
}

// NewDeleteAccountAccessConsentRequestNoContent creates a DeleteAccountAccessConsentRequestNoContent with default headers values
func NewDeleteAccountAccessConsentRequestNoContent() *DeleteAccountAccessConsentRequestNoContent {
	return &DeleteAccountAccessConsentRequestNoContent{}
}

/*
DeleteAccountAccessConsentRequestNoContent describes a response with status code 204, with default header values.

	Consent has been deleted
*/
type DeleteAccountAccessConsentRequestNoContent struct {
}

// IsSuccess returns true when this delete account access consent request no content response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete account access consent request no content response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request no content response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete account access consent request no content response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request no content response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete account access consent request no content response
func (o *DeleteAccountAccessConsentRequestNoContent) Code() int {
	return 204
}

func (o *DeleteAccountAccessConsentRequestNoContent) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestNoContent", 204)
}

func (o *DeleteAccountAccessConsentRequestNoContent) String() string {
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestNoContent", 204)
}

func (o *DeleteAccountAccessConsentRequestNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAccountAccessConsentRequestBadRequest creates a DeleteAccountAccessConsentRequestBadRequest with default headers values
func NewDeleteAccountAccessConsentRequestBadRequest() *DeleteAccountAccessConsentRequestBadRequest {
	return &DeleteAccountAccessConsentRequestBadRequest{}
}

/*
DeleteAccountAccessConsentRequestBadRequest describes a response with status code 400, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request bad request response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request bad request response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request bad request response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request bad request response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request bad request response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete account access consent request bad request response
func (o *DeleteAccountAccessConsentRequestBadRequest) Code() int {
	return 400
}

func (o *DeleteAccountAccessConsentRequestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestBadRequest %s", 400, payload)
}

func (o *DeleteAccountAccessConsentRequestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestBadRequest %s", 400, payload)
}

func (o *DeleteAccountAccessConsentRequestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestUnauthorized creates a DeleteAccountAccessConsentRequestUnauthorized with default headers values
func NewDeleteAccountAccessConsentRequestUnauthorized() *DeleteAccountAccessConsentRequestUnauthorized {
	return &DeleteAccountAccessConsentRequestUnauthorized{}
}

/*
DeleteAccountAccessConsentRequestUnauthorized describes a response with status code 401, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request unauthorized response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request unauthorized response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request unauthorized response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request unauthorized response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request unauthorized response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete account access consent request unauthorized response
func (o *DeleteAccountAccessConsentRequestUnauthorized) Code() int {
	return 401
}

func (o *DeleteAccountAccessConsentRequestUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestUnauthorized %s", 401, payload)
}

func (o *DeleteAccountAccessConsentRequestUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestUnauthorized %s", 401, payload)
}

func (o *DeleteAccountAccessConsentRequestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestForbidden creates a DeleteAccountAccessConsentRequestForbidden with default headers values
func NewDeleteAccountAccessConsentRequestForbidden() *DeleteAccountAccessConsentRequestForbidden {
	return &DeleteAccountAccessConsentRequestForbidden{}
}

/*
DeleteAccountAccessConsentRequestForbidden describes a response with status code 403, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request forbidden response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request forbidden response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request forbidden response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request forbidden response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request forbidden response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete account access consent request forbidden response
func (o *DeleteAccountAccessConsentRequestForbidden) Code() int {
	return 403
}

func (o *DeleteAccountAccessConsentRequestForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestForbidden %s", 403, payload)
}

func (o *DeleteAccountAccessConsentRequestForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestForbidden %s", 403, payload)
}

func (o *DeleteAccountAccessConsentRequestForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestMethodNotAllowed creates a DeleteAccountAccessConsentRequestMethodNotAllowed with default headers values
func NewDeleteAccountAccessConsentRequestMethodNotAllowed() *DeleteAccountAccessConsentRequestMethodNotAllowed {
	return &DeleteAccountAccessConsentRequestMethodNotAllowed{}
}

/*
DeleteAccountAccessConsentRequestMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request method not allowed response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request method not allowed response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request method not allowed response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request method not allowed response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request method not allowed response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete account access consent request method not allowed response
func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestMethodNotAllowed %s", 405, payload)
}

func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestMethodNotAllowed %s", 405, payload)
}

func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestNotAcceptable creates a DeleteAccountAccessConsentRequestNotAcceptable with default headers values
func NewDeleteAccountAccessConsentRequestNotAcceptable() *DeleteAccountAccessConsentRequestNotAcceptable {
	return &DeleteAccountAccessConsentRequestNotAcceptable{}
}

/*
DeleteAccountAccessConsentRequestNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request not acceptable response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request not acceptable response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request not acceptable response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request not acceptable response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request not acceptable response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the delete account access consent request not acceptable response
func (o *DeleteAccountAccessConsentRequestNotAcceptable) Code() int {
	return 406
}

func (o *DeleteAccountAccessConsentRequestNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestNotAcceptable %s", 406, payload)
}

func (o *DeleteAccountAccessConsentRequestNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestNotAcceptable %s", 406, payload)
}

func (o *DeleteAccountAccessConsentRequestNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestUnsupportedMediaType creates a DeleteAccountAccessConsentRequestUnsupportedMediaType with default headers values
func NewDeleteAccountAccessConsentRequestUnsupportedMediaType() *DeleteAccountAccessConsentRequestUnsupportedMediaType {
	return &DeleteAccountAccessConsentRequestUnsupportedMediaType{}
}

/*
DeleteAccountAccessConsentRequestUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request unsupported media type response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request unsupported media type response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request unsupported media type response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request unsupported media type response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request unsupported media type response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the delete account access consent request unsupported media type response
func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) Code() int {
	return 415
}

func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestUnsupportedMediaType %s", 415, payload)
}

func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestUnsupportedMediaType %s", 415, payload)
}

func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestTooManyRequests creates a DeleteAccountAccessConsentRequestTooManyRequests with default headers values
func NewDeleteAccountAccessConsentRequestTooManyRequests() *DeleteAccountAccessConsentRequestTooManyRequests {
	return &DeleteAccountAccessConsentRequestTooManyRequests{}
}

/*
DeleteAccountAccessConsentRequestTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request too many requests response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request too many requests response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request too many requests response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete account access consent request too many requests response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete account access consent request too many requests response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete account access consent request too many requests response
func (o *DeleteAccountAccessConsentRequestTooManyRequests) Code() int {
	return 429
}

func (o *DeleteAccountAccessConsentRequestTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestTooManyRequests %s", 429, payload)
}

func (o *DeleteAccountAccessConsentRequestTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestTooManyRequests %s", 429, payload)
}

func (o *DeleteAccountAccessConsentRequestTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccountAccessConsentRequestInternalServerError creates a DeleteAccountAccessConsentRequestInternalServerError with default headers values
func NewDeleteAccountAccessConsentRequestInternalServerError() *DeleteAccountAccessConsentRequestInternalServerError {
	return &DeleteAccountAccessConsentRequestInternalServerError{}
}

/*
DeleteAccountAccessConsentRequestInternalServerError describes a response with status code 500, with default header values.

Error
*/
type DeleteAccountAccessConsentRequestInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this delete account access consent request internal server error response has a 2xx status code
func (o *DeleteAccountAccessConsentRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete account access consent request internal server error response has a 3xx status code
func (o *DeleteAccountAccessConsentRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete account access consent request internal server error response has a 4xx status code
func (o *DeleteAccountAccessConsentRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete account access consent request internal server error response has a 5xx status code
func (o *DeleteAccountAccessConsentRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete account access consent request internal server error response a status code equal to that given
func (o *DeleteAccountAccessConsentRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete account access consent request internal server error response
func (o *DeleteAccountAccessConsentRequestInternalServerError) Code() int {
	return 500
}

func (o *DeleteAccountAccessConsentRequestInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestInternalServerError %s", 500, payload)
}

func (o *DeleteAccountAccessConsentRequestInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /open-banking/v3.1/aisp/account-access-consents/{consentID}][%d] deleteAccountAccessConsentRequestInternalServerError %s", 500, payload)
}

func (o *DeleteAccountAccessConsentRequestInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *DeleteAccountAccessConsentRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
