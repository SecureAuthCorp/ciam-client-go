// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// GetDomesticScheduledPaymentConsentRequestReader is a Reader for the GetDomesticScheduledPaymentConsentRequest structure.
type GetDomesticScheduledPaymentConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomesticScheduledPaymentConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomesticScheduledPaymentConsentRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDomesticScheduledPaymentConsentRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDomesticScheduledPaymentConsentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomesticScheduledPaymentConsentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDomesticScheduledPaymentConsentRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetDomesticScheduledPaymentConsentRequestNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetDomesticScheduledPaymentConsentRequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDomesticScheduledPaymentConsentRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDomesticScheduledPaymentConsentRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}] getDomesticScheduledPaymentConsentRequest", response, response.Code())
	}
}

// NewGetDomesticScheduledPaymentConsentRequestOK creates a GetDomesticScheduledPaymentConsentRequestOK with default headers values
func NewGetDomesticScheduledPaymentConsentRequestOK() *GetDomesticScheduledPaymentConsentRequestOK {
	return &GetDomesticScheduledPaymentConsentRequestOK{}
}

/*
GetDomesticScheduledPaymentConsentRequestOK describes a response with status code 200, with default header values.

Domestic scheduled payment consent
*/
type GetDomesticScheduledPaymentConsentRequestOK struct {
	Payload *models.DomesticScheduledPaymentConsentResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request o k response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get domestic scheduled payment consent request o k response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request o k response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domestic scheduled payment consent request o k response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request o k response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get domestic scheduled payment consent request o k response
func (o *GetDomesticScheduledPaymentConsentRequestOK) Code() int {
	return 200
}

func (o *GetDomesticScheduledPaymentConsentRequestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestOK %s", 200, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestOK %s", 200, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestOK) GetPayload() *models.DomesticScheduledPaymentConsentResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomesticScheduledPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestBadRequest creates a GetDomesticScheduledPaymentConsentRequestBadRequest with default headers values
func NewGetDomesticScheduledPaymentConsentRequestBadRequest() *GetDomesticScheduledPaymentConsentRequestBadRequest {
	return &GetDomesticScheduledPaymentConsentRequestBadRequest{}
}

/*
GetDomesticScheduledPaymentConsentRequestBadRequest describes a response with status code 400, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request bad request response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request bad request response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request bad request response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request bad request response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request bad request response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get domestic scheduled payment consent request bad request response
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) Code() int {
	return 400
}

func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestBadRequest %s", 400, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestBadRequest %s", 400, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestUnauthorized creates a GetDomesticScheduledPaymentConsentRequestUnauthorized with default headers values
func NewGetDomesticScheduledPaymentConsentRequestUnauthorized() *GetDomesticScheduledPaymentConsentRequestUnauthorized {
	return &GetDomesticScheduledPaymentConsentRequestUnauthorized{}
}

/*
GetDomesticScheduledPaymentConsentRequestUnauthorized describes a response with status code 401, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request unauthorized response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request unauthorized response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request unauthorized response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request unauthorized response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request unauthorized response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get domestic scheduled payment consent request unauthorized response
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) Code() int {
	return 401
}

func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestUnauthorized %s", 401, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestUnauthorized %s", 401, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestForbidden creates a GetDomesticScheduledPaymentConsentRequestForbidden with default headers values
func NewGetDomesticScheduledPaymentConsentRequestForbidden() *GetDomesticScheduledPaymentConsentRequestForbidden {
	return &GetDomesticScheduledPaymentConsentRequestForbidden{}
}

/*
GetDomesticScheduledPaymentConsentRequestForbidden describes a response with status code 403, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request forbidden response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request forbidden response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request forbidden response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request forbidden response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request forbidden response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get domestic scheduled payment consent request forbidden response
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) Code() int {
	return 403
}

func (o *GetDomesticScheduledPaymentConsentRequestForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestForbidden %s", 403, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestForbidden %s", 403, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestMethodNotAllowed creates a GetDomesticScheduledPaymentConsentRequestMethodNotAllowed with default headers values
func NewGetDomesticScheduledPaymentConsentRequestMethodNotAllowed() *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed {
	return &GetDomesticScheduledPaymentConsentRequestMethodNotAllowed{}
}

/*
GetDomesticScheduledPaymentConsentRequestMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request method not allowed response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request method not allowed response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request method not allowed response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request method not allowed response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request method not allowed response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get domestic scheduled payment consent request method not allowed response
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) Code() int {
	return 405
}

func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestMethodNotAllowed %s", 405, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestMethodNotAllowed %s", 405, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestNotAcceptable creates a GetDomesticScheduledPaymentConsentRequestNotAcceptable with default headers values
func NewGetDomesticScheduledPaymentConsentRequestNotAcceptable() *GetDomesticScheduledPaymentConsentRequestNotAcceptable {
	return &GetDomesticScheduledPaymentConsentRequestNotAcceptable{}
}

/*
GetDomesticScheduledPaymentConsentRequestNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request not acceptable response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request not acceptable response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request not acceptable response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request not acceptable response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request not acceptable response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the get domestic scheduled payment consent request not acceptable response
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) Code() int {
	return 406
}

func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestNotAcceptable %s", 406, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestNotAcceptable %s", 406, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestUnsupportedMediaType creates a GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType with default headers values
func NewGetDomesticScheduledPaymentConsentRequestUnsupportedMediaType() *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType {
	return &GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType{}
}

/*
GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request unsupported media type response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request unsupported media type response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request unsupported media type response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request unsupported media type response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request unsupported media type response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the get domestic scheduled payment consent request unsupported media type response
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) Code() int {
	return 415
}

func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestUnsupportedMediaType %s", 415, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestUnsupportedMediaType %s", 415, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestTooManyRequests creates a GetDomesticScheduledPaymentConsentRequestTooManyRequests with default headers values
func NewGetDomesticScheduledPaymentConsentRequestTooManyRequests() *GetDomesticScheduledPaymentConsentRequestTooManyRequests {
	return &GetDomesticScheduledPaymentConsentRequestTooManyRequests{}
}

/*
GetDomesticScheduledPaymentConsentRequestTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request too many requests response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request too many requests response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request too many requests response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic scheduled payment consent request too many requests response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic scheduled payment consent request too many requests response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get domestic scheduled payment consent request too many requests response
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) Code() int {
	return 429
}

func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestTooManyRequests %s", 429, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestTooManyRequests %s", 429, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestInternalServerError creates a GetDomesticScheduledPaymentConsentRequestInternalServerError with default headers values
func NewGetDomesticScheduledPaymentConsentRequestInternalServerError() *GetDomesticScheduledPaymentConsentRequestInternalServerError {
	return &GetDomesticScheduledPaymentConsentRequestInternalServerError{}
}

/*
GetDomesticScheduledPaymentConsentRequestInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic scheduled payment consent request internal server error response has a 2xx status code
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic scheduled payment consent request internal server error response has a 3xx status code
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic scheduled payment consent request internal server error response has a 4xx status code
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domestic scheduled payment consent request internal server error response has a 5xx status code
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get domestic scheduled payment consent request internal server error response a status code equal to that given
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get domestic scheduled payment consent request internal server error response
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) Code() int {
	return 500
}

func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestInternalServerError %s", 500, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestInternalServerError %s", 500, payload)
}

func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
