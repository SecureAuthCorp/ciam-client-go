// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// GetDomesticPaymentConsentRequestReader is a Reader for the GetDomesticPaymentConsentRequest structure.
type GetDomesticPaymentConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomesticPaymentConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomesticPaymentConsentRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDomesticPaymentConsentRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDomesticPaymentConsentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomesticPaymentConsentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDomesticPaymentConsentRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetDomesticPaymentConsentRequestNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetDomesticPaymentConsentRequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDomesticPaymentConsentRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDomesticPaymentConsentRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDomesticPaymentConsentRequestOK creates a GetDomesticPaymentConsentRequestOK with default headers values
func NewGetDomesticPaymentConsentRequestOK() *GetDomesticPaymentConsentRequestOK {
	return &GetDomesticPaymentConsentRequestOK{}
}

/*
GetDomesticPaymentConsentRequestOK describes a response with status code 200, with default header values.

Domestic payment consent
*/
type GetDomesticPaymentConsentRequestOK struct {
	Payload *models.DomesticPaymentConsentResponse
}

// IsSuccess returns true when this get domestic payment consent request o k response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get domestic payment consent request o k response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request o k response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domestic payment consent request o k response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request o k response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get domestic payment consent request o k response
func (o *GetDomesticPaymentConsentRequestOK) Code() int {
	return 200
}

func (o *GetDomesticPaymentConsentRequestOK) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestOK  %+v", 200, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestOK) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestOK  %+v", 200, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestOK) GetPayload() *models.DomesticPaymentConsentResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomesticPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestBadRequest creates a GetDomesticPaymentConsentRequestBadRequest with default headers values
func NewGetDomesticPaymentConsentRequestBadRequest() *GetDomesticPaymentConsentRequestBadRequest {
	return &GetDomesticPaymentConsentRequestBadRequest{}
}

/*
GetDomesticPaymentConsentRequestBadRequest describes a response with status code 400, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request bad request response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request bad request response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request bad request response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request bad request response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request bad request response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get domestic payment consent request bad request response
func (o *GetDomesticPaymentConsentRequestBadRequest) Code() int {
	return 400
}

func (o *GetDomesticPaymentConsentRequestBadRequest) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestBadRequest  %+v", 400, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestBadRequest) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestBadRequest  %+v", 400, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestUnauthorized creates a GetDomesticPaymentConsentRequestUnauthorized with default headers values
func NewGetDomesticPaymentConsentRequestUnauthorized() *GetDomesticPaymentConsentRequestUnauthorized {
	return &GetDomesticPaymentConsentRequestUnauthorized{}
}

/*
GetDomesticPaymentConsentRequestUnauthorized describes a response with status code 401, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request unauthorized response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request unauthorized response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request unauthorized response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request unauthorized response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request unauthorized response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get domestic payment consent request unauthorized response
func (o *GetDomesticPaymentConsentRequestUnauthorized) Code() int {
	return 401
}

func (o *GetDomesticPaymentConsentRequestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestUnauthorized) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestForbidden creates a GetDomesticPaymentConsentRequestForbidden with default headers values
func NewGetDomesticPaymentConsentRequestForbidden() *GetDomesticPaymentConsentRequestForbidden {
	return &GetDomesticPaymentConsentRequestForbidden{}
}

/*
GetDomesticPaymentConsentRequestForbidden describes a response with status code 403, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request forbidden response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request forbidden response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request forbidden response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request forbidden response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request forbidden response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get domestic payment consent request forbidden response
func (o *GetDomesticPaymentConsentRequestForbidden) Code() int {
	return 403
}

func (o *GetDomesticPaymentConsentRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestForbidden  %+v", 403, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestForbidden) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestForbidden  %+v", 403, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestMethodNotAllowed creates a GetDomesticPaymentConsentRequestMethodNotAllowed with default headers values
func NewGetDomesticPaymentConsentRequestMethodNotAllowed() *GetDomesticPaymentConsentRequestMethodNotAllowed {
	return &GetDomesticPaymentConsentRequestMethodNotAllowed{}
}

/*
GetDomesticPaymentConsentRequestMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request method not allowed response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request method not allowed response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request method not allowed response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request method not allowed response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request method not allowed response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get domestic payment consent request method not allowed response
func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) Code() int {
	return 405
}

func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestNotAcceptable creates a GetDomesticPaymentConsentRequestNotAcceptable with default headers values
func NewGetDomesticPaymentConsentRequestNotAcceptable() *GetDomesticPaymentConsentRequestNotAcceptable {
	return &GetDomesticPaymentConsentRequestNotAcceptable{}
}

/*
GetDomesticPaymentConsentRequestNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request not acceptable response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request not acceptable response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request not acceptable response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request not acceptable response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request not acceptable response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the get domestic payment consent request not acceptable response
func (o *GetDomesticPaymentConsentRequestNotAcceptable) Code() int {
	return 406
}

func (o *GetDomesticPaymentConsentRequestNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestNotAcceptable) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestUnsupportedMediaType creates a GetDomesticPaymentConsentRequestUnsupportedMediaType with default headers values
func NewGetDomesticPaymentConsentRequestUnsupportedMediaType() *GetDomesticPaymentConsentRequestUnsupportedMediaType {
	return &GetDomesticPaymentConsentRequestUnsupportedMediaType{}
}

/*
GetDomesticPaymentConsentRequestUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request unsupported media type response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request unsupported media type response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request unsupported media type response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request unsupported media type response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request unsupported media type response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the get domestic payment consent request unsupported media type response
func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) Code() int {
	return 415
}

func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestTooManyRequests creates a GetDomesticPaymentConsentRequestTooManyRequests with default headers values
func NewGetDomesticPaymentConsentRequestTooManyRequests() *GetDomesticPaymentConsentRequestTooManyRequests {
	return &GetDomesticPaymentConsentRequestTooManyRequests{}
}

/*
GetDomesticPaymentConsentRequestTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request too many requests response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request too many requests response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request too many requests response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic payment consent request too many requests response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic payment consent request too many requests response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get domestic payment consent request too many requests response
func (o *GetDomesticPaymentConsentRequestTooManyRequests) Code() int {
	return 429
}

func (o *GetDomesticPaymentConsentRequestTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestTooManyRequests) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticPaymentConsentRequestInternalServerError creates a GetDomesticPaymentConsentRequestInternalServerError with default headers values
func NewGetDomesticPaymentConsentRequestInternalServerError() *GetDomesticPaymentConsentRequestInternalServerError {
	return &GetDomesticPaymentConsentRequestInternalServerError{}
}

/*
GetDomesticPaymentConsentRequestInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetDomesticPaymentConsentRequestInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this get domestic payment consent request internal server error response has a 2xx status code
func (o *GetDomesticPaymentConsentRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic payment consent request internal server error response has a 3xx status code
func (o *GetDomesticPaymentConsentRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic payment consent request internal server error response has a 4xx status code
func (o *GetDomesticPaymentConsentRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domestic payment consent request internal server error response has a 5xx status code
func (o *GetDomesticPaymentConsentRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get domestic payment consent request internal server error response a status code equal to that given
func (o *GetDomesticPaymentConsentRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get domestic payment consent request internal server error response
func (o *GetDomesticPaymentConsentRequestInternalServerError) Code() int {
	return 500
}

func (o *GetDomesticPaymentConsentRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestInternalServerError) String() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}][%d] getDomesticPaymentConsentRequestInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDomesticPaymentConsentRequestInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticPaymentConsentRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
