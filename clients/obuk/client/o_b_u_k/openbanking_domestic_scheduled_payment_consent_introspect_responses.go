// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// OpenbankingDomesticScheduledPaymentConsentIntrospectReader is a Reader for the OpenbankingDomesticScheduledPaymentConsentIntrospect structure.
type OpenbankingDomesticScheduledPaymentConsentIntrospectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpenbankingDomesticScheduledPaymentConsentIntrospectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewOpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOpenbankingDomesticScheduledPaymentConsentIntrospectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewOpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect] openbankingDomesticScheduledPaymentConsentIntrospect", response, response.Code())
	}
}

// NewOpenbankingDomesticScheduledPaymentConsentIntrospectOK creates a OpenbankingDomesticScheduledPaymentConsentIntrospectOK with default headers values
func NewOpenbankingDomesticScheduledPaymentConsentIntrospectOK() *OpenbankingDomesticScheduledPaymentConsentIntrospectOK {
	return &OpenbankingDomesticScheduledPaymentConsentIntrospectOK{}
}

/*
OpenbankingDomesticScheduledPaymentConsentIntrospectOK describes a response with status code 200, with default header values.

Introspect Openbanking Domestic Scheduled Payment Consent Response
*/
type OpenbankingDomesticScheduledPaymentConsentIntrospectOK struct {
	Payload *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody
}

// IsSuccess returns true when this openbanking domestic scheduled payment consent introspect o k response has a 2xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this openbanking domestic scheduled payment consent introspect o k response has a 3xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this openbanking domestic scheduled payment consent introspect o k response has a 4xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this openbanking domestic scheduled payment consent introspect o k response has a 5xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this openbanking domestic scheduled payment consent introspect o k response a status code equal to that given
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the openbanking domestic scheduled payment consent introspect o k response
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) Code() int {
	return 200
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectOK  %+v", 200, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectOK  %+v", 200, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) GetPayload() *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody {
	return o.Payload
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized creates a OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized with default headers values
func NewOpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized() *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized {
	return &OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized{}
}

/*
OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this openbanking domestic scheduled payment consent introspect unauthorized response has a 2xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this openbanking domestic scheduled payment consent introspect unauthorized response has a 3xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this openbanking domestic scheduled payment consent introspect unauthorized response has a 4xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this openbanking domestic scheduled payment consent introspect unauthorized response has a 5xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this openbanking domestic scheduled payment consent introspect unauthorized response a status code equal to that given
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the openbanking domestic scheduled payment consent introspect unauthorized response
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) Code() int {
	return 401
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectUnauthorized  %+v", 401, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectUnauthorized  %+v", 401, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpenbankingDomesticScheduledPaymentConsentIntrospectNotFound creates a OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound with default headers values
func NewOpenbankingDomesticScheduledPaymentConsentIntrospectNotFound() *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound {
	return &OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound{}
}

/*
OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this openbanking domestic scheduled payment consent introspect not found response has a 2xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this openbanking domestic scheduled payment consent introspect not found response has a 3xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this openbanking domestic scheduled payment consent introspect not found response has a 4xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this openbanking domestic scheduled payment consent introspect not found response has a 5xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this openbanking domestic scheduled payment consent introspect not found response a status code equal to that given
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the openbanking domestic scheduled payment consent introspect not found response
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) Code() int {
	return 404
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectNotFound  %+v", 404, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectNotFound  %+v", 404, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests creates a OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests with default headers values
func NewOpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests() *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests {
	return &OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests{}
}

/*
OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this openbanking domestic scheduled payment consent introspect too many requests response has a 2xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this openbanking domestic scheduled payment consent introspect too many requests response has a 3xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this openbanking domestic scheduled payment consent introspect too many requests response has a 4xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this openbanking domestic scheduled payment consent introspect too many requests response has a 5xx status code
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this openbanking domestic scheduled payment consent introspect too many requests response a status code equal to that given
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the openbanking domestic scheduled payment consent introspect too many requests response
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) Code() int {
	return 429
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests  %+v", 429, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect][%d] openbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests  %+v", 429, o.Payload)
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody openbanking domestic scheduled payment consent introspect o k body
swagger:model OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody
*/
type OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody struct {
	models.IntrospectResponse

	models.DomesticScheduledPaymentConsent

	// account i ds
	AccountIDs []string `json:"AccountIDs" yaml:"AccountIDs"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody) UnmarshalJSON(raw []byte) error {
	// OpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO0
	var openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO0 models.IntrospectResponse
	if err := swag.ReadJSON(raw, &openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO0); err != nil {
		return err
	}
	o.IntrospectResponse = openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO0

	// OpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO1
	var openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO1 models.DomesticScheduledPaymentConsent
	if err := swag.ReadJSON(raw, &openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO1); err != nil {
		return err
	}
	o.DomesticScheduledPaymentConsent = openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO1

	// OpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2
	var dataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2 struct {
		AccountIDs []string `json:"AccountIDs"`
	}
	if err := swag.ReadJSON(raw, &dataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2); err != nil {
		return err
	}

	o.AccountIDs = dataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2.AccountIDs

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 3)

	openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO0, err := swag.WriteJSON(o.IntrospectResponse)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO0)

	openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO1, err := swag.WriteJSON(o.DomesticScheduledPaymentConsent)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, openbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO1)
	var dataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2 struct {
		AccountIDs []string `json:"AccountIDs"`
	}

	dataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2.AccountIDs = o.AccountIDs

	jsonDataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2, errOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2 := swag.WriteJSON(dataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2)
	if errOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2 != nil {
		return nil, errOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2
	}
	_parts = append(_parts, jsonDataOpenbankingDomesticScheduledPaymentConsentIntrospectOKBodyAO2)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this openbanking domestic scheduled payment consent introspect o k body
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IntrospectResponse
	if err := o.IntrospectResponse.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.DomesticScheduledPaymentConsent
	if err := o.DomesticScheduledPaymentConsent.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this openbanking domestic scheduled payment consent introspect o k body based on the context it is used
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IntrospectResponse
	if err := o.IntrospectResponse.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.DomesticScheduledPaymentConsent
	if err := o.DomesticScheduledPaymentConsent.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody) UnmarshalBinary(b []byte) error {
	var res OpenbankingDomesticScheduledPaymentConsentIntrospectOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
