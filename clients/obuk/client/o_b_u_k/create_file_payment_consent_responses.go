// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// CreateFilePaymentConsentReader is a Reader for the CreateFilePaymentConsent structure.
type CreateFilePaymentConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateFilePaymentConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateFilePaymentConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateFilePaymentConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateFilePaymentConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateFilePaymentConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateFilePaymentConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateFilePaymentConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateFilePaymentConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateFilePaymentConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateFilePaymentConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/v3.1/pisp/file-payment-consents] createFilePaymentConsent", response, response.Code())
	}
}

// NewCreateFilePaymentConsentCreated creates a CreateFilePaymentConsentCreated with default headers values
func NewCreateFilePaymentConsentCreated() *CreateFilePaymentConsentCreated {
	return &CreateFilePaymentConsentCreated{}
}

/*
CreateFilePaymentConsentCreated describes a response with status code 201, with default header values.

File payment consent
*/
type CreateFilePaymentConsentCreated struct {
	Payload *models.FilePaymentConsentResponse
}

// IsSuccess returns true when this create file payment consent created response has a 2xx status code
func (o *CreateFilePaymentConsentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create file payment consent created response has a 3xx status code
func (o *CreateFilePaymentConsentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent created response has a 4xx status code
func (o *CreateFilePaymentConsentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create file payment consent created response has a 5xx status code
func (o *CreateFilePaymentConsentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent created response a status code equal to that given
func (o *CreateFilePaymentConsentCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create file payment consent created response
func (o *CreateFilePaymentConsentCreated) Code() int {
	return 201
}

func (o *CreateFilePaymentConsentCreated) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentCreated  %+v", 201, o.Payload)
}

func (o *CreateFilePaymentConsentCreated) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentCreated  %+v", 201, o.Payload)
}

func (o *CreateFilePaymentConsentCreated) GetPayload() *models.FilePaymentConsentResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FilePaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentBadRequest creates a CreateFilePaymentConsentBadRequest with default headers values
func NewCreateFilePaymentConsentBadRequest() *CreateFilePaymentConsentBadRequest {
	return &CreateFilePaymentConsentBadRequest{}
}

/*
CreateFilePaymentConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreateFilePaymentConsentBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent bad request response has a 2xx status code
func (o *CreateFilePaymentConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent bad request response has a 3xx status code
func (o *CreateFilePaymentConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent bad request response has a 4xx status code
func (o *CreateFilePaymentConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent bad request response has a 5xx status code
func (o *CreateFilePaymentConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent bad request response a status code equal to that given
func (o *CreateFilePaymentConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create file payment consent bad request response
func (o *CreateFilePaymentConsentBadRequest) Code() int {
	return 400
}

func (o *CreateFilePaymentConsentBadRequest) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateFilePaymentConsentBadRequest) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateFilePaymentConsentBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentUnauthorized creates a CreateFilePaymentConsentUnauthorized with default headers values
func NewCreateFilePaymentConsentUnauthorized() *CreateFilePaymentConsentUnauthorized {
	return &CreateFilePaymentConsentUnauthorized{}
}

/*
CreateFilePaymentConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreateFilePaymentConsentUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent unauthorized response has a 2xx status code
func (o *CreateFilePaymentConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent unauthorized response has a 3xx status code
func (o *CreateFilePaymentConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent unauthorized response has a 4xx status code
func (o *CreateFilePaymentConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent unauthorized response has a 5xx status code
func (o *CreateFilePaymentConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent unauthorized response a status code equal to that given
func (o *CreateFilePaymentConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create file payment consent unauthorized response
func (o *CreateFilePaymentConsentUnauthorized) Code() int {
	return 401
}

func (o *CreateFilePaymentConsentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateFilePaymentConsentUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateFilePaymentConsentUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentForbidden creates a CreateFilePaymentConsentForbidden with default headers values
func NewCreateFilePaymentConsentForbidden() *CreateFilePaymentConsentForbidden {
	return &CreateFilePaymentConsentForbidden{}
}

/*
CreateFilePaymentConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type CreateFilePaymentConsentForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent forbidden response has a 2xx status code
func (o *CreateFilePaymentConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent forbidden response has a 3xx status code
func (o *CreateFilePaymentConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent forbidden response has a 4xx status code
func (o *CreateFilePaymentConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent forbidden response has a 5xx status code
func (o *CreateFilePaymentConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent forbidden response a status code equal to that given
func (o *CreateFilePaymentConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create file payment consent forbidden response
func (o *CreateFilePaymentConsentForbidden) Code() int {
	return 403
}

func (o *CreateFilePaymentConsentForbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentForbidden  %+v", 403, o.Payload)
}

func (o *CreateFilePaymentConsentForbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentForbidden  %+v", 403, o.Payload)
}

func (o *CreateFilePaymentConsentForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentMethodNotAllowed creates a CreateFilePaymentConsentMethodNotAllowed with default headers values
func NewCreateFilePaymentConsentMethodNotAllowed() *CreateFilePaymentConsentMethodNotAllowed {
	return &CreateFilePaymentConsentMethodNotAllowed{}
}

/*
CreateFilePaymentConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreateFilePaymentConsentMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent method not allowed response has a 2xx status code
func (o *CreateFilePaymentConsentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent method not allowed response has a 3xx status code
func (o *CreateFilePaymentConsentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent method not allowed response has a 4xx status code
func (o *CreateFilePaymentConsentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent method not allowed response has a 5xx status code
func (o *CreateFilePaymentConsentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent method not allowed response a status code equal to that given
func (o *CreateFilePaymentConsentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create file payment consent method not allowed response
func (o *CreateFilePaymentConsentMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateFilePaymentConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateFilePaymentConsentMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateFilePaymentConsentMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentNotAcceptable creates a CreateFilePaymentConsentNotAcceptable with default headers values
func NewCreateFilePaymentConsentNotAcceptable() *CreateFilePaymentConsentNotAcceptable {
	return &CreateFilePaymentConsentNotAcceptable{}
}

/*
CreateFilePaymentConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreateFilePaymentConsentNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent not acceptable response has a 2xx status code
func (o *CreateFilePaymentConsentNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent not acceptable response has a 3xx status code
func (o *CreateFilePaymentConsentNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent not acceptable response has a 4xx status code
func (o *CreateFilePaymentConsentNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent not acceptable response has a 5xx status code
func (o *CreateFilePaymentConsentNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent not acceptable response a status code equal to that given
func (o *CreateFilePaymentConsentNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create file payment consent not acceptable response
func (o *CreateFilePaymentConsentNotAcceptable) Code() int {
	return 406
}

func (o *CreateFilePaymentConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateFilePaymentConsentNotAcceptable) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateFilePaymentConsentNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentUnsupportedMediaType creates a CreateFilePaymentConsentUnsupportedMediaType with default headers values
func NewCreateFilePaymentConsentUnsupportedMediaType() *CreateFilePaymentConsentUnsupportedMediaType {
	return &CreateFilePaymentConsentUnsupportedMediaType{}
}

/*
CreateFilePaymentConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreateFilePaymentConsentUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent unsupported media type response has a 2xx status code
func (o *CreateFilePaymentConsentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent unsupported media type response has a 3xx status code
func (o *CreateFilePaymentConsentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent unsupported media type response has a 4xx status code
func (o *CreateFilePaymentConsentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent unsupported media type response has a 5xx status code
func (o *CreateFilePaymentConsentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent unsupported media type response a status code equal to that given
func (o *CreateFilePaymentConsentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create file payment consent unsupported media type response
func (o *CreateFilePaymentConsentUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateFilePaymentConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateFilePaymentConsentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateFilePaymentConsentUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentTooManyRequests creates a CreateFilePaymentConsentTooManyRequests with default headers values
func NewCreateFilePaymentConsentTooManyRequests() *CreateFilePaymentConsentTooManyRequests {
	return &CreateFilePaymentConsentTooManyRequests{}
}

/*
CreateFilePaymentConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreateFilePaymentConsentTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent too many requests response has a 2xx status code
func (o *CreateFilePaymentConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent too many requests response has a 3xx status code
func (o *CreateFilePaymentConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent too many requests response has a 4xx status code
func (o *CreateFilePaymentConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create file payment consent too many requests response has a 5xx status code
func (o *CreateFilePaymentConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create file payment consent too many requests response a status code equal to that given
func (o *CreateFilePaymentConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create file payment consent too many requests response
func (o *CreateFilePaymentConsentTooManyRequests) Code() int {
	return 429
}

func (o *CreateFilePaymentConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateFilePaymentConsentTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateFilePaymentConsentTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateFilePaymentConsentInternalServerError creates a CreateFilePaymentConsentInternalServerError with default headers values
func NewCreateFilePaymentConsentInternalServerError() *CreateFilePaymentConsentInternalServerError {
	return &CreateFilePaymentConsentInternalServerError{}
}

/*
CreateFilePaymentConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreateFilePaymentConsentInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create file payment consent internal server error response has a 2xx status code
func (o *CreateFilePaymentConsentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create file payment consent internal server error response has a 3xx status code
func (o *CreateFilePaymentConsentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create file payment consent internal server error response has a 4xx status code
func (o *CreateFilePaymentConsentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create file payment consent internal server error response has a 5xx status code
func (o *CreateFilePaymentConsentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create file payment consent internal server error response a status code equal to that given
func (o *CreateFilePaymentConsentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create file payment consent internal server error response
func (o *CreateFilePaymentConsentInternalServerError) Code() int {
	return 500
}

func (o *CreateFilePaymentConsentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateFilePaymentConsentInternalServerError) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents][%d] createFilePaymentConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateFilePaymentConsentInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateFilePaymentConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
