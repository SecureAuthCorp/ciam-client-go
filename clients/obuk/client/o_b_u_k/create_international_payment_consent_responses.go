// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// CreateInternationalPaymentConsentReader is a Reader for the CreateInternationalPaymentConsent structure.
type CreateInternationalPaymentConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInternationalPaymentConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInternationalPaymentConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInternationalPaymentConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInternationalPaymentConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInternationalPaymentConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateInternationalPaymentConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateInternationalPaymentConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateInternationalPaymentConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateInternationalPaymentConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInternationalPaymentConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/v3.1/pisp/international-payment-consents] createInternationalPaymentConsent", response, response.Code())
	}
}

// NewCreateInternationalPaymentConsentCreated creates a CreateInternationalPaymentConsentCreated with default headers values
func NewCreateInternationalPaymentConsentCreated() *CreateInternationalPaymentConsentCreated {
	return &CreateInternationalPaymentConsentCreated{}
}

/*
CreateInternationalPaymentConsentCreated describes a response with status code 201, with default header values.

International payment consent
*/
type CreateInternationalPaymentConsentCreated struct {
	Payload *models.InternationalPaymentConsentResponse
}

// IsSuccess returns true when this create international payment consent created response has a 2xx status code
func (o *CreateInternationalPaymentConsentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create international payment consent created response has a 3xx status code
func (o *CreateInternationalPaymentConsentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent created response has a 4xx status code
func (o *CreateInternationalPaymentConsentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create international payment consent created response has a 5xx status code
func (o *CreateInternationalPaymentConsentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent created response a status code equal to that given
func (o *CreateInternationalPaymentConsentCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create international payment consent created response
func (o *CreateInternationalPaymentConsentCreated) Code() int {
	return 201
}

func (o *CreateInternationalPaymentConsentCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentCreated %s", 201, payload)
}

func (o *CreateInternationalPaymentConsentCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentCreated %s", 201, payload)
}

func (o *CreateInternationalPaymentConsentCreated) GetPayload() *models.InternationalPaymentConsentResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InternationalPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentBadRequest creates a CreateInternationalPaymentConsentBadRequest with default headers values
func NewCreateInternationalPaymentConsentBadRequest() *CreateInternationalPaymentConsentBadRequest {
	return &CreateInternationalPaymentConsentBadRequest{}
}

/*
CreateInternationalPaymentConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreateInternationalPaymentConsentBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent bad request response has a 2xx status code
func (o *CreateInternationalPaymentConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent bad request response has a 3xx status code
func (o *CreateInternationalPaymentConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent bad request response has a 4xx status code
func (o *CreateInternationalPaymentConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent bad request response has a 5xx status code
func (o *CreateInternationalPaymentConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent bad request response a status code equal to that given
func (o *CreateInternationalPaymentConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create international payment consent bad request response
func (o *CreateInternationalPaymentConsentBadRequest) Code() int {
	return 400
}

func (o *CreateInternationalPaymentConsentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentBadRequest %s", 400, payload)
}

func (o *CreateInternationalPaymentConsentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentBadRequest %s", 400, payload)
}

func (o *CreateInternationalPaymentConsentBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentUnauthorized creates a CreateInternationalPaymentConsentUnauthorized with default headers values
func NewCreateInternationalPaymentConsentUnauthorized() *CreateInternationalPaymentConsentUnauthorized {
	return &CreateInternationalPaymentConsentUnauthorized{}
}

/*
CreateInternationalPaymentConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreateInternationalPaymentConsentUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent unauthorized response has a 2xx status code
func (o *CreateInternationalPaymentConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent unauthorized response has a 3xx status code
func (o *CreateInternationalPaymentConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent unauthorized response has a 4xx status code
func (o *CreateInternationalPaymentConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent unauthorized response has a 5xx status code
func (o *CreateInternationalPaymentConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent unauthorized response a status code equal to that given
func (o *CreateInternationalPaymentConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create international payment consent unauthorized response
func (o *CreateInternationalPaymentConsentUnauthorized) Code() int {
	return 401
}

func (o *CreateInternationalPaymentConsentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentUnauthorized %s", 401, payload)
}

func (o *CreateInternationalPaymentConsentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentUnauthorized %s", 401, payload)
}

func (o *CreateInternationalPaymentConsentUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentForbidden creates a CreateInternationalPaymentConsentForbidden with default headers values
func NewCreateInternationalPaymentConsentForbidden() *CreateInternationalPaymentConsentForbidden {
	return &CreateInternationalPaymentConsentForbidden{}
}

/*
CreateInternationalPaymentConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type CreateInternationalPaymentConsentForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent forbidden response has a 2xx status code
func (o *CreateInternationalPaymentConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent forbidden response has a 3xx status code
func (o *CreateInternationalPaymentConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent forbidden response has a 4xx status code
func (o *CreateInternationalPaymentConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent forbidden response has a 5xx status code
func (o *CreateInternationalPaymentConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent forbidden response a status code equal to that given
func (o *CreateInternationalPaymentConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create international payment consent forbidden response
func (o *CreateInternationalPaymentConsentForbidden) Code() int {
	return 403
}

func (o *CreateInternationalPaymentConsentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentForbidden %s", 403, payload)
}

func (o *CreateInternationalPaymentConsentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentForbidden %s", 403, payload)
}

func (o *CreateInternationalPaymentConsentForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentMethodNotAllowed creates a CreateInternationalPaymentConsentMethodNotAllowed with default headers values
func NewCreateInternationalPaymentConsentMethodNotAllowed() *CreateInternationalPaymentConsentMethodNotAllowed {
	return &CreateInternationalPaymentConsentMethodNotAllowed{}
}

/*
CreateInternationalPaymentConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreateInternationalPaymentConsentMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent method not allowed response has a 2xx status code
func (o *CreateInternationalPaymentConsentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent method not allowed response has a 3xx status code
func (o *CreateInternationalPaymentConsentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent method not allowed response has a 4xx status code
func (o *CreateInternationalPaymentConsentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent method not allowed response has a 5xx status code
func (o *CreateInternationalPaymentConsentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent method not allowed response a status code equal to that given
func (o *CreateInternationalPaymentConsentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create international payment consent method not allowed response
func (o *CreateInternationalPaymentConsentMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateInternationalPaymentConsentMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentMethodNotAllowed %s", 405, payload)
}

func (o *CreateInternationalPaymentConsentMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentMethodNotAllowed %s", 405, payload)
}

func (o *CreateInternationalPaymentConsentMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentNotAcceptable creates a CreateInternationalPaymentConsentNotAcceptable with default headers values
func NewCreateInternationalPaymentConsentNotAcceptable() *CreateInternationalPaymentConsentNotAcceptable {
	return &CreateInternationalPaymentConsentNotAcceptable{}
}

/*
CreateInternationalPaymentConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreateInternationalPaymentConsentNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent not acceptable response has a 2xx status code
func (o *CreateInternationalPaymentConsentNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent not acceptable response has a 3xx status code
func (o *CreateInternationalPaymentConsentNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent not acceptable response has a 4xx status code
func (o *CreateInternationalPaymentConsentNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent not acceptable response has a 5xx status code
func (o *CreateInternationalPaymentConsentNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent not acceptable response a status code equal to that given
func (o *CreateInternationalPaymentConsentNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create international payment consent not acceptable response
func (o *CreateInternationalPaymentConsentNotAcceptable) Code() int {
	return 406
}

func (o *CreateInternationalPaymentConsentNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentNotAcceptable %s", 406, payload)
}

func (o *CreateInternationalPaymentConsentNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentNotAcceptable %s", 406, payload)
}

func (o *CreateInternationalPaymentConsentNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentUnsupportedMediaType creates a CreateInternationalPaymentConsentUnsupportedMediaType with default headers values
func NewCreateInternationalPaymentConsentUnsupportedMediaType() *CreateInternationalPaymentConsentUnsupportedMediaType {
	return &CreateInternationalPaymentConsentUnsupportedMediaType{}
}

/*
CreateInternationalPaymentConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreateInternationalPaymentConsentUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent unsupported media type response has a 2xx status code
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent unsupported media type response has a 3xx status code
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent unsupported media type response has a 4xx status code
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent unsupported media type response has a 5xx status code
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent unsupported media type response a status code equal to that given
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create international payment consent unsupported media type response
func (o *CreateInternationalPaymentConsentUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateInternationalPaymentConsentUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentUnsupportedMediaType %s", 415, payload)
}

func (o *CreateInternationalPaymentConsentUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentUnsupportedMediaType %s", 415, payload)
}

func (o *CreateInternationalPaymentConsentUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentTooManyRequests creates a CreateInternationalPaymentConsentTooManyRequests with default headers values
func NewCreateInternationalPaymentConsentTooManyRequests() *CreateInternationalPaymentConsentTooManyRequests {
	return &CreateInternationalPaymentConsentTooManyRequests{}
}

/*
CreateInternationalPaymentConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreateInternationalPaymentConsentTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent too many requests response has a 2xx status code
func (o *CreateInternationalPaymentConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent too many requests response has a 3xx status code
func (o *CreateInternationalPaymentConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent too many requests response has a 4xx status code
func (o *CreateInternationalPaymentConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create international payment consent too many requests response has a 5xx status code
func (o *CreateInternationalPaymentConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create international payment consent too many requests response a status code equal to that given
func (o *CreateInternationalPaymentConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create international payment consent too many requests response
func (o *CreateInternationalPaymentConsentTooManyRequests) Code() int {
	return 429
}

func (o *CreateInternationalPaymentConsentTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentTooManyRequests %s", 429, payload)
}

func (o *CreateInternationalPaymentConsentTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentTooManyRequests %s", 429, payload)
}

func (o *CreateInternationalPaymentConsentTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInternationalPaymentConsentInternalServerError creates a CreateInternationalPaymentConsentInternalServerError with default headers values
func NewCreateInternationalPaymentConsentInternalServerError() *CreateInternationalPaymentConsentInternalServerError {
	return &CreateInternationalPaymentConsentInternalServerError{}
}

/*
CreateInternationalPaymentConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreateInternationalPaymentConsentInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create international payment consent internal server error response has a 2xx status code
func (o *CreateInternationalPaymentConsentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create international payment consent internal server error response has a 3xx status code
func (o *CreateInternationalPaymentConsentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create international payment consent internal server error response has a 4xx status code
func (o *CreateInternationalPaymentConsentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create international payment consent internal server error response has a 5xx status code
func (o *CreateInternationalPaymentConsentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create international payment consent internal server error response a status code equal to that given
func (o *CreateInternationalPaymentConsentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create international payment consent internal server error response
func (o *CreateInternationalPaymentConsentInternalServerError) Code() int {
	return 500
}

func (o *CreateInternationalPaymentConsentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentInternalServerError %s", 500, payload)
}

func (o *CreateInternationalPaymentConsentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/international-payment-consents][%d] createInternationalPaymentConsentInternalServerError %s", 500, payload)
}

func (o *CreateInternationalPaymentConsentInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateInternationalPaymentConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
