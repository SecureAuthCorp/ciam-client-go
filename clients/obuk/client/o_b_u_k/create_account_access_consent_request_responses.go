// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// CreateAccountAccessConsentRequestReader is a Reader for the CreateAccountAccessConsentRequest structure.
type CreateAccountAccessConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAccountAccessConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAccountAccessConsentRequestCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAccountAccessConsentRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAccountAccessConsentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAccountAccessConsentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateAccountAccessConsentRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateAccountAccessConsentRequestNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateAccountAccessConsentRequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateAccountAccessConsentRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAccountAccessConsentRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/v3.1/aisp/account-access-consents] createAccountAccessConsentRequest", response, response.Code())
	}
}

// NewCreateAccountAccessConsentRequestCreated creates a CreateAccountAccessConsentRequestCreated with default headers values
func NewCreateAccountAccessConsentRequestCreated() *CreateAccountAccessConsentRequestCreated {
	return &CreateAccountAccessConsentRequestCreated{}
}

/*
CreateAccountAccessConsentRequestCreated describes a response with status code 201, with default header values.

Account access consent
*/
type CreateAccountAccessConsentRequestCreated struct {
	Payload *models.AccountAccessConsentResponse
}

// IsSuccess returns true when this create account access consent request created response has a 2xx status code
func (o *CreateAccountAccessConsentRequestCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create account access consent request created response has a 3xx status code
func (o *CreateAccountAccessConsentRequestCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request created response has a 4xx status code
func (o *CreateAccountAccessConsentRequestCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create account access consent request created response has a 5xx status code
func (o *CreateAccountAccessConsentRequestCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request created response a status code equal to that given
func (o *CreateAccountAccessConsentRequestCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create account access consent request created response
func (o *CreateAccountAccessConsentRequestCreated) Code() int {
	return 201
}

func (o *CreateAccountAccessConsentRequestCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestCreated %s", 201, payload)
}

func (o *CreateAccountAccessConsentRequestCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestCreated %s", 201, payload)
}

func (o *CreateAccountAccessConsentRequestCreated) GetPayload() *models.AccountAccessConsentResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountAccessConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestBadRequest creates a CreateAccountAccessConsentRequestBadRequest with default headers values
func NewCreateAccountAccessConsentRequestBadRequest() *CreateAccountAccessConsentRequestBadRequest {
	return &CreateAccountAccessConsentRequestBadRequest{}
}

/*
CreateAccountAccessConsentRequestBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreateAccountAccessConsentRequestBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request bad request response has a 2xx status code
func (o *CreateAccountAccessConsentRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request bad request response has a 3xx status code
func (o *CreateAccountAccessConsentRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request bad request response has a 4xx status code
func (o *CreateAccountAccessConsentRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request bad request response has a 5xx status code
func (o *CreateAccountAccessConsentRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request bad request response a status code equal to that given
func (o *CreateAccountAccessConsentRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create account access consent request bad request response
func (o *CreateAccountAccessConsentRequestBadRequest) Code() int {
	return 400
}

func (o *CreateAccountAccessConsentRequestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestBadRequest %s", 400, payload)
}

func (o *CreateAccountAccessConsentRequestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestBadRequest %s", 400, payload)
}

func (o *CreateAccountAccessConsentRequestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestUnauthorized creates a CreateAccountAccessConsentRequestUnauthorized with default headers values
func NewCreateAccountAccessConsentRequestUnauthorized() *CreateAccountAccessConsentRequestUnauthorized {
	return &CreateAccountAccessConsentRequestUnauthorized{}
}

/*
CreateAccountAccessConsentRequestUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreateAccountAccessConsentRequestUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request unauthorized response has a 2xx status code
func (o *CreateAccountAccessConsentRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request unauthorized response has a 3xx status code
func (o *CreateAccountAccessConsentRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request unauthorized response has a 4xx status code
func (o *CreateAccountAccessConsentRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request unauthorized response has a 5xx status code
func (o *CreateAccountAccessConsentRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request unauthorized response a status code equal to that given
func (o *CreateAccountAccessConsentRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create account access consent request unauthorized response
func (o *CreateAccountAccessConsentRequestUnauthorized) Code() int {
	return 401
}

func (o *CreateAccountAccessConsentRequestUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestUnauthorized %s", 401, payload)
}

func (o *CreateAccountAccessConsentRequestUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestUnauthorized %s", 401, payload)
}

func (o *CreateAccountAccessConsentRequestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestForbidden creates a CreateAccountAccessConsentRequestForbidden with default headers values
func NewCreateAccountAccessConsentRequestForbidden() *CreateAccountAccessConsentRequestForbidden {
	return &CreateAccountAccessConsentRequestForbidden{}
}

/*
CreateAccountAccessConsentRequestForbidden describes a response with status code 403, with default header values.

Error
*/
type CreateAccountAccessConsentRequestForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request forbidden response has a 2xx status code
func (o *CreateAccountAccessConsentRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request forbidden response has a 3xx status code
func (o *CreateAccountAccessConsentRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request forbidden response has a 4xx status code
func (o *CreateAccountAccessConsentRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request forbidden response has a 5xx status code
func (o *CreateAccountAccessConsentRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request forbidden response a status code equal to that given
func (o *CreateAccountAccessConsentRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create account access consent request forbidden response
func (o *CreateAccountAccessConsentRequestForbidden) Code() int {
	return 403
}

func (o *CreateAccountAccessConsentRequestForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestForbidden %s", 403, payload)
}

func (o *CreateAccountAccessConsentRequestForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestForbidden %s", 403, payload)
}

func (o *CreateAccountAccessConsentRequestForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestMethodNotAllowed creates a CreateAccountAccessConsentRequestMethodNotAllowed with default headers values
func NewCreateAccountAccessConsentRequestMethodNotAllowed() *CreateAccountAccessConsentRequestMethodNotAllowed {
	return &CreateAccountAccessConsentRequestMethodNotAllowed{}
}

/*
CreateAccountAccessConsentRequestMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreateAccountAccessConsentRequestMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request method not allowed response has a 2xx status code
func (o *CreateAccountAccessConsentRequestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request method not allowed response has a 3xx status code
func (o *CreateAccountAccessConsentRequestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request method not allowed response has a 4xx status code
func (o *CreateAccountAccessConsentRequestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request method not allowed response has a 5xx status code
func (o *CreateAccountAccessConsentRequestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request method not allowed response a status code equal to that given
func (o *CreateAccountAccessConsentRequestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create account access consent request method not allowed response
func (o *CreateAccountAccessConsentRequestMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateAccountAccessConsentRequestMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestMethodNotAllowed %s", 405, payload)
}

func (o *CreateAccountAccessConsentRequestMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestMethodNotAllowed %s", 405, payload)
}

func (o *CreateAccountAccessConsentRequestMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestNotAcceptable creates a CreateAccountAccessConsentRequestNotAcceptable with default headers values
func NewCreateAccountAccessConsentRequestNotAcceptable() *CreateAccountAccessConsentRequestNotAcceptable {
	return &CreateAccountAccessConsentRequestNotAcceptable{}
}

/*
CreateAccountAccessConsentRequestNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreateAccountAccessConsentRequestNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request not acceptable response has a 2xx status code
func (o *CreateAccountAccessConsentRequestNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request not acceptable response has a 3xx status code
func (o *CreateAccountAccessConsentRequestNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request not acceptable response has a 4xx status code
func (o *CreateAccountAccessConsentRequestNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request not acceptable response has a 5xx status code
func (o *CreateAccountAccessConsentRequestNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request not acceptable response a status code equal to that given
func (o *CreateAccountAccessConsentRequestNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create account access consent request not acceptable response
func (o *CreateAccountAccessConsentRequestNotAcceptable) Code() int {
	return 406
}

func (o *CreateAccountAccessConsentRequestNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestNotAcceptable %s", 406, payload)
}

func (o *CreateAccountAccessConsentRequestNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestNotAcceptable %s", 406, payload)
}

func (o *CreateAccountAccessConsentRequestNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestUnsupportedMediaType creates a CreateAccountAccessConsentRequestUnsupportedMediaType with default headers values
func NewCreateAccountAccessConsentRequestUnsupportedMediaType() *CreateAccountAccessConsentRequestUnsupportedMediaType {
	return &CreateAccountAccessConsentRequestUnsupportedMediaType{}
}

/*
CreateAccountAccessConsentRequestUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreateAccountAccessConsentRequestUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request unsupported media type response has a 2xx status code
func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request unsupported media type response has a 3xx status code
func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request unsupported media type response has a 4xx status code
func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request unsupported media type response has a 5xx status code
func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request unsupported media type response a status code equal to that given
func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create account access consent request unsupported media type response
func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestUnsupportedMediaType %s", 415, payload)
}

func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestUnsupportedMediaType %s", 415, payload)
}

func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestTooManyRequests creates a CreateAccountAccessConsentRequestTooManyRequests with default headers values
func NewCreateAccountAccessConsentRequestTooManyRequests() *CreateAccountAccessConsentRequestTooManyRequests {
	return &CreateAccountAccessConsentRequestTooManyRequests{}
}

/*
CreateAccountAccessConsentRequestTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreateAccountAccessConsentRequestTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request too many requests response has a 2xx status code
func (o *CreateAccountAccessConsentRequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request too many requests response has a 3xx status code
func (o *CreateAccountAccessConsentRequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request too many requests response has a 4xx status code
func (o *CreateAccountAccessConsentRequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create account access consent request too many requests response has a 5xx status code
func (o *CreateAccountAccessConsentRequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create account access consent request too many requests response a status code equal to that given
func (o *CreateAccountAccessConsentRequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create account access consent request too many requests response
func (o *CreateAccountAccessConsentRequestTooManyRequests) Code() int {
	return 429
}

func (o *CreateAccountAccessConsentRequestTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestTooManyRequests %s", 429, payload)
}

func (o *CreateAccountAccessConsentRequestTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestTooManyRequests %s", 429, payload)
}

func (o *CreateAccountAccessConsentRequestTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAccountAccessConsentRequestInternalServerError creates a CreateAccountAccessConsentRequestInternalServerError with default headers values
func NewCreateAccountAccessConsentRequestInternalServerError() *CreateAccountAccessConsentRequestInternalServerError {
	return &CreateAccountAccessConsentRequestInternalServerError{}
}

/*
CreateAccountAccessConsentRequestInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreateAccountAccessConsentRequestInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create account access consent request internal server error response has a 2xx status code
func (o *CreateAccountAccessConsentRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create account access consent request internal server error response has a 3xx status code
func (o *CreateAccountAccessConsentRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create account access consent request internal server error response has a 4xx status code
func (o *CreateAccountAccessConsentRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create account access consent request internal server error response has a 5xx status code
func (o *CreateAccountAccessConsentRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create account access consent request internal server error response a status code equal to that given
func (o *CreateAccountAccessConsentRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create account access consent request internal server error response
func (o *CreateAccountAccessConsentRequestInternalServerError) Code() int {
	return 500
}

func (o *CreateAccountAccessConsentRequestInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestInternalServerError %s", 500, payload)
}

func (o *CreateAccountAccessConsentRequestInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/v3.1/aisp/account-access-consents][%d] createAccountAccessConsentRequestInternalServerError %s", 500, payload)
}

func (o *CreateAccountAccessConsentRequestInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateAccountAccessConsentRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
