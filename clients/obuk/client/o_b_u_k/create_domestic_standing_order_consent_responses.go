// Code generated by go-swagger; DO NOT EDIT.

package o_b_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// CreateDomesticStandingOrderConsentReader is a Reader for the CreateDomesticStandingOrderConsent structure.
type CreateDomesticStandingOrderConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDomesticStandingOrderConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDomesticStandingOrderConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDomesticStandingOrderConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDomesticStandingOrderConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDomesticStandingOrderConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateDomesticStandingOrderConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateDomesticStandingOrderConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateDomesticStandingOrderConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateDomesticStandingOrderConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDomesticStandingOrderConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents] createDomesticStandingOrderConsent", response, response.Code())
	}
}

// NewCreateDomesticStandingOrderConsentCreated creates a CreateDomesticStandingOrderConsentCreated with default headers values
func NewCreateDomesticStandingOrderConsentCreated() *CreateDomesticStandingOrderConsentCreated {
	return &CreateDomesticStandingOrderConsentCreated{}
}

/*
CreateDomesticStandingOrderConsentCreated describes a response with status code 201, with default header values.

Domestic standing order consent
*/
type CreateDomesticStandingOrderConsentCreated struct {
	Payload *models.DomesticStandingOrderConsentResponse
}

// IsSuccess returns true when this create domestic standing order consent created response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create domestic standing order consent created response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent created response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create domestic standing order consent created response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent created response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create domestic standing order consent created response
func (o *CreateDomesticStandingOrderConsentCreated) Code() int {
	return 201
}

func (o *CreateDomesticStandingOrderConsentCreated) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentCreated  %+v", 201, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentCreated) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentCreated  %+v", 201, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentCreated) GetPayload() *models.DomesticStandingOrderConsentResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomesticStandingOrderConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentBadRequest creates a CreateDomesticStandingOrderConsentBadRequest with default headers values
func NewCreateDomesticStandingOrderConsentBadRequest() *CreateDomesticStandingOrderConsentBadRequest {
	return &CreateDomesticStandingOrderConsentBadRequest{}
}

/*
CreateDomesticStandingOrderConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentBadRequest struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent bad request response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent bad request response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent bad request response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent bad request response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent bad request response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create domestic standing order consent bad request response
func (o *CreateDomesticStandingOrderConsentBadRequest) Code() int {
	return 400
}

func (o *CreateDomesticStandingOrderConsentBadRequest) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentBadRequest) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentUnauthorized creates a CreateDomesticStandingOrderConsentUnauthorized with default headers values
func NewCreateDomesticStandingOrderConsentUnauthorized() *CreateDomesticStandingOrderConsentUnauthorized {
	return &CreateDomesticStandingOrderConsentUnauthorized{}
}

/*
CreateDomesticStandingOrderConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentUnauthorized struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent unauthorized response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent unauthorized response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent unauthorized response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent unauthorized response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent unauthorized response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create domestic standing order consent unauthorized response
func (o *CreateDomesticStandingOrderConsentUnauthorized) Code() int {
	return 401
}

func (o *CreateDomesticStandingOrderConsentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentForbidden creates a CreateDomesticStandingOrderConsentForbidden with default headers values
func NewCreateDomesticStandingOrderConsentForbidden() *CreateDomesticStandingOrderConsentForbidden {
	return &CreateDomesticStandingOrderConsentForbidden{}
}

/*
CreateDomesticStandingOrderConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentForbidden struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent forbidden response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent forbidden response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent forbidden response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent forbidden response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent forbidden response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create domestic standing order consent forbidden response
func (o *CreateDomesticStandingOrderConsentForbidden) Code() int {
	return 403
}

func (o *CreateDomesticStandingOrderConsentForbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentForbidden  %+v", 403, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentForbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentForbidden  %+v", 403, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentMethodNotAllowed creates a CreateDomesticStandingOrderConsentMethodNotAllowed with default headers values
func NewCreateDomesticStandingOrderConsentMethodNotAllowed() *CreateDomesticStandingOrderConsentMethodNotAllowed {
	return &CreateDomesticStandingOrderConsentMethodNotAllowed{}
}

/*
CreateDomesticStandingOrderConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent method not allowed response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent method not allowed response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent method not allowed response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent method not allowed response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent method not allowed response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create domestic standing order consent method not allowed response
func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentNotAcceptable creates a CreateDomesticStandingOrderConsentNotAcceptable with default headers values
func NewCreateDomesticStandingOrderConsentNotAcceptable() *CreateDomesticStandingOrderConsentNotAcceptable {
	return &CreateDomesticStandingOrderConsentNotAcceptable{}
}

/*
CreateDomesticStandingOrderConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentNotAcceptable struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent not acceptable response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent not acceptable response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent not acceptable response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent not acceptable response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent not acceptable response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create domestic standing order consent not acceptable response
func (o *CreateDomesticStandingOrderConsentNotAcceptable) Code() int {
	return 406
}

func (o *CreateDomesticStandingOrderConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentNotAcceptable) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentUnsupportedMediaType creates a CreateDomesticStandingOrderConsentUnsupportedMediaType with default headers values
func NewCreateDomesticStandingOrderConsentUnsupportedMediaType() *CreateDomesticStandingOrderConsentUnsupportedMediaType {
	return &CreateDomesticStandingOrderConsentUnsupportedMediaType{}
}

/*
CreateDomesticStandingOrderConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent unsupported media type response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent unsupported media type response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent unsupported media type response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent unsupported media type response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent unsupported media type response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create domestic standing order consent unsupported media type response
func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentTooManyRequests creates a CreateDomesticStandingOrderConsentTooManyRequests with default headers values
func NewCreateDomesticStandingOrderConsentTooManyRequests() *CreateDomesticStandingOrderConsentTooManyRequests {
	return &CreateDomesticStandingOrderConsentTooManyRequests{}
}

/*
CreateDomesticStandingOrderConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentTooManyRequests struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent too many requests response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent too many requests response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent too many requests response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic standing order consent too many requests response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic standing order consent too many requests response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create domestic standing order consent too many requests response
func (o *CreateDomesticStandingOrderConsentTooManyRequests) Code() int {
	return 429
}

func (o *CreateDomesticStandingOrderConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticStandingOrderConsentInternalServerError creates a CreateDomesticStandingOrderConsentInternalServerError with default headers values
func NewCreateDomesticStandingOrderConsentInternalServerError() *CreateDomesticStandingOrderConsentInternalServerError {
	return &CreateDomesticStandingOrderConsentInternalServerError{}
}

/*
CreateDomesticStandingOrderConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreateDomesticStandingOrderConsentInternalServerError struct {
	Payload *models.ErrorResponse
}

// IsSuccess returns true when this create domestic standing order consent internal server error response has a 2xx status code
func (o *CreateDomesticStandingOrderConsentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic standing order consent internal server error response has a 3xx status code
func (o *CreateDomesticStandingOrderConsentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic standing order consent internal server error response has a 4xx status code
func (o *CreateDomesticStandingOrderConsentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create domestic standing order consent internal server error response has a 5xx status code
func (o *CreateDomesticStandingOrderConsentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create domestic standing order consent internal server error response a status code equal to that given
func (o *CreateDomesticStandingOrderConsentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create domestic standing order consent internal server error response
func (o *CreateDomesticStandingOrderConsentInternalServerError) Code() int {
	return 500
}

func (o *CreateDomesticStandingOrderConsentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentInternalServerError) String() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/domestic-standing-order-consents][%d] createDomesticStandingOrderConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateDomesticStandingOrderConsentInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *CreateDomesticStandingOrderConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
