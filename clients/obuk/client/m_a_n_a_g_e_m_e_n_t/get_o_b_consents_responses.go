// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// GetOBConsentsReader is a Reader for the GetOBConsents structure.
type GetOBConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOBConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOBConsentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOBConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOBConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOBConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOBConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOBConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/open-banking/consents] getOBConsents", response, response.Code())
	}
}

// NewGetOBConsentsOK creates a GetOBConsentsOK with default headers values
func NewGetOBConsentsOK() *GetOBConsentsOK {
	return &GetOBConsentsOK{}
}

/*
GetOBConsentsOK describes a response with status code 200, with default header values.

Consents
*/
type GetOBConsentsOK struct {
	Payload *models.OBUKConsents
}

// IsSuccess returns true when this get o b consents o k response has a 2xx status code
func (o *GetOBConsentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get o b consents o k response has a 3xx status code
func (o *GetOBConsentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b consents o k response has a 4xx status code
func (o *GetOBConsentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o b consents o k response has a 5xx status code
func (o *GetOBConsentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b consents o k response a status code equal to that given
func (o *GetOBConsentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get o b consents o k response
func (o *GetOBConsentsOK) Code() int {
	return 200
}

func (o *GetOBConsentsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsOK %s", 200, payload)
}

func (o *GetOBConsentsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsOK %s", 200, payload)
}

func (o *GetOBConsentsOK) GetPayload() *models.OBUKConsents {
	return o.Payload
}

func (o *GetOBConsentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBUKConsents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBConsentsBadRequest creates a GetOBConsentsBadRequest with default headers values
func NewGetOBConsentsBadRequest() *GetOBConsentsBadRequest {
	return &GetOBConsentsBadRequest{}
}

/*
GetOBConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOBConsentsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b consents bad request response has a 2xx status code
func (o *GetOBConsentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b consents bad request response has a 3xx status code
func (o *GetOBConsentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b consents bad request response has a 4xx status code
func (o *GetOBConsentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b consents bad request response has a 5xx status code
func (o *GetOBConsentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b consents bad request response a status code equal to that given
func (o *GetOBConsentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get o b consents bad request response
func (o *GetOBConsentsBadRequest) Code() int {
	return 400
}

func (o *GetOBConsentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsBadRequest %s", 400, payload)
}

func (o *GetOBConsentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsBadRequest %s", 400, payload)
}

func (o *GetOBConsentsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBConsentsUnauthorized creates a GetOBConsentsUnauthorized with default headers values
func NewGetOBConsentsUnauthorized() *GetOBConsentsUnauthorized {
	return &GetOBConsentsUnauthorized{}
}

/*
GetOBConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOBConsentsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b consents unauthorized response has a 2xx status code
func (o *GetOBConsentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b consents unauthorized response has a 3xx status code
func (o *GetOBConsentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b consents unauthorized response has a 4xx status code
func (o *GetOBConsentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b consents unauthorized response has a 5xx status code
func (o *GetOBConsentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b consents unauthorized response a status code equal to that given
func (o *GetOBConsentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get o b consents unauthorized response
func (o *GetOBConsentsUnauthorized) Code() int {
	return 401
}

func (o *GetOBConsentsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsUnauthorized %s", 401, payload)
}

func (o *GetOBConsentsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsUnauthorized %s", 401, payload)
}

func (o *GetOBConsentsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBConsentsForbidden creates a GetOBConsentsForbidden with default headers values
func NewGetOBConsentsForbidden() *GetOBConsentsForbidden {
	return &GetOBConsentsForbidden{}
}

/*
GetOBConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOBConsentsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b consents forbidden response has a 2xx status code
func (o *GetOBConsentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b consents forbidden response has a 3xx status code
func (o *GetOBConsentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b consents forbidden response has a 4xx status code
func (o *GetOBConsentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b consents forbidden response has a 5xx status code
func (o *GetOBConsentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b consents forbidden response a status code equal to that given
func (o *GetOBConsentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get o b consents forbidden response
func (o *GetOBConsentsForbidden) Code() int {
	return 403
}

func (o *GetOBConsentsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsForbidden %s", 403, payload)
}

func (o *GetOBConsentsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsForbidden %s", 403, payload)
}

func (o *GetOBConsentsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBConsentsNotFound creates a GetOBConsentsNotFound with default headers values
func NewGetOBConsentsNotFound() *GetOBConsentsNotFound {
	return &GetOBConsentsNotFound{}
}

/*
GetOBConsentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetOBConsentsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b consents not found response has a 2xx status code
func (o *GetOBConsentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b consents not found response has a 3xx status code
func (o *GetOBConsentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b consents not found response has a 4xx status code
func (o *GetOBConsentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b consents not found response has a 5xx status code
func (o *GetOBConsentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b consents not found response a status code equal to that given
func (o *GetOBConsentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get o b consents not found response
func (o *GetOBConsentsNotFound) Code() int {
	return 404
}

func (o *GetOBConsentsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsNotFound %s", 404, payload)
}

func (o *GetOBConsentsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsNotFound %s", 404, payload)
}

func (o *GetOBConsentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBConsentsTooManyRequests creates a GetOBConsentsTooManyRequests with default headers values
func NewGetOBConsentsTooManyRequests() *GetOBConsentsTooManyRequests {
	return &GetOBConsentsTooManyRequests{}
}

/*
GetOBConsentsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetOBConsentsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b consents too many requests response has a 2xx status code
func (o *GetOBConsentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b consents too many requests response has a 3xx status code
func (o *GetOBConsentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b consents too many requests response has a 4xx status code
func (o *GetOBConsentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b consents too many requests response has a 5xx status code
func (o *GetOBConsentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b consents too many requests response a status code equal to that given
func (o *GetOBConsentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get o b consents too many requests response
func (o *GetOBConsentsTooManyRequests) Code() int {
	return 429
}

func (o *GetOBConsentsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsTooManyRequests %s", 429, payload)
}

func (o *GetOBConsentsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking/consents][%d] getOBConsentsTooManyRequests %s", 429, payload)
}

func (o *GetOBConsentsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
