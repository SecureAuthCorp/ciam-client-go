// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// ListOBConsentsReader is a Reader for the ListOBConsents structure.
type ListOBConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOBConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOBConsentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOBConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListOBConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListOBConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListOBConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListOBConsentsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListOBConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/open-banking/consents] listOBConsents", response, response.Code())
	}
}

// NewListOBConsentsOK creates a ListOBConsentsOK with default headers values
func NewListOBConsentsOK() *ListOBConsentsOK {
	return &ListOBConsentsOK{}
}

/*
ListOBConsentsOK describes a response with status code 200, with default header values.

Consents
*/
type ListOBConsentsOK struct {
	Payload *models.OBUKConsents
}

// IsSuccess returns true when this list o b consents o k response has a 2xx status code
func (o *ListOBConsentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list o b consents o k response has a 3xx status code
func (o *ListOBConsentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents o k response has a 4xx status code
func (o *ListOBConsentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list o b consents o k response has a 5xx status code
func (o *ListOBConsentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents o k response a status code equal to that given
func (o *ListOBConsentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list o b consents o k response
func (o *ListOBConsentsOK) Code() int {
	return 200
}

func (o *ListOBConsentsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsOK %s", 200, payload)
}

func (o *ListOBConsentsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsOK %s", 200, payload)
}

func (o *ListOBConsentsOK) GetPayload() *models.OBUKConsents {
	return o.Payload
}

func (o *ListOBConsentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBUKConsents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBConsentsBadRequest creates a ListOBConsentsBadRequest with default headers values
func NewListOBConsentsBadRequest() *ListOBConsentsBadRequest {
	return &ListOBConsentsBadRequest{}
}

/*
ListOBConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListOBConsentsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b consents bad request response has a 2xx status code
func (o *ListOBConsentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b consents bad request response has a 3xx status code
func (o *ListOBConsentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents bad request response has a 4xx status code
func (o *ListOBConsentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b consents bad request response has a 5xx status code
func (o *ListOBConsentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents bad request response a status code equal to that given
func (o *ListOBConsentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list o b consents bad request response
func (o *ListOBConsentsBadRequest) Code() int {
	return 400
}

func (o *ListOBConsentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsBadRequest %s", 400, payload)
}

func (o *ListOBConsentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsBadRequest %s", 400, payload)
}

func (o *ListOBConsentsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBConsentsUnauthorized creates a ListOBConsentsUnauthorized with default headers values
func NewListOBConsentsUnauthorized() *ListOBConsentsUnauthorized {
	return &ListOBConsentsUnauthorized{}
}

/*
ListOBConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListOBConsentsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b consents unauthorized response has a 2xx status code
func (o *ListOBConsentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b consents unauthorized response has a 3xx status code
func (o *ListOBConsentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents unauthorized response has a 4xx status code
func (o *ListOBConsentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b consents unauthorized response has a 5xx status code
func (o *ListOBConsentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents unauthorized response a status code equal to that given
func (o *ListOBConsentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list o b consents unauthorized response
func (o *ListOBConsentsUnauthorized) Code() int {
	return 401
}

func (o *ListOBConsentsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsUnauthorized %s", 401, payload)
}

func (o *ListOBConsentsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsUnauthorized %s", 401, payload)
}

func (o *ListOBConsentsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBConsentsForbidden creates a ListOBConsentsForbidden with default headers values
func NewListOBConsentsForbidden() *ListOBConsentsForbidden {
	return &ListOBConsentsForbidden{}
}

/*
ListOBConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListOBConsentsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b consents forbidden response has a 2xx status code
func (o *ListOBConsentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b consents forbidden response has a 3xx status code
func (o *ListOBConsentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents forbidden response has a 4xx status code
func (o *ListOBConsentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b consents forbidden response has a 5xx status code
func (o *ListOBConsentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents forbidden response a status code equal to that given
func (o *ListOBConsentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list o b consents forbidden response
func (o *ListOBConsentsForbidden) Code() int {
	return 403
}

func (o *ListOBConsentsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsForbidden %s", 403, payload)
}

func (o *ListOBConsentsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsForbidden %s", 403, payload)
}

func (o *ListOBConsentsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBConsentsNotFound creates a ListOBConsentsNotFound with default headers values
func NewListOBConsentsNotFound() *ListOBConsentsNotFound {
	return &ListOBConsentsNotFound{}
}

/*
ListOBConsentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListOBConsentsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b consents not found response has a 2xx status code
func (o *ListOBConsentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b consents not found response has a 3xx status code
func (o *ListOBConsentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents not found response has a 4xx status code
func (o *ListOBConsentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b consents not found response has a 5xx status code
func (o *ListOBConsentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents not found response a status code equal to that given
func (o *ListOBConsentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list o b consents not found response
func (o *ListOBConsentsNotFound) Code() int {
	return 404
}

func (o *ListOBConsentsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsNotFound %s", 404, payload)
}

func (o *ListOBConsentsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsNotFound %s", 404, payload)
}

func (o *ListOBConsentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBConsentsUnprocessableEntity creates a ListOBConsentsUnprocessableEntity with default headers values
func NewListOBConsentsUnprocessableEntity() *ListOBConsentsUnprocessableEntity {
	return &ListOBConsentsUnprocessableEntity{}
}

/*
ListOBConsentsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ListOBConsentsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b consents unprocessable entity response has a 2xx status code
func (o *ListOBConsentsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b consents unprocessable entity response has a 3xx status code
func (o *ListOBConsentsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents unprocessable entity response has a 4xx status code
func (o *ListOBConsentsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b consents unprocessable entity response has a 5xx status code
func (o *ListOBConsentsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents unprocessable entity response a status code equal to that given
func (o *ListOBConsentsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list o b consents unprocessable entity response
func (o *ListOBConsentsUnprocessableEntity) Code() int {
	return 422
}

func (o *ListOBConsentsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsUnprocessableEntity %s", 422, payload)
}

func (o *ListOBConsentsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsUnprocessableEntity %s", 422, payload)
}

func (o *ListOBConsentsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBConsentsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBConsentsTooManyRequests creates a ListOBConsentsTooManyRequests with default headers values
func NewListOBConsentsTooManyRequests() *ListOBConsentsTooManyRequests {
	return &ListOBConsentsTooManyRequests{}
}

/*
ListOBConsentsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListOBConsentsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b consents too many requests response has a 2xx status code
func (o *ListOBConsentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b consents too many requests response has a 3xx status code
func (o *ListOBConsentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b consents too many requests response has a 4xx status code
func (o *ListOBConsentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b consents too many requests response has a 5xx status code
func (o *ListOBConsentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b consents too many requests response a status code equal to that given
func (o *ListOBConsentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list o b consents too many requests response
func (o *ListOBConsentsTooManyRequests) Code() int {
	return 429
}

func (o *ListOBConsentsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsTooManyRequests %s", 429, payload)
}

func (o *ListOBConsentsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/open-banking/consents][%d] listOBConsentsTooManyRequests %s", 429, payload)
}

func (o *ListOBConsentsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
