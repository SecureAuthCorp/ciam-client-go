// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// RevokeOBUKConsentsReader is a Reader for the RevokeOBUKConsents structure.
type RevokeOBUKConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeOBUKConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeOBUKConsentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeOBUKConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeOBUKConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeOBUKConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeOBUKConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeOBUKConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeOBUKConsentsOK creates a RevokeOBUKConsentsOK with default headers values
func NewRevokeOBUKConsentsOK() *RevokeOBUKConsentsOK {
	return &RevokeOBUKConsentsOK{}
}

/*
RevokeOBUKConsentsOK describes a response with status code 200, with default header values.

ConsentsRemovedResponse
*/
type RevokeOBUKConsentsOK struct {
	Payload *models.ConsentsRemovedResponse
}

// IsSuccess returns true when this revoke o b u k consents o k response has a 2xx status code
func (o *RevokeOBUKConsentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke o b u k consents o k response has a 3xx status code
func (o *RevokeOBUKConsentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consents o k response has a 4xx status code
func (o *RevokeOBUKConsentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke o b u k consents o k response has a 5xx status code
func (o *RevokeOBUKConsentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consents o k response a status code equal to that given
func (o *RevokeOBUKConsentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the revoke o b u k consents o k response
func (o *RevokeOBUKConsentsOK) Code() int {
	return 200
}

func (o *RevokeOBUKConsentsOK) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsOK  %+v", 200, o.Payload)
}

func (o *RevokeOBUKConsentsOK) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsOK  %+v", 200, o.Payload)
}

func (o *RevokeOBUKConsentsOK) GetPayload() *models.ConsentsRemovedResponse {
	return o.Payload
}

func (o *RevokeOBUKConsentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsRemovedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentsBadRequest creates a RevokeOBUKConsentsBadRequest with default headers values
func NewRevokeOBUKConsentsBadRequest() *RevokeOBUKConsentsBadRequest {
	return &RevokeOBUKConsentsBadRequest{}
}

/*
RevokeOBUKConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RevokeOBUKConsentsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consents bad request response has a 2xx status code
func (o *RevokeOBUKConsentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consents bad request response has a 3xx status code
func (o *RevokeOBUKConsentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consents bad request response has a 4xx status code
func (o *RevokeOBUKConsentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consents bad request response has a 5xx status code
func (o *RevokeOBUKConsentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consents bad request response a status code equal to that given
func (o *RevokeOBUKConsentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke o b u k consents bad request response
func (o *RevokeOBUKConsentsBadRequest) Code() int {
	return 400
}

func (o *RevokeOBUKConsentsBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOBUKConsentsBadRequest) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOBUKConsentsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentsUnauthorized creates a RevokeOBUKConsentsUnauthorized with default headers values
func NewRevokeOBUKConsentsUnauthorized() *RevokeOBUKConsentsUnauthorized {
	return &RevokeOBUKConsentsUnauthorized{}
}

/*
RevokeOBUKConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeOBUKConsentsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consents unauthorized response has a 2xx status code
func (o *RevokeOBUKConsentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consents unauthorized response has a 3xx status code
func (o *RevokeOBUKConsentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consents unauthorized response has a 4xx status code
func (o *RevokeOBUKConsentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consents unauthorized response has a 5xx status code
func (o *RevokeOBUKConsentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consents unauthorized response a status code equal to that given
func (o *RevokeOBUKConsentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke o b u k consents unauthorized response
func (o *RevokeOBUKConsentsUnauthorized) Code() int {
	return 401
}

func (o *RevokeOBUKConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOBUKConsentsUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOBUKConsentsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentsForbidden creates a RevokeOBUKConsentsForbidden with default headers values
func NewRevokeOBUKConsentsForbidden() *RevokeOBUKConsentsForbidden {
	return &RevokeOBUKConsentsForbidden{}
}

/*
RevokeOBUKConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeOBUKConsentsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consents forbidden response has a 2xx status code
func (o *RevokeOBUKConsentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consents forbidden response has a 3xx status code
func (o *RevokeOBUKConsentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consents forbidden response has a 4xx status code
func (o *RevokeOBUKConsentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consents forbidden response has a 5xx status code
func (o *RevokeOBUKConsentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consents forbidden response a status code equal to that given
func (o *RevokeOBUKConsentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke o b u k consents forbidden response
func (o *RevokeOBUKConsentsForbidden) Code() int {
	return 403
}

func (o *RevokeOBUKConsentsForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOBUKConsentsForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOBUKConsentsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentsNotFound creates a RevokeOBUKConsentsNotFound with default headers values
func NewRevokeOBUKConsentsNotFound() *RevokeOBUKConsentsNotFound {
	return &RevokeOBUKConsentsNotFound{}
}

/*
RevokeOBUKConsentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type RevokeOBUKConsentsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consents not found response has a 2xx status code
func (o *RevokeOBUKConsentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consents not found response has a 3xx status code
func (o *RevokeOBUKConsentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consents not found response has a 4xx status code
func (o *RevokeOBUKConsentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consents not found response has a 5xx status code
func (o *RevokeOBUKConsentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consents not found response a status code equal to that given
func (o *RevokeOBUKConsentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke o b u k consents not found response
func (o *RevokeOBUKConsentsNotFound) Code() int {
	return 404
}

func (o *RevokeOBUKConsentsNotFound) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOBUKConsentsNotFound) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOBUKConsentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentsTooManyRequests creates a RevokeOBUKConsentsTooManyRequests with default headers values
func NewRevokeOBUKConsentsTooManyRequests() *RevokeOBUKConsentsTooManyRequests {
	return &RevokeOBUKConsentsTooManyRequests{}
}

/*
RevokeOBUKConsentsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RevokeOBUKConsentsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consents too many requests response has a 2xx status code
func (o *RevokeOBUKConsentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consents too many requests response has a 3xx status code
func (o *RevokeOBUKConsentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consents too many requests response has a 4xx status code
func (o *RevokeOBUKConsentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consents too many requests response has a 5xx status code
func (o *RevokeOBUKConsentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consents too many requests response a status code equal to that given
func (o *RevokeOBUKConsentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke o b u k consents too many requests response
func (o *RevokeOBUKConsentsTooManyRequests) Code() int {
	return 429
}

func (o *RevokeOBUKConsentsTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOBUKConsentsTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents][%d] revokeOBUKConsentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOBUKConsentsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
