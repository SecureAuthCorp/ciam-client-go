// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// RevokeOBUKConsentReader is a Reader for the RevokeOBUKConsent structure.
type RevokeOBUKConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeOBUKConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRevokeOBUKConsentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeOBUKConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeOBUKConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeOBUKConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeOBUKConsentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeOBUKConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeOBUKConsentNoContent creates a RevokeOBUKConsentNoContent with default headers values
func NewRevokeOBUKConsentNoContent() *RevokeOBUKConsentNoContent {
	return &RevokeOBUKConsentNoContent{}
}

/*
RevokeOBUKConsentNoContent describes a response with status code 204, with default header values.

	Consent has been revoked
*/
type RevokeOBUKConsentNoContent struct {
}

// IsSuccess returns true when this revoke o b u k consent no content response has a 2xx status code
func (o *RevokeOBUKConsentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke o b u k consent no content response has a 3xx status code
func (o *RevokeOBUKConsentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consent no content response has a 4xx status code
func (o *RevokeOBUKConsentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke o b u k consent no content response has a 5xx status code
func (o *RevokeOBUKConsentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consent no content response a status code equal to that given
func (o *RevokeOBUKConsentNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the revoke o b u k consent no content response
func (o *RevokeOBUKConsentNoContent) Code() int {
	return 204
}

func (o *RevokeOBUKConsentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentNoContent ", 204)
}

func (o *RevokeOBUKConsentNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentNoContent ", 204)
}

func (o *RevokeOBUKConsentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeOBUKConsentBadRequest creates a RevokeOBUKConsentBadRequest with default headers values
func NewRevokeOBUKConsentBadRequest() *RevokeOBUKConsentBadRequest {
	return &RevokeOBUKConsentBadRequest{}
}

/*
RevokeOBUKConsentBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RevokeOBUKConsentBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consent bad request response has a 2xx status code
func (o *RevokeOBUKConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consent bad request response has a 3xx status code
func (o *RevokeOBUKConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consent bad request response has a 4xx status code
func (o *RevokeOBUKConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consent bad request response has a 5xx status code
func (o *RevokeOBUKConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consent bad request response a status code equal to that given
func (o *RevokeOBUKConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke o b u k consent bad request response
func (o *RevokeOBUKConsentBadRequest) Code() int {
	return 400
}

func (o *RevokeOBUKConsentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOBUKConsentBadRequest) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOBUKConsentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentUnauthorized creates a RevokeOBUKConsentUnauthorized with default headers values
func NewRevokeOBUKConsentUnauthorized() *RevokeOBUKConsentUnauthorized {
	return &RevokeOBUKConsentUnauthorized{}
}

/*
RevokeOBUKConsentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeOBUKConsentUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consent unauthorized response has a 2xx status code
func (o *RevokeOBUKConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consent unauthorized response has a 3xx status code
func (o *RevokeOBUKConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consent unauthorized response has a 4xx status code
func (o *RevokeOBUKConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consent unauthorized response has a 5xx status code
func (o *RevokeOBUKConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consent unauthorized response a status code equal to that given
func (o *RevokeOBUKConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke o b u k consent unauthorized response
func (o *RevokeOBUKConsentUnauthorized) Code() int {
	return 401
}

func (o *RevokeOBUKConsentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOBUKConsentUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOBUKConsentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentForbidden creates a RevokeOBUKConsentForbidden with default headers values
func NewRevokeOBUKConsentForbidden() *RevokeOBUKConsentForbidden {
	return &RevokeOBUKConsentForbidden{}
}

/*
RevokeOBUKConsentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeOBUKConsentForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consent forbidden response has a 2xx status code
func (o *RevokeOBUKConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consent forbidden response has a 3xx status code
func (o *RevokeOBUKConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consent forbidden response has a 4xx status code
func (o *RevokeOBUKConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consent forbidden response has a 5xx status code
func (o *RevokeOBUKConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consent forbidden response a status code equal to that given
func (o *RevokeOBUKConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke o b u k consent forbidden response
func (o *RevokeOBUKConsentForbidden) Code() int {
	return 403
}

func (o *RevokeOBUKConsentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOBUKConsentForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOBUKConsentForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentNotFound creates a RevokeOBUKConsentNotFound with default headers values
func NewRevokeOBUKConsentNotFound() *RevokeOBUKConsentNotFound {
	return &RevokeOBUKConsentNotFound{}
}

/*
RevokeOBUKConsentNotFound describes a response with status code 404, with default header values.

Not found
*/
type RevokeOBUKConsentNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consent not found response has a 2xx status code
func (o *RevokeOBUKConsentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consent not found response has a 3xx status code
func (o *RevokeOBUKConsentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consent not found response has a 4xx status code
func (o *RevokeOBUKConsentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consent not found response has a 5xx status code
func (o *RevokeOBUKConsentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consent not found response a status code equal to that given
func (o *RevokeOBUKConsentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke o b u k consent not found response
func (o *RevokeOBUKConsentNotFound) Code() int {
	return 404
}

func (o *RevokeOBUKConsentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOBUKConsentNotFound) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOBUKConsentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBUKConsentTooManyRequests creates a RevokeOBUKConsentTooManyRequests with default headers values
func NewRevokeOBUKConsentTooManyRequests() *RevokeOBUKConsentTooManyRequests {
	return &RevokeOBUKConsentTooManyRequests{}
}

/*
RevokeOBUKConsentTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RevokeOBUKConsentTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b u k consent too many requests response has a 2xx status code
func (o *RevokeOBUKConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b u k consent too many requests response has a 3xx status code
func (o *RevokeOBUKConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b u k consent too many requests response has a 4xx status code
func (o *RevokeOBUKConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b u k consent too many requests response has a 5xx status code
func (o *RevokeOBUKConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b u k consent too many requests response a status code equal to that given
func (o *RevokeOBUKConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke o b u k consent too many requests response
func (o *RevokeOBUKConsentTooManyRequests) Code() int {
	return 429
}

func (o *RevokeOBUKConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOBUKConsentTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOBUKConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOBUKConsentTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBUKConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
