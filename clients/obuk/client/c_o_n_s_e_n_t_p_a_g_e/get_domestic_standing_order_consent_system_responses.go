// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// GetDomesticStandingOrderConsentSystemReader is a Reader for the GetDomesticStandingOrderConsentSystem structure.
type GetDomesticStandingOrderConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomesticStandingOrderConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomesticStandingOrderConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDomesticStandingOrderConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomesticStandingOrderConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDomesticStandingOrderConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDomesticStandingOrderConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /open-banking/domestic-standing-order-consent/{login}] getDomesticStandingOrderConsentSystem", response, response.Code())
	}
}

// NewGetDomesticStandingOrderConsentSystemOK creates a GetDomesticStandingOrderConsentSystemOK with default headers values
func NewGetDomesticStandingOrderConsentSystemOK() *GetDomesticStandingOrderConsentSystemOK {
	return &GetDomesticStandingOrderConsentSystemOK{}
}

/*
GetDomesticStandingOrderConsentSystemOK describes a response with status code 200, with default header values.

GetDomesticStandingOrderConsentResponse
*/
type GetDomesticStandingOrderConsentSystemOK struct {
	Payload *models.GetDomesticStandingOrderConsentResponse
}

// IsSuccess returns true when this get domestic standing order consent system o k response has a 2xx status code
func (o *GetDomesticStandingOrderConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get domestic standing order consent system o k response has a 3xx status code
func (o *GetDomesticStandingOrderConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic standing order consent system o k response has a 4xx status code
func (o *GetDomesticStandingOrderConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get domestic standing order consent system o k response has a 5xx status code
func (o *GetDomesticStandingOrderConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic standing order consent system o k response a status code equal to that given
func (o *GetDomesticStandingOrderConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get domestic standing order consent system o k response
func (o *GetDomesticStandingOrderConsentSystemOK) Code() int {
	return 200
}

func (o *GetDomesticStandingOrderConsentSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemOK %s", 200, payload)
}

func (o *GetDomesticStandingOrderConsentSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemOK %s", 200, payload)
}

func (o *GetDomesticStandingOrderConsentSystemOK) GetPayload() *models.GetDomesticStandingOrderConsentResponse {
	return o.Payload
}

func (o *GetDomesticStandingOrderConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetDomesticStandingOrderConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrderConsentSystemUnauthorized creates a GetDomesticStandingOrderConsentSystemUnauthorized with default headers values
func NewGetDomesticStandingOrderConsentSystemUnauthorized() *GetDomesticStandingOrderConsentSystemUnauthorized {
	return &GetDomesticStandingOrderConsentSystemUnauthorized{}
}

/*
GetDomesticStandingOrderConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDomesticStandingOrderConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get domestic standing order consent system unauthorized response has a 2xx status code
func (o *GetDomesticStandingOrderConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic standing order consent system unauthorized response has a 3xx status code
func (o *GetDomesticStandingOrderConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic standing order consent system unauthorized response has a 4xx status code
func (o *GetDomesticStandingOrderConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic standing order consent system unauthorized response has a 5xx status code
func (o *GetDomesticStandingOrderConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic standing order consent system unauthorized response a status code equal to that given
func (o *GetDomesticStandingOrderConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get domestic standing order consent system unauthorized response
func (o *GetDomesticStandingOrderConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *GetDomesticStandingOrderConsentSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemUnauthorized %s", 401, payload)
}

func (o *GetDomesticStandingOrderConsentSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemUnauthorized %s", 401, payload)
}

func (o *GetDomesticStandingOrderConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticStandingOrderConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrderConsentSystemForbidden creates a GetDomesticStandingOrderConsentSystemForbidden with default headers values
func NewGetDomesticStandingOrderConsentSystemForbidden() *GetDomesticStandingOrderConsentSystemForbidden {
	return &GetDomesticStandingOrderConsentSystemForbidden{}
}

/*
GetDomesticStandingOrderConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDomesticStandingOrderConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get domestic standing order consent system forbidden response has a 2xx status code
func (o *GetDomesticStandingOrderConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic standing order consent system forbidden response has a 3xx status code
func (o *GetDomesticStandingOrderConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic standing order consent system forbidden response has a 4xx status code
func (o *GetDomesticStandingOrderConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic standing order consent system forbidden response has a 5xx status code
func (o *GetDomesticStandingOrderConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic standing order consent system forbidden response a status code equal to that given
func (o *GetDomesticStandingOrderConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get domestic standing order consent system forbidden response
func (o *GetDomesticStandingOrderConsentSystemForbidden) Code() int {
	return 403
}

func (o *GetDomesticStandingOrderConsentSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemForbidden %s", 403, payload)
}

func (o *GetDomesticStandingOrderConsentSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemForbidden %s", 403, payload)
}

func (o *GetDomesticStandingOrderConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticStandingOrderConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrderConsentSystemNotFound creates a GetDomesticStandingOrderConsentSystemNotFound with default headers values
func NewGetDomesticStandingOrderConsentSystemNotFound() *GetDomesticStandingOrderConsentSystemNotFound {
	return &GetDomesticStandingOrderConsentSystemNotFound{}
}

/*
GetDomesticStandingOrderConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDomesticStandingOrderConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get domestic standing order consent system not found response has a 2xx status code
func (o *GetDomesticStandingOrderConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic standing order consent system not found response has a 3xx status code
func (o *GetDomesticStandingOrderConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic standing order consent system not found response has a 4xx status code
func (o *GetDomesticStandingOrderConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic standing order consent system not found response has a 5xx status code
func (o *GetDomesticStandingOrderConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic standing order consent system not found response a status code equal to that given
func (o *GetDomesticStandingOrderConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get domestic standing order consent system not found response
func (o *GetDomesticStandingOrderConsentSystemNotFound) Code() int {
	return 404
}

func (o *GetDomesticStandingOrderConsentSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemNotFound %s", 404, payload)
}

func (o *GetDomesticStandingOrderConsentSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemNotFound %s", 404, payload)
}

func (o *GetDomesticStandingOrderConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticStandingOrderConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticStandingOrderConsentSystemTooManyRequests creates a GetDomesticStandingOrderConsentSystemTooManyRequests with default headers values
func NewGetDomesticStandingOrderConsentSystemTooManyRequests() *GetDomesticStandingOrderConsentSystemTooManyRequests {
	return &GetDomesticStandingOrderConsentSystemTooManyRequests{}
}

/*
GetDomesticStandingOrderConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetDomesticStandingOrderConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get domestic standing order consent system too many requests response has a 2xx status code
func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get domestic standing order consent system too many requests response has a 3xx status code
func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get domestic standing order consent system too many requests response has a 4xx status code
func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get domestic standing order consent system too many requests response has a 5xx status code
func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get domestic standing order consent system too many requests response a status code equal to that given
func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get domestic standing order consent system too many requests response
func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemTooManyRequests %s", 429, payload)
}

func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/domestic-standing-order-consent/{login}][%d] getDomesticStandingOrderConsentSystemTooManyRequests %s", 429, payload)
}

func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDomesticStandingOrderConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
