// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// RejectInternationalStandingOrderConsentSystemReader is a Reader for the RejectInternationalStandingOrderConsentSystem structure.
type RejectInternationalStandingOrderConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectInternationalStandingOrderConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectInternationalStandingOrderConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRejectInternationalStandingOrderConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectInternationalStandingOrderConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectInternationalStandingOrderConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRejectInternationalStandingOrderConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/international-standing-order-consent/{login}/reject] rejectInternationalStandingOrderConsentSystem", response, response.Code())
	}
}

// NewRejectInternationalStandingOrderConsentSystemOK creates a RejectInternationalStandingOrderConsentSystemOK with default headers values
func NewRejectInternationalStandingOrderConsentSystemOK() *RejectInternationalStandingOrderConsentSystemOK {
	return &RejectInternationalStandingOrderConsentSystemOK{}
}

/*
RejectInternationalStandingOrderConsentSystemOK describes a response with status code 200, with default header values.

Consent rejected
*/
type RejectInternationalStandingOrderConsentSystemOK struct {
	Payload *models.ConsentRejected
}

// IsSuccess returns true when this reject international standing order consent system o k response has a 2xx status code
func (o *RejectInternationalStandingOrderConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reject international standing order consent system o k response has a 3xx status code
func (o *RejectInternationalStandingOrderConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject international standing order consent system o k response has a 4xx status code
func (o *RejectInternationalStandingOrderConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reject international standing order consent system o k response has a 5xx status code
func (o *RejectInternationalStandingOrderConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reject international standing order consent system o k response a status code equal to that given
func (o *RejectInternationalStandingOrderConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reject international standing order consent system o k response
func (o *RejectInternationalStandingOrderConsentSystemOK) Code() int {
	return 200
}

func (o *RejectInternationalStandingOrderConsentSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemOK %s", 200, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemOK %s", 200, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemOK) GetPayload() *models.ConsentRejected {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentRejected)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemUnauthorized creates a RejectInternationalStandingOrderConsentSystemUnauthorized with default headers values
func NewRejectInternationalStandingOrderConsentSystemUnauthorized() *RejectInternationalStandingOrderConsentSystemUnauthorized {
	return &RejectInternationalStandingOrderConsentSystemUnauthorized{}
}

/*
RejectInternationalStandingOrderConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RejectInternationalStandingOrderConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject international standing order consent system unauthorized response has a 2xx status code
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject international standing order consent system unauthorized response has a 3xx status code
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject international standing order consent system unauthorized response has a 4xx status code
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject international standing order consent system unauthorized response has a 5xx status code
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reject international standing order consent system unauthorized response a status code equal to that given
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the reject international standing order consent system unauthorized response
func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemUnauthorized %s", 401, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemUnauthorized %s", 401, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemForbidden creates a RejectInternationalStandingOrderConsentSystemForbidden with default headers values
func NewRejectInternationalStandingOrderConsentSystemForbidden() *RejectInternationalStandingOrderConsentSystemForbidden {
	return &RejectInternationalStandingOrderConsentSystemForbidden{}
}

/*
RejectInternationalStandingOrderConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RejectInternationalStandingOrderConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject international standing order consent system forbidden response has a 2xx status code
func (o *RejectInternationalStandingOrderConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject international standing order consent system forbidden response has a 3xx status code
func (o *RejectInternationalStandingOrderConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject international standing order consent system forbidden response has a 4xx status code
func (o *RejectInternationalStandingOrderConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject international standing order consent system forbidden response has a 5xx status code
func (o *RejectInternationalStandingOrderConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reject international standing order consent system forbidden response a status code equal to that given
func (o *RejectInternationalStandingOrderConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the reject international standing order consent system forbidden response
func (o *RejectInternationalStandingOrderConsentSystemForbidden) Code() int {
	return 403
}

func (o *RejectInternationalStandingOrderConsentSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemForbidden %s", 403, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemForbidden %s", 403, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemNotFound creates a RejectInternationalStandingOrderConsentSystemNotFound with default headers values
func NewRejectInternationalStandingOrderConsentSystemNotFound() *RejectInternationalStandingOrderConsentSystemNotFound {
	return &RejectInternationalStandingOrderConsentSystemNotFound{}
}

/*
RejectInternationalStandingOrderConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type RejectInternationalStandingOrderConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject international standing order consent system not found response has a 2xx status code
func (o *RejectInternationalStandingOrderConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject international standing order consent system not found response has a 3xx status code
func (o *RejectInternationalStandingOrderConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject international standing order consent system not found response has a 4xx status code
func (o *RejectInternationalStandingOrderConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject international standing order consent system not found response has a 5xx status code
func (o *RejectInternationalStandingOrderConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reject international standing order consent system not found response a status code equal to that given
func (o *RejectInternationalStandingOrderConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reject international standing order consent system not found response
func (o *RejectInternationalStandingOrderConsentSystemNotFound) Code() int {
	return 404
}

func (o *RejectInternationalStandingOrderConsentSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemNotFound %s", 404, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemNotFound %s", 404, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectInternationalStandingOrderConsentSystemTooManyRequests creates a RejectInternationalStandingOrderConsentSystemTooManyRequests with default headers values
func NewRejectInternationalStandingOrderConsentSystemTooManyRequests() *RejectInternationalStandingOrderConsentSystemTooManyRequests {
	return &RejectInternationalStandingOrderConsentSystemTooManyRequests{}
}

/*
RejectInternationalStandingOrderConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RejectInternationalStandingOrderConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject international standing order consent system too many requests response has a 2xx status code
func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject international standing order consent system too many requests response has a 3xx status code
func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject international standing order consent system too many requests response has a 4xx status code
func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject international standing order consent system too many requests response has a 5xx status code
func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this reject international standing order consent system too many requests response a status code equal to that given
func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the reject international standing order consent system too many requests response
func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemTooManyRequests %s", 429, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-standing-order-consent/{login}/reject][%d] rejectInternationalStandingOrderConsentSystemTooManyRequests %s", 429, payload)
}

func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectInternationalStandingOrderConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
