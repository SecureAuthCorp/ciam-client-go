// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// AcceptDomesticStandingOrderConsentSystemReader is a Reader for the AcceptDomesticStandingOrderConsentSystem structure.
type AcceptDomesticStandingOrderConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptDomesticStandingOrderConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptDomesticStandingOrderConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAcceptDomesticStandingOrderConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAcceptDomesticStandingOrderConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptDomesticStandingOrderConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAcceptDomesticStandingOrderConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/domestic-standing-order-consent/{login}/accept] acceptDomesticStandingOrderConsentSystem", response, response.Code())
	}
}

// NewAcceptDomesticStandingOrderConsentSystemOK creates a AcceptDomesticStandingOrderConsentSystemOK with default headers values
func NewAcceptDomesticStandingOrderConsentSystemOK() *AcceptDomesticStandingOrderConsentSystemOK {
	return &AcceptDomesticStandingOrderConsentSystemOK{}
}

/*
AcceptDomesticStandingOrderConsentSystemOK describes a response with status code 200, with default header values.

Consent Accepted
*/
type AcceptDomesticStandingOrderConsentSystemOK struct {
	Payload *models.ConsentAccepted
}

// IsSuccess returns true when this accept domestic standing order consent system o k response has a 2xx status code
func (o *AcceptDomesticStandingOrderConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this accept domestic standing order consent system o k response has a 3xx status code
func (o *AcceptDomesticStandingOrderConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept domestic standing order consent system o k response has a 4xx status code
func (o *AcceptDomesticStandingOrderConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this accept domestic standing order consent system o k response has a 5xx status code
func (o *AcceptDomesticStandingOrderConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this accept domestic standing order consent system o k response a status code equal to that given
func (o *AcceptDomesticStandingOrderConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the accept domestic standing order consent system o k response
func (o *AcceptDomesticStandingOrderConsentSystemOK) Code() int {
	return 200
}

func (o *AcceptDomesticStandingOrderConsentSystemOK) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemOK  %+v", 200, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemOK) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemOK  %+v", 200, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemOK) GetPayload() *models.ConsentAccepted {
	return o.Payload
}

func (o *AcceptDomesticStandingOrderConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentAccepted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptDomesticStandingOrderConsentSystemUnauthorized creates a AcceptDomesticStandingOrderConsentSystemUnauthorized with default headers values
func NewAcceptDomesticStandingOrderConsentSystemUnauthorized() *AcceptDomesticStandingOrderConsentSystemUnauthorized {
	return &AcceptDomesticStandingOrderConsentSystemUnauthorized{}
}

/*
AcceptDomesticStandingOrderConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AcceptDomesticStandingOrderConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept domestic standing order consent system unauthorized response has a 2xx status code
func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept domestic standing order consent system unauthorized response has a 3xx status code
func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept domestic standing order consent system unauthorized response has a 4xx status code
func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept domestic standing order consent system unauthorized response has a 5xx status code
func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this accept domestic standing order consent system unauthorized response a status code equal to that given
func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the accept domestic standing order consent system unauthorized response
func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptDomesticStandingOrderConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptDomesticStandingOrderConsentSystemForbidden creates a AcceptDomesticStandingOrderConsentSystemForbidden with default headers values
func NewAcceptDomesticStandingOrderConsentSystemForbidden() *AcceptDomesticStandingOrderConsentSystemForbidden {
	return &AcceptDomesticStandingOrderConsentSystemForbidden{}
}

/*
AcceptDomesticStandingOrderConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AcceptDomesticStandingOrderConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept domestic standing order consent system forbidden response has a 2xx status code
func (o *AcceptDomesticStandingOrderConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept domestic standing order consent system forbidden response has a 3xx status code
func (o *AcceptDomesticStandingOrderConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept domestic standing order consent system forbidden response has a 4xx status code
func (o *AcceptDomesticStandingOrderConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept domestic standing order consent system forbidden response has a 5xx status code
func (o *AcceptDomesticStandingOrderConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this accept domestic standing order consent system forbidden response a status code equal to that given
func (o *AcceptDomesticStandingOrderConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the accept domestic standing order consent system forbidden response
func (o *AcceptDomesticStandingOrderConsentSystemForbidden) Code() int {
	return 403
}

func (o *AcceptDomesticStandingOrderConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemForbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptDomesticStandingOrderConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptDomesticStandingOrderConsentSystemNotFound creates a AcceptDomesticStandingOrderConsentSystemNotFound with default headers values
func NewAcceptDomesticStandingOrderConsentSystemNotFound() *AcceptDomesticStandingOrderConsentSystemNotFound {
	return &AcceptDomesticStandingOrderConsentSystemNotFound{}
}

/*
AcceptDomesticStandingOrderConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type AcceptDomesticStandingOrderConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept domestic standing order consent system not found response has a 2xx status code
func (o *AcceptDomesticStandingOrderConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept domestic standing order consent system not found response has a 3xx status code
func (o *AcceptDomesticStandingOrderConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept domestic standing order consent system not found response has a 4xx status code
func (o *AcceptDomesticStandingOrderConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept domestic standing order consent system not found response has a 5xx status code
func (o *AcceptDomesticStandingOrderConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this accept domestic standing order consent system not found response a status code equal to that given
func (o *AcceptDomesticStandingOrderConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the accept domestic standing order consent system not found response
func (o *AcceptDomesticStandingOrderConsentSystemNotFound) Code() int {
	return 404
}

func (o *AcceptDomesticStandingOrderConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemNotFound) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptDomesticStandingOrderConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptDomesticStandingOrderConsentSystemTooManyRequests creates a AcceptDomesticStandingOrderConsentSystemTooManyRequests with default headers values
func NewAcceptDomesticStandingOrderConsentSystemTooManyRequests() *AcceptDomesticStandingOrderConsentSystemTooManyRequests {
	return &AcceptDomesticStandingOrderConsentSystemTooManyRequests{}
}

/*
AcceptDomesticStandingOrderConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type AcceptDomesticStandingOrderConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept domestic standing order consent system too many requests response has a 2xx status code
func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept domestic standing order consent system too many requests response has a 3xx status code
func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept domestic standing order consent system too many requests response has a 4xx status code
func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept domestic standing order consent system too many requests response has a 5xx status code
func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this accept domestic standing order consent system too many requests response a status code equal to that given
func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the accept domestic standing order consent system too many requests response
func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/accept][%d] acceptDomesticStandingOrderConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptDomesticStandingOrderConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
