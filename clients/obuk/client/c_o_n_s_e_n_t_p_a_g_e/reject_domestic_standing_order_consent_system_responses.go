// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// RejectDomesticStandingOrderConsentSystemReader is a Reader for the RejectDomesticStandingOrderConsentSystem structure.
type RejectDomesticStandingOrderConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectDomesticStandingOrderConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectDomesticStandingOrderConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRejectDomesticStandingOrderConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectDomesticStandingOrderConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectDomesticStandingOrderConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRejectDomesticStandingOrderConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/domestic-standing-order-consent/{login}/reject] rejectDomesticStandingOrderConsentSystem", response, response.Code())
	}
}

// NewRejectDomesticStandingOrderConsentSystemOK creates a RejectDomesticStandingOrderConsentSystemOK with default headers values
func NewRejectDomesticStandingOrderConsentSystemOK() *RejectDomesticStandingOrderConsentSystemOK {
	return &RejectDomesticStandingOrderConsentSystemOK{}
}

/*
RejectDomesticStandingOrderConsentSystemOK describes a response with status code 200, with default header values.

Consent rejected
*/
type RejectDomesticStandingOrderConsentSystemOK struct {
	Payload *models.ConsentRejected
}

// IsSuccess returns true when this reject domestic standing order consent system o k response has a 2xx status code
func (o *RejectDomesticStandingOrderConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reject domestic standing order consent system o k response has a 3xx status code
func (o *RejectDomesticStandingOrderConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic standing order consent system o k response has a 4xx status code
func (o *RejectDomesticStandingOrderConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reject domestic standing order consent system o k response has a 5xx status code
func (o *RejectDomesticStandingOrderConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic standing order consent system o k response a status code equal to that given
func (o *RejectDomesticStandingOrderConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reject domestic standing order consent system o k response
func (o *RejectDomesticStandingOrderConsentSystemOK) Code() int {
	return 200
}

func (o *RejectDomesticStandingOrderConsentSystemOK) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemOK  %+v", 200, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemOK) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemOK  %+v", 200, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemOK) GetPayload() *models.ConsentRejected {
	return o.Payload
}

func (o *RejectDomesticStandingOrderConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentRejected)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticStandingOrderConsentSystemUnauthorized creates a RejectDomesticStandingOrderConsentSystemUnauthorized with default headers values
func NewRejectDomesticStandingOrderConsentSystemUnauthorized() *RejectDomesticStandingOrderConsentSystemUnauthorized {
	return &RejectDomesticStandingOrderConsentSystemUnauthorized{}
}

/*
RejectDomesticStandingOrderConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RejectDomesticStandingOrderConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic standing order consent system unauthorized response has a 2xx status code
func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic standing order consent system unauthorized response has a 3xx status code
func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic standing order consent system unauthorized response has a 4xx status code
func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic standing order consent system unauthorized response has a 5xx status code
func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic standing order consent system unauthorized response a status code equal to that given
func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the reject domestic standing order consent system unauthorized response
func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticStandingOrderConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticStandingOrderConsentSystemForbidden creates a RejectDomesticStandingOrderConsentSystemForbidden with default headers values
func NewRejectDomesticStandingOrderConsentSystemForbidden() *RejectDomesticStandingOrderConsentSystemForbidden {
	return &RejectDomesticStandingOrderConsentSystemForbidden{}
}

/*
RejectDomesticStandingOrderConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RejectDomesticStandingOrderConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic standing order consent system forbidden response has a 2xx status code
func (o *RejectDomesticStandingOrderConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic standing order consent system forbidden response has a 3xx status code
func (o *RejectDomesticStandingOrderConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic standing order consent system forbidden response has a 4xx status code
func (o *RejectDomesticStandingOrderConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic standing order consent system forbidden response has a 5xx status code
func (o *RejectDomesticStandingOrderConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic standing order consent system forbidden response a status code equal to that given
func (o *RejectDomesticStandingOrderConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the reject domestic standing order consent system forbidden response
func (o *RejectDomesticStandingOrderConsentSystemForbidden) Code() int {
	return 403
}

func (o *RejectDomesticStandingOrderConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemForbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticStandingOrderConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticStandingOrderConsentSystemNotFound creates a RejectDomesticStandingOrderConsentSystemNotFound with default headers values
func NewRejectDomesticStandingOrderConsentSystemNotFound() *RejectDomesticStandingOrderConsentSystemNotFound {
	return &RejectDomesticStandingOrderConsentSystemNotFound{}
}

/*
RejectDomesticStandingOrderConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type RejectDomesticStandingOrderConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic standing order consent system not found response has a 2xx status code
func (o *RejectDomesticStandingOrderConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic standing order consent system not found response has a 3xx status code
func (o *RejectDomesticStandingOrderConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic standing order consent system not found response has a 4xx status code
func (o *RejectDomesticStandingOrderConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic standing order consent system not found response has a 5xx status code
func (o *RejectDomesticStandingOrderConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic standing order consent system not found response a status code equal to that given
func (o *RejectDomesticStandingOrderConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reject domestic standing order consent system not found response
func (o *RejectDomesticStandingOrderConsentSystemNotFound) Code() int {
	return 404
}

func (o *RejectDomesticStandingOrderConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemNotFound) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticStandingOrderConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticStandingOrderConsentSystemTooManyRequests creates a RejectDomesticStandingOrderConsentSystemTooManyRequests with default headers values
func NewRejectDomesticStandingOrderConsentSystemTooManyRequests() *RejectDomesticStandingOrderConsentSystemTooManyRequests {
	return &RejectDomesticStandingOrderConsentSystemTooManyRequests{}
}

/*
RejectDomesticStandingOrderConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RejectDomesticStandingOrderConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic standing order consent system too many requests response has a 2xx status code
func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic standing order consent system too many requests response has a 3xx status code
func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic standing order consent system too many requests response has a 4xx status code
func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic standing order consent system too many requests response has a 5xx status code
func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic standing order consent system too many requests response a status code equal to that given
func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the reject domestic standing order consent system too many requests response
func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-standing-order-consent/{login}/reject][%d] rejectDomesticStandingOrderConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticStandingOrderConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
