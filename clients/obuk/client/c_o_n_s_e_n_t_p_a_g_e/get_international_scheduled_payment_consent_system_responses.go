// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// GetInternationalScheduledPaymentConsentSystemReader is a Reader for the GetInternationalScheduledPaymentConsentSystem structure.
type GetInternationalScheduledPaymentConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInternationalScheduledPaymentConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInternationalScheduledPaymentConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetInternationalScheduledPaymentConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInternationalScheduledPaymentConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInternationalScheduledPaymentConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInternationalScheduledPaymentConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /open-banking/international-scheduled-payment-consent/{login}] getInternationalScheduledPaymentConsentSystem", response, response.Code())
	}
}

// NewGetInternationalScheduledPaymentConsentSystemOK creates a GetInternationalScheduledPaymentConsentSystemOK with default headers values
func NewGetInternationalScheduledPaymentConsentSystemOK() *GetInternationalScheduledPaymentConsentSystemOK {
	return &GetInternationalScheduledPaymentConsentSystemOK{}
}

/*
GetInternationalScheduledPaymentConsentSystemOK describes a response with status code 200, with default header values.

GetInternationalScheduledPaymentConsentResponse
*/
type GetInternationalScheduledPaymentConsentSystemOK struct {
	Payload *models.GetInternationalScheduledPaymentConsentResponse
}

// IsSuccess returns true when this get international scheduled payment consent system o k response has a 2xx status code
func (o *GetInternationalScheduledPaymentConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get international scheduled payment consent system o k response has a 3xx status code
func (o *GetInternationalScheduledPaymentConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get international scheduled payment consent system o k response has a 4xx status code
func (o *GetInternationalScheduledPaymentConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get international scheduled payment consent system o k response has a 5xx status code
func (o *GetInternationalScheduledPaymentConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get international scheduled payment consent system o k response a status code equal to that given
func (o *GetInternationalScheduledPaymentConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get international scheduled payment consent system o k response
func (o *GetInternationalScheduledPaymentConsentSystemOK) Code() int {
	return 200
}

func (o *GetInternationalScheduledPaymentConsentSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemOK %s", 200, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemOK %s", 200, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemOK) GetPayload() *models.GetInternationalScheduledPaymentConsentResponse {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetInternationalScheduledPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemUnauthorized creates a GetInternationalScheduledPaymentConsentSystemUnauthorized with default headers values
func NewGetInternationalScheduledPaymentConsentSystemUnauthorized() *GetInternationalScheduledPaymentConsentSystemUnauthorized {
	return &GetInternationalScheduledPaymentConsentSystemUnauthorized{}
}

/*
GetInternationalScheduledPaymentConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetInternationalScheduledPaymentConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get international scheduled payment consent system unauthorized response has a 2xx status code
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get international scheduled payment consent system unauthorized response has a 3xx status code
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get international scheduled payment consent system unauthorized response has a 4xx status code
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get international scheduled payment consent system unauthorized response has a 5xx status code
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get international scheduled payment consent system unauthorized response a status code equal to that given
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get international scheduled payment consent system unauthorized response
func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemUnauthorized %s", 401, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemUnauthorized %s", 401, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemForbidden creates a GetInternationalScheduledPaymentConsentSystemForbidden with default headers values
func NewGetInternationalScheduledPaymentConsentSystemForbidden() *GetInternationalScheduledPaymentConsentSystemForbidden {
	return &GetInternationalScheduledPaymentConsentSystemForbidden{}
}

/*
GetInternationalScheduledPaymentConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetInternationalScheduledPaymentConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get international scheduled payment consent system forbidden response has a 2xx status code
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get international scheduled payment consent system forbidden response has a 3xx status code
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get international scheduled payment consent system forbidden response has a 4xx status code
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get international scheduled payment consent system forbidden response has a 5xx status code
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get international scheduled payment consent system forbidden response a status code equal to that given
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get international scheduled payment consent system forbidden response
func (o *GetInternationalScheduledPaymentConsentSystemForbidden) Code() int {
	return 403
}

func (o *GetInternationalScheduledPaymentConsentSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemForbidden %s", 403, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemForbidden %s", 403, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemNotFound creates a GetInternationalScheduledPaymentConsentSystemNotFound with default headers values
func NewGetInternationalScheduledPaymentConsentSystemNotFound() *GetInternationalScheduledPaymentConsentSystemNotFound {
	return &GetInternationalScheduledPaymentConsentSystemNotFound{}
}

/*
GetInternationalScheduledPaymentConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetInternationalScheduledPaymentConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get international scheduled payment consent system not found response has a 2xx status code
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get international scheduled payment consent system not found response has a 3xx status code
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get international scheduled payment consent system not found response has a 4xx status code
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get international scheduled payment consent system not found response has a 5xx status code
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get international scheduled payment consent system not found response a status code equal to that given
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get international scheduled payment consent system not found response
func (o *GetInternationalScheduledPaymentConsentSystemNotFound) Code() int {
	return 404
}

func (o *GetInternationalScheduledPaymentConsentSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemNotFound %s", 404, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemNotFound %s", 404, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInternationalScheduledPaymentConsentSystemTooManyRequests creates a GetInternationalScheduledPaymentConsentSystemTooManyRequests with default headers values
func NewGetInternationalScheduledPaymentConsentSystemTooManyRequests() *GetInternationalScheduledPaymentConsentSystemTooManyRequests {
	return &GetInternationalScheduledPaymentConsentSystemTooManyRequests{}
}

/*
GetInternationalScheduledPaymentConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetInternationalScheduledPaymentConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get international scheduled payment consent system too many requests response has a 2xx status code
func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get international scheduled payment consent system too many requests response has a 3xx status code
func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get international scheduled payment consent system too many requests response has a 4xx status code
func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get international scheduled payment consent system too many requests response has a 5xx status code
func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get international scheduled payment consent system too many requests response a status code equal to that given
func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get international scheduled payment consent system too many requests response
func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemTooManyRequests %s", 429, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/international-scheduled-payment-consent/{login}][%d] getInternationalScheduledPaymentConsentSystemTooManyRequests %s", 429, payload)
}

func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetInternationalScheduledPaymentConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
