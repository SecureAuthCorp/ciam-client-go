// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// RejectDomesticPaymentConsentSystemReader is a Reader for the RejectDomesticPaymentConsentSystem structure.
type RejectDomesticPaymentConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectDomesticPaymentConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectDomesticPaymentConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRejectDomesticPaymentConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectDomesticPaymentConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectDomesticPaymentConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRejectDomesticPaymentConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/domestic-payment-consent/{login}/reject] rejectDomesticPaymentConsentSystem", response, response.Code())
	}
}

// NewRejectDomesticPaymentConsentSystemOK creates a RejectDomesticPaymentConsentSystemOK with default headers values
func NewRejectDomesticPaymentConsentSystemOK() *RejectDomesticPaymentConsentSystemOK {
	return &RejectDomesticPaymentConsentSystemOK{}
}

/*
RejectDomesticPaymentConsentSystemOK describes a response with status code 200, with default header values.

Consent rejected
*/
type RejectDomesticPaymentConsentSystemOK struct {
	Payload *models.ConsentRejected
}

// IsSuccess returns true when this reject domestic payment consent system o k response has a 2xx status code
func (o *RejectDomesticPaymentConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reject domestic payment consent system o k response has a 3xx status code
func (o *RejectDomesticPaymentConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic payment consent system o k response has a 4xx status code
func (o *RejectDomesticPaymentConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reject domestic payment consent system o k response has a 5xx status code
func (o *RejectDomesticPaymentConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic payment consent system o k response a status code equal to that given
func (o *RejectDomesticPaymentConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reject domestic payment consent system o k response
func (o *RejectDomesticPaymentConsentSystemOK) Code() int {
	return 200
}

func (o *RejectDomesticPaymentConsentSystemOK) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemOK  %+v", 200, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemOK) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemOK  %+v", 200, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemOK) GetPayload() *models.ConsentRejected {
	return o.Payload
}

func (o *RejectDomesticPaymentConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentRejected)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticPaymentConsentSystemUnauthorized creates a RejectDomesticPaymentConsentSystemUnauthorized with default headers values
func NewRejectDomesticPaymentConsentSystemUnauthorized() *RejectDomesticPaymentConsentSystemUnauthorized {
	return &RejectDomesticPaymentConsentSystemUnauthorized{}
}

/*
RejectDomesticPaymentConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RejectDomesticPaymentConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic payment consent system unauthorized response has a 2xx status code
func (o *RejectDomesticPaymentConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic payment consent system unauthorized response has a 3xx status code
func (o *RejectDomesticPaymentConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic payment consent system unauthorized response has a 4xx status code
func (o *RejectDomesticPaymentConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic payment consent system unauthorized response has a 5xx status code
func (o *RejectDomesticPaymentConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic payment consent system unauthorized response a status code equal to that given
func (o *RejectDomesticPaymentConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the reject domestic payment consent system unauthorized response
func (o *RejectDomesticPaymentConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *RejectDomesticPaymentConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticPaymentConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticPaymentConsentSystemForbidden creates a RejectDomesticPaymentConsentSystemForbidden with default headers values
func NewRejectDomesticPaymentConsentSystemForbidden() *RejectDomesticPaymentConsentSystemForbidden {
	return &RejectDomesticPaymentConsentSystemForbidden{}
}

/*
RejectDomesticPaymentConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RejectDomesticPaymentConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic payment consent system forbidden response has a 2xx status code
func (o *RejectDomesticPaymentConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic payment consent system forbidden response has a 3xx status code
func (o *RejectDomesticPaymentConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic payment consent system forbidden response has a 4xx status code
func (o *RejectDomesticPaymentConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic payment consent system forbidden response has a 5xx status code
func (o *RejectDomesticPaymentConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic payment consent system forbidden response a status code equal to that given
func (o *RejectDomesticPaymentConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the reject domestic payment consent system forbidden response
func (o *RejectDomesticPaymentConsentSystemForbidden) Code() int {
	return 403
}

func (o *RejectDomesticPaymentConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemForbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticPaymentConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticPaymentConsentSystemNotFound creates a RejectDomesticPaymentConsentSystemNotFound with default headers values
func NewRejectDomesticPaymentConsentSystemNotFound() *RejectDomesticPaymentConsentSystemNotFound {
	return &RejectDomesticPaymentConsentSystemNotFound{}
}

/*
RejectDomesticPaymentConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type RejectDomesticPaymentConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic payment consent system not found response has a 2xx status code
func (o *RejectDomesticPaymentConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic payment consent system not found response has a 3xx status code
func (o *RejectDomesticPaymentConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic payment consent system not found response has a 4xx status code
func (o *RejectDomesticPaymentConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic payment consent system not found response has a 5xx status code
func (o *RejectDomesticPaymentConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic payment consent system not found response a status code equal to that given
func (o *RejectDomesticPaymentConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reject domestic payment consent system not found response
func (o *RejectDomesticPaymentConsentSystemNotFound) Code() int {
	return 404
}

func (o *RejectDomesticPaymentConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemNotFound) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticPaymentConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectDomesticPaymentConsentSystemTooManyRequests creates a RejectDomesticPaymentConsentSystemTooManyRequests with default headers values
func NewRejectDomesticPaymentConsentSystemTooManyRequests() *RejectDomesticPaymentConsentSystemTooManyRequests {
	return &RejectDomesticPaymentConsentSystemTooManyRequests{}
}

/*
RejectDomesticPaymentConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RejectDomesticPaymentConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject domestic payment consent system too many requests response has a 2xx status code
func (o *RejectDomesticPaymentConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject domestic payment consent system too many requests response has a 3xx status code
func (o *RejectDomesticPaymentConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject domestic payment consent system too many requests response has a 4xx status code
func (o *RejectDomesticPaymentConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject domestic payment consent system too many requests response has a 5xx status code
func (o *RejectDomesticPaymentConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this reject domestic payment consent system too many requests response a status code equal to that given
func (o *RejectDomesticPaymentConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the reject domestic payment consent system too many requests response
func (o *RejectDomesticPaymentConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *RejectDomesticPaymentConsentSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/domestic-payment-consent/{login}/reject][%d] rejectDomesticPaymentConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *RejectDomesticPaymentConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectDomesticPaymentConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
