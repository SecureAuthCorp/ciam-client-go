// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obuk/models"
)

// AcceptInternationalScheduledPaymentConsentSystemReader is a Reader for the AcceptInternationalScheduledPaymentConsentSystem structure.
type AcceptInternationalScheduledPaymentConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptInternationalScheduledPaymentConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptInternationalScheduledPaymentConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAcceptInternationalScheduledPaymentConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAcceptInternationalScheduledPaymentConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptInternationalScheduledPaymentConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAcceptInternationalScheduledPaymentConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/international-scheduled-payment-consent/{login}/accept] acceptInternationalScheduledPaymentConsentSystem", response, response.Code())
	}
}

// NewAcceptInternationalScheduledPaymentConsentSystemOK creates a AcceptInternationalScheduledPaymentConsentSystemOK with default headers values
func NewAcceptInternationalScheduledPaymentConsentSystemOK() *AcceptInternationalScheduledPaymentConsentSystemOK {
	return &AcceptInternationalScheduledPaymentConsentSystemOK{}
}

/*
AcceptInternationalScheduledPaymentConsentSystemOK describes a response with status code 200, with default header values.

Consent Accepted
*/
type AcceptInternationalScheduledPaymentConsentSystemOK struct {
	Payload *models.ConsentAccepted
}

// IsSuccess returns true when this accept international scheduled payment consent system o k response has a 2xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this accept international scheduled payment consent system o k response has a 3xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept international scheduled payment consent system o k response has a 4xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this accept international scheduled payment consent system o k response has a 5xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this accept international scheduled payment consent system o k response a status code equal to that given
func (o *AcceptInternationalScheduledPaymentConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the accept international scheduled payment consent system o k response
func (o *AcceptInternationalScheduledPaymentConsentSystemOK) Code() int {
	return 200
}

func (o *AcceptInternationalScheduledPaymentConsentSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemOK %s", 200, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemOK %s", 200, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemOK) GetPayload() *models.ConsentAccepted {
	return o.Payload
}

func (o *AcceptInternationalScheduledPaymentConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentAccepted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptInternationalScheduledPaymentConsentSystemUnauthorized creates a AcceptInternationalScheduledPaymentConsentSystemUnauthorized with default headers values
func NewAcceptInternationalScheduledPaymentConsentSystemUnauthorized() *AcceptInternationalScheduledPaymentConsentSystemUnauthorized {
	return &AcceptInternationalScheduledPaymentConsentSystemUnauthorized{}
}

/*
AcceptInternationalScheduledPaymentConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AcceptInternationalScheduledPaymentConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept international scheduled payment consent system unauthorized response has a 2xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept international scheduled payment consent system unauthorized response has a 3xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept international scheduled payment consent system unauthorized response has a 4xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept international scheduled payment consent system unauthorized response has a 5xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this accept international scheduled payment consent system unauthorized response a status code equal to that given
func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the accept international scheduled payment consent system unauthorized response
func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemUnauthorized %s", 401, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemUnauthorized %s", 401, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptInternationalScheduledPaymentConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptInternationalScheduledPaymentConsentSystemForbidden creates a AcceptInternationalScheduledPaymentConsentSystemForbidden with default headers values
func NewAcceptInternationalScheduledPaymentConsentSystemForbidden() *AcceptInternationalScheduledPaymentConsentSystemForbidden {
	return &AcceptInternationalScheduledPaymentConsentSystemForbidden{}
}

/*
AcceptInternationalScheduledPaymentConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AcceptInternationalScheduledPaymentConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept international scheduled payment consent system forbidden response has a 2xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept international scheduled payment consent system forbidden response has a 3xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept international scheduled payment consent system forbidden response has a 4xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept international scheduled payment consent system forbidden response has a 5xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this accept international scheduled payment consent system forbidden response a status code equal to that given
func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the accept international scheduled payment consent system forbidden response
func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) Code() int {
	return 403
}

func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemForbidden %s", 403, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemForbidden %s", 403, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptInternationalScheduledPaymentConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptInternationalScheduledPaymentConsentSystemNotFound creates a AcceptInternationalScheduledPaymentConsentSystemNotFound with default headers values
func NewAcceptInternationalScheduledPaymentConsentSystemNotFound() *AcceptInternationalScheduledPaymentConsentSystemNotFound {
	return &AcceptInternationalScheduledPaymentConsentSystemNotFound{}
}

/*
AcceptInternationalScheduledPaymentConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type AcceptInternationalScheduledPaymentConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept international scheduled payment consent system not found response has a 2xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept international scheduled payment consent system not found response has a 3xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept international scheduled payment consent system not found response has a 4xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept international scheduled payment consent system not found response has a 5xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this accept international scheduled payment consent system not found response a status code equal to that given
func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the accept international scheduled payment consent system not found response
func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) Code() int {
	return 404
}

func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemNotFound %s", 404, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemNotFound %s", 404, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptInternationalScheduledPaymentConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptInternationalScheduledPaymentConsentSystemTooManyRequests creates a AcceptInternationalScheduledPaymentConsentSystemTooManyRequests with default headers values
func NewAcceptInternationalScheduledPaymentConsentSystemTooManyRequests() *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests {
	return &AcceptInternationalScheduledPaymentConsentSystemTooManyRequests{}
}

/*
AcceptInternationalScheduledPaymentConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type AcceptInternationalScheduledPaymentConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept international scheduled payment consent system too many requests response has a 2xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept international scheduled payment consent system too many requests response has a 3xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept international scheduled payment consent system too many requests response has a 4xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept international scheduled payment consent system too many requests response has a 5xx status code
func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this accept international scheduled payment consent system too many requests response a status code equal to that given
func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the accept international scheduled payment consent system too many requests response
func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemTooManyRequests %s", 429, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/international-scheduled-payment-consent/{login}/accept][%d] acceptInternationalScheduledPaymentConsentSystemTooManyRequests %s", 429, payload)
}

func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptInternationalScheduledPaymentConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
