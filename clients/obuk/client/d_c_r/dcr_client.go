// Code generated by go-swagger; DO NOT EDIT.

package d_c_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// New creates a new d c r API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

// New creates a new d c r API client with basic auth credentials.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - user: user for basic authentication header.
// - password: password for basic authentication header.
func NewClientWithBasicAuth(host, basePath, scheme, user, password string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BasicAuth(user, password)
	return &Client{transport: transport, formats: strfmt.Default}
}

// New creates a new d c r API client with a bearer token for authentication.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - bearerToken: bearer token for Bearer authentication header.
func NewClientWithBearerToken(host, basePath, scheme, bearerToken string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BearerToken(bearerToken)
	return &Client{transport: transport, formats: strfmt.Default}
}

/*
Client for d c r API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption may be used to customize the behavior of Client methods.
type ClientOption func(*runtime.ClientOperation)

// This client is generated with a few options you might find useful for your swagger spec.
//
// Feel free to add you own set of options.

// WithContentType allows the client to force the Content-Type header
// to negotiate a specific Consumer from the server.
//
// You may use this option to set arbitrary extensions to your MIME media type.
func WithContentType(mime string) ClientOption {
	return func(r *runtime.ClientOperation) {
		r.ConsumesMediaTypes = []string{mime}
	}
}

// WithContentTypeApplicationJose sets the Content-Type header to "application/jose".
func WithContentTypeApplicationJose(r *runtime.ClientOperation) {
	r.ConsumesMediaTypes = []string{"application/jose"}
}

// WithContentTypeApplicationJSON sets the Content-Type header to "application/json".
func WithContentTypeApplicationJSON(r *runtime.ClientOperation) {
	r.ConsumesMediaTypes = []string{"application/json"}
}

// ClientService is the interface for Client methods
type ClientService interface {
	DynamicClientRegistrationOpenbankingUK(params *DynamicClientRegistrationOpenbankingUKParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKCreated, error)

	DynamicClientRegistrationOpenbankingUKDeleteClient(params *DynamicClientRegistrationOpenbankingUKDeleteClientParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKDeleteClientNoContent, error)

	DynamicClientRegistrationOpenbankingUKGetClient(params *DynamicClientRegistrationOpenbankingUKGetClientParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKGetClientOK, error)

	DynamicClientRegistrationOpenbankingUKUpdateClient(params *DynamicClientRegistrationOpenbankingUKUpdateClientParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKUpdateClientOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	DynamicClientRegistrationOpenbankingUK openbankings u k compliant dynamic client registration endpoint

	This endpoint can be used to dynamically register new clients.

Request body must be signed.
Please take a look at reference to see what fields are required:
https://openbankinguk.github.io/dcr-docs-pub/v3.2/dynamic-client-registration.html
Consider adding client credentials grant type to a client to be able to modify it later on.
*/
func (a *Client) DynamicClientRegistrationOpenbankingUK(params *DynamicClientRegistrationOpenbankingUKParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDynamicClientRegistrationOpenbankingUKParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "dynamicClientRegistrationOpenbankingUK",
		Method:             "POST",
		PathPattern:        "/openbankinguk/dcr/v3.2/register",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/jose"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DynamicClientRegistrationOpenbankingUKReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DynamicClientRegistrationOpenbankingUKCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for dynamicClientRegistrationOpenbankingUK: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	DynamicClientRegistrationOpenbankingUKDeleteClient openbankings u k compliant dynamic delete client endpoint

	This endpoint can be used to delete registered client details.

Use client credentials flow to authorize to this api.
*/
func (a *Client) DynamicClientRegistrationOpenbankingUKDeleteClient(params *DynamicClientRegistrationOpenbankingUKDeleteClientParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKDeleteClientNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDynamicClientRegistrationOpenbankingUKDeleteClientParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "dynamicClientRegistrationOpenbankingUKDeleteClient",
		Method:             "DELETE",
		PathPattern:        "/openbankinguk/dcr/v3.2/register/{cid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DynamicClientRegistrationOpenbankingUKDeleteClientReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DynamicClientRegistrationOpenbankingUKDeleteClientNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for dynamicClientRegistrationOpenbankingUKDeleteClient: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	DynamicClientRegistrationOpenbankingUKGetClient openbankings u k compliant dynamic get client endpoint

	This endpoint can be used to get registered client details.

Use client credentials flow to authorize to this api.
*/
func (a *Client) DynamicClientRegistrationOpenbankingUKGetClient(params *DynamicClientRegistrationOpenbankingUKGetClientParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKGetClientOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDynamicClientRegistrationOpenbankingUKGetClientParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "dynamicClientRegistrationOpenbankingUKGetClient",
		Method:             "GET",
		PathPattern:        "/openbankinguk/dcr/v3.2/register/{cid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DynamicClientRegistrationOpenbankingUKGetClientReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DynamicClientRegistrationOpenbankingUKGetClientOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for dynamicClientRegistrationOpenbankingUKGetClient: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	DynamicClientRegistrationOpenbankingUKUpdateClient openbankings u k compliant dynamic update client endpoint

	This endpoint can be used to update registered client details.

Use client credentials flow to authorize to this api.
*/
func (a *Client) DynamicClientRegistrationOpenbankingUKUpdateClient(params *DynamicClientRegistrationOpenbankingUKUpdateClientParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DynamicClientRegistrationOpenbankingUKUpdateClientOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDynamicClientRegistrationOpenbankingUKUpdateClientParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "dynamicClientRegistrationOpenbankingUKUpdateClient",
		Method:             "PUT",
		PathPattern:        "/openbankinguk/dcr/v3.2/register/{cid}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/jose"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &DynamicClientRegistrationOpenbankingUKUpdateClientReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DynamicClientRegistrationOpenbankingUKUpdateClientOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for dynamicClientRegistrationOpenbankingUKUpdateClient: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
