// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CredentialFlags credential flags
//
// swagger:model CredentialFlags
type CredentialFlags struct {

	// Flag BE indicates the credential is able to be backed up and/or sync'd between devices. This should NEVER change.
	BackupEligible bool `json:"backupEligible,omitempty" yaml:"backupEligible,omitempty"`

	// Flag BS indicates the credential has been backed up and/or sync'd. This value can change but it's recommended
	// that RP's keep track of this value.
	BackupState bool `json:"backupState,omitempty" yaml:"backupState,omitempty"`

	// Flag UP indicates the users presence.
	UserPresent bool `json:"userPresent,omitempty" yaml:"userPresent,omitempty"`

	// Flag UV indicates the user performed verification.
	UserVerified bool `json:"userVerified,omitempty" yaml:"userVerified,omitempty"`
}

// Validate validates this credential flags
func (m *CredentialFlags) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this credential flags based on context it is used
func (m *CredentialFlags) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CredentialFlags) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CredentialFlags) UnmarshalBinary(b []byte) error {
	var res CredentialFlags
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
