// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VerifyPasswordResponseDataV2 verify password response data v2
//
// swagger:model VerifyPasswordResponseDataV2
type VerifyPasswordResponseDataV2 struct {

	// id
	// Required: true
	ID string `json:"id" yaml:"id"`

	// result
	// Required: true
	// Enum: [password_correct password_incorrect password_expired no_password user_not_found]
	Result string `json:"result" yaml:"result"`

	// state
	// Required: true
	// Enum: [valid must_be_reset must_be_changed]
	State string `json:"state" yaml:"state"`
}

// Validate validates this verify password response data v2
func (m *VerifyPasswordResponseDataV2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VerifyPasswordResponseDataV2) validateID(formats strfmt.Registry) error {

	if err := validate.RequiredString("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

var verifyPasswordResponseDataV2TypeResultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["password_correct","password_incorrect","password_expired","no_password","user_not_found"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		verifyPasswordResponseDataV2TypeResultPropEnum = append(verifyPasswordResponseDataV2TypeResultPropEnum, v)
	}
}

const (

	// VerifyPasswordResponseDataV2ResultPasswordCorrect captures enum value "password_correct"
	VerifyPasswordResponseDataV2ResultPasswordCorrect string = "password_correct"

	// VerifyPasswordResponseDataV2ResultPasswordIncorrect captures enum value "password_incorrect"
	VerifyPasswordResponseDataV2ResultPasswordIncorrect string = "password_incorrect"

	// VerifyPasswordResponseDataV2ResultPasswordExpired captures enum value "password_expired"
	VerifyPasswordResponseDataV2ResultPasswordExpired string = "password_expired"

	// VerifyPasswordResponseDataV2ResultNoPassword captures enum value "no_password"
	VerifyPasswordResponseDataV2ResultNoPassword string = "no_password"

	// VerifyPasswordResponseDataV2ResultUserNotFound captures enum value "user_not_found"
	VerifyPasswordResponseDataV2ResultUserNotFound string = "user_not_found"
)

// prop value enum
func (m *VerifyPasswordResponseDataV2) validateResultEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, verifyPasswordResponseDataV2TypeResultPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VerifyPasswordResponseDataV2) validateResult(formats strfmt.Registry) error {

	if err := validate.RequiredString("result", "body", m.Result); err != nil {
		return err
	}

	// value enum
	if err := m.validateResultEnum("result", "body", m.Result); err != nil {
		return err
	}

	return nil
}

var verifyPasswordResponseDataV2TypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["valid","must_be_reset","must_be_changed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		verifyPasswordResponseDataV2TypeStatePropEnum = append(verifyPasswordResponseDataV2TypeStatePropEnum, v)
	}
}

const (

	// VerifyPasswordResponseDataV2StateValid captures enum value "valid"
	VerifyPasswordResponseDataV2StateValid string = "valid"

	// VerifyPasswordResponseDataV2StateMustBeReset captures enum value "must_be_reset"
	VerifyPasswordResponseDataV2StateMustBeReset string = "must_be_reset"

	// VerifyPasswordResponseDataV2StateMustBeChanged captures enum value "must_be_changed"
	VerifyPasswordResponseDataV2StateMustBeChanged string = "must_be_changed"
)

// prop value enum
func (m *VerifyPasswordResponseDataV2) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, verifyPasswordResponseDataV2TypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VerifyPasswordResponseDataV2) validateState(formats strfmt.Registry) error {

	if err := validate.RequiredString("state", "body", m.State); err != nil {
		return err
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this verify password response data v2 based on context it is used
func (m *VerifyPasswordResponseDataV2) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VerifyPasswordResponseDataV2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VerifyPasswordResponseDataV2) UnmarshalBinary(b []byte) error {
	var res VerifyPasswordResponseDataV2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
