// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InspectOTPUserOperationalData inspect o t p user operational data
//
// swagger:model InspectOTPUserOperationalData
type InspectOTPUserOperationalData struct {

	// code type
	// Required: true
	// Enum: ["activation","reset_password","reset_totp","enroll_webauthn","challenge","verify_address","authentication"]
	CodeType string `json:"code_type" yaml:"code_type"`

	// password set
	// Required: true
	PasswordSet bool `json:"password_set" yaml:"password_set"`

	// user id
	// Required: true
	UserID string `json:"user_id" yaml:"user_id"`
}

// Validate validates this inspect o t p user operational data
func (m *InspectOTPUserOperationalData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCodeType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePasswordSet(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var inspectOTPUserOperationalDataTypeCodeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["activation","reset_password","reset_totp","enroll_webauthn","challenge","verify_address","authentication"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inspectOTPUserOperationalDataTypeCodeTypePropEnum = append(inspectOTPUserOperationalDataTypeCodeTypePropEnum, v)
	}
}

const (

	// InspectOTPUserOperationalDataCodeTypeActivation captures enum value "activation"
	InspectOTPUserOperationalDataCodeTypeActivation string = "activation"

	// InspectOTPUserOperationalDataCodeTypeResetPassword captures enum value "reset_password"
	InspectOTPUserOperationalDataCodeTypeResetPassword string = "reset_password"

	// InspectOTPUserOperationalDataCodeTypeResetTotp captures enum value "reset_totp"
	InspectOTPUserOperationalDataCodeTypeResetTotp string = "reset_totp"

	// InspectOTPUserOperationalDataCodeTypeEnrollWebauthn captures enum value "enroll_webauthn"
	InspectOTPUserOperationalDataCodeTypeEnrollWebauthn string = "enroll_webauthn"

	// InspectOTPUserOperationalDataCodeTypeChallenge captures enum value "challenge"
	InspectOTPUserOperationalDataCodeTypeChallenge string = "challenge"

	// InspectOTPUserOperationalDataCodeTypeVerifyAddress captures enum value "verify_address"
	InspectOTPUserOperationalDataCodeTypeVerifyAddress string = "verify_address"

	// InspectOTPUserOperationalDataCodeTypeAuthentication captures enum value "authentication"
	InspectOTPUserOperationalDataCodeTypeAuthentication string = "authentication"
)

// prop value enum
func (m *InspectOTPUserOperationalData) validateCodeTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, inspectOTPUserOperationalDataTypeCodeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *InspectOTPUserOperationalData) validateCodeType(formats strfmt.Registry) error {

	if err := validate.RequiredString("code_type", "body", m.CodeType); err != nil {
		return err
	}

	// value enum
	if err := m.validateCodeTypeEnum("code_type", "body", m.CodeType); err != nil {
		return err
	}

	return nil
}

func (m *InspectOTPUserOperationalData) validatePasswordSet(formats strfmt.Registry) error {

	if err := validate.Required("password_set", "body", bool(m.PasswordSet)); err != nil {
		return err
	}

	return nil
}

func (m *InspectOTPUserOperationalData) validateUserID(formats strfmt.Registry) error {

	if err := validate.RequiredString("user_id", "body", m.UserID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inspect o t p user operational data based on context it is used
func (m *InspectOTPUserOperationalData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InspectOTPUserOperationalData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InspectOTPUserOperationalData) UnmarshalBinary(b []byte) error {
	var res InspectOTPUserOperationalData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
