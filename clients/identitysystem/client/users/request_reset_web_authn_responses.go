// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// RequestResetWebAuthnReader is a Reader for the RequestResetWebAuthn structure.
type RequestResetWebAuthnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestResetWebAuthnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRequestResetWebAuthnNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestResetWebAuthnBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRequestResetWebAuthnUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewRequestResetWebAuthnPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRequestResetWebAuthnUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/user/webauthn/reset/request] requestResetWebAuthn", response, response.Code())
	}
}

// NewRequestResetWebAuthnNoContent creates a RequestResetWebAuthnNoContent with default headers values
func NewRequestResetWebAuthnNoContent() *RequestResetWebAuthnNoContent {
	return &RequestResetWebAuthnNoContent{}
}

/*
RequestResetWebAuthnNoContent describes a response with status code 204, with default header values.

Request accepted
*/
type RequestResetWebAuthnNoContent struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string
}

// IsSuccess returns true when this request reset web authn no content response has a 2xx status code
func (o *RequestResetWebAuthnNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request reset web authn no content response has a 3xx status code
func (o *RequestResetWebAuthnNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reset web authn no content response has a 4xx status code
func (o *RequestResetWebAuthnNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this request reset web authn no content response has a 5xx status code
func (o *RequestResetWebAuthnNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this request reset web authn no content response a status code equal to that given
func (o *RequestResetWebAuthnNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the request reset web authn no content response
func (o *RequestResetWebAuthnNoContent) Code() int {
	return 204
}

func (o *RequestResetWebAuthnNoContent) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnNoContent ", 204)
}

func (o *RequestResetWebAuthnNoContent) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnNoContent ", 204)
}

func (o *RequestResetWebAuthnNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	return nil
}

// NewRequestResetWebAuthnBadRequest creates a RequestResetWebAuthnBadRequest with default headers values
func NewRequestResetWebAuthnBadRequest() *RequestResetWebAuthnBadRequest {
	return &RequestResetWebAuthnBadRequest{}
}

/*
RequestResetWebAuthnBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RequestResetWebAuthnBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this request reset web authn bad request response has a 2xx status code
func (o *RequestResetWebAuthnBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reset web authn bad request response has a 3xx status code
func (o *RequestResetWebAuthnBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reset web authn bad request response has a 4xx status code
func (o *RequestResetWebAuthnBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reset web authn bad request response has a 5xx status code
func (o *RequestResetWebAuthnBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this request reset web authn bad request response a status code equal to that given
func (o *RequestResetWebAuthnBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the request reset web authn bad request response
func (o *RequestResetWebAuthnBadRequest) Code() int {
	return 400
}

func (o *RequestResetWebAuthnBadRequest) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnBadRequest  %+v", 400, o.Payload)
}

func (o *RequestResetWebAuthnBadRequest) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnBadRequest  %+v", 400, o.Payload)
}

func (o *RequestResetWebAuthnBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestResetWebAuthnBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestResetWebAuthnUnauthorized creates a RequestResetWebAuthnUnauthorized with default headers values
func NewRequestResetWebAuthnUnauthorized() *RequestResetWebAuthnUnauthorized {
	return &RequestResetWebAuthnUnauthorized{}
}

/*
RequestResetWebAuthnUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RequestResetWebAuthnUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this request reset web authn unauthorized response has a 2xx status code
func (o *RequestResetWebAuthnUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reset web authn unauthorized response has a 3xx status code
func (o *RequestResetWebAuthnUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reset web authn unauthorized response has a 4xx status code
func (o *RequestResetWebAuthnUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reset web authn unauthorized response has a 5xx status code
func (o *RequestResetWebAuthnUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this request reset web authn unauthorized response a status code equal to that given
func (o *RequestResetWebAuthnUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the request reset web authn unauthorized response
func (o *RequestResetWebAuthnUnauthorized) Code() int {
	return 401
}

func (o *RequestResetWebAuthnUnauthorized) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnUnauthorized  %+v", 401, o.Payload)
}

func (o *RequestResetWebAuthnUnauthorized) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnUnauthorized  %+v", 401, o.Payload)
}

func (o *RequestResetWebAuthnUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestResetWebAuthnUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestResetWebAuthnPreconditionFailed creates a RequestResetWebAuthnPreconditionFailed with default headers values
func NewRequestResetWebAuthnPreconditionFailed() *RequestResetWebAuthnPreconditionFailed {
	return &RequestResetWebAuthnPreconditionFailed{}
}

/*
RequestResetWebAuthnPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type RequestResetWebAuthnPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this request reset web authn precondition failed response has a 2xx status code
func (o *RequestResetWebAuthnPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reset web authn precondition failed response has a 3xx status code
func (o *RequestResetWebAuthnPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reset web authn precondition failed response has a 4xx status code
func (o *RequestResetWebAuthnPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reset web authn precondition failed response has a 5xx status code
func (o *RequestResetWebAuthnPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this request reset web authn precondition failed response a status code equal to that given
func (o *RequestResetWebAuthnPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the request reset web authn precondition failed response
func (o *RequestResetWebAuthnPreconditionFailed) Code() int {
	return 412
}

func (o *RequestResetWebAuthnPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnPreconditionFailed  %+v", 412, o.Payload)
}

func (o *RequestResetWebAuthnPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnPreconditionFailed  %+v", 412, o.Payload)
}

func (o *RequestResetWebAuthnPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestResetWebAuthnPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestResetWebAuthnUnprocessableEntity creates a RequestResetWebAuthnUnprocessableEntity with default headers values
func NewRequestResetWebAuthnUnprocessableEntity() *RequestResetWebAuthnUnprocessableEntity {
	return &RequestResetWebAuthnUnprocessableEntity{}
}

/*
RequestResetWebAuthnUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type RequestResetWebAuthnUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this request reset web authn unprocessable entity response has a 2xx status code
func (o *RequestResetWebAuthnUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request reset web authn unprocessable entity response has a 3xx status code
func (o *RequestResetWebAuthnUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request reset web authn unprocessable entity response has a 4xx status code
func (o *RequestResetWebAuthnUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this request reset web authn unprocessable entity response has a 5xx status code
func (o *RequestResetWebAuthnUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this request reset web authn unprocessable entity response a status code equal to that given
func (o *RequestResetWebAuthnUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the request reset web authn unprocessable entity response
func (o *RequestResetWebAuthnUnprocessableEntity) Code() int {
	return 422
}

func (o *RequestResetWebAuthnUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RequestResetWebAuthnUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/reset/request][%d] requestResetWebAuthnUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *RequestResetWebAuthnUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestResetWebAuthnUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
