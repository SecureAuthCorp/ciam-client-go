// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// NewSystemGetUserByKeyParams creates a new SystemGetUserByKeyParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSystemGetUserByKeyParams() *SystemGetUserByKeyParams {
	return &SystemGetUserByKeyParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSystemGetUserByKeyParamsWithTimeout creates a new SystemGetUserByKeyParams object
// with the ability to set a timeout on a request.
func NewSystemGetUserByKeyParamsWithTimeout(timeout time.Duration) *SystemGetUserByKeyParams {
	return &SystemGetUserByKeyParams{
		timeout: timeout,
	}
}

// NewSystemGetUserByKeyParamsWithContext creates a new SystemGetUserByKeyParams object
// with the ability to set a context for a request.
func NewSystemGetUserByKeyParamsWithContext(ctx context.Context) *SystemGetUserByKeyParams {
	return &SystemGetUserByKeyParams{
		Context: ctx,
	}
}

// NewSystemGetUserByKeyParamsWithHTTPClient creates a new SystemGetUserByKeyParams object
// with the ability to set a custom HTTPClient for a request.
func NewSystemGetUserByKeyParamsWithHTTPClient(client *http.Client) *SystemGetUserByKeyParams {
	return &SystemGetUserByKeyParams{
		HTTPClient: client,
	}
}

/*
SystemGetUserByKeyParams contains all the parameters to send to the API endpoint

	for the system get user by key operation.

	Typically these are written to a http.Request.
*/
type SystemGetUserByKeyParams struct {

	// GetUserByKey.
	GetUserByKey *models.GetUserByKey

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	// IPID.
	IPID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the system get user by key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SystemGetUserByKeyParams) WithDefaults() *SystemGetUserByKeyParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the system get user by key params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SystemGetUserByKeyParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the system get user by key params
func (o *SystemGetUserByKeyParams) WithTimeout(timeout time.Duration) *SystemGetUserByKeyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the system get user by key params
func (o *SystemGetUserByKeyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the system get user by key params
func (o *SystemGetUserByKeyParams) WithContext(ctx context.Context) *SystemGetUserByKeyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the system get user by key params
func (o *SystemGetUserByKeyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the system get user by key params
func (o *SystemGetUserByKeyParams) WithHTTPClient(client *http.Client) *SystemGetUserByKeyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the system get user by key params
func (o *SystemGetUserByKeyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGetUserByKey adds the getUserByKey to the system get user by key params
func (o *SystemGetUserByKeyParams) WithGetUserByKey(getUserByKey *models.GetUserByKey) *SystemGetUserByKeyParams {
	o.SetGetUserByKey(getUserByKey)
	return o
}

// SetGetUserByKey adds the getUserByKey to the system get user by key params
func (o *SystemGetUserByKeyParams) SetGetUserByKey(getUserByKey *models.GetUserByKey) {
	o.GetUserByKey = getUserByKey
}

// WithIfMatch adds the ifMatch to the system get user by key params
func (o *SystemGetUserByKeyParams) WithIfMatch(ifMatch *string) *SystemGetUserByKeyParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the system get user by key params
func (o *SystemGetUserByKeyParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithIPID adds the iPID to the system get user by key params
func (o *SystemGetUserByKeyParams) WithIPID(iPID string) *SystemGetUserByKeyParams {
	o.SetIPID(iPID)
	return o
}

// SetIPID adds the ipId to the system get user by key params
func (o *SystemGetUserByKeyParams) SetIPID(iPID string) {
	o.IPID = iPID
}

// WriteToRequest writes these params to a swagger request
func (o *SystemGetUserByKeyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.GetUserByKey != nil {
		if err := r.SetBodyParam(o.GetUserByKey); err != nil {
			return err
		}
	}

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	// path param ipID
	if err := r.SetPathParam("ipID", o.IPID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
