// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemUpdateVerifiableAddressReader is a Reader for the SystemUpdateVerifiableAddress structure.
type SystemUpdateVerifiableAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemUpdateVerifiableAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemUpdateVerifiableAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemUpdateVerifiableAddressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemUpdateVerifiableAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemUpdateVerifiableAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSystemUpdateVerifiableAddressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSystemUpdateVerifiableAddressPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSystemUpdateVerifiableAddressUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSystemUpdateVerifiableAddressOK creates a SystemUpdateVerifiableAddressOK with default headers values
func NewSystemUpdateVerifiableAddressOK() *SystemUpdateVerifiableAddressOK {
	return &SystemUpdateVerifiableAddressOK{}
}

/*
SystemUpdateVerifiableAddressOK describes a response with status code 200, with default header values.

Address
*/
type SystemUpdateVerifiableAddressOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserVerifiableAddress
}

// IsSuccess returns true when this system update verifiable address o k response has a 2xx status code
func (o *SystemUpdateVerifiableAddressOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system update verifiable address o k response has a 3xx status code
func (o *SystemUpdateVerifiableAddressOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address o k response has a 4xx status code
func (o *SystemUpdateVerifiableAddressOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system update verifiable address o k response has a 5xx status code
func (o *SystemUpdateVerifiableAddressOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address o k response a status code equal to that given
func (o *SystemUpdateVerifiableAddressOK) IsCode(code int) bool {
	return code == 200
}

func (o *SystemUpdateVerifiableAddressOK) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressOK  %+v", 200, o.Payload)
}

func (o *SystemUpdateVerifiableAddressOK) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressOK  %+v", 200, o.Payload)
}

func (o *SystemUpdateVerifiableAddressOK) GetPayload() *models.UserVerifiableAddress {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserVerifiableAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateVerifiableAddressUnauthorized creates a SystemUpdateVerifiableAddressUnauthorized with default headers values
func NewSystemUpdateVerifiableAddressUnauthorized() *SystemUpdateVerifiableAddressUnauthorized {
	return &SystemUpdateVerifiableAddressUnauthorized{}
}

/*
SystemUpdateVerifiableAddressUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemUpdateVerifiableAddressUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update verifiable address unauthorized response has a 2xx status code
func (o *SystemUpdateVerifiableAddressUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update verifiable address unauthorized response has a 3xx status code
func (o *SystemUpdateVerifiableAddressUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address unauthorized response has a 4xx status code
func (o *SystemUpdateVerifiableAddressUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update verifiable address unauthorized response has a 5xx status code
func (o *SystemUpdateVerifiableAddressUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address unauthorized response a status code equal to that given
func (o *SystemUpdateVerifiableAddressUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SystemUpdateVerifiableAddressUnauthorized) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemUpdateVerifiableAddressUnauthorized) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemUpdateVerifiableAddressUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateVerifiableAddressForbidden creates a SystemUpdateVerifiableAddressForbidden with default headers values
func NewSystemUpdateVerifiableAddressForbidden() *SystemUpdateVerifiableAddressForbidden {
	return &SystemUpdateVerifiableAddressForbidden{}
}

/*
SystemUpdateVerifiableAddressForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemUpdateVerifiableAddressForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update verifiable address forbidden response has a 2xx status code
func (o *SystemUpdateVerifiableAddressForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update verifiable address forbidden response has a 3xx status code
func (o *SystemUpdateVerifiableAddressForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address forbidden response has a 4xx status code
func (o *SystemUpdateVerifiableAddressForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update verifiable address forbidden response has a 5xx status code
func (o *SystemUpdateVerifiableAddressForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address forbidden response a status code equal to that given
func (o *SystemUpdateVerifiableAddressForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SystemUpdateVerifiableAddressForbidden) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressForbidden  %+v", 403, o.Payload)
}

func (o *SystemUpdateVerifiableAddressForbidden) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressForbidden  %+v", 403, o.Payload)
}

func (o *SystemUpdateVerifiableAddressForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateVerifiableAddressNotFound creates a SystemUpdateVerifiableAddressNotFound with default headers values
func NewSystemUpdateVerifiableAddressNotFound() *SystemUpdateVerifiableAddressNotFound {
	return &SystemUpdateVerifiableAddressNotFound{}
}

/*
SystemUpdateVerifiableAddressNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemUpdateVerifiableAddressNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update verifiable address not found response has a 2xx status code
func (o *SystemUpdateVerifiableAddressNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update verifiable address not found response has a 3xx status code
func (o *SystemUpdateVerifiableAddressNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address not found response has a 4xx status code
func (o *SystemUpdateVerifiableAddressNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update verifiable address not found response has a 5xx status code
func (o *SystemUpdateVerifiableAddressNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address not found response a status code equal to that given
func (o *SystemUpdateVerifiableAddressNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SystemUpdateVerifiableAddressNotFound) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressNotFound  %+v", 404, o.Payload)
}

func (o *SystemUpdateVerifiableAddressNotFound) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressNotFound  %+v", 404, o.Payload)
}

func (o *SystemUpdateVerifiableAddressNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateVerifiableAddressConflict creates a SystemUpdateVerifiableAddressConflict with default headers values
func NewSystemUpdateVerifiableAddressConflict() *SystemUpdateVerifiableAddressConflict {
	return &SystemUpdateVerifiableAddressConflict{}
}

/*
SystemUpdateVerifiableAddressConflict describes a response with status code 409, with default header values.

Conflict
*/
type SystemUpdateVerifiableAddressConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update verifiable address conflict response has a 2xx status code
func (o *SystemUpdateVerifiableAddressConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update verifiable address conflict response has a 3xx status code
func (o *SystemUpdateVerifiableAddressConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address conflict response has a 4xx status code
func (o *SystemUpdateVerifiableAddressConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update verifiable address conflict response has a 5xx status code
func (o *SystemUpdateVerifiableAddressConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address conflict response a status code equal to that given
func (o *SystemUpdateVerifiableAddressConflict) IsCode(code int) bool {
	return code == 409
}

func (o *SystemUpdateVerifiableAddressConflict) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressConflict  %+v", 409, o.Payload)
}

func (o *SystemUpdateVerifiableAddressConflict) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressConflict  %+v", 409, o.Payload)
}

func (o *SystemUpdateVerifiableAddressConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateVerifiableAddressPreconditionFailed creates a SystemUpdateVerifiableAddressPreconditionFailed with default headers values
func NewSystemUpdateVerifiableAddressPreconditionFailed() *SystemUpdateVerifiableAddressPreconditionFailed {
	return &SystemUpdateVerifiableAddressPreconditionFailed{}
}

/*
SystemUpdateVerifiableAddressPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type SystemUpdateVerifiableAddressPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update verifiable address precondition failed response has a 2xx status code
func (o *SystemUpdateVerifiableAddressPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update verifiable address precondition failed response has a 3xx status code
func (o *SystemUpdateVerifiableAddressPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address precondition failed response has a 4xx status code
func (o *SystemUpdateVerifiableAddressPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update verifiable address precondition failed response has a 5xx status code
func (o *SystemUpdateVerifiableAddressPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address precondition failed response a status code equal to that given
func (o *SystemUpdateVerifiableAddressPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

func (o *SystemUpdateVerifiableAddressPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemUpdateVerifiableAddressPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemUpdateVerifiableAddressPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateVerifiableAddressUnprocessableEntity creates a SystemUpdateVerifiableAddressUnprocessableEntity with default headers values
func NewSystemUpdateVerifiableAddressUnprocessableEntity() *SystemUpdateVerifiableAddressUnprocessableEntity {
	return &SystemUpdateVerifiableAddressUnprocessableEntity{}
}

/*
SystemUpdateVerifiableAddressUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SystemUpdateVerifiableAddressUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update verifiable address unprocessable entity response has a 2xx status code
func (o *SystemUpdateVerifiableAddressUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update verifiable address unprocessable entity response has a 3xx status code
func (o *SystemUpdateVerifiableAddressUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update verifiable address unprocessable entity response has a 4xx status code
func (o *SystemUpdateVerifiableAddressUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update verifiable address unprocessable entity response has a 5xx status code
func (o *SystemUpdateVerifiableAddressUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this system update verifiable address unprocessable entity response a status code equal to that given
func (o *SystemUpdateVerifiableAddressUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *SystemUpdateVerifiableAddressUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemUpdateVerifiableAddressUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/update][%d] systemUpdateVerifiableAddressUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemUpdateVerifiableAddressUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateVerifiableAddressUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
