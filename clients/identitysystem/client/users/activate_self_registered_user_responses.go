// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// ActivateSelfRegisteredUserReader is a Reader for the ActivateSelfRegisteredUser structure.
type ActivateSelfRegisteredUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActivateSelfRegisteredUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewActivateSelfRegisteredUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewActivateSelfRegisteredUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewActivateSelfRegisteredUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewActivateSelfRegisteredUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewActivateSelfRegisteredUserPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewActivateSelfRegisteredUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewActivateSelfRegisteredUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/users/{userID}/activate] activateSelfRegisteredUser", response, response.Code())
	}
}

// NewActivateSelfRegisteredUserCreated creates a ActivateSelfRegisteredUserCreated with default headers values
func NewActivateSelfRegisteredUserCreated() *ActivateSelfRegisteredUserCreated {
	return &ActivateSelfRegisteredUserCreated{}
}

/*
ActivateSelfRegisteredUserCreated describes a response with status code 201, with default header values.

User
*/
type ActivateSelfRegisteredUserCreated struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserWithData
}

// IsSuccess returns true when this activate self registered user created response has a 2xx status code
func (o *ActivateSelfRegisteredUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this activate self registered user created response has a 3xx status code
func (o *ActivateSelfRegisteredUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user created response has a 4xx status code
func (o *ActivateSelfRegisteredUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this activate self registered user created response has a 5xx status code
func (o *ActivateSelfRegisteredUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user created response a status code equal to that given
func (o *ActivateSelfRegisteredUserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the activate self registered user created response
func (o *ActivateSelfRegisteredUserCreated) Code() int {
	return 201
}

func (o *ActivateSelfRegisteredUserCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserCreated %s", 201, payload)
}

func (o *ActivateSelfRegisteredUserCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserCreated %s", 201, payload)
}

func (o *ActivateSelfRegisteredUserCreated) GetPayload() *models.UserWithData {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserWithData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateSelfRegisteredUserBadRequest creates a ActivateSelfRegisteredUserBadRequest with default headers values
func NewActivateSelfRegisteredUserBadRequest() *ActivateSelfRegisteredUserBadRequest {
	return &ActivateSelfRegisteredUserBadRequest{}
}

/*
ActivateSelfRegisteredUserBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ActivateSelfRegisteredUserBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate self registered user bad request response has a 2xx status code
func (o *ActivateSelfRegisteredUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate self registered user bad request response has a 3xx status code
func (o *ActivateSelfRegisteredUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user bad request response has a 4xx status code
func (o *ActivateSelfRegisteredUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate self registered user bad request response has a 5xx status code
func (o *ActivateSelfRegisteredUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user bad request response a status code equal to that given
func (o *ActivateSelfRegisteredUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the activate self registered user bad request response
func (o *ActivateSelfRegisteredUserBadRequest) Code() int {
	return 400
}

func (o *ActivateSelfRegisteredUserBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserBadRequest %s", 400, payload)
}

func (o *ActivateSelfRegisteredUserBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserBadRequest %s", 400, payload)
}

func (o *ActivateSelfRegisteredUserBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateSelfRegisteredUserUnauthorized creates a ActivateSelfRegisteredUserUnauthorized with default headers values
func NewActivateSelfRegisteredUserUnauthorized() *ActivateSelfRegisteredUserUnauthorized {
	return &ActivateSelfRegisteredUserUnauthorized{}
}

/*
ActivateSelfRegisteredUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ActivateSelfRegisteredUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate self registered user unauthorized response has a 2xx status code
func (o *ActivateSelfRegisteredUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate self registered user unauthorized response has a 3xx status code
func (o *ActivateSelfRegisteredUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user unauthorized response has a 4xx status code
func (o *ActivateSelfRegisteredUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate self registered user unauthorized response has a 5xx status code
func (o *ActivateSelfRegisteredUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user unauthorized response a status code equal to that given
func (o *ActivateSelfRegisteredUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the activate self registered user unauthorized response
func (o *ActivateSelfRegisteredUserUnauthorized) Code() int {
	return 401
}

func (o *ActivateSelfRegisteredUserUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserUnauthorized %s", 401, payload)
}

func (o *ActivateSelfRegisteredUserUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserUnauthorized %s", 401, payload)
}

func (o *ActivateSelfRegisteredUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateSelfRegisteredUserNotFound creates a ActivateSelfRegisteredUserNotFound with default headers values
func NewActivateSelfRegisteredUserNotFound() *ActivateSelfRegisteredUserNotFound {
	return &ActivateSelfRegisteredUserNotFound{}
}

/*
ActivateSelfRegisteredUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type ActivateSelfRegisteredUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate self registered user not found response has a 2xx status code
func (o *ActivateSelfRegisteredUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate self registered user not found response has a 3xx status code
func (o *ActivateSelfRegisteredUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user not found response has a 4xx status code
func (o *ActivateSelfRegisteredUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate self registered user not found response has a 5xx status code
func (o *ActivateSelfRegisteredUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user not found response a status code equal to that given
func (o *ActivateSelfRegisteredUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the activate self registered user not found response
func (o *ActivateSelfRegisteredUserNotFound) Code() int {
	return 404
}

func (o *ActivateSelfRegisteredUserNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserNotFound %s", 404, payload)
}

func (o *ActivateSelfRegisteredUserNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserNotFound %s", 404, payload)
}

func (o *ActivateSelfRegisteredUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateSelfRegisteredUserPreconditionFailed creates a ActivateSelfRegisteredUserPreconditionFailed with default headers values
func NewActivateSelfRegisteredUserPreconditionFailed() *ActivateSelfRegisteredUserPreconditionFailed {
	return &ActivateSelfRegisteredUserPreconditionFailed{}
}

/*
ActivateSelfRegisteredUserPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type ActivateSelfRegisteredUserPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate self registered user precondition failed response has a 2xx status code
func (o *ActivateSelfRegisteredUserPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate self registered user precondition failed response has a 3xx status code
func (o *ActivateSelfRegisteredUserPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user precondition failed response has a 4xx status code
func (o *ActivateSelfRegisteredUserPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate self registered user precondition failed response has a 5xx status code
func (o *ActivateSelfRegisteredUserPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user precondition failed response a status code equal to that given
func (o *ActivateSelfRegisteredUserPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the activate self registered user precondition failed response
func (o *ActivateSelfRegisteredUserPreconditionFailed) Code() int {
	return 412
}

func (o *ActivateSelfRegisteredUserPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserPreconditionFailed %s", 412, payload)
}

func (o *ActivateSelfRegisteredUserPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserPreconditionFailed %s", 412, payload)
}

func (o *ActivateSelfRegisteredUserPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateSelfRegisteredUserUnprocessableEntity creates a ActivateSelfRegisteredUserUnprocessableEntity with default headers values
func NewActivateSelfRegisteredUserUnprocessableEntity() *ActivateSelfRegisteredUserUnprocessableEntity {
	return &ActivateSelfRegisteredUserUnprocessableEntity{}
}

/*
ActivateSelfRegisteredUserUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ActivateSelfRegisteredUserUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate self registered user unprocessable entity response has a 2xx status code
func (o *ActivateSelfRegisteredUserUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate self registered user unprocessable entity response has a 3xx status code
func (o *ActivateSelfRegisteredUserUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user unprocessable entity response has a 4xx status code
func (o *ActivateSelfRegisteredUserUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate self registered user unprocessable entity response has a 5xx status code
func (o *ActivateSelfRegisteredUserUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user unprocessable entity response a status code equal to that given
func (o *ActivateSelfRegisteredUserUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the activate self registered user unprocessable entity response
func (o *ActivateSelfRegisteredUserUnprocessableEntity) Code() int {
	return 422
}

func (o *ActivateSelfRegisteredUserUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserUnprocessableEntity %s", 422, payload)
}

func (o *ActivateSelfRegisteredUserUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserUnprocessableEntity %s", 422, payload)
}

func (o *ActivateSelfRegisteredUserUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActivateSelfRegisteredUserTooManyRequests creates a ActivateSelfRegisteredUserTooManyRequests with default headers values
func NewActivateSelfRegisteredUserTooManyRequests() *ActivateSelfRegisteredUserTooManyRequests {
	return &ActivateSelfRegisteredUserTooManyRequests{}
}

/*
ActivateSelfRegisteredUserTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ActivateSelfRegisteredUserTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this activate self registered user too many requests response has a 2xx status code
func (o *ActivateSelfRegisteredUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this activate self registered user too many requests response has a 3xx status code
func (o *ActivateSelfRegisteredUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this activate self registered user too many requests response has a 4xx status code
func (o *ActivateSelfRegisteredUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this activate self registered user too many requests response has a 5xx status code
func (o *ActivateSelfRegisteredUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this activate self registered user too many requests response a status code equal to that given
func (o *ActivateSelfRegisteredUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the activate self registered user too many requests response
func (o *ActivateSelfRegisteredUserTooManyRequests) Code() int {
	return 429
}

func (o *ActivateSelfRegisteredUserTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserTooManyRequests %s", 429, payload)
}

func (o *ActivateSelfRegisteredUserTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/activate][%d] activateSelfRegisteredUserTooManyRequests %s", 429, payload)
}

func (o *ActivateSelfRegisteredUserTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ActivateSelfRegisteredUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
