// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSystemDeleteUserParams creates a new SystemDeleteUserParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSystemDeleteUserParams() *SystemDeleteUserParams {
	return &SystemDeleteUserParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSystemDeleteUserParamsWithTimeout creates a new SystemDeleteUserParams object
// with the ability to set a timeout on a request.
func NewSystemDeleteUserParamsWithTimeout(timeout time.Duration) *SystemDeleteUserParams {
	return &SystemDeleteUserParams{
		timeout: timeout,
	}
}

// NewSystemDeleteUserParamsWithContext creates a new SystemDeleteUserParams object
// with the ability to set a context for a request.
func NewSystemDeleteUserParamsWithContext(ctx context.Context) *SystemDeleteUserParams {
	return &SystemDeleteUserParams{
		Context: ctx,
	}
}

// NewSystemDeleteUserParamsWithHTTPClient creates a new SystemDeleteUserParams object
// with the ability to set a custom HTTPClient for a request.
func NewSystemDeleteUserParamsWithHTTPClient(client *http.Client) *SystemDeleteUserParams {
	return &SystemDeleteUserParams{
		HTTPClient: client,
	}
}

/*
SystemDeleteUserParams contains all the parameters to send to the API endpoint

	for the system delete user operation.

	Typically these are written to a http.Request.
*/
type SystemDeleteUserParams struct {

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	// IPID.
	IPID string

	// UserID.
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the system delete user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SystemDeleteUserParams) WithDefaults() *SystemDeleteUserParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the system delete user params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SystemDeleteUserParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the system delete user params
func (o *SystemDeleteUserParams) WithTimeout(timeout time.Duration) *SystemDeleteUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the system delete user params
func (o *SystemDeleteUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the system delete user params
func (o *SystemDeleteUserParams) WithContext(ctx context.Context) *SystemDeleteUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the system delete user params
func (o *SystemDeleteUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the system delete user params
func (o *SystemDeleteUserParams) WithHTTPClient(client *http.Client) *SystemDeleteUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the system delete user params
func (o *SystemDeleteUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the system delete user params
func (o *SystemDeleteUserParams) WithIfMatch(ifMatch *string) *SystemDeleteUserParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the system delete user params
func (o *SystemDeleteUserParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithIPID adds the iPID to the system delete user params
func (o *SystemDeleteUserParams) WithIPID(iPID string) *SystemDeleteUserParams {
	o.SetIPID(iPID)
	return o
}

// SetIPID adds the ipId to the system delete user params
func (o *SystemDeleteUserParams) SetIPID(iPID string) {
	o.IPID = iPID
}

// WithUserID adds the userID to the system delete user params
func (o *SystemDeleteUserParams) WithUserID(userID string) *SystemDeleteUserParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the system delete user params
func (o *SystemDeleteUserParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *SystemDeleteUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	// path param ipID
	if err := r.SetPathParam("ipID", o.IPID); err != nil {
		return err
	}

	// path param userID
	if err := r.SetPathParam("userID", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
