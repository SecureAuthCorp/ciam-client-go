// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// RequestAddWebAuthnReader is a Reader for the RequestAddWebAuthn structure.
type RequestAddWebAuthnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestAddWebAuthnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRequestAddWebAuthnNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestAddWebAuthnBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRequestAddWebAuthnUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewRequestAddWebAuthnPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRequestAddWebAuthnUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/user/webauthn/add/request] requestAddWebAuthn", response, response.Code())
	}
}

// NewRequestAddWebAuthnNoContent creates a RequestAddWebAuthnNoContent with default headers values
func NewRequestAddWebAuthnNoContent() *RequestAddWebAuthnNoContent {
	return &RequestAddWebAuthnNoContent{}
}

/*
RequestAddWebAuthnNoContent describes a response with status code 204, with default header values.

	Request accepted
*/
type RequestAddWebAuthnNoContent struct {
}

// IsSuccess returns true when this request add web authn no content response has a 2xx status code
func (o *RequestAddWebAuthnNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request add web authn no content response has a 3xx status code
func (o *RequestAddWebAuthnNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request add web authn no content response has a 4xx status code
func (o *RequestAddWebAuthnNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this request add web authn no content response has a 5xx status code
func (o *RequestAddWebAuthnNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this request add web authn no content response a status code equal to that given
func (o *RequestAddWebAuthnNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the request add web authn no content response
func (o *RequestAddWebAuthnNoContent) Code() int {
	return 204
}

func (o *RequestAddWebAuthnNoContent) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnNoContent", 204)
}

func (o *RequestAddWebAuthnNoContent) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnNoContent", 204)
}

func (o *RequestAddWebAuthnNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRequestAddWebAuthnBadRequest creates a RequestAddWebAuthnBadRequest with default headers values
func NewRequestAddWebAuthnBadRequest() *RequestAddWebAuthnBadRequest {
	return &RequestAddWebAuthnBadRequest{}
}

/*
RequestAddWebAuthnBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RequestAddWebAuthnBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this request add web authn bad request response has a 2xx status code
func (o *RequestAddWebAuthnBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request add web authn bad request response has a 3xx status code
func (o *RequestAddWebAuthnBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request add web authn bad request response has a 4xx status code
func (o *RequestAddWebAuthnBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this request add web authn bad request response has a 5xx status code
func (o *RequestAddWebAuthnBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this request add web authn bad request response a status code equal to that given
func (o *RequestAddWebAuthnBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the request add web authn bad request response
func (o *RequestAddWebAuthnBadRequest) Code() int {
	return 400
}

func (o *RequestAddWebAuthnBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnBadRequest %s", 400, payload)
}

func (o *RequestAddWebAuthnBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnBadRequest %s", 400, payload)
}

func (o *RequestAddWebAuthnBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestAddWebAuthnBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestAddWebAuthnUnauthorized creates a RequestAddWebAuthnUnauthorized with default headers values
func NewRequestAddWebAuthnUnauthorized() *RequestAddWebAuthnUnauthorized {
	return &RequestAddWebAuthnUnauthorized{}
}

/*
RequestAddWebAuthnUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RequestAddWebAuthnUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this request add web authn unauthorized response has a 2xx status code
func (o *RequestAddWebAuthnUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request add web authn unauthorized response has a 3xx status code
func (o *RequestAddWebAuthnUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request add web authn unauthorized response has a 4xx status code
func (o *RequestAddWebAuthnUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this request add web authn unauthorized response has a 5xx status code
func (o *RequestAddWebAuthnUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this request add web authn unauthorized response a status code equal to that given
func (o *RequestAddWebAuthnUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the request add web authn unauthorized response
func (o *RequestAddWebAuthnUnauthorized) Code() int {
	return 401
}

func (o *RequestAddWebAuthnUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnUnauthorized %s", 401, payload)
}

func (o *RequestAddWebAuthnUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnUnauthorized %s", 401, payload)
}

func (o *RequestAddWebAuthnUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestAddWebAuthnUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestAddWebAuthnPreconditionFailed creates a RequestAddWebAuthnPreconditionFailed with default headers values
func NewRequestAddWebAuthnPreconditionFailed() *RequestAddWebAuthnPreconditionFailed {
	return &RequestAddWebAuthnPreconditionFailed{}
}

/*
RequestAddWebAuthnPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type RequestAddWebAuthnPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this request add web authn precondition failed response has a 2xx status code
func (o *RequestAddWebAuthnPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request add web authn precondition failed response has a 3xx status code
func (o *RequestAddWebAuthnPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request add web authn precondition failed response has a 4xx status code
func (o *RequestAddWebAuthnPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this request add web authn precondition failed response has a 5xx status code
func (o *RequestAddWebAuthnPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this request add web authn precondition failed response a status code equal to that given
func (o *RequestAddWebAuthnPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the request add web authn precondition failed response
func (o *RequestAddWebAuthnPreconditionFailed) Code() int {
	return 412
}

func (o *RequestAddWebAuthnPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnPreconditionFailed %s", 412, payload)
}

func (o *RequestAddWebAuthnPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnPreconditionFailed %s", 412, payload)
}

func (o *RequestAddWebAuthnPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestAddWebAuthnPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestAddWebAuthnUnprocessableEntity creates a RequestAddWebAuthnUnprocessableEntity with default headers values
func NewRequestAddWebAuthnUnprocessableEntity() *RequestAddWebAuthnUnprocessableEntity {
	return &RequestAddWebAuthnUnprocessableEntity{}
}

/*
RequestAddWebAuthnUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type RequestAddWebAuthnUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this request add web authn unprocessable entity response has a 2xx status code
func (o *RequestAddWebAuthnUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request add web authn unprocessable entity response has a 3xx status code
func (o *RequestAddWebAuthnUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request add web authn unprocessable entity response has a 4xx status code
func (o *RequestAddWebAuthnUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this request add web authn unprocessable entity response has a 5xx status code
func (o *RequestAddWebAuthnUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this request add web authn unprocessable entity response a status code equal to that given
func (o *RequestAddWebAuthnUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the request add web authn unprocessable entity response
func (o *RequestAddWebAuthnUnprocessableEntity) Code() int {
	return 422
}

func (o *RequestAddWebAuthnUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnUnprocessableEntity %s", 422, payload)
}

func (o *RequestAddWebAuthnUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/request][%d] requestAddWebAuthnUnprocessableEntity %s", 422, payload)
}

func (o *RequestAddWebAuthnUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *RequestAddWebAuthnUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
