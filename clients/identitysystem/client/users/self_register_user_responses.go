// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SelfRegisterUserReader is a Reader for the SelfRegisterUser structure.
type SelfRegisterUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SelfRegisterUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSelfRegisterUserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSelfRegisterUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSelfRegisterUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSelfRegisterUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSelfRegisterUserPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSelfRegisterUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSelfRegisterUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/user/register] selfRegisterUser", response, response.Code())
	}
}

// NewSelfRegisterUserCreated creates a SelfRegisterUserCreated with default headers values
func NewSelfRegisterUserCreated() *SelfRegisterUserCreated {
	return &SelfRegisterUserCreated{}
}

/*
SelfRegisterUserCreated describes a response with status code 201, with default header values.

User
*/
type SelfRegisterUserCreated struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserID
}

// IsSuccess returns true when this self register user created response has a 2xx status code
func (o *SelfRegisterUserCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this self register user created response has a 3xx status code
func (o *SelfRegisterUserCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user created response has a 4xx status code
func (o *SelfRegisterUserCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this self register user created response has a 5xx status code
func (o *SelfRegisterUserCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user created response a status code equal to that given
func (o *SelfRegisterUserCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the self register user created response
func (o *SelfRegisterUserCreated) Code() int {
	return 201
}

func (o *SelfRegisterUserCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserCreated %s", 201, payload)
}

func (o *SelfRegisterUserCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserCreated %s", 201, payload)
}

func (o *SelfRegisterUserCreated) GetPayload() *models.UserID {
	return o.Payload
}

func (o *SelfRegisterUserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSelfRegisterUserBadRequest creates a SelfRegisterUserBadRequest with default headers values
func NewSelfRegisterUserBadRequest() *SelfRegisterUserBadRequest {
	return &SelfRegisterUserBadRequest{}
}

/*
SelfRegisterUserBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SelfRegisterUserBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this self register user bad request response has a 2xx status code
func (o *SelfRegisterUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this self register user bad request response has a 3xx status code
func (o *SelfRegisterUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user bad request response has a 4xx status code
func (o *SelfRegisterUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this self register user bad request response has a 5xx status code
func (o *SelfRegisterUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user bad request response a status code equal to that given
func (o *SelfRegisterUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the self register user bad request response
func (o *SelfRegisterUserBadRequest) Code() int {
	return 400
}

func (o *SelfRegisterUserBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserBadRequest %s", 400, payload)
}

func (o *SelfRegisterUserBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserBadRequest %s", 400, payload)
}

func (o *SelfRegisterUserBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SelfRegisterUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSelfRegisterUserUnauthorized creates a SelfRegisterUserUnauthorized with default headers values
func NewSelfRegisterUserUnauthorized() *SelfRegisterUserUnauthorized {
	return &SelfRegisterUserUnauthorized{}
}

/*
SelfRegisterUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SelfRegisterUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this self register user unauthorized response has a 2xx status code
func (o *SelfRegisterUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this self register user unauthorized response has a 3xx status code
func (o *SelfRegisterUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user unauthorized response has a 4xx status code
func (o *SelfRegisterUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this self register user unauthorized response has a 5xx status code
func (o *SelfRegisterUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user unauthorized response a status code equal to that given
func (o *SelfRegisterUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the self register user unauthorized response
func (o *SelfRegisterUserUnauthorized) Code() int {
	return 401
}

func (o *SelfRegisterUserUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserUnauthorized %s", 401, payload)
}

func (o *SelfRegisterUserUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserUnauthorized %s", 401, payload)
}

func (o *SelfRegisterUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SelfRegisterUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSelfRegisterUserNotFound creates a SelfRegisterUserNotFound with default headers values
func NewSelfRegisterUserNotFound() *SelfRegisterUserNotFound {
	return &SelfRegisterUserNotFound{}
}

/*
SelfRegisterUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type SelfRegisterUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this self register user not found response has a 2xx status code
func (o *SelfRegisterUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this self register user not found response has a 3xx status code
func (o *SelfRegisterUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user not found response has a 4xx status code
func (o *SelfRegisterUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this self register user not found response has a 5xx status code
func (o *SelfRegisterUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user not found response a status code equal to that given
func (o *SelfRegisterUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the self register user not found response
func (o *SelfRegisterUserNotFound) Code() int {
	return 404
}

func (o *SelfRegisterUserNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserNotFound %s", 404, payload)
}

func (o *SelfRegisterUserNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserNotFound %s", 404, payload)
}

func (o *SelfRegisterUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SelfRegisterUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSelfRegisterUserPreconditionFailed creates a SelfRegisterUserPreconditionFailed with default headers values
func NewSelfRegisterUserPreconditionFailed() *SelfRegisterUserPreconditionFailed {
	return &SelfRegisterUserPreconditionFailed{}
}

/*
SelfRegisterUserPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type SelfRegisterUserPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this self register user precondition failed response has a 2xx status code
func (o *SelfRegisterUserPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this self register user precondition failed response has a 3xx status code
func (o *SelfRegisterUserPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user precondition failed response has a 4xx status code
func (o *SelfRegisterUserPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this self register user precondition failed response has a 5xx status code
func (o *SelfRegisterUserPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user precondition failed response a status code equal to that given
func (o *SelfRegisterUserPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the self register user precondition failed response
func (o *SelfRegisterUserPreconditionFailed) Code() int {
	return 412
}

func (o *SelfRegisterUserPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserPreconditionFailed %s", 412, payload)
}

func (o *SelfRegisterUserPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserPreconditionFailed %s", 412, payload)
}

func (o *SelfRegisterUserPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SelfRegisterUserPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSelfRegisterUserUnprocessableEntity creates a SelfRegisterUserUnprocessableEntity with default headers values
func NewSelfRegisterUserUnprocessableEntity() *SelfRegisterUserUnprocessableEntity {
	return &SelfRegisterUserUnprocessableEntity{}
}

/*
SelfRegisterUserUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SelfRegisterUserUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this self register user unprocessable entity response has a 2xx status code
func (o *SelfRegisterUserUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this self register user unprocessable entity response has a 3xx status code
func (o *SelfRegisterUserUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user unprocessable entity response has a 4xx status code
func (o *SelfRegisterUserUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this self register user unprocessable entity response has a 5xx status code
func (o *SelfRegisterUserUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user unprocessable entity response a status code equal to that given
func (o *SelfRegisterUserUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the self register user unprocessable entity response
func (o *SelfRegisterUserUnprocessableEntity) Code() int {
	return 422
}

func (o *SelfRegisterUserUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserUnprocessableEntity %s", 422, payload)
}

func (o *SelfRegisterUserUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserUnprocessableEntity %s", 422, payload)
}

func (o *SelfRegisterUserUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SelfRegisterUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSelfRegisterUserTooManyRequests creates a SelfRegisterUserTooManyRequests with default headers values
func NewSelfRegisterUserTooManyRequests() *SelfRegisterUserTooManyRequests {
	return &SelfRegisterUserTooManyRequests{}
}

/*
SelfRegisterUserTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SelfRegisterUserTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this self register user too many requests response has a 2xx status code
func (o *SelfRegisterUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this self register user too many requests response has a 3xx status code
func (o *SelfRegisterUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this self register user too many requests response has a 4xx status code
func (o *SelfRegisterUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this self register user too many requests response has a 5xx status code
func (o *SelfRegisterUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this self register user too many requests response a status code equal to that given
func (o *SelfRegisterUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the self register user too many requests response
func (o *SelfRegisterUserTooManyRequests) Code() int {
	return 429
}

func (o *SelfRegisterUserTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserTooManyRequests %s", 429, payload)
}

func (o *SelfRegisterUserTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/register][%d] selfRegisterUserTooManyRequests %s", 429, payload)
}

func (o *SelfRegisterUserTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SelfRegisterUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
