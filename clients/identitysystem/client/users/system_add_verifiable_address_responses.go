// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemAddVerifiableAddressReader is a Reader for the SystemAddVerifiableAddress structure.
type SystemAddVerifiableAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemAddVerifiableAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemAddVerifiableAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemAddVerifiableAddressUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemAddVerifiableAddressForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemAddVerifiableAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSystemAddVerifiableAddressConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSystemAddVerifiableAddressPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSystemAddVerifiableAddressUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSystemAddVerifiableAddressOK creates a SystemAddVerifiableAddressOK with default headers values
func NewSystemAddVerifiableAddressOK() *SystemAddVerifiableAddressOK {
	return &SystemAddVerifiableAddressOK{}
}

/*
SystemAddVerifiableAddressOK describes a response with status code 200, with default header values.

Address
*/
type SystemAddVerifiableAddressOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserVerifiableAddress
}

// IsSuccess returns true when this system add verifiable address o k response has a 2xx status code
func (o *SystemAddVerifiableAddressOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system add verifiable address o k response has a 3xx status code
func (o *SystemAddVerifiableAddressOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address o k response has a 4xx status code
func (o *SystemAddVerifiableAddressOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system add verifiable address o k response has a 5xx status code
func (o *SystemAddVerifiableAddressOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address o k response a status code equal to that given
func (o *SystemAddVerifiableAddressOK) IsCode(code int) bool {
	return code == 200
}

func (o *SystemAddVerifiableAddressOK) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressOK  %+v", 200, o.Payload)
}

func (o *SystemAddVerifiableAddressOK) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressOK  %+v", 200, o.Payload)
}

func (o *SystemAddVerifiableAddressOK) GetPayload() *models.UserVerifiableAddress {
	return o.Payload
}

func (o *SystemAddVerifiableAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserVerifiableAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddVerifiableAddressUnauthorized creates a SystemAddVerifiableAddressUnauthorized with default headers values
func NewSystemAddVerifiableAddressUnauthorized() *SystemAddVerifiableAddressUnauthorized {
	return &SystemAddVerifiableAddressUnauthorized{}
}

/*
SystemAddVerifiableAddressUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemAddVerifiableAddressUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add verifiable address unauthorized response has a 2xx status code
func (o *SystemAddVerifiableAddressUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add verifiable address unauthorized response has a 3xx status code
func (o *SystemAddVerifiableAddressUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address unauthorized response has a 4xx status code
func (o *SystemAddVerifiableAddressUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add verifiable address unauthorized response has a 5xx status code
func (o *SystemAddVerifiableAddressUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address unauthorized response a status code equal to that given
func (o *SystemAddVerifiableAddressUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SystemAddVerifiableAddressUnauthorized) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemAddVerifiableAddressUnauthorized) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemAddVerifiableAddressUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddVerifiableAddressUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddVerifiableAddressForbidden creates a SystemAddVerifiableAddressForbidden with default headers values
func NewSystemAddVerifiableAddressForbidden() *SystemAddVerifiableAddressForbidden {
	return &SystemAddVerifiableAddressForbidden{}
}

/*
SystemAddVerifiableAddressForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemAddVerifiableAddressForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add verifiable address forbidden response has a 2xx status code
func (o *SystemAddVerifiableAddressForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add verifiable address forbidden response has a 3xx status code
func (o *SystemAddVerifiableAddressForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address forbidden response has a 4xx status code
func (o *SystemAddVerifiableAddressForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add verifiable address forbidden response has a 5xx status code
func (o *SystemAddVerifiableAddressForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address forbidden response a status code equal to that given
func (o *SystemAddVerifiableAddressForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SystemAddVerifiableAddressForbidden) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressForbidden  %+v", 403, o.Payload)
}

func (o *SystemAddVerifiableAddressForbidden) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressForbidden  %+v", 403, o.Payload)
}

func (o *SystemAddVerifiableAddressForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddVerifiableAddressForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddVerifiableAddressNotFound creates a SystemAddVerifiableAddressNotFound with default headers values
func NewSystemAddVerifiableAddressNotFound() *SystemAddVerifiableAddressNotFound {
	return &SystemAddVerifiableAddressNotFound{}
}

/*
SystemAddVerifiableAddressNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemAddVerifiableAddressNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add verifiable address not found response has a 2xx status code
func (o *SystemAddVerifiableAddressNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add verifiable address not found response has a 3xx status code
func (o *SystemAddVerifiableAddressNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address not found response has a 4xx status code
func (o *SystemAddVerifiableAddressNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add verifiable address not found response has a 5xx status code
func (o *SystemAddVerifiableAddressNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address not found response a status code equal to that given
func (o *SystemAddVerifiableAddressNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SystemAddVerifiableAddressNotFound) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressNotFound  %+v", 404, o.Payload)
}

func (o *SystemAddVerifiableAddressNotFound) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressNotFound  %+v", 404, o.Payload)
}

func (o *SystemAddVerifiableAddressNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddVerifiableAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddVerifiableAddressConflict creates a SystemAddVerifiableAddressConflict with default headers values
func NewSystemAddVerifiableAddressConflict() *SystemAddVerifiableAddressConflict {
	return &SystemAddVerifiableAddressConflict{}
}

/*
SystemAddVerifiableAddressConflict describes a response with status code 409, with default header values.

Conflict
*/
type SystemAddVerifiableAddressConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add verifiable address conflict response has a 2xx status code
func (o *SystemAddVerifiableAddressConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add verifiable address conflict response has a 3xx status code
func (o *SystemAddVerifiableAddressConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address conflict response has a 4xx status code
func (o *SystemAddVerifiableAddressConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add verifiable address conflict response has a 5xx status code
func (o *SystemAddVerifiableAddressConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address conflict response a status code equal to that given
func (o *SystemAddVerifiableAddressConflict) IsCode(code int) bool {
	return code == 409
}

func (o *SystemAddVerifiableAddressConflict) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressConflict  %+v", 409, o.Payload)
}

func (o *SystemAddVerifiableAddressConflict) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressConflict  %+v", 409, o.Payload)
}

func (o *SystemAddVerifiableAddressConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddVerifiableAddressConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddVerifiableAddressPreconditionFailed creates a SystemAddVerifiableAddressPreconditionFailed with default headers values
func NewSystemAddVerifiableAddressPreconditionFailed() *SystemAddVerifiableAddressPreconditionFailed {
	return &SystemAddVerifiableAddressPreconditionFailed{}
}

/*
SystemAddVerifiableAddressPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type SystemAddVerifiableAddressPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add verifiable address precondition failed response has a 2xx status code
func (o *SystemAddVerifiableAddressPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add verifiable address precondition failed response has a 3xx status code
func (o *SystemAddVerifiableAddressPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address precondition failed response has a 4xx status code
func (o *SystemAddVerifiableAddressPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add verifiable address precondition failed response has a 5xx status code
func (o *SystemAddVerifiableAddressPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address precondition failed response a status code equal to that given
func (o *SystemAddVerifiableAddressPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

func (o *SystemAddVerifiableAddressPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemAddVerifiableAddressPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemAddVerifiableAddressPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddVerifiableAddressPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddVerifiableAddressUnprocessableEntity creates a SystemAddVerifiableAddressUnprocessableEntity with default headers values
func NewSystemAddVerifiableAddressUnprocessableEntity() *SystemAddVerifiableAddressUnprocessableEntity {
	return &SystemAddVerifiableAddressUnprocessableEntity{}
}

/*
SystemAddVerifiableAddressUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SystemAddVerifiableAddressUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add verifiable address unprocessable entity response has a 2xx status code
func (o *SystemAddVerifiableAddressUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add verifiable address unprocessable entity response has a 3xx status code
func (o *SystemAddVerifiableAddressUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add verifiable address unprocessable entity response has a 4xx status code
func (o *SystemAddVerifiableAddressUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add verifiable address unprocessable entity response has a 5xx status code
func (o *SystemAddVerifiableAddressUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this system add verifiable address unprocessable entity response a status code equal to that given
func (o *SystemAddVerifiableAddressUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *SystemAddVerifiableAddressUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemAddVerifiableAddressUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/addresses/add][%d] systemAddVerifiableAddressUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemAddVerifiableAddressUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddVerifiableAddressUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
