// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// DeleteWebAuthnKeyReader is a Reader for the DeleteWebAuthnKey structure.
type DeleteWebAuthnKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWebAuthnKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteWebAuthnKeyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteWebAuthnKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteWebAuthnKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteWebAuthnKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWebAuthnKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewDeleteWebAuthnKeyPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteWebAuthnKeyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteWebAuthnKeyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}] deleteWebAuthnKey", response, response.Code())
	}
}

// NewDeleteWebAuthnKeyNoContent creates a DeleteWebAuthnKeyNoContent with default headers values
func NewDeleteWebAuthnKeyNoContent() *DeleteWebAuthnKeyNoContent {
	return &DeleteWebAuthnKeyNoContent{}
}

/*
DeleteWebAuthnKeyNoContent describes a response with status code 204, with default header values.

	WebAuthn deleted
*/
type DeleteWebAuthnKeyNoContent struct {
}

// IsSuccess returns true when this delete web authn key no content response has a 2xx status code
func (o *DeleteWebAuthnKeyNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete web authn key no content response has a 3xx status code
func (o *DeleteWebAuthnKeyNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key no content response has a 4xx status code
func (o *DeleteWebAuthnKeyNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete web authn key no content response has a 5xx status code
func (o *DeleteWebAuthnKeyNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key no content response a status code equal to that given
func (o *DeleteWebAuthnKeyNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete web authn key no content response
func (o *DeleteWebAuthnKeyNoContent) Code() int {
	return 204
}

func (o *DeleteWebAuthnKeyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyNoContent ", 204)
}

func (o *DeleteWebAuthnKeyNoContent) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyNoContent ", 204)
}

func (o *DeleteWebAuthnKeyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWebAuthnKeyBadRequest creates a DeleteWebAuthnKeyBadRequest with default headers values
func NewDeleteWebAuthnKeyBadRequest() *DeleteWebAuthnKeyBadRequest {
	return &DeleteWebAuthnKeyBadRequest{}
}

/*
DeleteWebAuthnKeyBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteWebAuthnKeyBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key bad request response has a 2xx status code
func (o *DeleteWebAuthnKeyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key bad request response has a 3xx status code
func (o *DeleteWebAuthnKeyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key bad request response has a 4xx status code
func (o *DeleteWebAuthnKeyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key bad request response has a 5xx status code
func (o *DeleteWebAuthnKeyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key bad request response a status code equal to that given
func (o *DeleteWebAuthnKeyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete web authn key bad request response
func (o *DeleteWebAuthnKeyBadRequest) Code() int {
	return 400
}

func (o *DeleteWebAuthnKeyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWebAuthnKeyBadRequest) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteWebAuthnKeyBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebAuthnKeyUnauthorized creates a DeleteWebAuthnKeyUnauthorized with default headers values
func NewDeleteWebAuthnKeyUnauthorized() *DeleteWebAuthnKeyUnauthorized {
	return &DeleteWebAuthnKeyUnauthorized{}
}

/*
DeleteWebAuthnKeyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteWebAuthnKeyUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key unauthorized response has a 2xx status code
func (o *DeleteWebAuthnKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key unauthorized response has a 3xx status code
func (o *DeleteWebAuthnKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key unauthorized response has a 4xx status code
func (o *DeleteWebAuthnKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key unauthorized response has a 5xx status code
func (o *DeleteWebAuthnKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key unauthorized response a status code equal to that given
func (o *DeleteWebAuthnKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete web authn key unauthorized response
func (o *DeleteWebAuthnKeyUnauthorized) Code() int {
	return 401
}

func (o *DeleteWebAuthnKeyUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebAuthnKeyUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebAuthnKeyUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebAuthnKeyForbidden creates a DeleteWebAuthnKeyForbidden with default headers values
func NewDeleteWebAuthnKeyForbidden() *DeleteWebAuthnKeyForbidden {
	return &DeleteWebAuthnKeyForbidden{}
}

/*
DeleteWebAuthnKeyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteWebAuthnKeyForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key forbidden response has a 2xx status code
func (o *DeleteWebAuthnKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key forbidden response has a 3xx status code
func (o *DeleteWebAuthnKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key forbidden response has a 4xx status code
func (o *DeleteWebAuthnKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key forbidden response has a 5xx status code
func (o *DeleteWebAuthnKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key forbidden response a status code equal to that given
func (o *DeleteWebAuthnKeyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete web authn key forbidden response
func (o *DeleteWebAuthnKeyForbidden) Code() int {
	return 403
}

func (o *DeleteWebAuthnKeyForbidden) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebAuthnKeyForbidden) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebAuthnKeyForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebAuthnKeyNotFound creates a DeleteWebAuthnKeyNotFound with default headers values
func NewDeleteWebAuthnKeyNotFound() *DeleteWebAuthnKeyNotFound {
	return &DeleteWebAuthnKeyNotFound{}
}

/*
DeleteWebAuthnKeyNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteWebAuthnKeyNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key not found response has a 2xx status code
func (o *DeleteWebAuthnKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key not found response has a 3xx status code
func (o *DeleteWebAuthnKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key not found response has a 4xx status code
func (o *DeleteWebAuthnKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key not found response has a 5xx status code
func (o *DeleteWebAuthnKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key not found response a status code equal to that given
func (o *DeleteWebAuthnKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete web authn key not found response
func (o *DeleteWebAuthnKeyNotFound) Code() int {
	return 404
}

func (o *DeleteWebAuthnKeyNotFound) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebAuthnKeyNotFound) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebAuthnKeyNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebAuthnKeyPreconditionFailed creates a DeleteWebAuthnKeyPreconditionFailed with default headers values
func NewDeleteWebAuthnKeyPreconditionFailed() *DeleteWebAuthnKeyPreconditionFailed {
	return &DeleteWebAuthnKeyPreconditionFailed{}
}

/*
DeleteWebAuthnKeyPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type DeleteWebAuthnKeyPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key precondition failed response has a 2xx status code
func (o *DeleteWebAuthnKeyPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key precondition failed response has a 3xx status code
func (o *DeleteWebAuthnKeyPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key precondition failed response has a 4xx status code
func (o *DeleteWebAuthnKeyPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key precondition failed response has a 5xx status code
func (o *DeleteWebAuthnKeyPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key precondition failed response a status code equal to that given
func (o *DeleteWebAuthnKeyPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the delete web authn key precondition failed response
func (o *DeleteWebAuthnKeyPreconditionFailed) Code() int {
	return 412
}

func (o *DeleteWebAuthnKeyPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteWebAuthnKeyPreconditionFailed) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteWebAuthnKeyPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebAuthnKeyUnprocessableEntity creates a DeleteWebAuthnKeyUnprocessableEntity with default headers values
func NewDeleteWebAuthnKeyUnprocessableEntity() *DeleteWebAuthnKeyUnprocessableEntity {
	return &DeleteWebAuthnKeyUnprocessableEntity{}
}

/*
DeleteWebAuthnKeyUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type DeleteWebAuthnKeyUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key unprocessable entity response has a 2xx status code
func (o *DeleteWebAuthnKeyUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key unprocessable entity response has a 3xx status code
func (o *DeleteWebAuthnKeyUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key unprocessable entity response has a 4xx status code
func (o *DeleteWebAuthnKeyUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key unprocessable entity response has a 5xx status code
func (o *DeleteWebAuthnKeyUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key unprocessable entity response a status code equal to that given
func (o *DeleteWebAuthnKeyUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete web authn key unprocessable entity response
func (o *DeleteWebAuthnKeyUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteWebAuthnKeyUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteWebAuthnKeyUnprocessableEntity) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *DeleteWebAuthnKeyUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebAuthnKeyTooManyRequests creates a DeleteWebAuthnKeyTooManyRequests with default headers values
func NewDeleteWebAuthnKeyTooManyRequests() *DeleteWebAuthnKeyTooManyRequests {
	return &DeleteWebAuthnKeyTooManyRequests{}
}

/*
DeleteWebAuthnKeyTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteWebAuthnKeyTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete web authn key too many requests response has a 2xx status code
func (o *DeleteWebAuthnKeyTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete web authn key too many requests response has a 3xx status code
func (o *DeleteWebAuthnKeyTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete web authn key too many requests response has a 4xx status code
func (o *DeleteWebAuthnKeyTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete web authn key too many requests response has a 5xx status code
func (o *DeleteWebAuthnKeyTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete web authn key too many requests response a status code equal to that given
func (o *DeleteWebAuthnKeyTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete web authn key too many requests response
func (o *DeleteWebAuthnKeyTooManyRequests) Code() int {
	return 429
}

func (o *DeleteWebAuthnKeyTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebAuthnKeyTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/users/{userID}/webauthn/{webAuthnCredentialID}][%d] deleteWebAuthnKeyTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebAuthnKeyTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebAuthnKeyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
