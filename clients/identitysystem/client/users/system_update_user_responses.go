// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemUpdateUserReader is a Reader for the SystemUpdateUser structure.
type SystemUpdateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemUpdateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemUpdateUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemUpdateUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemUpdateUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemUpdateUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemUpdateUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSystemUpdateUserConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSystemUpdateUserPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSystemUpdateUserUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemUpdateUserTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSystemUpdateUserOK creates a SystemUpdateUserOK with default headers values
func NewSystemUpdateUserOK() *SystemUpdateUserOK {
	return &SystemUpdateUserOK{}
}

/*
SystemUpdateUserOK describes a response with status code 200, with default header values.

User
*/
type SystemUpdateUserOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserWithData
}

// IsSuccess returns true when this system update user o k response has a 2xx status code
func (o *SystemUpdateUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system update user o k response has a 3xx status code
func (o *SystemUpdateUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user o k response has a 4xx status code
func (o *SystemUpdateUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system update user o k response has a 5xx status code
func (o *SystemUpdateUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user o k response a status code equal to that given
func (o *SystemUpdateUserOK) IsCode(code int) bool {
	return code == 200
}

func (o *SystemUpdateUserOK) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserOK  %+v", 200, o.Payload)
}

func (o *SystemUpdateUserOK) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserOK  %+v", 200, o.Payload)
}

func (o *SystemUpdateUserOK) GetPayload() *models.UserWithData {
	return o.Payload
}

func (o *SystemUpdateUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserWithData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserBadRequest creates a SystemUpdateUserBadRequest with default headers values
func NewSystemUpdateUserBadRequest() *SystemUpdateUserBadRequest {
	return &SystemUpdateUserBadRequest{}
}

/*
SystemUpdateUserBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SystemUpdateUserBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user bad request response has a 2xx status code
func (o *SystemUpdateUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user bad request response has a 3xx status code
func (o *SystemUpdateUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user bad request response has a 4xx status code
func (o *SystemUpdateUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user bad request response has a 5xx status code
func (o *SystemUpdateUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user bad request response a status code equal to that given
func (o *SystemUpdateUserBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SystemUpdateUserBadRequest) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserBadRequest  %+v", 400, o.Payload)
}

func (o *SystemUpdateUserBadRequest) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserBadRequest  %+v", 400, o.Payload)
}

func (o *SystemUpdateUserBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserUnauthorized creates a SystemUpdateUserUnauthorized with default headers values
func NewSystemUpdateUserUnauthorized() *SystemUpdateUserUnauthorized {
	return &SystemUpdateUserUnauthorized{}
}

/*
SystemUpdateUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemUpdateUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user unauthorized response has a 2xx status code
func (o *SystemUpdateUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user unauthorized response has a 3xx status code
func (o *SystemUpdateUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user unauthorized response has a 4xx status code
func (o *SystemUpdateUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user unauthorized response has a 5xx status code
func (o *SystemUpdateUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user unauthorized response a status code equal to that given
func (o *SystemUpdateUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SystemUpdateUserUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemUpdateUserUnauthorized) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemUpdateUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserForbidden creates a SystemUpdateUserForbidden with default headers values
func NewSystemUpdateUserForbidden() *SystemUpdateUserForbidden {
	return &SystemUpdateUserForbidden{}
}

/*
SystemUpdateUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemUpdateUserForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user forbidden response has a 2xx status code
func (o *SystemUpdateUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user forbidden response has a 3xx status code
func (o *SystemUpdateUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user forbidden response has a 4xx status code
func (o *SystemUpdateUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user forbidden response has a 5xx status code
func (o *SystemUpdateUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user forbidden response a status code equal to that given
func (o *SystemUpdateUserForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SystemUpdateUserForbidden) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserForbidden  %+v", 403, o.Payload)
}

func (o *SystemUpdateUserForbidden) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserForbidden  %+v", 403, o.Payload)
}

func (o *SystemUpdateUserForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserNotFound creates a SystemUpdateUserNotFound with default headers values
func NewSystemUpdateUserNotFound() *SystemUpdateUserNotFound {
	return &SystemUpdateUserNotFound{}
}

/*
SystemUpdateUserNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemUpdateUserNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user not found response has a 2xx status code
func (o *SystemUpdateUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user not found response has a 3xx status code
func (o *SystemUpdateUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user not found response has a 4xx status code
func (o *SystemUpdateUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user not found response has a 5xx status code
func (o *SystemUpdateUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user not found response a status code equal to that given
func (o *SystemUpdateUserNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SystemUpdateUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserNotFound  %+v", 404, o.Payload)
}

func (o *SystemUpdateUserNotFound) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserNotFound  %+v", 404, o.Payload)
}

func (o *SystemUpdateUserNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserConflict creates a SystemUpdateUserConflict with default headers values
func NewSystemUpdateUserConflict() *SystemUpdateUserConflict {
	return &SystemUpdateUserConflict{}
}

/*
SystemUpdateUserConflict describes a response with status code 409, with default header values.

Conflict
*/
type SystemUpdateUserConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user conflict response has a 2xx status code
func (o *SystemUpdateUserConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user conflict response has a 3xx status code
func (o *SystemUpdateUserConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user conflict response has a 4xx status code
func (o *SystemUpdateUserConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user conflict response has a 5xx status code
func (o *SystemUpdateUserConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user conflict response a status code equal to that given
func (o *SystemUpdateUserConflict) IsCode(code int) bool {
	return code == 409
}

func (o *SystemUpdateUserConflict) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserConflict  %+v", 409, o.Payload)
}

func (o *SystemUpdateUserConflict) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserConflict  %+v", 409, o.Payload)
}

func (o *SystemUpdateUserConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserPreconditionFailed creates a SystemUpdateUserPreconditionFailed with default headers values
func NewSystemUpdateUserPreconditionFailed() *SystemUpdateUserPreconditionFailed {
	return &SystemUpdateUserPreconditionFailed{}
}

/*
SystemUpdateUserPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type SystemUpdateUserPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user precondition failed response has a 2xx status code
func (o *SystemUpdateUserPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user precondition failed response has a 3xx status code
func (o *SystemUpdateUserPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user precondition failed response has a 4xx status code
func (o *SystemUpdateUserPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user precondition failed response has a 5xx status code
func (o *SystemUpdateUserPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user precondition failed response a status code equal to that given
func (o *SystemUpdateUserPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

func (o *SystemUpdateUserPreconditionFailed) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemUpdateUserPreconditionFailed) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemUpdateUserPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserUnprocessableEntity creates a SystemUpdateUserUnprocessableEntity with default headers values
func NewSystemUpdateUserUnprocessableEntity() *SystemUpdateUserUnprocessableEntity {
	return &SystemUpdateUserUnprocessableEntity{}
}

/*
SystemUpdateUserUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SystemUpdateUserUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user unprocessable entity response has a 2xx status code
func (o *SystemUpdateUserUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user unprocessable entity response has a 3xx status code
func (o *SystemUpdateUserUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user unprocessable entity response has a 4xx status code
func (o *SystemUpdateUserUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user unprocessable entity response has a 5xx status code
func (o *SystemUpdateUserUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user unprocessable entity response a status code equal to that given
func (o *SystemUpdateUserUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *SystemUpdateUserUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemUpdateUserUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemUpdateUserUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemUpdateUserTooManyRequests creates a SystemUpdateUserTooManyRequests with default headers values
func NewSystemUpdateUserTooManyRequests() *SystemUpdateUserTooManyRequests {
	return &SystemUpdateUserTooManyRequests{}
}

/*
SystemUpdateUserTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemUpdateUserTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system update user too many requests response has a 2xx status code
func (o *SystemUpdateUserTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system update user too many requests response has a 3xx status code
func (o *SystemUpdateUserTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system update user too many requests response has a 4xx status code
func (o *SystemUpdateUserTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system update user too many requests response has a 5xx status code
func (o *SystemUpdateUserTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system update user too many requests response a status code equal to that given
func (o *SystemUpdateUserTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *SystemUpdateUserTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *SystemUpdateUserTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /system/pools/{ipID}/users/{userID}][%d] systemUpdateUserTooManyRequests  %+v", 429, o.Payload)
}

func (o *SystemUpdateUserTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemUpdateUserTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
