// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemAddIdentifierReader is a Reader for the SystemAddIdentifier structure.
type SystemAddIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemAddIdentifierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemAddIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemAddIdentifierUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemAddIdentifierForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemAddIdentifierNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSystemAddIdentifierConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSystemAddIdentifierPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSystemAddIdentifierUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSystemAddIdentifierOK creates a SystemAddIdentifierOK with default headers values
func NewSystemAddIdentifierOK() *SystemAddIdentifierOK {
	return &SystemAddIdentifierOK{}
}

/*
SystemAddIdentifierOK describes a response with status code 200, with default header values.

User
*/
type SystemAddIdentifierOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserIdentifier
}

// IsSuccess returns true when this system add identifier o k response has a 2xx status code
func (o *SystemAddIdentifierOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system add identifier o k response has a 3xx status code
func (o *SystemAddIdentifierOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier o k response has a 4xx status code
func (o *SystemAddIdentifierOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system add identifier o k response has a 5xx status code
func (o *SystemAddIdentifierOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier o k response a status code equal to that given
func (o *SystemAddIdentifierOK) IsCode(code int) bool {
	return code == 200
}

func (o *SystemAddIdentifierOK) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierOK  %+v", 200, o.Payload)
}

func (o *SystemAddIdentifierOK) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierOK  %+v", 200, o.Payload)
}

func (o *SystemAddIdentifierOK) GetPayload() *models.UserIdentifier {
	return o.Payload
}

func (o *SystemAddIdentifierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserIdentifier)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddIdentifierUnauthorized creates a SystemAddIdentifierUnauthorized with default headers values
func NewSystemAddIdentifierUnauthorized() *SystemAddIdentifierUnauthorized {
	return &SystemAddIdentifierUnauthorized{}
}

/*
SystemAddIdentifierUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type SystemAddIdentifierUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add identifier unauthorized response has a 2xx status code
func (o *SystemAddIdentifierUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add identifier unauthorized response has a 3xx status code
func (o *SystemAddIdentifierUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier unauthorized response has a 4xx status code
func (o *SystemAddIdentifierUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add identifier unauthorized response has a 5xx status code
func (o *SystemAddIdentifierUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier unauthorized response a status code equal to that given
func (o *SystemAddIdentifierUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SystemAddIdentifierUnauthorized) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemAddIdentifierUnauthorized) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemAddIdentifierUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddIdentifierUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddIdentifierForbidden creates a SystemAddIdentifierForbidden with default headers values
func NewSystemAddIdentifierForbidden() *SystemAddIdentifierForbidden {
	return &SystemAddIdentifierForbidden{}
}

/*
SystemAddIdentifierForbidden describes a response with status code 403, with default header values.

HttpError
*/
type SystemAddIdentifierForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add identifier forbidden response has a 2xx status code
func (o *SystemAddIdentifierForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add identifier forbidden response has a 3xx status code
func (o *SystemAddIdentifierForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier forbidden response has a 4xx status code
func (o *SystemAddIdentifierForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add identifier forbidden response has a 5xx status code
func (o *SystemAddIdentifierForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier forbidden response a status code equal to that given
func (o *SystemAddIdentifierForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *SystemAddIdentifierForbidden) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierForbidden  %+v", 403, o.Payload)
}

func (o *SystemAddIdentifierForbidden) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierForbidden  %+v", 403, o.Payload)
}

func (o *SystemAddIdentifierForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddIdentifierForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddIdentifierNotFound creates a SystemAddIdentifierNotFound with default headers values
func NewSystemAddIdentifierNotFound() *SystemAddIdentifierNotFound {
	return &SystemAddIdentifierNotFound{}
}

/*
SystemAddIdentifierNotFound describes a response with status code 404, with default header values.

HttpError
*/
type SystemAddIdentifierNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add identifier not found response has a 2xx status code
func (o *SystemAddIdentifierNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add identifier not found response has a 3xx status code
func (o *SystemAddIdentifierNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier not found response has a 4xx status code
func (o *SystemAddIdentifierNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add identifier not found response has a 5xx status code
func (o *SystemAddIdentifierNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier not found response a status code equal to that given
func (o *SystemAddIdentifierNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *SystemAddIdentifierNotFound) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *SystemAddIdentifierNotFound) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierNotFound  %+v", 404, o.Payload)
}

func (o *SystemAddIdentifierNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddIdentifierNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddIdentifierConflict creates a SystemAddIdentifierConflict with default headers values
func NewSystemAddIdentifierConflict() *SystemAddIdentifierConflict {
	return &SystemAddIdentifierConflict{}
}

/*
SystemAddIdentifierConflict describes a response with status code 409, with default header values.

HttpError
*/
type SystemAddIdentifierConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add identifier conflict response has a 2xx status code
func (o *SystemAddIdentifierConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add identifier conflict response has a 3xx status code
func (o *SystemAddIdentifierConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier conflict response has a 4xx status code
func (o *SystemAddIdentifierConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add identifier conflict response has a 5xx status code
func (o *SystemAddIdentifierConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier conflict response a status code equal to that given
func (o *SystemAddIdentifierConflict) IsCode(code int) bool {
	return code == 409
}

func (o *SystemAddIdentifierConflict) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierConflict  %+v", 409, o.Payload)
}

func (o *SystemAddIdentifierConflict) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierConflict  %+v", 409, o.Payload)
}

func (o *SystemAddIdentifierConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddIdentifierConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddIdentifierPreconditionFailed creates a SystemAddIdentifierPreconditionFailed with default headers values
func NewSystemAddIdentifierPreconditionFailed() *SystemAddIdentifierPreconditionFailed {
	return &SystemAddIdentifierPreconditionFailed{}
}

/*
SystemAddIdentifierPreconditionFailed describes a response with status code 412, with default header values.

HttpError
*/
type SystemAddIdentifierPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add identifier precondition failed response has a 2xx status code
func (o *SystemAddIdentifierPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add identifier precondition failed response has a 3xx status code
func (o *SystemAddIdentifierPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier precondition failed response has a 4xx status code
func (o *SystemAddIdentifierPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add identifier precondition failed response has a 5xx status code
func (o *SystemAddIdentifierPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier precondition failed response a status code equal to that given
func (o *SystemAddIdentifierPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

func (o *SystemAddIdentifierPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemAddIdentifierPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierPreconditionFailed  %+v", 412, o.Payload)
}

func (o *SystemAddIdentifierPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddIdentifierPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemAddIdentifierUnprocessableEntity creates a SystemAddIdentifierUnprocessableEntity with default headers values
func NewSystemAddIdentifierUnprocessableEntity() *SystemAddIdentifierUnprocessableEntity {
	return &SystemAddIdentifierUnprocessableEntity{}
}

/*
SystemAddIdentifierUnprocessableEntity describes a response with status code 422, with default header values.

HttpError
*/
type SystemAddIdentifierUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this system add identifier unprocessable entity response has a 2xx status code
func (o *SystemAddIdentifierUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system add identifier unprocessable entity response has a 3xx status code
func (o *SystemAddIdentifierUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system add identifier unprocessable entity response has a 4xx status code
func (o *SystemAddIdentifierUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this system add identifier unprocessable entity response has a 5xx status code
func (o *SystemAddIdentifierUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this system add identifier unprocessable entity response a status code equal to that given
func (o *SystemAddIdentifierUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *SystemAddIdentifierUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemAddIdentifierUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/{userID}/identifiers/add][%d] systemAddIdentifierUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SystemAddIdentifierUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemAddIdentifierUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
