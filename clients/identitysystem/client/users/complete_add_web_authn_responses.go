// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// CompleteAddWebAuthnReader is a Reader for the CompleteAddWebAuthn structure.
type CompleteAddWebAuthnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CompleteAddWebAuthnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCompleteAddWebAuthnNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCompleteAddWebAuthnUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewCompleteAddWebAuthnPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCompleteAddWebAuthnUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/user/webauthn/add/complete] completeAddWebAuthn", response, response.Code())
	}
}

// NewCompleteAddWebAuthnNoContent creates a CompleteAddWebAuthnNoContent with default headers values
func NewCompleteAddWebAuthnNoContent() *CompleteAddWebAuthnNoContent {
	return &CompleteAddWebAuthnNoContent{}
}

/*
CompleteAddWebAuthnNoContent describes a response with status code 204, with default header values.

	WebAuthn added
*/
type CompleteAddWebAuthnNoContent struct {
}

// IsSuccess returns true when this complete add web authn no content response has a 2xx status code
func (o *CompleteAddWebAuthnNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this complete add web authn no content response has a 3xx status code
func (o *CompleteAddWebAuthnNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete add web authn no content response has a 4xx status code
func (o *CompleteAddWebAuthnNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete add web authn no content response has a 5xx status code
func (o *CompleteAddWebAuthnNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this complete add web authn no content response a status code equal to that given
func (o *CompleteAddWebAuthnNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the complete add web authn no content response
func (o *CompleteAddWebAuthnNoContent) Code() int {
	return 204
}

func (o *CompleteAddWebAuthnNoContent) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnNoContent ", 204)
}

func (o *CompleteAddWebAuthnNoContent) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnNoContent ", 204)
}

func (o *CompleteAddWebAuthnNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteAddWebAuthnUnauthorized creates a CompleteAddWebAuthnUnauthorized with default headers values
func NewCompleteAddWebAuthnUnauthorized() *CompleteAddWebAuthnUnauthorized {
	return &CompleteAddWebAuthnUnauthorized{}
}

/*
CompleteAddWebAuthnUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CompleteAddWebAuthnUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this complete add web authn unauthorized response has a 2xx status code
func (o *CompleteAddWebAuthnUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete add web authn unauthorized response has a 3xx status code
func (o *CompleteAddWebAuthnUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete add web authn unauthorized response has a 4xx status code
func (o *CompleteAddWebAuthnUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete add web authn unauthorized response has a 5xx status code
func (o *CompleteAddWebAuthnUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this complete add web authn unauthorized response a status code equal to that given
func (o *CompleteAddWebAuthnUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the complete add web authn unauthorized response
func (o *CompleteAddWebAuthnUnauthorized) Code() int {
	return 401
}

func (o *CompleteAddWebAuthnUnauthorized) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnUnauthorized  %+v", 401, o.Payload)
}

func (o *CompleteAddWebAuthnUnauthorized) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnUnauthorized  %+v", 401, o.Payload)
}

func (o *CompleteAddWebAuthnUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddWebAuthnUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteAddWebAuthnPreconditionFailed creates a CompleteAddWebAuthnPreconditionFailed with default headers values
func NewCompleteAddWebAuthnPreconditionFailed() *CompleteAddWebAuthnPreconditionFailed {
	return &CompleteAddWebAuthnPreconditionFailed{}
}

/*
CompleteAddWebAuthnPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type CompleteAddWebAuthnPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this complete add web authn precondition failed response has a 2xx status code
func (o *CompleteAddWebAuthnPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete add web authn precondition failed response has a 3xx status code
func (o *CompleteAddWebAuthnPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete add web authn precondition failed response has a 4xx status code
func (o *CompleteAddWebAuthnPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete add web authn precondition failed response has a 5xx status code
func (o *CompleteAddWebAuthnPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this complete add web authn precondition failed response a status code equal to that given
func (o *CompleteAddWebAuthnPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the complete add web authn precondition failed response
func (o *CompleteAddWebAuthnPreconditionFailed) Code() int {
	return 412
}

func (o *CompleteAddWebAuthnPreconditionFailed) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CompleteAddWebAuthnPreconditionFailed) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnPreconditionFailed  %+v", 412, o.Payload)
}

func (o *CompleteAddWebAuthnPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddWebAuthnPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCompleteAddWebAuthnUnprocessableEntity creates a CompleteAddWebAuthnUnprocessableEntity with default headers values
func NewCompleteAddWebAuthnUnprocessableEntity() *CompleteAddWebAuthnUnprocessableEntity {
	return &CompleteAddWebAuthnUnprocessableEntity{}
}

/*
CompleteAddWebAuthnUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CompleteAddWebAuthnUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this complete add web authn unprocessable entity response has a 2xx status code
func (o *CompleteAddWebAuthnUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete add web authn unprocessable entity response has a 3xx status code
func (o *CompleteAddWebAuthnUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete add web authn unprocessable entity response has a 4xx status code
func (o *CompleteAddWebAuthnUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete add web authn unprocessable entity response has a 5xx status code
func (o *CompleteAddWebAuthnUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this complete add web authn unprocessable entity response a status code equal to that given
func (o *CompleteAddWebAuthnUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the complete add web authn unprocessable entity response
func (o *CompleteAddWebAuthnUnprocessableEntity) Code() int {
	return 422
}

func (o *CompleteAddWebAuthnUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CompleteAddWebAuthnUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /system/pools/{ipID}/user/webauthn/add/complete][%d] completeAddWebAuthnUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CompleteAddWebAuthnUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CompleteAddWebAuthnUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
