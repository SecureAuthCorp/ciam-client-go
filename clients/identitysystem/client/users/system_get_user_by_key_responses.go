// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemGetUserByKeyReader is a Reader for the SystemGetUserByKey structure.
type SystemGetUserByKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemGetUserByKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemGetUserByKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemGetUserByKeyUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemGetUserByKeyForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemGetUserByKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 412:
		result := NewSystemGetUserByKeyPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemGetUserByKeyTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/users/by_key] systemGetUserByKey", response, response.Code())
	}
}

// NewSystemGetUserByKeyOK creates a SystemGetUserByKeyOK with default headers values
func NewSystemGetUserByKeyOK() *SystemGetUserByKeyOK {
	return &SystemGetUserByKeyOK{}
}

/*
SystemGetUserByKeyOK describes a response with status code 200, with default header values.

User
*/
type SystemGetUserByKeyOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserWithData
}

// IsSuccess returns true when this system get user by key o k response has a 2xx status code
func (o *SystemGetUserByKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system get user by key o k response has a 3xx status code
func (o *SystemGetUserByKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get user by key o k response has a 4xx status code
func (o *SystemGetUserByKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system get user by key o k response has a 5xx status code
func (o *SystemGetUserByKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system get user by key o k response a status code equal to that given
func (o *SystemGetUserByKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the system get user by key o k response
func (o *SystemGetUserByKeyOK) Code() int {
	return 200
}

func (o *SystemGetUserByKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyOK %s", 200, payload)
}

func (o *SystemGetUserByKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyOK %s", 200, payload)
}

func (o *SystemGetUserByKeyOK) GetPayload() *models.UserWithData {
	return o.Payload
}

func (o *SystemGetUserByKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserWithData)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetUserByKeyUnauthorized creates a SystemGetUserByKeyUnauthorized with default headers values
func NewSystemGetUserByKeyUnauthorized() *SystemGetUserByKeyUnauthorized {
	return &SystemGetUserByKeyUnauthorized{}
}

/*
SystemGetUserByKeyUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemGetUserByKeyUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get user by key unauthorized response has a 2xx status code
func (o *SystemGetUserByKeyUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get user by key unauthorized response has a 3xx status code
func (o *SystemGetUserByKeyUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get user by key unauthorized response has a 4xx status code
func (o *SystemGetUserByKeyUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get user by key unauthorized response has a 5xx status code
func (o *SystemGetUserByKeyUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system get user by key unauthorized response a status code equal to that given
func (o *SystemGetUserByKeyUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the system get user by key unauthorized response
func (o *SystemGetUserByKeyUnauthorized) Code() int {
	return 401
}

func (o *SystemGetUserByKeyUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyUnauthorized %s", 401, payload)
}

func (o *SystemGetUserByKeyUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyUnauthorized %s", 401, payload)
}

func (o *SystemGetUserByKeyUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetUserByKeyUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetUserByKeyForbidden creates a SystemGetUserByKeyForbidden with default headers values
func NewSystemGetUserByKeyForbidden() *SystemGetUserByKeyForbidden {
	return &SystemGetUserByKeyForbidden{}
}

/*
SystemGetUserByKeyForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemGetUserByKeyForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get user by key forbidden response has a 2xx status code
func (o *SystemGetUserByKeyForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get user by key forbidden response has a 3xx status code
func (o *SystemGetUserByKeyForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get user by key forbidden response has a 4xx status code
func (o *SystemGetUserByKeyForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get user by key forbidden response has a 5xx status code
func (o *SystemGetUserByKeyForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system get user by key forbidden response a status code equal to that given
func (o *SystemGetUserByKeyForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the system get user by key forbidden response
func (o *SystemGetUserByKeyForbidden) Code() int {
	return 403
}

func (o *SystemGetUserByKeyForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyForbidden %s", 403, payload)
}

func (o *SystemGetUserByKeyForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyForbidden %s", 403, payload)
}

func (o *SystemGetUserByKeyForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetUserByKeyForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetUserByKeyNotFound creates a SystemGetUserByKeyNotFound with default headers values
func NewSystemGetUserByKeyNotFound() *SystemGetUserByKeyNotFound {
	return &SystemGetUserByKeyNotFound{}
}

/*
SystemGetUserByKeyNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemGetUserByKeyNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get user by key not found response has a 2xx status code
func (o *SystemGetUserByKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get user by key not found response has a 3xx status code
func (o *SystemGetUserByKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get user by key not found response has a 4xx status code
func (o *SystemGetUserByKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get user by key not found response has a 5xx status code
func (o *SystemGetUserByKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system get user by key not found response a status code equal to that given
func (o *SystemGetUserByKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the system get user by key not found response
func (o *SystemGetUserByKeyNotFound) Code() int {
	return 404
}

func (o *SystemGetUserByKeyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyNotFound %s", 404, payload)
}

func (o *SystemGetUserByKeyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyNotFound %s", 404, payload)
}

func (o *SystemGetUserByKeyNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetUserByKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetUserByKeyPreconditionFailed creates a SystemGetUserByKeyPreconditionFailed with default headers values
func NewSystemGetUserByKeyPreconditionFailed() *SystemGetUserByKeyPreconditionFailed {
	return &SystemGetUserByKeyPreconditionFailed{}
}

/*
SystemGetUserByKeyPreconditionFailed describes a response with status code 412, with default header values.

Payload too large
*/
type SystemGetUserByKeyPreconditionFailed struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get user by key precondition failed response has a 2xx status code
func (o *SystemGetUserByKeyPreconditionFailed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get user by key precondition failed response has a 3xx status code
func (o *SystemGetUserByKeyPreconditionFailed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get user by key precondition failed response has a 4xx status code
func (o *SystemGetUserByKeyPreconditionFailed) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get user by key precondition failed response has a 5xx status code
func (o *SystemGetUserByKeyPreconditionFailed) IsServerError() bool {
	return false
}

// IsCode returns true when this system get user by key precondition failed response a status code equal to that given
func (o *SystemGetUserByKeyPreconditionFailed) IsCode(code int) bool {
	return code == 412
}

// Code gets the status code for the system get user by key precondition failed response
func (o *SystemGetUserByKeyPreconditionFailed) Code() int {
	return 412
}

func (o *SystemGetUserByKeyPreconditionFailed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyPreconditionFailed %s", 412, payload)
}

func (o *SystemGetUserByKeyPreconditionFailed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyPreconditionFailed %s", 412, payload)
}

func (o *SystemGetUserByKeyPreconditionFailed) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetUserByKeyPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetUserByKeyTooManyRequests creates a SystemGetUserByKeyTooManyRequests with default headers values
func NewSystemGetUserByKeyTooManyRequests() *SystemGetUserByKeyTooManyRequests {
	return &SystemGetUserByKeyTooManyRequests{}
}

/*
SystemGetUserByKeyTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemGetUserByKeyTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get user by key too many requests response has a 2xx status code
func (o *SystemGetUserByKeyTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get user by key too many requests response has a 3xx status code
func (o *SystemGetUserByKeyTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get user by key too many requests response has a 4xx status code
func (o *SystemGetUserByKeyTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get user by key too many requests response has a 5xx status code
func (o *SystemGetUserByKeyTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system get user by key too many requests response a status code equal to that given
func (o *SystemGetUserByKeyTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the system get user by key too many requests response
func (o *SystemGetUserByKeyTooManyRequests) Code() int {
	return 429
}

func (o *SystemGetUserByKeyTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyTooManyRequests %s", 429, payload)
}

func (o *SystemGetUserByKeyTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/users/by_key][%d] systemGetUserByKeyTooManyRequests %s", 429, payload)
}

func (o *SystemGetUserByKeyTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetUserByKeyTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
