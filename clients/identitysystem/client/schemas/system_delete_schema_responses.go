// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemDeleteSchemaReader is a Reader for the SystemDeleteSchema structure.
type SystemDeleteSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemDeleteSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSystemDeleteSchemaNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemDeleteSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemDeleteSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemDeleteSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemDeleteSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSystemDeleteSchemaConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemDeleteSchemaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /system/schemas/{schID}] systemDeleteSchema", response, response.Code())
	}
}

// NewSystemDeleteSchemaNoContent creates a SystemDeleteSchemaNoContent with default headers values
func NewSystemDeleteSchemaNoContent() *SystemDeleteSchemaNoContent {
	return &SystemDeleteSchemaNoContent{}
}

/*
SystemDeleteSchemaNoContent describes a response with status code 204, with default header values.

	Schema has been deleted
*/
type SystemDeleteSchemaNoContent struct {
}

// IsSuccess returns true when this system delete schema no content response has a 2xx status code
func (o *SystemDeleteSchemaNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system delete schema no content response has a 3xx status code
func (o *SystemDeleteSchemaNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema no content response has a 4xx status code
func (o *SystemDeleteSchemaNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this system delete schema no content response has a 5xx status code
func (o *SystemDeleteSchemaNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema no content response a status code equal to that given
func (o *SystemDeleteSchemaNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the system delete schema no content response
func (o *SystemDeleteSchemaNoContent) Code() int {
	return 204
}

func (o *SystemDeleteSchemaNoContent) Error() string {
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaNoContent", 204)
}

func (o *SystemDeleteSchemaNoContent) String() string {
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaNoContent", 204)
}

func (o *SystemDeleteSchemaNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemDeleteSchemaBadRequest creates a SystemDeleteSchemaBadRequest with default headers values
func NewSystemDeleteSchemaBadRequest() *SystemDeleteSchemaBadRequest {
	return &SystemDeleteSchemaBadRequest{}
}

/*
SystemDeleteSchemaBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SystemDeleteSchemaBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this system delete schema bad request response has a 2xx status code
func (o *SystemDeleteSchemaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system delete schema bad request response has a 3xx status code
func (o *SystemDeleteSchemaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema bad request response has a 4xx status code
func (o *SystemDeleteSchemaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this system delete schema bad request response has a 5xx status code
func (o *SystemDeleteSchemaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema bad request response a status code equal to that given
func (o *SystemDeleteSchemaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the system delete schema bad request response
func (o *SystemDeleteSchemaBadRequest) Code() int {
	return 400
}

func (o *SystemDeleteSchemaBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaBadRequest %s", 400, payload)
}

func (o *SystemDeleteSchemaBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaBadRequest %s", 400, payload)
}

func (o *SystemDeleteSchemaBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteSchemaUnauthorized creates a SystemDeleteSchemaUnauthorized with default headers values
func NewSystemDeleteSchemaUnauthorized() *SystemDeleteSchemaUnauthorized {
	return &SystemDeleteSchemaUnauthorized{}
}

/*
SystemDeleteSchemaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemDeleteSchemaUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system delete schema unauthorized response has a 2xx status code
func (o *SystemDeleteSchemaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system delete schema unauthorized response has a 3xx status code
func (o *SystemDeleteSchemaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema unauthorized response has a 4xx status code
func (o *SystemDeleteSchemaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system delete schema unauthorized response has a 5xx status code
func (o *SystemDeleteSchemaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema unauthorized response a status code equal to that given
func (o *SystemDeleteSchemaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the system delete schema unauthorized response
func (o *SystemDeleteSchemaUnauthorized) Code() int {
	return 401
}

func (o *SystemDeleteSchemaUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaUnauthorized %s", 401, payload)
}

func (o *SystemDeleteSchemaUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaUnauthorized %s", 401, payload)
}

func (o *SystemDeleteSchemaUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteSchemaForbidden creates a SystemDeleteSchemaForbidden with default headers values
func NewSystemDeleteSchemaForbidden() *SystemDeleteSchemaForbidden {
	return &SystemDeleteSchemaForbidden{}
}

/*
SystemDeleteSchemaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemDeleteSchemaForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system delete schema forbidden response has a 2xx status code
func (o *SystemDeleteSchemaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system delete schema forbidden response has a 3xx status code
func (o *SystemDeleteSchemaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema forbidden response has a 4xx status code
func (o *SystemDeleteSchemaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system delete schema forbidden response has a 5xx status code
func (o *SystemDeleteSchemaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema forbidden response a status code equal to that given
func (o *SystemDeleteSchemaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the system delete schema forbidden response
func (o *SystemDeleteSchemaForbidden) Code() int {
	return 403
}

func (o *SystemDeleteSchemaForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaForbidden %s", 403, payload)
}

func (o *SystemDeleteSchemaForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaForbidden %s", 403, payload)
}

func (o *SystemDeleteSchemaForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteSchemaNotFound creates a SystemDeleteSchemaNotFound with default headers values
func NewSystemDeleteSchemaNotFound() *SystemDeleteSchemaNotFound {
	return &SystemDeleteSchemaNotFound{}
}

/*
SystemDeleteSchemaNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemDeleteSchemaNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system delete schema not found response has a 2xx status code
func (o *SystemDeleteSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system delete schema not found response has a 3xx status code
func (o *SystemDeleteSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema not found response has a 4xx status code
func (o *SystemDeleteSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system delete schema not found response has a 5xx status code
func (o *SystemDeleteSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema not found response a status code equal to that given
func (o *SystemDeleteSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the system delete schema not found response
func (o *SystemDeleteSchemaNotFound) Code() int {
	return 404
}

func (o *SystemDeleteSchemaNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaNotFound %s", 404, payload)
}

func (o *SystemDeleteSchemaNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaNotFound %s", 404, payload)
}

func (o *SystemDeleteSchemaNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteSchemaConflict creates a SystemDeleteSchemaConflict with default headers values
func NewSystemDeleteSchemaConflict() *SystemDeleteSchemaConflict {
	return &SystemDeleteSchemaConflict{}
}

/*
SystemDeleteSchemaConflict describes a response with status code 409, with default header values.

Conflict
*/
type SystemDeleteSchemaConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this system delete schema conflict response has a 2xx status code
func (o *SystemDeleteSchemaConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system delete schema conflict response has a 3xx status code
func (o *SystemDeleteSchemaConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema conflict response has a 4xx status code
func (o *SystemDeleteSchemaConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this system delete schema conflict response has a 5xx status code
func (o *SystemDeleteSchemaConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema conflict response a status code equal to that given
func (o *SystemDeleteSchemaConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the system delete schema conflict response
func (o *SystemDeleteSchemaConflict) Code() int {
	return 409
}

func (o *SystemDeleteSchemaConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaConflict %s", 409, payload)
}

func (o *SystemDeleteSchemaConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaConflict %s", 409, payload)
}

func (o *SystemDeleteSchemaConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteSchemaConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemDeleteSchemaTooManyRequests creates a SystemDeleteSchemaTooManyRequests with default headers values
func NewSystemDeleteSchemaTooManyRequests() *SystemDeleteSchemaTooManyRequests {
	return &SystemDeleteSchemaTooManyRequests{}
}

/*
SystemDeleteSchemaTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemDeleteSchemaTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system delete schema too many requests response has a 2xx status code
func (o *SystemDeleteSchemaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system delete schema too many requests response has a 3xx status code
func (o *SystemDeleteSchemaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system delete schema too many requests response has a 4xx status code
func (o *SystemDeleteSchemaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system delete schema too many requests response has a 5xx status code
func (o *SystemDeleteSchemaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system delete schema too many requests response a status code equal to that given
func (o *SystemDeleteSchemaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the system delete schema too many requests response
func (o *SystemDeleteSchemaTooManyRequests) Code() int {
	return 429
}

func (o *SystemDeleteSchemaTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaTooManyRequests %s", 429, payload)
}

func (o *SystemDeleteSchemaTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /system/schemas/{schID}][%d] systemDeleteSchemaTooManyRequests %s", 429, payload)
}

func (o *SystemDeleteSchemaTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemDeleteSchemaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
