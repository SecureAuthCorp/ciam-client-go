// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemListSchemasReader is a Reader for the SystemListSchemas structure.
type SystemListSchemasReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemListSchemasReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemListSchemasOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemListSchemasUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemListSchemasForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemListSchemasTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /system/schemas] systemListSchemas", response, response.Code())
	}
}

// NewSystemListSchemasOK creates a SystemListSchemasOK with default headers values
func NewSystemListSchemasOK() *SystemListSchemasOK {
	return &SystemListSchemasOK{}
}

/*
SystemListSchemasOK describes a response with status code 200, with default header values.

Schemas
*/
type SystemListSchemasOK struct {
	Payload *models.Schemas
}

// IsSuccess returns true when this system list schemas o k response has a 2xx status code
func (o *SystemListSchemasOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system list schemas o k response has a 3xx status code
func (o *SystemListSchemasOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system list schemas o k response has a 4xx status code
func (o *SystemListSchemasOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system list schemas o k response has a 5xx status code
func (o *SystemListSchemasOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system list schemas o k response a status code equal to that given
func (o *SystemListSchemasOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the system list schemas o k response
func (o *SystemListSchemasOK) Code() int {
	return 200
}

func (o *SystemListSchemasOK) Error() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasOK  %+v", 200, o.Payload)
}

func (o *SystemListSchemasOK) String() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasOK  %+v", 200, o.Payload)
}

func (o *SystemListSchemasOK) GetPayload() *models.Schemas {
	return o.Payload
}

func (o *SystemListSchemasOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schemas)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemListSchemasUnauthorized creates a SystemListSchemasUnauthorized with default headers values
func NewSystemListSchemasUnauthorized() *SystemListSchemasUnauthorized {
	return &SystemListSchemasUnauthorized{}
}

/*
SystemListSchemasUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemListSchemasUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system list schemas unauthorized response has a 2xx status code
func (o *SystemListSchemasUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system list schemas unauthorized response has a 3xx status code
func (o *SystemListSchemasUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system list schemas unauthorized response has a 4xx status code
func (o *SystemListSchemasUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system list schemas unauthorized response has a 5xx status code
func (o *SystemListSchemasUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system list schemas unauthorized response a status code equal to that given
func (o *SystemListSchemasUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the system list schemas unauthorized response
func (o *SystemListSchemasUnauthorized) Code() int {
	return 401
}

func (o *SystemListSchemasUnauthorized) Error() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemListSchemasUnauthorized) String() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasUnauthorized  %+v", 401, o.Payload)
}

func (o *SystemListSchemasUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemListSchemasUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemListSchemasForbidden creates a SystemListSchemasForbidden with default headers values
func NewSystemListSchemasForbidden() *SystemListSchemasForbidden {
	return &SystemListSchemasForbidden{}
}

/*
SystemListSchemasForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemListSchemasForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system list schemas forbidden response has a 2xx status code
func (o *SystemListSchemasForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system list schemas forbidden response has a 3xx status code
func (o *SystemListSchemasForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system list schemas forbidden response has a 4xx status code
func (o *SystemListSchemasForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system list schemas forbidden response has a 5xx status code
func (o *SystemListSchemasForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system list schemas forbidden response a status code equal to that given
func (o *SystemListSchemasForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the system list schemas forbidden response
func (o *SystemListSchemasForbidden) Code() int {
	return 403
}

func (o *SystemListSchemasForbidden) Error() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasForbidden  %+v", 403, o.Payload)
}

func (o *SystemListSchemasForbidden) String() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasForbidden  %+v", 403, o.Payload)
}

func (o *SystemListSchemasForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemListSchemasForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemListSchemasTooManyRequests creates a SystemListSchemasTooManyRequests with default headers values
func NewSystemListSchemasTooManyRequests() *SystemListSchemasTooManyRequests {
	return &SystemListSchemasTooManyRequests{}
}

/*
SystemListSchemasTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemListSchemasTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system list schemas too many requests response has a 2xx status code
func (o *SystemListSchemasTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system list schemas too many requests response has a 3xx status code
func (o *SystemListSchemasTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system list schemas too many requests response has a 4xx status code
func (o *SystemListSchemasTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system list schemas too many requests response has a 5xx status code
func (o *SystemListSchemasTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system list schemas too many requests response a status code equal to that given
func (o *SystemListSchemasTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the system list schemas too many requests response
func (o *SystemListSchemasTooManyRequests) Code() int {
	return 429
}

func (o *SystemListSchemasTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasTooManyRequests  %+v", 429, o.Payload)
}

func (o *SystemListSchemasTooManyRequests) String() string {
	return fmt.Sprintf("[GET /system/schemas][%d] systemListSchemasTooManyRequests  %+v", 429, o.Payload)
}

func (o *SystemListSchemasTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemListSchemasTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
