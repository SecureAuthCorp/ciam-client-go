// Code generated by go-swagger; DO NOT EDIT.

package schemas

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// SystemCreateSchemaReader is a Reader for the SystemCreateSchema structure.
type SystemCreateSchemaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemCreateSchemaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewSystemCreateSchemaCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemCreateSchemaBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemCreateSchemaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemCreateSchemaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemCreateSchemaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSystemCreateSchemaConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSystemCreateSchemaUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemCreateSchemaTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/schemas] systemCreateSchema", response, response.Code())
	}
}

// NewSystemCreateSchemaCreated creates a SystemCreateSchemaCreated with default headers values
func NewSystemCreateSchemaCreated() *SystemCreateSchemaCreated {
	return &SystemCreateSchemaCreated{}
}

/*
SystemCreateSchemaCreated describes a response with status code 201, with default header values.

Schema
*/
type SystemCreateSchemaCreated struct {
	Payload *models.Schema
}

// IsSuccess returns true when this system create schema created response has a 2xx status code
func (o *SystemCreateSchemaCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system create schema created response has a 3xx status code
func (o *SystemCreateSchemaCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema created response has a 4xx status code
func (o *SystemCreateSchemaCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this system create schema created response has a 5xx status code
func (o *SystemCreateSchemaCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema created response a status code equal to that given
func (o *SystemCreateSchemaCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the system create schema created response
func (o *SystemCreateSchemaCreated) Code() int {
	return 201
}

func (o *SystemCreateSchemaCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaCreated %s", 201, payload)
}

func (o *SystemCreateSchemaCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaCreated %s", 201, payload)
}

func (o *SystemCreateSchemaCreated) GetPayload() *models.Schema {
	return o.Payload
}

func (o *SystemCreateSchemaCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Schema)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaBadRequest creates a SystemCreateSchemaBadRequest with default headers values
func NewSystemCreateSchemaBadRequest() *SystemCreateSchemaBadRequest {
	return &SystemCreateSchemaBadRequest{}
}

/*
SystemCreateSchemaBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SystemCreateSchemaBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema bad request response has a 2xx status code
func (o *SystemCreateSchemaBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema bad request response has a 3xx status code
func (o *SystemCreateSchemaBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema bad request response has a 4xx status code
func (o *SystemCreateSchemaBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema bad request response has a 5xx status code
func (o *SystemCreateSchemaBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema bad request response a status code equal to that given
func (o *SystemCreateSchemaBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the system create schema bad request response
func (o *SystemCreateSchemaBadRequest) Code() int {
	return 400
}

func (o *SystemCreateSchemaBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaBadRequest %s", 400, payload)
}

func (o *SystemCreateSchemaBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaBadRequest %s", 400, payload)
}

func (o *SystemCreateSchemaBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaUnauthorized creates a SystemCreateSchemaUnauthorized with default headers values
func NewSystemCreateSchemaUnauthorized() *SystemCreateSchemaUnauthorized {
	return &SystemCreateSchemaUnauthorized{}
}

/*
SystemCreateSchemaUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemCreateSchemaUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema unauthorized response has a 2xx status code
func (o *SystemCreateSchemaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema unauthorized response has a 3xx status code
func (o *SystemCreateSchemaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema unauthorized response has a 4xx status code
func (o *SystemCreateSchemaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema unauthorized response has a 5xx status code
func (o *SystemCreateSchemaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema unauthorized response a status code equal to that given
func (o *SystemCreateSchemaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the system create schema unauthorized response
func (o *SystemCreateSchemaUnauthorized) Code() int {
	return 401
}

func (o *SystemCreateSchemaUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaUnauthorized %s", 401, payload)
}

func (o *SystemCreateSchemaUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaUnauthorized %s", 401, payload)
}

func (o *SystemCreateSchemaUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaForbidden creates a SystemCreateSchemaForbidden with default headers values
func NewSystemCreateSchemaForbidden() *SystemCreateSchemaForbidden {
	return &SystemCreateSchemaForbidden{}
}

/*
SystemCreateSchemaForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemCreateSchemaForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema forbidden response has a 2xx status code
func (o *SystemCreateSchemaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema forbidden response has a 3xx status code
func (o *SystemCreateSchemaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema forbidden response has a 4xx status code
func (o *SystemCreateSchemaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema forbidden response has a 5xx status code
func (o *SystemCreateSchemaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema forbidden response a status code equal to that given
func (o *SystemCreateSchemaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the system create schema forbidden response
func (o *SystemCreateSchemaForbidden) Code() int {
	return 403
}

func (o *SystemCreateSchemaForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaForbidden %s", 403, payload)
}

func (o *SystemCreateSchemaForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaForbidden %s", 403, payload)
}

func (o *SystemCreateSchemaForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaNotFound creates a SystemCreateSchemaNotFound with default headers values
func NewSystemCreateSchemaNotFound() *SystemCreateSchemaNotFound {
	return &SystemCreateSchemaNotFound{}
}

/*
SystemCreateSchemaNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemCreateSchemaNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema not found response has a 2xx status code
func (o *SystemCreateSchemaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema not found response has a 3xx status code
func (o *SystemCreateSchemaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema not found response has a 4xx status code
func (o *SystemCreateSchemaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema not found response has a 5xx status code
func (o *SystemCreateSchemaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema not found response a status code equal to that given
func (o *SystemCreateSchemaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the system create schema not found response
func (o *SystemCreateSchemaNotFound) Code() int {
	return 404
}

func (o *SystemCreateSchemaNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaNotFound %s", 404, payload)
}

func (o *SystemCreateSchemaNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaNotFound %s", 404, payload)
}

func (o *SystemCreateSchemaNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaConflict creates a SystemCreateSchemaConflict with default headers values
func NewSystemCreateSchemaConflict() *SystemCreateSchemaConflict {
	return &SystemCreateSchemaConflict{}
}

/*
SystemCreateSchemaConflict describes a response with status code 409, with default header values.

Conflict
*/
type SystemCreateSchemaConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema conflict response has a 2xx status code
func (o *SystemCreateSchemaConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema conflict response has a 3xx status code
func (o *SystemCreateSchemaConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema conflict response has a 4xx status code
func (o *SystemCreateSchemaConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema conflict response has a 5xx status code
func (o *SystemCreateSchemaConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema conflict response a status code equal to that given
func (o *SystemCreateSchemaConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the system create schema conflict response
func (o *SystemCreateSchemaConflict) Code() int {
	return 409
}

func (o *SystemCreateSchemaConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaConflict %s", 409, payload)
}

func (o *SystemCreateSchemaConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaConflict %s", 409, payload)
}

func (o *SystemCreateSchemaConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaUnprocessableEntity creates a SystemCreateSchemaUnprocessableEntity with default headers values
func NewSystemCreateSchemaUnprocessableEntity() *SystemCreateSchemaUnprocessableEntity {
	return &SystemCreateSchemaUnprocessableEntity{}
}

/*
SystemCreateSchemaUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SystemCreateSchemaUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema unprocessable entity response has a 2xx status code
func (o *SystemCreateSchemaUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema unprocessable entity response has a 3xx status code
func (o *SystemCreateSchemaUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema unprocessable entity response has a 4xx status code
func (o *SystemCreateSchemaUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema unprocessable entity response has a 5xx status code
func (o *SystemCreateSchemaUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema unprocessable entity response a status code equal to that given
func (o *SystemCreateSchemaUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the system create schema unprocessable entity response
func (o *SystemCreateSchemaUnprocessableEntity) Code() int {
	return 422
}

func (o *SystemCreateSchemaUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaUnprocessableEntity %s", 422, payload)
}

func (o *SystemCreateSchemaUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaUnprocessableEntity %s", 422, payload)
}

func (o *SystemCreateSchemaUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemCreateSchemaTooManyRequests creates a SystemCreateSchemaTooManyRequests with default headers values
func NewSystemCreateSchemaTooManyRequests() *SystemCreateSchemaTooManyRequests {
	return &SystemCreateSchemaTooManyRequests{}
}

/*
SystemCreateSchemaTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemCreateSchemaTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system create schema too many requests response has a 2xx status code
func (o *SystemCreateSchemaTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system create schema too many requests response has a 3xx status code
func (o *SystemCreateSchemaTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system create schema too many requests response has a 4xx status code
func (o *SystemCreateSchemaTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system create schema too many requests response has a 5xx status code
func (o *SystemCreateSchemaTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system create schema too many requests response a status code equal to that given
func (o *SystemCreateSchemaTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the system create schema too many requests response
func (o *SystemCreateSchemaTooManyRequests) Code() int {
	return 429
}

func (o *SystemCreateSchemaTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaTooManyRequests %s", 429, payload)
}

func (o *SystemCreateSchemaTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/schemas][%d] systemCreateSchemaTooManyRequests %s", 429, payload)
}

func (o *SystemCreateSchemaTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemCreateSchemaTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
