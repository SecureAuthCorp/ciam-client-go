// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// CreateGroupReader is a Reader for the CreateGroup structure.
type CreateGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateGroupCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateGroupUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateGroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /system/pools/{ipID}/groups] createGroup", response, response.Code())
	}
}

// NewCreateGroupCreated creates a CreateGroupCreated with default headers values
func NewCreateGroupCreated() *CreateGroupCreated {
	return &CreateGroupCreated{}
}

/*
CreateGroupCreated describes a response with status code 201, with default header values.

Group
*/
type CreateGroupCreated struct {
	Payload *models.Group
}

// IsSuccess returns true when this create group created response has a 2xx status code
func (o *CreateGroupCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create group created response has a 3xx status code
func (o *CreateGroupCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group created response has a 4xx status code
func (o *CreateGroupCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create group created response has a 5xx status code
func (o *CreateGroupCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create group created response a status code equal to that given
func (o *CreateGroupCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create group created response
func (o *CreateGroupCreated) Code() int {
	return 201
}

func (o *CreateGroupCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupCreated %s", 201, payload)
}

func (o *CreateGroupCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupCreated %s", 201, payload)
}

func (o *CreateGroupCreated) GetPayload() *models.Group {
	return o.Payload
}

func (o *CreateGroupCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Group)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupBadRequest creates a CreateGroupBadRequest with default headers values
func NewCreateGroupBadRequest() *CreateGroupBadRequest {
	return &CreateGroupBadRequest{}
}

/*
CreateGroupBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateGroupBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group bad request response has a 2xx status code
func (o *CreateGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group bad request response has a 3xx status code
func (o *CreateGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group bad request response has a 4xx status code
func (o *CreateGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group bad request response has a 5xx status code
func (o *CreateGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create group bad request response a status code equal to that given
func (o *CreateGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create group bad request response
func (o *CreateGroupBadRequest) Code() int {
	return 400
}

func (o *CreateGroupBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupBadRequest %s", 400, payload)
}

func (o *CreateGroupBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupBadRequest %s", 400, payload)
}

func (o *CreateGroupBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupUnauthorized creates a CreateGroupUnauthorized with default headers values
func NewCreateGroupUnauthorized() *CreateGroupUnauthorized {
	return &CreateGroupUnauthorized{}
}

/*
CreateGroupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateGroupUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group unauthorized response has a 2xx status code
func (o *CreateGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group unauthorized response has a 3xx status code
func (o *CreateGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group unauthorized response has a 4xx status code
func (o *CreateGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group unauthorized response has a 5xx status code
func (o *CreateGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create group unauthorized response a status code equal to that given
func (o *CreateGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create group unauthorized response
func (o *CreateGroupUnauthorized) Code() int {
	return 401
}

func (o *CreateGroupUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupUnauthorized %s", 401, payload)
}

func (o *CreateGroupUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupUnauthorized %s", 401, payload)
}

func (o *CreateGroupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupForbidden creates a CreateGroupForbidden with default headers values
func NewCreateGroupForbidden() *CreateGroupForbidden {
	return &CreateGroupForbidden{}
}

/*
CreateGroupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateGroupForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group forbidden response has a 2xx status code
func (o *CreateGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group forbidden response has a 3xx status code
func (o *CreateGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group forbidden response has a 4xx status code
func (o *CreateGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group forbidden response has a 5xx status code
func (o *CreateGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create group forbidden response a status code equal to that given
func (o *CreateGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create group forbidden response
func (o *CreateGroupForbidden) Code() int {
	return 403
}

func (o *CreateGroupForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupForbidden %s", 403, payload)
}

func (o *CreateGroupForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupForbidden %s", 403, payload)
}

func (o *CreateGroupForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupNotFound creates a CreateGroupNotFound with default headers values
func NewCreateGroupNotFound() *CreateGroupNotFound {
	return &CreateGroupNotFound{}
}

/*
CreateGroupNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateGroupNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group not found response has a 2xx status code
func (o *CreateGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group not found response has a 3xx status code
func (o *CreateGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group not found response has a 4xx status code
func (o *CreateGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group not found response has a 5xx status code
func (o *CreateGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create group not found response a status code equal to that given
func (o *CreateGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create group not found response
func (o *CreateGroupNotFound) Code() int {
	return 404
}

func (o *CreateGroupNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupNotFound %s", 404, payload)
}

func (o *CreateGroupNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupNotFound %s", 404, payload)
}

func (o *CreateGroupNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupConflict creates a CreateGroupConflict with default headers values
func NewCreateGroupConflict() *CreateGroupConflict {
	return &CreateGroupConflict{}
}

/*
CreateGroupConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateGroupConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group conflict response has a 2xx status code
func (o *CreateGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group conflict response has a 3xx status code
func (o *CreateGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group conflict response has a 4xx status code
func (o *CreateGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group conflict response has a 5xx status code
func (o *CreateGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create group conflict response a status code equal to that given
func (o *CreateGroupConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create group conflict response
func (o *CreateGroupConflict) Code() int {
	return 409
}

func (o *CreateGroupConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupConflict %s", 409, payload)
}

func (o *CreateGroupConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupConflict %s", 409, payload)
}

func (o *CreateGroupConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupUnprocessableEntity creates a CreateGroupUnprocessableEntity with default headers values
func NewCreateGroupUnprocessableEntity() *CreateGroupUnprocessableEntity {
	return &CreateGroupUnprocessableEntity{}
}

/*
CreateGroupUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateGroupUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group unprocessable entity response has a 2xx status code
func (o *CreateGroupUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group unprocessable entity response has a 3xx status code
func (o *CreateGroupUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group unprocessable entity response has a 4xx status code
func (o *CreateGroupUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group unprocessable entity response has a 5xx status code
func (o *CreateGroupUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create group unprocessable entity response a status code equal to that given
func (o *CreateGroupUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create group unprocessable entity response
func (o *CreateGroupUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateGroupUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupUnprocessableEntity %s", 422, payload)
}

func (o *CreateGroupUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupUnprocessableEntity %s", 422, payload)
}

func (o *CreateGroupUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGroupTooManyRequests creates a CreateGroupTooManyRequests with default headers values
func NewCreateGroupTooManyRequests() *CreateGroupTooManyRequests {
	return &CreateGroupTooManyRequests{}
}

/*
CreateGroupTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateGroupTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create group too many requests response has a 2xx status code
func (o *CreateGroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create group too many requests response has a 3xx status code
func (o *CreateGroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create group too many requests response has a 4xx status code
func (o *CreateGroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create group too many requests response has a 5xx status code
func (o *CreateGroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create group too many requests response a status code equal to that given
func (o *CreateGroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create group too many requests response
func (o *CreateGroupTooManyRequests) Code() int {
	return 429
}

func (o *CreateGroupTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupTooManyRequests %s", 429, payload)
}

func (o *CreateGroupTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /system/pools/{ipID}/groups][%d] createGroupTooManyRequests %s", 429, payload)
}

func (o *CreateGroupTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateGroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
