// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/identitysystem/models"
)

// DeleteGroupReader is a Reader for the DeleteGroup structure.
type DeleteGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteGroupUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGroupForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteGroupTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /system/pools/{ipID}/groups/{groupID}] deleteGroup", response, response.Code())
	}
}

// NewDeleteGroupNoContent creates a DeleteGroupNoContent with default headers values
func NewDeleteGroupNoContent() *DeleteGroupNoContent {
	return &DeleteGroupNoContent{}
}

/*
DeleteGroupNoContent describes a response with status code 204, with default header values.

	Group has been deleted
*/
type DeleteGroupNoContent struct {
}

// IsSuccess returns true when this delete group no content response has a 2xx status code
func (o *DeleteGroupNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete group no content response has a 3xx status code
func (o *DeleteGroupNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group no content response has a 4xx status code
func (o *DeleteGroupNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete group no content response has a 5xx status code
func (o *DeleteGroupNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group no content response a status code equal to that given
func (o *DeleteGroupNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete group no content response
func (o *DeleteGroupNoContent) Code() int {
	return 204
}

func (o *DeleteGroupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupNoContent ", 204)
}

func (o *DeleteGroupNoContent) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupNoContent ", 204)
}

func (o *DeleteGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGroupUnauthorized creates a DeleteGroupUnauthorized with default headers values
func NewDeleteGroupUnauthorized() *DeleteGroupUnauthorized {
	return &DeleteGroupUnauthorized{}
}

/*
DeleteGroupUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteGroupUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete group unauthorized response has a 2xx status code
func (o *DeleteGroupUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group unauthorized response has a 3xx status code
func (o *DeleteGroupUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group unauthorized response has a 4xx status code
func (o *DeleteGroupUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group unauthorized response has a 5xx status code
func (o *DeleteGroupUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group unauthorized response a status code equal to that given
func (o *DeleteGroupUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete group unauthorized response
func (o *DeleteGroupUnauthorized) Code() int {
	return 401
}

func (o *DeleteGroupUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGroupUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGroupUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGroupUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupForbidden creates a DeleteGroupForbidden with default headers values
func NewDeleteGroupForbidden() *DeleteGroupForbidden {
	return &DeleteGroupForbidden{}
}

/*
DeleteGroupForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteGroupForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete group forbidden response has a 2xx status code
func (o *DeleteGroupForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group forbidden response has a 3xx status code
func (o *DeleteGroupForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group forbidden response has a 4xx status code
func (o *DeleteGroupForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group forbidden response has a 5xx status code
func (o *DeleteGroupForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group forbidden response a status code equal to that given
func (o *DeleteGroupForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete group forbidden response
func (o *DeleteGroupForbidden) Code() int {
	return 403
}

func (o *DeleteGroupForbidden) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGroupForbidden) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGroupForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGroupForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupNotFound creates a DeleteGroupNotFound with default headers values
func NewDeleteGroupNotFound() *DeleteGroupNotFound {
	return &DeleteGroupNotFound{}
}

/*
DeleteGroupNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteGroupNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete group not found response has a 2xx status code
func (o *DeleteGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group not found response has a 3xx status code
func (o *DeleteGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group not found response has a 4xx status code
func (o *DeleteGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group not found response has a 5xx status code
func (o *DeleteGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group not found response a status code equal to that given
func (o *DeleteGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete group not found response
func (o *DeleteGroupNotFound) Code() int {
	return 404
}

func (o *DeleteGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGroupNotFound) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGroupNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGroupTooManyRequests creates a DeleteGroupTooManyRequests with default headers values
func NewDeleteGroupTooManyRequests() *DeleteGroupTooManyRequests {
	return &DeleteGroupTooManyRequests{}
}

/*
DeleteGroupTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteGroupTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete group too many requests response has a 2xx status code
func (o *DeleteGroupTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete group too many requests response has a 3xx status code
func (o *DeleteGroupTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete group too many requests response has a 4xx status code
func (o *DeleteGroupTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete group too many requests response has a 5xx status code
func (o *DeleteGroupTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete group too many requests response a status code equal to that given
func (o *DeleteGroupTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete group too many requests response
func (o *DeleteGroupTooManyRequests) Code() int {
	return 429
}

func (o *DeleteGroupTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteGroupTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /system/pools/{ipID}/groups/{groupID}][%d] deleteGroupTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteGroupTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGroupTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
