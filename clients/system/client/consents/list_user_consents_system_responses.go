// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/system/models"
)

// ListUserConsentsSystemReader is a Reader for the ListUserConsentsSystem structure.
type ListUserConsentsSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserConsentsSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserConsentsSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserConsentsSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserConsentsSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserConsentsSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserConsentsSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /consents] listUserConsentsSystem", response, response.Code())
	}
}

// NewListUserConsentsSystemOK creates a ListUserConsentsSystemOK with default headers values
func NewListUserConsentsSystemOK() *ListUserConsentsSystemOK {
	return &ListUserConsentsSystemOK{}
}

/*
ListUserConsentsSystemOK describes a response with status code 200, with default header values.

Consents with grants
*/
type ListUserConsentsSystemOK struct {
	Payload *models.ConsentsWithGrants
}

// IsSuccess returns true when this list user consents system o k response has a 2xx status code
func (o *ListUserConsentsSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user consents system o k response has a 3xx status code
func (o *ListUserConsentsSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents system o k response has a 4xx status code
func (o *ListUserConsentsSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user consents system o k response has a 5xx status code
func (o *ListUserConsentsSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents system o k response a status code equal to that given
func (o *ListUserConsentsSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user consents system o k response
func (o *ListUserConsentsSystemOK) Code() int {
	return 200
}

func (o *ListUserConsentsSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemOK %s", 200, payload)
}

func (o *ListUserConsentsSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemOK %s", 200, payload)
}

func (o *ListUserConsentsSystemOK) GetPayload() *models.ConsentsWithGrants {
	return o.Payload
}

func (o *ListUserConsentsSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsWithGrants)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemUnauthorized creates a ListUserConsentsSystemUnauthorized with default headers values
func NewListUserConsentsSystemUnauthorized() *ListUserConsentsSystemUnauthorized {
	return &ListUserConsentsSystemUnauthorized{}
}

/*
ListUserConsentsSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserConsentsSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents system unauthorized response has a 2xx status code
func (o *ListUserConsentsSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents system unauthorized response has a 3xx status code
func (o *ListUserConsentsSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents system unauthorized response has a 4xx status code
func (o *ListUserConsentsSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents system unauthorized response has a 5xx status code
func (o *ListUserConsentsSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents system unauthorized response a status code equal to that given
func (o *ListUserConsentsSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user consents system unauthorized response
func (o *ListUserConsentsSystemUnauthorized) Code() int {
	return 401
}

func (o *ListUserConsentsSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemUnauthorized %s", 401, payload)
}

func (o *ListUserConsentsSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemUnauthorized %s", 401, payload)
}

func (o *ListUserConsentsSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemForbidden creates a ListUserConsentsSystemForbidden with default headers values
func NewListUserConsentsSystemForbidden() *ListUserConsentsSystemForbidden {
	return &ListUserConsentsSystemForbidden{}
}

/*
ListUserConsentsSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserConsentsSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents system forbidden response has a 2xx status code
func (o *ListUserConsentsSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents system forbidden response has a 3xx status code
func (o *ListUserConsentsSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents system forbidden response has a 4xx status code
func (o *ListUserConsentsSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents system forbidden response has a 5xx status code
func (o *ListUserConsentsSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents system forbidden response a status code equal to that given
func (o *ListUserConsentsSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user consents system forbidden response
func (o *ListUserConsentsSystemForbidden) Code() int {
	return 403
}

func (o *ListUserConsentsSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemForbidden %s", 403, payload)
}

func (o *ListUserConsentsSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemForbidden %s", 403, payload)
}

func (o *ListUserConsentsSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemNotFound creates a ListUserConsentsSystemNotFound with default headers values
func NewListUserConsentsSystemNotFound() *ListUserConsentsSystemNotFound {
	return &ListUserConsentsSystemNotFound{}
}

/*
ListUserConsentsSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUserConsentsSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents system not found response has a 2xx status code
func (o *ListUserConsentsSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents system not found response has a 3xx status code
func (o *ListUserConsentsSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents system not found response has a 4xx status code
func (o *ListUserConsentsSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents system not found response has a 5xx status code
func (o *ListUserConsentsSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents system not found response a status code equal to that given
func (o *ListUserConsentsSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user consents system not found response
func (o *ListUserConsentsSystemNotFound) Code() int {
	return 404
}

func (o *ListUserConsentsSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemNotFound %s", 404, payload)
}

func (o *ListUserConsentsSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemNotFound %s", 404, payload)
}

func (o *ListUserConsentsSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsSystemTooManyRequests creates a ListUserConsentsSystemTooManyRequests with default headers values
func NewListUserConsentsSystemTooManyRequests() *ListUserConsentsSystemTooManyRequests {
	return &ListUserConsentsSystemTooManyRequests{}
}

/*
ListUserConsentsSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUserConsentsSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents system too many requests response has a 2xx status code
func (o *ListUserConsentsSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents system too many requests response has a 3xx status code
func (o *ListUserConsentsSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents system too many requests response has a 4xx status code
func (o *ListUserConsentsSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents system too many requests response has a 5xx status code
func (o *ListUserConsentsSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents system too many requests response a status code equal to that given
func (o *ListUserConsentsSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list user consents system too many requests response
func (o *ListUserConsentsSystemTooManyRequests) Code() int {
	return 429
}

func (o *ListUserConsentsSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemTooManyRequests %s", 429, payload)
}

func (o *ListUserConsentsSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /consents][%d] listUserConsentsSystemTooManyRequests %s", 429, payload)
}

func (o *ListUserConsentsSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
