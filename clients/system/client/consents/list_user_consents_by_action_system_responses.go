// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/system/models"
)

// ListUserConsentsByActionSystemReader is a Reader for the ListUserConsentsByActionSystem structure.
type ListUserConsentsByActionSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserConsentsByActionSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserConsentsByActionSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserConsentsByActionSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserConsentsByActionSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserConsentsByActionSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserConsentsByActionSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListUserConsentsByActionSystemOK creates a ListUserConsentsByActionSystemOK with default headers values
func NewListUserConsentsByActionSystemOK() *ListUserConsentsByActionSystemOK {
	return &ListUserConsentsByActionSystemOK{}
}

/*
ListUserConsentsByActionSystemOK describes a response with status code 200, with default header values.

Consents with grants
*/
type ListUserConsentsByActionSystemOK struct {
	Payload *models.ConsentsWithGrants
}

// IsSuccess returns true when this list user consents by action system o k response has a 2xx status code
func (o *ListUserConsentsByActionSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user consents by action system o k response has a 3xx status code
func (o *ListUserConsentsByActionSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents by action system o k response has a 4xx status code
func (o *ListUserConsentsByActionSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user consents by action system o k response has a 5xx status code
func (o *ListUserConsentsByActionSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents by action system o k response a status code equal to that given
func (o *ListUserConsentsByActionSystemOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListUserConsentsByActionSystemOK) Error() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemOK  %+v", 200, o.Payload)
}

func (o *ListUserConsentsByActionSystemOK) String() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemOK  %+v", 200, o.Payload)
}

func (o *ListUserConsentsByActionSystemOK) GetPayload() *models.ConsentsWithGrants {
	return o.Payload
}

func (o *ListUserConsentsByActionSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentsWithGrants)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionSystemUnauthorized creates a ListUserConsentsByActionSystemUnauthorized with default headers values
func NewListUserConsentsByActionSystemUnauthorized() *ListUserConsentsByActionSystemUnauthorized {
	return &ListUserConsentsByActionSystemUnauthorized{}
}

/*
ListUserConsentsByActionSystemUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type ListUserConsentsByActionSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents by action system unauthorized response has a 2xx status code
func (o *ListUserConsentsByActionSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents by action system unauthorized response has a 3xx status code
func (o *ListUserConsentsByActionSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents by action system unauthorized response has a 4xx status code
func (o *ListUserConsentsByActionSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents by action system unauthorized response has a 5xx status code
func (o *ListUserConsentsByActionSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents by action system unauthorized response a status code equal to that given
func (o *ListUserConsentsByActionSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListUserConsentsByActionSystemUnauthorized) Error() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserConsentsByActionSystemUnauthorized) String() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserConsentsByActionSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionSystemForbidden creates a ListUserConsentsByActionSystemForbidden with default headers values
func NewListUserConsentsByActionSystemForbidden() *ListUserConsentsByActionSystemForbidden {
	return &ListUserConsentsByActionSystemForbidden{}
}

/*
ListUserConsentsByActionSystemForbidden describes a response with status code 403, with default header values.

HttpError
*/
type ListUserConsentsByActionSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents by action system forbidden response has a 2xx status code
func (o *ListUserConsentsByActionSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents by action system forbidden response has a 3xx status code
func (o *ListUserConsentsByActionSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents by action system forbidden response has a 4xx status code
func (o *ListUserConsentsByActionSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents by action system forbidden response has a 5xx status code
func (o *ListUserConsentsByActionSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents by action system forbidden response a status code equal to that given
func (o *ListUserConsentsByActionSystemForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListUserConsentsByActionSystemForbidden) Error() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemForbidden  %+v", 403, o.Payload)
}

func (o *ListUserConsentsByActionSystemForbidden) String() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemForbidden  %+v", 403, o.Payload)
}

func (o *ListUserConsentsByActionSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionSystemNotFound creates a ListUserConsentsByActionSystemNotFound with default headers values
func NewListUserConsentsByActionSystemNotFound() *ListUserConsentsByActionSystemNotFound {
	return &ListUserConsentsByActionSystemNotFound{}
}

/*
ListUserConsentsByActionSystemNotFound describes a response with status code 404, with default header values.

HttpError
*/
type ListUserConsentsByActionSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents by action system not found response has a 2xx status code
func (o *ListUserConsentsByActionSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents by action system not found response has a 3xx status code
func (o *ListUserConsentsByActionSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents by action system not found response has a 4xx status code
func (o *ListUserConsentsByActionSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents by action system not found response has a 5xx status code
func (o *ListUserConsentsByActionSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents by action system not found response a status code equal to that given
func (o *ListUserConsentsByActionSystemNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListUserConsentsByActionSystemNotFound) Error() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemNotFound  %+v", 404, o.Payload)
}

func (o *ListUserConsentsByActionSystemNotFound) String() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemNotFound  %+v", 404, o.Payload)
}

func (o *ListUserConsentsByActionSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserConsentsByActionSystemTooManyRequests creates a ListUserConsentsByActionSystemTooManyRequests with default headers values
func NewListUserConsentsByActionSystemTooManyRequests() *ListUserConsentsByActionSystemTooManyRequests {
	return &ListUserConsentsByActionSystemTooManyRequests{}
}

/*
ListUserConsentsByActionSystemTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type ListUserConsentsByActionSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user consents by action system too many requests response has a 2xx status code
func (o *ListUserConsentsByActionSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user consents by action system too many requests response has a 3xx status code
func (o *ListUserConsentsByActionSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user consents by action system too many requests response has a 4xx status code
func (o *ListUserConsentsByActionSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user consents by action system too many requests response has a 5xx status code
func (o *ListUserConsentsByActionSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user consents by action system too many requests response a status code equal to that given
func (o *ListUserConsentsByActionSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListUserConsentsByActionSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserConsentsByActionSystemTooManyRequests) String() string {
	return fmt.Sprintf("[GET /consents/{action}][%d] listUserConsentsByActionSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserConsentsByActionSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserConsentsByActionSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
