// Code generated by go-swagger; DO NOT EDIT.

package post_authn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/system/models"
)

// GetPostAuthnRequestReader is a Reader for the GetPostAuthnRequest structure.
type GetPostAuthnRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPostAuthnRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPostAuthnRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPostAuthnRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPostAuthnRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPostAuthnRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPostAuthnRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /post-authn/{login}] getPostAuthnRequest", response, response.Code())
	}
}

// NewGetPostAuthnRequestOK creates a GetPostAuthnRequestOK with default headers values
func NewGetPostAuthnRequestOK() *GetPostAuthnRequestOK {
	return &GetPostAuthnRequestOK{}
}

/*
GetPostAuthnRequestOK describes a response with status code 200, with default header values.

Login session
*/
type GetPostAuthnRequestOK struct {
	Payload *models.LoginSessionResponse
}

// IsSuccess returns true when this get post authn request o k response has a 2xx status code
func (o *GetPostAuthnRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get post authn request o k response has a 3xx status code
func (o *GetPostAuthnRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get post authn request o k response has a 4xx status code
func (o *GetPostAuthnRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get post authn request o k response has a 5xx status code
func (o *GetPostAuthnRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get post authn request o k response a status code equal to that given
func (o *GetPostAuthnRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get post authn request o k response
func (o *GetPostAuthnRequestOK) Code() int {
	return 200
}

func (o *GetPostAuthnRequestOK) Error() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestOK  %+v", 200, o.Payload)
}

func (o *GetPostAuthnRequestOK) String() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestOK  %+v", 200, o.Payload)
}

func (o *GetPostAuthnRequestOK) GetPayload() *models.LoginSessionResponse {
	return o.Payload
}

func (o *GetPostAuthnRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LoginSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPostAuthnRequestUnauthorized creates a GetPostAuthnRequestUnauthorized with default headers values
func NewGetPostAuthnRequestUnauthorized() *GetPostAuthnRequestUnauthorized {
	return &GetPostAuthnRequestUnauthorized{}
}

/*
GetPostAuthnRequestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPostAuthnRequestUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get post authn request unauthorized response has a 2xx status code
func (o *GetPostAuthnRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get post authn request unauthorized response has a 3xx status code
func (o *GetPostAuthnRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get post authn request unauthorized response has a 4xx status code
func (o *GetPostAuthnRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get post authn request unauthorized response has a 5xx status code
func (o *GetPostAuthnRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get post authn request unauthorized response a status code equal to that given
func (o *GetPostAuthnRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get post authn request unauthorized response
func (o *GetPostAuthnRequestUnauthorized) Code() int {
	return 401
}

func (o *GetPostAuthnRequestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPostAuthnRequestUnauthorized) String() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestUnauthorized  %+v", 401, o.Payload)
}

func (o *GetPostAuthnRequestUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPostAuthnRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPostAuthnRequestForbidden creates a GetPostAuthnRequestForbidden with default headers values
func NewGetPostAuthnRequestForbidden() *GetPostAuthnRequestForbidden {
	return &GetPostAuthnRequestForbidden{}
}

/*
GetPostAuthnRequestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPostAuthnRequestForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get post authn request forbidden response has a 2xx status code
func (o *GetPostAuthnRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get post authn request forbidden response has a 3xx status code
func (o *GetPostAuthnRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get post authn request forbidden response has a 4xx status code
func (o *GetPostAuthnRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get post authn request forbidden response has a 5xx status code
func (o *GetPostAuthnRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get post authn request forbidden response a status code equal to that given
func (o *GetPostAuthnRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get post authn request forbidden response
func (o *GetPostAuthnRequestForbidden) Code() int {
	return 403
}

func (o *GetPostAuthnRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestForbidden  %+v", 403, o.Payload)
}

func (o *GetPostAuthnRequestForbidden) String() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestForbidden  %+v", 403, o.Payload)
}

func (o *GetPostAuthnRequestForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPostAuthnRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPostAuthnRequestNotFound creates a GetPostAuthnRequestNotFound with default headers values
func NewGetPostAuthnRequestNotFound() *GetPostAuthnRequestNotFound {
	return &GetPostAuthnRequestNotFound{}
}

/*
GetPostAuthnRequestNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetPostAuthnRequestNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get post authn request not found response has a 2xx status code
func (o *GetPostAuthnRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get post authn request not found response has a 3xx status code
func (o *GetPostAuthnRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get post authn request not found response has a 4xx status code
func (o *GetPostAuthnRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get post authn request not found response has a 5xx status code
func (o *GetPostAuthnRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get post authn request not found response a status code equal to that given
func (o *GetPostAuthnRequestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get post authn request not found response
func (o *GetPostAuthnRequestNotFound) Code() int {
	return 404
}

func (o *GetPostAuthnRequestNotFound) Error() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestNotFound  %+v", 404, o.Payload)
}

func (o *GetPostAuthnRequestNotFound) String() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestNotFound  %+v", 404, o.Payload)
}

func (o *GetPostAuthnRequestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPostAuthnRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPostAuthnRequestTooManyRequests creates a GetPostAuthnRequestTooManyRequests with default headers values
func NewGetPostAuthnRequestTooManyRequests() *GetPostAuthnRequestTooManyRequests {
	return &GetPostAuthnRequestTooManyRequests{}
}

/*
GetPostAuthnRequestTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetPostAuthnRequestTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get post authn request too many requests response has a 2xx status code
func (o *GetPostAuthnRequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get post authn request too many requests response has a 3xx status code
func (o *GetPostAuthnRequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get post authn request too many requests response has a 4xx status code
func (o *GetPostAuthnRequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get post authn request too many requests response has a 5xx status code
func (o *GetPostAuthnRequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get post authn request too many requests response a status code equal to that given
func (o *GetPostAuthnRequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get post authn request too many requests response
func (o *GetPostAuthnRequestTooManyRequests) Code() int {
	return 429
}

func (o *GetPostAuthnRequestTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPostAuthnRequestTooManyRequests) String() string {
	return fmt.Sprintf("[GET /post-authn/{login}][%d] getPostAuthnRequestTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetPostAuthnRequestTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPostAuthnRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
