// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/system/models"
)

// DeleteOrganizationReader is a Reader for the DeleteOrganization structure.
type DeleteOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteOrganizationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteOrganizationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /organizations/{wid}] deleteOrganization", response, response.Code())
	}
}

// NewDeleteOrganizationNoContent creates a DeleteOrganizationNoContent with default headers values
func NewDeleteOrganizationNoContent() *DeleteOrganizationNoContent {
	return &DeleteOrganizationNoContent{}
}

/*
DeleteOrganizationNoContent describes a response with status code 204, with default header values.

	Organization has been deleted
*/
type DeleteOrganizationNoContent struct {
}

// IsSuccess returns true when this delete organization no content response has a 2xx status code
func (o *DeleteOrganizationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete organization no content response has a 3xx status code
func (o *DeleteOrganizationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete organization no content response has a 4xx status code
func (o *DeleteOrganizationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete organization no content response has a 5xx status code
func (o *DeleteOrganizationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete organization no content response a status code equal to that given
func (o *DeleteOrganizationNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete organization no content response
func (o *DeleteOrganizationNoContent) Code() int {
	return 204
}

func (o *DeleteOrganizationNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationNoContent ", 204)
}

func (o *DeleteOrganizationNoContent) String() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationNoContent ", 204)
}

func (o *DeleteOrganizationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOrganizationBadRequest creates a DeleteOrganizationBadRequest with default headers values
func NewDeleteOrganizationBadRequest() *DeleteOrganizationBadRequest {
	return &DeleteOrganizationBadRequest{}
}

/*
DeleteOrganizationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteOrganizationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete organization bad request response has a 2xx status code
func (o *DeleteOrganizationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete organization bad request response has a 3xx status code
func (o *DeleteOrganizationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete organization bad request response has a 4xx status code
func (o *DeleteOrganizationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete organization bad request response has a 5xx status code
func (o *DeleteOrganizationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete organization bad request response a status code equal to that given
func (o *DeleteOrganizationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete organization bad request response
func (o *DeleteOrganizationBadRequest) Code() int {
	return 400
}

func (o *DeleteOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOrganizationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteOrganizationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrganizationUnauthorized creates a DeleteOrganizationUnauthorized with default headers values
func NewDeleteOrganizationUnauthorized() *DeleteOrganizationUnauthorized {
	return &DeleteOrganizationUnauthorized{}
}

/*
DeleteOrganizationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteOrganizationUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete organization unauthorized response has a 2xx status code
func (o *DeleteOrganizationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete organization unauthorized response has a 3xx status code
func (o *DeleteOrganizationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete organization unauthorized response has a 4xx status code
func (o *DeleteOrganizationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete organization unauthorized response has a 5xx status code
func (o *DeleteOrganizationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete organization unauthorized response a status code equal to that given
func (o *DeleteOrganizationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete organization unauthorized response
func (o *DeleteOrganizationUnauthorized) Code() int {
	return 401
}

func (o *DeleteOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOrganizationUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteOrganizationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrganizationForbidden creates a DeleteOrganizationForbidden with default headers values
func NewDeleteOrganizationForbidden() *DeleteOrganizationForbidden {
	return &DeleteOrganizationForbidden{}
}

/*
DeleteOrganizationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteOrganizationForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete organization forbidden response has a 2xx status code
func (o *DeleteOrganizationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete organization forbidden response has a 3xx status code
func (o *DeleteOrganizationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete organization forbidden response has a 4xx status code
func (o *DeleteOrganizationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete organization forbidden response has a 5xx status code
func (o *DeleteOrganizationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete organization forbidden response a status code equal to that given
func (o *DeleteOrganizationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete organization forbidden response
func (o *DeleteOrganizationForbidden) Code() int {
	return 403
}

func (o *DeleteOrganizationForbidden) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrganizationForbidden) String() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *DeleteOrganizationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrganizationNotFound creates a DeleteOrganizationNotFound with default headers values
func NewDeleteOrganizationNotFound() *DeleteOrganizationNotFound {
	return &DeleteOrganizationNotFound{}
}

/*
DeleteOrganizationNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteOrganizationNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete organization not found response has a 2xx status code
func (o *DeleteOrganizationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete organization not found response has a 3xx status code
func (o *DeleteOrganizationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete organization not found response has a 4xx status code
func (o *DeleteOrganizationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete organization not found response has a 5xx status code
func (o *DeleteOrganizationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete organization not found response a status code equal to that given
func (o *DeleteOrganizationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete organization not found response
func (o *DeleteOrganizationNotFound) Code() int {
	return 404
}

func (o *DeleteOrganizationNotFound) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOrganizationNotFound) String() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *DeleteOrganizationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOrganizationTooManyRequests creates a DeleteOrganizationTooManyRequests with default headers values
func NewDeleteOrganizationTooManyRequests() *DeleteOrganizationTooManyRequests {
	return &DeleteOrganizationTooManyRequests{}
}

/*
DeleteOrganizationTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteOrganizationTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete organization too many requests response has a 2xx status code
func (o *DeleteOrganizationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete organization too many requests response has a 3xx status code
func (o *DeleteOrganizationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete organization too many requests response has a 4xx status code
func (o *DeleteOrganizationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete organization too many requests response has a 5xx status code
func (o *DeleteOrganizationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete organization too many requests response a status code equal to that given
func (o *DeleteOrganizationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete organization too many requests response
func (o *DeleteOrganizationTooManyRequests) Code() int {
	return 429
}

func (o *DeleteOrganizationTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOrganizationTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /organizations/{wid}][%d] deleteOrganizationTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteOrganizationTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOrganizationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
