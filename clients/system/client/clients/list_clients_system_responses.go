// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/system/models"
)

// ListClientsSystemReader is a Reader for the ListClientsSystem structure.
type ListClientsSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListClientsSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListClientsSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListClientsSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListClientsSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListClientsSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListClientsSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /clients/{wid}] listClientsSystem", response, response.Code())
	}
}

// NewListClientsSystemOK creates a ListClientsSystemOK with default headers values
func NewListClientsSystemOK() *ListClientsSystemOK {
	return &ListClientsSystemOK{}
}

/*
ListClientsSystemOK describes a response with status code 200, with default header values.

Clients
*/
type ListClientsSystemOK struct {
	Payload *models.Clients
}

// IsSuccess returns true when this list clients system o k response has a 2xx status code
func (o *ListClientsSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list clients system o k response has a 3xx status code
func (o *ListClientsSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients system o k response has a 4xx status code
func (o *ListClientsSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list clients system o k response has a 5xx status code
func (o *ListClientsSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients system o k response a status code equal to that given
func (o *ListClientsSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list clients system o k response
func (o *ListClientsSystemOK) Code() int {
	return 200
}

func (o *ListClientsSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemOK %s", 200, payload)
}

func (o *ListClientsSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemOK %s", 200, payload)
}

func (o *ListClientsSystemOK) GetPayload() *models.Clients {
	return o.Payload
}

func (o *ListClientsSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Clients)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemUnauthorized creates a ListClientsSystemUnauthorized with default headers values
func NewListClientsSystemUnauthorized() *ListClientsSystemUnauthorized {
	return &ListClientsSystemUnauthorized{}
}

/*
ListClientsSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListClientsSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients system unauthorized response has a 2xx status code
func (o *ListClientsSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients system unauthorized response has a 3xx status code
func (o *ListClientsSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients system unauthorized response has a 4xx status code
func (o *ListClientsSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients system unauthorized response has a 5xx status code
func (o *ListClientsSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients system unauthorized response a status code equal to that given
func (o *ListClientsSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list clients system unauthorized response
func (o *ListClientsSystemUnauthorized) Code() int {
	return 401
}

func (o *ListClientsSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemUnauthorized %s", 401, payload)
}

func (o *ListClientsSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemUnauthorized %s", 401, payload)
}

func (o *ListClientsSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemForbidden creates a ListClientsSystemForbidden with default headers values
func NewListClientsSystemForbidden() *ListClientsSystemForbidden {
	return &ListClientsSystemForbidden{}
}

/*
ListClientsSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListClientsSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients system forbidden response has a 2xx status code
func (o *ListClientsSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients system forbidden response has a 3xx status code
func (o *ListClientsSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients system forbidden response has a 4xx status code
func (o *ListClientsSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients system forbidden response has a 5xx status code
func (o *ListClientsSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients system forbidden response a status code equal to that given
func (o *ListClientsSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list clients system forbidden response
func (o *ListClientsSystemForbidden) Code() int {
	return 403
}

func (o *ListClientsSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemForbidden %s", 403, payload)
}

func (o *ListClientsSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemForbidden %s", 403, payload)
}

func (o *ListClientsSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemNotFound creates a ListClientsSystemNotFound with default headers values
func NewListClientsSystemNotFound() *ListClientsSystemNotFound {
	return &ListClientsSystemNotFound{}
}

/*
ListClientsSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListClientsSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients system not found response has a 2xx status code
func (o *ListClientsSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients system not found response has a 3xx status code
func (o *ListClientsSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients system not found response has a 4xx status code
func (o *ListClientsSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients system not found response has a 5xx status code
func (o *ListClientsSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients system not found response a status code equal to that given
func (o *ListClientsSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list clients system not found response
func (o *ListClientsSystemNotFound) Code() int {
	return 404
}

func (o *ListClientsSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemNotFound %s", 404, payload)
}

func (o *ListClientsSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemNotFound %s", 404, payload)
}

func (o *ListClientsSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClientsSystemTooManyRequests creates a ListClientsSystemTooManyRequests with default headers values
func NewListClientsSystemTooManyRequests() *ListClientsSystemTooManyRequests {
	return &ListClientsSystemTooManyRequests{}
}

/*
ListClientsSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListClientsSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list clients system too many requests response has a 2xx status code
func (o *ListClientsSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list clients system too many requests response has a 3xx status code
func (o *ListClientsSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list clients system too many requests response has a 4xx status code
func (o *ListClientsSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list clients system too many requests response has a 5xx status code
func (o *ListClientsSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list clients system too many requests response a status code equal to that given
func (o *ListClientsSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list clients system too many requests response
func (o *ListClientsSystemTooManyRequests) Code() int {
	return 429
}

func (o *ListClientsSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemTooManyRequests %s", 429, payload)
}

func (o *ListClientsSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /clients/{wid}][%d] listClientsSystemTooManyRequests %s", 429, payload)
}

func (o *ListClientsSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListClientsSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
