// Code generated by go-swagger; DO NOT EDIT.

package logins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/system/models"
)

// GetScopeGrantRequestReader is a Reader for the GetScopeGrantRequest structure.
type GetScopeGrantRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetScopeGrantRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetScopeGrantRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetScopeGrantRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetScopeGrantRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetScopeGrantRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetScopeGrantRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /scope-grants/{login}] getScopeGrantRequest", response, response.Code())
	}
}

// NewGetScopeGrantRequestOK creates a GetScopeGrantRequestOK with default headers values
func NewGetScopeGrantRequestOK() *GetScopeGrantRequestOK {
	return &GetScopeGrantRequestOK{}
}

/*
GetScopeGrantRequestOK describes a response with status code 200, with default header values.

Scope grant session
*/
type GetScopeGrantRequestOK struct {
	Payload *models.ScopeGrantSessionResponse
}

// IsSuccess returns true when this get scope grant request o k response has a 2xx status code
func (o *GetScopeGrantRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get scope grant request o k response has a 3xx status code
func (o *GetScopeGrantRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scope grant request o k response has a 4xx status code
func (o *GetScopeGrantRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get scope grant request o k response has a 5xx status code
func (o *GetScopeGrantRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get scope grant request o k response a status code equal to that given
func (o *GetScopeGrantRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get scope grant request o k response
func (o *GetScopeGrantRequestOK) Code() int {
	return 200
}

func (o *GetScopeGrantRequestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestOK %s", 200, payload)
}

func (o *GetScopeGrantRequestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestOK %s", 200, payload)
}

func (o *GetScopeGrantRequestOK) GetPayload() *models.ScopeGrantSessionResponse {
	return o.Payload
}

func (o *GetScopeGrantRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ScopeGrantSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeGrantRequestUnauthorized creates a GetScopeGrantRequestUnauthorized with default headers values
func NewGetScopeGrantRequestUnauthorized() *GetScopeGrantRequestUnauthorized {
	return &GetScopeGrantRequestUnauthorized{}
}

/*
GetScopeGrantRequestUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetScopeGrantRequestUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get scope grant request unauthorized response has a 2xx status code
func (o *GetScopeGrantRequestUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scope grant request unauthorized response has a 3xx status code
func (o *GetScopeGrantRequestUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scope grant request unauthorized response has a 4xx status code
func (o *GetScopeGrantRequestUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scope grant request unauthorized response has a 5xx status code
func (o *GetScopeGrantRequestUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get scope grant request unauthorized response a status code equal to that given
func (o *GetScopeGrantRequestUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get scope grant request unauthorized response
func (o *GetScopeGrantRequestUnauthorized) Code() int {
	return 401
}

func (o *GetScopeGrantRequestUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestUnauthorized %s", 401, payload)
}

func (o *GetScopeGrantRequestUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestUnauthorized %s", 401, payload)
}

func (o *GetScopeGrantRequestUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScopeGrantRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeGrantRequestForbidden creates a GetScopeGrantRequestForbidden with default headers values
func NewGetScopeGrantRequestForbidden() *GetScopeGrantRequestForbidden {
	return &GetScopeGrantRequestForbidden{}
}

/*
GetScopeGrantRequestForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetScopeGrantRequestForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get scope grant request forbidden response has a 2xx status code
func (o *GetScopeGrantRequestForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scope grant request forbidden response has a 3xx status code
func (o *GetScopeGrantRequestForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scope grant request forbidden response has a 4xx status code
func (o *GetScopeGrantRequestForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scope grant request forbidden response has a 5xx status code
func (o *GetScopeGrantRequestForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get scope grant request forbidden response a status code equal to that given
func (o *GetScopeGrantRequestForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get scope grant request forbidden response
func (o *GetScopeGrantRequestForbidden) Code() int {
	return 403
}

func (o *GetScopeGrantRequestForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestForbidden %s", 403, payload)
}

func (o *GetScopeGrantRequestForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestForbidden %s", 403, payload)
}

func (o *GetScopeGrantRequestForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScopeGrantRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeGrantRequestNotFound creates a GetScopeGrantRequestNotFound with default headers values
func NewGetScopeGrantRequestNotFound() *GetScopeGrantRequestNotFound {
	return &GetScopeGrantRequestNotFound{}
}

/*
GetScopeGrantRequestNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetScopeGrantRequestNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get scope grant request not found response has a 2xx status code
func (o *GetScopeGrantRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scope grant request not found response has a 3xx status code
func (o *GetScopeGrantRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scope grant request not found response has a 4xx status code
func (o *GetScopeGrantRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scope grant request not found response has a 5xx status code
func (o *GetScopeGrantRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get scope grant request not found response a status code equal to that given
func (o *GetScopeGrantRequestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get scope grant request not found response
func (o *GetScopeGrantRequestNotFound) Code() int {
	return 404
}

func (o *GetScopeGrantRequestNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestNotFound %s", 404, payload)
}

func (o *GetScopeGrantRequestNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestNotFound %s", 404, payload)
}

func (o *GetScopeGrantRequestNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScopeGrantRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetScopeGrantRequestTooManyRequests creates a GetScopeGrantRequestTooManyRequests with default headers values
func NewGetScopeGrantRequestTooManyRequests() *GetScopeGrantRequestTooManyRequests {
	return &GetScopeGrantRequestTooManyRequests{}
}

/*
GetScopeGrantRequestTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetScopeGrantRequestTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get scope grant request too many requests response has a 2xx status code
func (o *GetScopeGrantRequestTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get scope grant request too many requests response has a 3xx status code
func (o *GetScopeGrantRequestTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get scope grant request too many requests response has a 4xx status code
func (o *GetScopeGrantRequestTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get scope grant request too many requests response has a 5xx status code
func (o *GetScopeGrantRequestTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get scope grant request too many requests response a status code equal to that given
func (o *GetScopeGrantRequestTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get scope grant request too many requests response
func (o *GetScopeGrantRequestTooManyRequests) Code() int {
	return 429
}

func (o *GetScopeGrantRequestTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestTooManyRequests %s", 429, payload)
}

func (o *GetScopeGrantRequestTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /scope-grants/{login}][%d] getScopeGrantRequestTooManyRequests %s", 429, payload)
}

func (o *GetScopeGrantRequestTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetScopeGrantRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
