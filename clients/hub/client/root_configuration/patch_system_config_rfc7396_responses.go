// Code generated by go-swagger; DO NOT EDIT.

package root_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/hub/models"
)

// PatchSystemConfigRfc7396Reader is a Reader for the PatchSystemConfigRfc7396 structure.
type PatchSystemConfigRfc7396Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchSystemConfigRfc7396Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPatchSystemConfigRfc7396NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchSystemConfigRfc7396BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchSystemConfigRfc7396Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchSystemConfigRfc7396Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchSystemConfigRfc7396NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchSystemConfigRfc7396UnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchSystemConfigRfc7396TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /system/promote/config-rfc7396] patchSystemConfigRfc7396", response, response.Code())
	}
}

// NewPatchSystemConfigRfc7396NoContent creates a PatchSystemConfigRfc7396NoContent with default headers values
func NewPatchSystemConfigRfc7396NoContent() *PatchSystemConfigRfc7396NoContent {
	return &PatchSystemConfigRfc7396NoContent{}
}

/*
PatchSystemConfigRfc7396NoContent describes a response with status code 204, with default header values.

	patch applied
*/
type PatchSystemConfigRfc7396NoContent struct {
}

// IsSuccess returns true when this patch system config rfc7396 no content response has a 2xx status code
func (o *PatchSystemConfigRfc7396NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch system config rfc7396 no content response has a 3xx status code
func (o *PatchSystemConfigRfc7396NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 no content response has a 4xx status code
func (o *PatchSystemConfigRfc7396NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch system config rfc7396 no content response has a 5xx status code
func (o *PatchSystemConfigRfc7396NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 no content response a status code equal to that given
func (o *PatchSystemConfigRfc7396NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the patch system config rfc7396 no content response
func (o *PatchSystemConfigRfc7396NoContent) Code() int {
	return 204
}

func (o *PatchSystemConfigRfc7396NoContent) Error() string {
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396NoContent", 204)
}

func (o *PatchSystemConfigRfc7396NoContent) String() string {
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396NoContent", 204)
}

func (o *PatchSystemConfigRfc7396NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchSystemConfigRfc7396BadRequest creates a PatchSystemConfigRfc7396BadRequest with default headers values
func NewPatchSystemConfigRfc7396BadRequest() *PatchSystemConfigRfc7396BadRequest {
	return &PatchSystemConfigRfc7396BadRequest{}
}

/*
PatchSystemConfigRfc7396BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PatchSystemConfigRfc7396BadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch system config rfc7396 bad request response has a 2xx status code
func (o *PatchSystemConfigRfc7396BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system config rfc7396 bad request response has a 3xx status code
func (o *PatchSystemConfigRfc7396BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 bad request response has a 4xx status code
func (o *PatchSystemConfigRfc7396BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system config rfc7396 bad request response has a 5xx status code
func (o *PatchSystemConfigRfc7396BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 bad request response a status code equal to that given
func (o *PatchSystemConfigRfc7396BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the patch system config rfc7396 bad request response
func (o *PatchSystemConfigRfc7396BadRequest) Code() int {
	return 400
}

func (o *PatchSystemConfigRfc7396BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396BadRequest %s", 400, payload)
}

func (o *PatchSystemConfigRfc7396BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396BadRequest %s", 400, payload)
}

func (o *PatchSystemConfigRfc7396BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSystemConfigRfc7396BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSystemConfigRfc7396Unauthorized creates a PatchSystemConfigRfc7396Unauthorized with default headers values
func NewPatchSystemConfigRfc7396Unauthorized() *PatchSystemConfigRfc7396Unauthorized {
	return &PatchSystemConfigRfc7396Unauthorized{}
}

/*
PatchSystemConfigRfc7396Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchSystemConfigRfc7396Unauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch system config rfc7396 unauthorized response has a 2xx status code
func (o *PatchSystemConfigRfc7396Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system config rfc7396 unauthorized response has a 3xx status code
func (o *PatchSystemConfigRfc7396Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 unauthorized response has a 4xx status code
func (o *PatchSystemConfigRfc7396Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system config rfc7396 unauthorized response has a 5xx status code
func (o *PatchSystemConfigRfc7396Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 unauthorized response a status code equal to that given
func (o *PatchSystemConfigRfc7396Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the patch system config rfc7396 unauthorized response
func (o *PatchSystemConfigRfc7396Unauthorized) Code() int {
	return 401
}

func (o *PatchSystemConfigRfc7396Unauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396Unauthorized %s", 401, payload)
}

func (o *PatchSystemConfigRfc7396Unauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396Unauthorized %s", 401, payload)
}

func (o *PatchSystemConfigRfc7396Unauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSystemConfigRfc7396Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSystemConfigRfc7396Forbidden creates a PatchSystemConfigRfc7396Forbidden with default headers values
func NewPatchSystemConfigRfc7396Forbidden() *PatchSystemConfigRfc7396Forbidden {
	return &PatchSystemConfigRfc7396Forbidden{}
}

/*
PatchSystemConfigRfc7396Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchSystemConfigRfc7396Forbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch system config rfc7396 forbidden response has a 2xx status code
func (o *PatchSystemConfigRfc7396Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system config rfc7396 forbidden response has a 3xx status code
func (o *PatchSystemConfigRfc7396Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 forbidden response has a 4xx status code
func (o *PatchSystemConfigRfc7396Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system config rfc7396 forbidden response has a 5xx status code
func (o *PatchSystemConfigRfc7396Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 forbidden response a status code equal to that given
func (o *PatchSystemConfigRfc7396Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the patch system config rfc7396 forbidden response
func (o *PatchSystemConfigRfc7396Forbidden) Code() int {
	return 403
}

func (o *PatchSystemConfigRfc7396Forbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396Forbidden %s", 403, payload)
}

func (o *PatchSystemConfigRfc7396Forbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396Forbidden %s", 403, payload)
}

func (o *PatchSystemConfigRfc7396Forbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSystemConfigRfc7396Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSystemConfigRfc7396NotFound creates a PatchSystemConfigRfc7396NotFound with default headers values
func NewPatchSystemConfigRfc7396NotFound() *PatchSystemConfigRfc7396NotFound {
	return &PatchSystemConfigRfc7396NotFound{}
}

/*
PatchSystemConfigRfc7396NotFound describes a response with status code 404, with default header values.

Not found
*/
type PatchSystemConfigRfc7396NotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch system config rfc7396 not found response has a 2xx status code
func (o *PatchSystemConfigRfc7396NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system config rfc7396 not found response has a 3xx status code
func (o *PatchSystemConfigRfc7396NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 not found response has a 4xx status code
func (o *PatchSystemConfigRfc7396NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system config rfc7396 not found response has a 5xx status code
func (o *PatchSystemConfigRfc7396NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 not found response a status code equal to that given
func (o *PatchSystemConfigRfc7396NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the patch system config rfc7396 not found response
func (o *PatchSystemConfigRfc7396NotFound) Code() int {
	return 404
}

func (o *PatchSystemConfigRfc7396NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396NotFound %s", 404, payload)
}

func (o *PatchSystemConfigRfc7396NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396NotFound %s", 404, payload)
}

func (o *PatchSystemConfigRfc7396NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSystemConfigRfc7396NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSystemConfigRfc7396UnprocessableEntity creates a PatchSystemConfigRfc7396UnprocessableEntity with default headers values
func NewPatchSystemConfigRfc7396UnprocessableEntity() *PatchSystemConfigRfc7396UnprocessableEntity {
	return &PatchSystemConfigRfc7396UnprocessableEntity{}
}

/*
PatchSystemConfigRfc7396UnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type PatchSystemConfigRfc7396UnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch system config rfc7396 unprocessable entity response has a 2xx status code
func (o *PatchSystemConfigRfc7396UnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system config rfc7396 unprocessable entity response has a 3xx status code
func (o *PatchSystemConfigRfc7396UnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 unprocessable entity response has a 4xx status code
func (o *PatchSystemConfigRfc7396UnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system config rfc7396 unprocessable entity response has a 5xx status code
func (o *PatchSystemConfigRfc7396UnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 unprocessable entity response a status code equal to that given
func (o *PatchSystemConfigRfc7396UnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the patch system config rfc7396 unprocessable entity response
func (o *PatchSystemConfigRfc7396UnprocessableEntity) Code() int {
	return 422
}

func (o *PatchSystemConfigRfc7396UnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396UnprocessableEntity %s", 422, payload)
}

func (o *PatchSystemConfigRfc7396UnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396UnprocessableEntity %s", 422, payload)
}

func (o *PatchSystemConfigRfc7396UnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSystemConfigRfc7396UnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchSystemConfigRfc7396TooManyRequests creates a PatchSystemConfigRfc7396TooManyRequests with default headers values
func NewPatchSystemConfigRfc7396TooManyRequests() *PatchSystemConfigRfc7396TooManyRequests {
	return &PatchSystemConfigRfc7396TooManyRequests{}
}

/*
PatchSystemConfigRfc7396TooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type PatchSystemConfigRfc7396TooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch system config rfc7396 too many requests response has a 2xx status code
func (o *PatchSystemConfigRfc7396TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch system config rfc7396 too many requests response has a 3xx status code
func (o *PatchSystemConfigRfc7396TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch system config rfc7396 too many requests response has a 4xx status code
func (o *PatchSystemConfigRfc7396TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch system config rfc7396 too many requests response has a 5xx status code
func (o *PatchSystemConfigRfc7396TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch system config rfc7396 too many requests response a status code equal to that given
func (o *PatchSystemConfigRfc7396TooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the patch system config rfc7396 too many requests response
func (o *PatchSystemConfigRfc7396TooManyRequests) Code() int {
	return 429
}

func (o *PatchSystemConfigRfc7396TooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396TooManyRequests %s", 429, payload)
}

func (o *PatchSystemConfigRfc7396TooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /system/promote/config-rfc7396][%d] patchSystemConfigRfc7396TooManyRequests %s", 429, payload)
}

func (o *PatchSystemConfigRfc7396TooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchSystemConfigRfc7396TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
