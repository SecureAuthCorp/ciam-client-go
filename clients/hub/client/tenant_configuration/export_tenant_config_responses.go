// Code generated by go-swagger; DO NOT EDIT.

package tenant_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/hub/models"
)

// ExportTenantConfigReader is a Reader for the ExportTenantConfig structure.
type ExportTenantConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExportTenantConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExportTenantConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExportTenantConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewExportTenantConfigUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExportTenantConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExportTenantConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewExportTenantConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewExportTenantConfigTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /{tid}/promote/config] ExportTenantConfig", response, response.Code())
	}
}

// NewExportTenantConfigOK creates a ExportTenantConfigOK with default headers values
func NewExportTenantConfigOK() *ExportTenantConfigOK {
	return &ExportTenantConfigOK{}
}

/*
ExportTenantConfigOK describes a response with status code 200, with default header values.

Tenant configuration JSON
*/
type ExportTenantConfigOK struct {
	Payload *models.TreeTenant
}

// IsSuccess returns true when this export tenant config o k response has a 2xx status code
func (o *ExportTenantConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this export tenant config o k response has a 3xx status code
func (o *ExportTenantConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config o k response has a 4xx status code
func (o *ExportTenantConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this export tenant config o k response has a 5xx status code
func (o *ExportTenantConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config o k response a status code equal to that given
func (o *ExportTenantConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the export tenant config o k response
func (o *ExportTenantConfigOK) Code() int {
	return 200
}

func (o *ExportTenantConfigOK) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigOK  %+v", 200, o.Payload)
}

func (o *ExportTenantConfigOK) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigOK  %+v", 200, o.Payload)
}

func (o *ExportTenantConfigOK) GetPayload() *models.TreeTenant {
	return o.Payload
}

func (o *ExportTenantConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TreeTenant)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTenantConfigBadRequest creates a ExportTenantConfigBadRequest with default headers values
func NewExportTenantConfigBadRequest() *ExportTenantConfigBadRequest {
	return &ExportTenantConfigBadRequest{}
}

/*
ExportTenantConfigBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ExportTenantConfigBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this export tenant config bad request response has a 2xx status code
func (o *ExportTenantConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export tenant config bad request response has a 3xx status code
func (o *ExportTenantConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config bad request response has a 4xx status code
func (o *ExportTenantConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this export tenant config bad request response has a 5xx status code
func (o *ExportTenantConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config bad request response a status code equal to that given
func (o *ExportTenantConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the export tenant config bad request response
func (o *ExportTenantConfigBadRequest) Code() int {
	return 400
}

func (o *ExportTenantConfigBadRequest) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigBadRequest  %+v", 400, o.Payload)
}

func (o *ExportTenantConfigBadRequest) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigBadRequest  %+v", 400, o.Payload)
}

func (o *ExportTenantConfigBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExportTenantConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTenantConfigUnauthorized creates a ExportTenantConfigUnauthorized with default headers values
func NewExportTenantConfigUnauthorized() *ExportTenantConfigUnauthorized {
	return &ExportTenantConfigUnauthorized{}
}

/*
ExportTenantConfigUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ExportTenantConfigUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this export tenant config unauthorized response has a 2xx status code
func (o *ExportTenantConfigUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export tenant config unauthorized response has a 3xx status code
func (o *ExportTenantConfigUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config unauthorized response has a 4xx status code
func (o *ExportTenantConfigUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this export tenant config unauthorized response has a 5xx status code
func (o *ExportTenantConfigUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config unauthorized response a status code equal to that given
func (o *ExportTenantConfigUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the export tenant config unauthorized response
func (o *ExportTenantConfigUnauthorized) Code() int {
	return 401
}

func (o *ExportTenantConfigUnauthorized) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *ExportTenantConfigUnauthorized) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigUnauthorized  %+v", 401, o.Payload)
}

func (o *ExportTenantConfigUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExportTenantConfigUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTenantConfigForbidden creates a ExportTenantConfigForbidden with default headers values
func NewExportTenantConfigForbidden() *ExportTenantConfigForbidden {
	return &ExportTenantConfigForbidden{}
}

/*
ExportTenantConfigForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ExportTenantConfigForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this export tenant config forbidden response has a 2xx status code
func (o *ExportTenantConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export tenant config forbidden response has a 3xx status code
func (o *ExportTenantConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config forbidden response has a 4xx status code
func (o *ExportTenantConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this export tenant config forbidden response has a 5xx status code
func (o *ExportTenantConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config forbidden response a status code equal to that given
func (o *ExportTenantConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the export tenant config forbidden response
func (o *ExportTenantConfigForbidden) Code() int {
	return 403
}

func (o *ExportTenantConfigForbidden) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigForbidden  %+v", 403, o.Payload)
}

func (o *ExportTenantConfigForbidden) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigForbidden  %+v", 403, o.Payload)
}

func (o *ExportTenantConfigForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExportTenantConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTenantConfigNotFound creates a ExportTenantConfigNotFound with default headers values
func NewExportTenantConfigNotFound() *ExportTenantConfigNotFound {
	return &ExportTenantConfigNotFound{}
}

/*
ExportTenantConfigNotFound describes a response with status code 404, with default header values.

Not found
*/
type ExportTenantConfigNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this export tenant config not found response has a 2xx status code
func (o *ExportTenantConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export tenant config not found response has a 3xx status code
func (o *ExportTenantConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config not found response has a 4xx status code
func (o *ExportTenantConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this export tenant config not found response has a 5xx status code
func (o *ExportTenantConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config not found response a status code equal to that given
func (o *ExportTenantConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the export tenant config not found response
func (o *ExportTenantConfigNotFound) Code() int {
	return 404
}

func (o *ExportTenantConfigNotFound) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigNotFound  %+v", 404, o.Payload)
}

func (o *ExportTenantConfigNotFound) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigNotFound  %+v", 404, o.Payload)
}

func (o *ExportTenantConfigNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExportTenantConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTenantConfigUnprocessableEntity creates a ExportTenantConfigUnprocessableEntity with default headers values
func NewExportTenantConfigUnprocessableEntity() *ExportTenantConfigUnprocessableEntity {
	return &ExportTenantConfigUnprocessableEntity{}
}

/*
ExportTenantConfigUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ExportTenantConfigUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this export tenant config unprocessable entity response has a 2xx status code
func (o *ExportTenantConfigUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export tenant config unprocessable entity response has a 3xx status code
func (o *ExportTenantConfigUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config unprocessable entity response has a 4xx status code
func (o *ExportTenantConfigUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this export tenant config unprocessable entity response has a 5xx status code
func (o *ExportTenantConfigUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config unprocessable entity response a status code equal to that given
func (o *ExportTenantConfigUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the export tenant config unprocessable entity response
func (o *ExportTenantConfigUnprocessableEntity) Code() int {
	return 422
}

func (o *ExportTenantConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ExportTenantConfigUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ExportTenantConfigUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExportTenantConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExportTenantConfigTooManyRequests creates a ExportTenantConfigTooManyRequests with default headers values
func NewExportTenantConfigTooManyRequests() *ExportTenantConfigTooManyRequests {
	return &ExportTenantConfigTooManyRequests{}
}

/*
ExportTenantConfigTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ExportTenantConfigTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this export tenant config too many requests response has a 2xx status code
func (o *ExportTenantConfigTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this export tenant config too many requests response has a 3xx status code
func (o *ExportTenantConfigTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this export tenant config too many requests response has a 4xx status code
func (o *ExportTenantConfigTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this export tenant config too many requests response has a 5xx status code
func (o *ExportTenantConfigTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this export tenant config too many requests response a status code equal to that given
func (o *ExportTenantConfigTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the export tenant config too many requests response
func (o *ExportTenantConfigTooManyRequests) Code() int {
	return 429
}

func (o *ExportTenantConfigTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *ExportTenantConfigTooManyRequests) String() string {
	return fmt.Sprintf("[GET /{tid}/promote/config][%d] exportTenantConfigTooManyRequests  %+v", 429, o.Payload)
}

func (o *ExportTenantConfigTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ExportTenantConfigTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
