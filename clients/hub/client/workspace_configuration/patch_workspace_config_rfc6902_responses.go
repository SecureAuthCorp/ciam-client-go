// Code generated by go-swagger; DO NOT EDIT.

package workspace_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/hub/models"
)

// PatchWorkspaceConfigRfc6902Reader is a Reader for the PatchWorkspaceConfigRfc6902 structure.
type PatchWorkspaceConfigRfc6902Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWorkspaceConfigRfc6902Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPatchWorkspaceConfigRfc6902NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchWorkspaceConfigRfc6902BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchWorkspaceConfigRfc6902Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPatchWorkspaceConfigRfc6902Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchWorkspaceConfigRfc6902NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewPatchWorkspaceConfigRfc6902UnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPatchWorkspaceConfigRfc6902TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902] patchWorkspaceConfigRfc6902", response, response.Code())
	}
}

// NewPatchWorkspaceConfigRfc6902NoContent creates a PatchWorkspaceConfigRfc6902NoContent with default headers values
func NewPatchWorkspaceConfigRfc6902NoContent() *PatchWorkspaceConfigRfc6902NoContent {
	return &PatchWorkspaceConfigRfc6902NoContent{}
}

/*
PatchWorkspaceConfigRfc6902NoContent describes a response with status code 204, with default header values.

	patch applied
*/
type PatchWorkspaceConfigRfc6902NoContent struct {
}

// IsSuccess returns true when this patch workspace config rfc6902 no content response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this patch workspace config rfc6902 no content response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 no content response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this patch workspace config rfc6902 no content response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 no content response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the patch workspace config rfc6902 no content response
func (o *PatchWorkspaceConfigRfc6902NoContent) Code() int {
	return 204
}

func (o *PatchWorkspaceConfigRfc6902NoContent) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902NoContent ", 204)
}

func (o *PatchWorkspaceConfigRfc6902NoContent) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902NoContent ", 204)
}

func (o *PatchWorkspaceConfigRfc6902NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchWorkspaceConfigRfc6902BadRequest creates a PatchWorkspaceConfigRfc6902BadRequest with default headers values
func NewPatchWorkspaceConfigRfc6902BadRequest() *PatchWorkspaceConfigRfc6902BadRequest {
	return &PatchWorkspaceConfigRfc6902BadRequest{}
}

/*
PatchWorkspaceConfigRfc6902BadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PatchWorkspaceConfigRfc6902BadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch workspace config rfc6902 bad request response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workspace config rfc6902 bad request response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 bad request response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workspace config rfc6902 bad request response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 bad request response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the patch workspace config rfc6902 bad request response
func (o *PatchWorkspaceConfigRfc6902BadRequest) Code() int {
	return 400
}

func (o *PatchWorkspaceConfigRfc6902BadRequest) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902BadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902BadRequest) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902BadRequest  %+v", 400, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902BadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchWorkspaceConfigRfc6902BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkspaceConfigRfc6902Unauthorized creates a PatchWorkspaceConfigRfc6902Unauthorized with default headers values
func NewPatchWorkspaceConfigRfc6902Unauthorized() *PatchWorkspaceConfigRfc6902Unauthorized {
	return &PatchWorkspaceConfigRfc6902Unauthorized{}
}

/*
PatchWorkspaceConfigRfc6902Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PatchWorkspaceConfigRfc6902Unauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch workspace config rfc6902 unauthorized response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workspace config rfc6902 unauthorized response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 unauthorized response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workspace config rfc6902 unauthorized response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 unauthorized response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the patch workspace config rfc6902 unauthorized response
func (o *PatchWorkspaceConfigRfc6902Unauthorized) Code() int {
	return 401
}

func (o *PatchWorkspaceConfigRfc6902Unauthorized) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902Unauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902Unauthorized) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902Unauthorized  %+v", 401, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902Unauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchWorkspaceConfigRfc6902Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkspaceConfigRfc6902Forbidden creates a PatchWorkspaceConfigRfc6902Forbidden with default headers values
func NewPatchWorkspaceConfigRfc6902Forbidden() *PatchWorkspaceConfigRfc6902Forbidden {
	return &PatchWorkspaceConfigRfc6902Forbidden{}
}

/*
PatchWorkspaceConfigRfc6902Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PatchWorkspaceConfigRfc6902Forbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch workspace config rfc6902 forbidden response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workspace config rfc6902 forbidden response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 forbidden response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workspace config rfc6902 forbidden response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 forbidden response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the patch workspace config rfc6902 forbidden response
func (o *PatchWorkspaceConfigRfc6902Forbidden) Code() int {
	return 403
}

func (o *PatchWorkspaceConfigRfc6902Forbidden) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902Forbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902Forbidden) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902Forbidden  %+v", 403, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902Forbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchWorkspaceConfigRfc6902Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkspaceConfigRfc6902NotFound creates a PatchWorkspaceConfigRfc6902NotFound with default headers values
func NewPatchWorkspaceConfigRfc6902NotFound() *PatchWorkspaceConfigRfc6902NotFound {
	return &PatchWorkspaceConfigRfc6902NotFound{}
}

/*
PatchWorkspaceConfigRfc6902NotFound describes a response with status code 404, with default header values.

Not found
*/
type PatchWorkspaceConfigRfc6902NotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch workspace config rfc6902 not found response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workspace config rfc6902 not found response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 not found response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workspace config rfc6902 not found response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 not found response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the patch workspace config rfc6902 not found response
func (o *PatchWorkspaceConfigRfc6902NotFound) Code() int {
	return 404
}

func (o *PatchWorkspaceConfigRfc6902NotFound) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902NotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902NotFound) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902NotFound  %+v", 404, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902NotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchWorkspaceConfigRfc6902NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkspaceConfigRfc6902UnprocessableEntity creates a PatchWorkspaceConfigRfc6902UnprocessableEntity with default headers values
func NewPatchWorkspaceConfigRfc6902UnprocessableEntity() *PatchWorkspaceConfigRfc6902UnprocessableEntity {
	return &PatchWorkspaceConfigRfc6902UnprocessableEntity{}
}

/*
PatchWorkspaceConfigRfc6902UnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type PatchWorkspaceConfigRfc6902UnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch workspace config rfc6902 unprocessable entity response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workspace config rfc6902 unprocessable entity response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 unprocessable entity response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workspace config rfc6902 unprocessable entity response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 unprocessable entity response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the patch workspace config rfc6902 unprocessable entity response
func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) Code() int {
	return 422
}

func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902UnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902UnprocessableEntity  %+v", 422, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchWorkspaceConfigRfc6902UnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWorkspaceConfigRfc6902TooManyRequests creates a PatchWorkspaceConfigRfc6902TooManyRequests with default headers values
func NewPatchWorkspaceConfigRfc6902TooManyRequests() *PatchWorkspaceConfigRfc6902TooManyRequests {
	return &PatchWorkspaceConfigRfc6902TooManyRequests{}
}

/*
PatchWorkspaceConfigRfc6902TooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type PatchWorkspaceConfigRfc6902TooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this patch workspace config rfc6902 too many requests response has a 2xx status code
func (o *PatchWorkspaceConfigRfc6902TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this patch workspace config rfc6902 too many requests response has a 3xx status code
func (o *PatchWorkspaceConfigRfc6902TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this patch workspace config rfc6902 too many requests response has a 4xx status code
func (o *PatchWorkspaceConfigRfc6902TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this patch workspace config rfc6902 too many requests response has a 5xx status code
func (o *PatchWorkspaceConfigRfc6902TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this patch workspace config rfc6902 too many requests response a status code equal to that given
func (o *PatchWorkspaceConfigRfc6902TooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the patch workspace config rfc6902 too many requests response
func (o *PatchWorkspaceConfigRfc6902TooManyRequests) Code() int {
	return 429
}

func (o *PatchWorkspaceConfigRfc6902TooManyRequests) Error() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902TooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902TooManyRequests) String() string {
	return fmt.Sprintf("[PATCH /{tid}/workspaces/{wid}/promote/config-rfc6902][%d] patchWorkspaceConfigRfc6902TooManyRequests  %+v", 429, o.Payload)
}

func (o *PatchWorkspaceConfigRfc6902TooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *PatchWorkspaceConfigRfc6902TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
