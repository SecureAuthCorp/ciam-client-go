// Code generated by go-swagger; DO NOT EDIT.

package workspace_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/hub/models"
)

// NewPatchWorkspaceConfigRfc6902Params creates a new PatchWorkspaceConfigRfc6902Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchWorkspaceConfigRfc6902Params() *PatchWorkspaceConfigRfc6902Params {
	return &PatchWorkspaceConfigRfc6902Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchWorkspaceConfigRfc6902ParamsWithTimeout creates a new PatchWorkspaceConfigRfc6902Params object
// with the ability to set a timeout on a request.
func NewPatchWorkspaceConfigRfc6902ParamsWithTimeout(timeout time.Duration) *PatchWorkspaceConfigRfc6902Params {
	return &PatchWorkspaceConfigRfc6902Params{
		timeout: timeout,
	}
}

// NewPatchWorkspaceConfigRfc6902ParamsWithContext creates a new PatchWorkspaceConfigRfc6902Params object
// with the ability to set a context for a request.
func NewPatchWorkspaceConfigRfc6902ParamsWithContext(ctx context.Context) *PatchWorkspaceConfigRfc6902Params {
	return &PatchWorkspaceConfigRfc6902Params{
		Context: ctx,
	}
}

// NewPatchWorkspaceConfigRfc6902ParamsWithHTTPClient creates a new PatchWorkspaceConfigRfc6902Params object
// with the ability to set a custom HTTPClient for a request.
func NewPatchWorkspaceConfigRfc6902ParamsWithHTTPClient(client *http.Client) *PatchWorkspaceConfigRfc6902Params {
	return &PatchWorkspaceConfigRfc6902Params{
		HTTPClient: client,
	}
}

/*
PatchWorkspaceConfigRfc6902Params contains all the parameters to send to the API endpoint

	for the patch workspace config rfc6902 operation.

	Typically these are written to a http.Request.
*/
type PatchWorkspaceConfigRfc6902Params struct {

	/* Mode.

	     Insert mode

	Defines what happens in case of patched configuration import conflicts.

	The `mode` parameter defines
	what happens if there are any conflicts when importing your configuration. For example, if a
	client already exists within Cloudentity and you are trying to import a
	configuration that also has a client with this ID, there are the following ways
	Cloudentity can handle the request:

	`mode` set to `ignore`, Cloudentity ignores the changes that come from your configuration import.

	`mode` set to `fail`, Cloudentity stops processing the import and returns an error.

	`mode` set to `update`, Cloudentity updates the value from the previous configuration with the value
	provided in the request.

	     Format: insertMode
	*/
	Mode *string

	/* Patch.

	     RFC6902Patch

	The `patch` parameter is a JSON object that contains an array of RFC-6902 patch operations.
	*/
	Patch models.Rfc6902PatchOperations

	/* Tid.

	   Tenant ID

	   Default: "default"
	*/
	Tid string

	/* Wid.

	   Workspace ID

	   Default: "default"
	*/
	Wid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch workspace config rfc6902 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchWorkspaceConfigRfc6902Params) WithDefaults() *PatchWorkspaceConfigRfc6902Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch workspace config rfc6902 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchWorkspaceConfigRfc6902Params) SetDefaults() {
	var (
		tidDefault = string("default")

		widDefault = string("default")
	)

	val := PatchWorkspaceConfigRfc6902Params{
		Tid: tidDefault,
		Wid: widDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithTimeout(timeout time.Duration) *PatchWorkspaceConfigRfc6902Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithContext(ctx context.Context) *PatchWorkspaceConfigRfc6902Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithHTTPClient(client *http.Client) *PatchWorkspaceConfigRfc6902Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMode adds the mode to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithMode(mode *string) *PatchWorkspaceConfigRfc6902Params {
	o.SetMode(mode)
	return o
}

// SetMode adds the mode to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetMode(mode *string) {
	o.Mode = mode
}

// WithPatch adds the patch to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithPatch(patch models.Rfc6902PatchOperations) *PatchWorkspaceConfigRfc6902Params {
	o.SetPatch(patch)
	return o
}

// SetPatch adds the patch to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetPatch(patch models.Rfc6902PatchOperations) {
	o.Patch = patch
}

// WithTid adds the tid to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithTid(tid string) *PatchWorkspaceConfigRfc6902Params {
	o.SetTid(tid)
	return o
}

// SetTid adds the tid to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetTid(tid string) {
	o.Tid = tid
}

// WithWid adds the wid to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) WithWid(wid string) *PatchWorkspaceConfigRfc6902Params {
	o.SetWid(wid)
	return o
}

// SetWid adds the wid to the patch workspace config rfc6902 params
func (o *PatchWorkspaceConfigRfc6902Params) SetWid(wid string) {
	o.Wid = wid
}

// WriteToRequest writes these params to a swagger request
func (o *PatchWorkspaceConfigRfc6902Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Mode != nil {

		// query param mode
		var qrMode string

		if o.Mode != nil {
			qrMode = *o.Mode
		}
		qMode := qrMode
		if qMode != "" {

			if err := r.SetQueryParam("mode", qMode); err != nil {
				return err
			}
		}
	}
	if o.Patch != nil {
		if err := r.SetBodyParam(o.Patch); err != nil {
			return err
		}
	}

	// path param tid
	if err := r.SetPathParam("tid", o.Tid); err != nil {
		return err
	}

	// path param wid
	if err := r.SetPathParam("wid", o.Wid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
