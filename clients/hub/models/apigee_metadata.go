// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApigeeMetadata apigee metadata
//
// swagger:model ApigeeMetadata
type ApigeeMetadata struct {

	// Apigee environment name. It's a uniqe, immutable name of an environment for a given proxy name.
	// Example: my-default-proxy
	// Required: true
	EnvironmentName string `json:"environment_name" yaml:"environment_name"`

	// Apigee organization name. It's a uniqe, immutable name of an Apigee organization.
	// Example: apigee-x-905913
	// Required: true
	OrganizationName string `json:"organization_name" yaml:"organization_name"`

	// Apigee proxy name. It's a uniqe, immutable name of a proxy for a given organization id.
	// Example: my-default-proxy
	// Required: true
	ProxyName string `json:"proxy_name" yaml:"proxy_name"`
}

// Validate validates this apigee metadata
func (m *ApigeeMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironmentName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrganizationName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProxyName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApigeeMetadata) validateEnvironmentName(formats strfmt.Registry) error {

	if err := validate.RequiredString("environment_name", "body", m.EnvironmentName); err != nil {
		return err
	}

	return nil
}

func (m *ApigeeMetadata) validateOrganizationName(formats strfmt.Registry) error {

	if err := validate.RequiredString("organization_name", "body", m.OrganizationName); err != nil {
		return err
	}

	return nil
}

func (m *ApigeeMetadata) validateProxyName(formats strfmt.Registry) error {

	if err := validate.RequiredString("proxy_name", "body", m.ProxyName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this apigee metadata based on context it is used
func (m *ApigeeMetadata) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ApigeeMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApigeeMetadata) UnmarshalBinary(b []byte) error {
	var res ApigeeMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
