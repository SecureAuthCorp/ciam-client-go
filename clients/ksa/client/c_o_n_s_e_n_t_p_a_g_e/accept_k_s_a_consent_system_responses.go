// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/ksa/models"
)

// AcceptKSAConsentSystemReader is a Reader for the AcceptKSAConsentSystem structure.
type AcceptKSAConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptKSAConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptKSAConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAcceptKSAConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAcceptKSAConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptKSAConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAcceptKSAConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /ksa/consent/{login}/accept] acceptKSAConsentSystem", response, response.Code())
	}
}

// NewAcceptKSAConsentSystemOK creates a AcceptKSAConsentSystemOK with default headers values
func NewAcceptKSAConsentSystemOK() *AcceptKSAConsentSystemOK {
	return &AcceptKSAConsentSystemOK{}
}

/*
AcceptKSAConsentSystemOK describes a response with status code 200, with default header values.

Consent Accepted
*/
type AcceptKSAConsentSystemOK struct {
	Payload *models.ConsentAccepted
}

// IsSuccess returns true when this accept k s a consent system o k response has a 2xx status code
func (o *AcceptKSAConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this accept k s a consent system o k response has a 3xx status code
func (o *AcceptKSAConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept k s a consent system o k response has a 4xx status code
func (o *AcceptKSAConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this accept k s a consent system o k response has a 5xx status code
func (o *AcceptKSAConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this accept k s a consent system o k response a status code equal to that given
func (o *AcceptKSAConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the accept k s a consent system o k response
func (o *AcceptKSAConsentSystemOK) Code() int {
	return 200
}

func (o *AcceptKSAConsentSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemOK %s", 200, payload)
}

func (o *AcceptKSAConsentSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemOK %s", 200, payload)
}

func (o *AcceptKSAConsentSystemOK) GetPayload() *models.ConsentAccepted {
	return o.Payload
}

func (o *AcceptKSAConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentAccepted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptKSAConsentSystemUnauthorized creates a AcceptKSAConsentSystemUnauthorized with default headers values
func NewAcceptKSAConsentSystemUnauthorized() *AcceptKSAConsentSystemUnauthorized {
	return &AcceptKSAConsentSystemUnauthorized{}
}

/*
AcceptKSAConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AcceptKSAConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept k s a consent system unauthorized response has a 2xx status code
func (o *AcceptKSAConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept k s a consent system unauthorized response has a 3xx status code
func (o *AcceptKSAConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept k s a consent system unauthorized response has a 4xx status code
func (o *AcceptKSAConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept k s a consent system unauthorized response has a 5xx status code
func (o *AcceptKSAConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this accept k s a consent system unauthorized response a status code equal to that given
func (o *AcceptKSAConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the accept k s a consent system unauthorized response
func (o *AcceptKSAConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *AcceptKSAConsentSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemUnauthorized %s", 401, payload)
}

func (o *AcceptKSAConsentSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemUnauthorized %s", 401, payload)
}

func (o *AcceptKSAConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptKSAConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptKSAConsentSystemForbidden creates a AcceptKSAConsentSystemForbidden with default headers values
func NewAcceptKSAConsentSystemForbidden() *AcceptKSAConsentSystemForbidden {
	return &AcceptKSAConsentSystemForbidden{}
}

/*
AcceptKSAConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AcceptKSAConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept k s a consent system forbidden response has a 2xx status code
func (o *AcceptKSAConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept k s a consent system forbidden response has a 3xx status code
func (o *AcceptKSAConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept k s a consent system forbidden response has a 4xx status code
func (o *AcceptKSAConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept k s a consent system forbidden response has a 5xx status code
func (o *AcceptKSAConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this accept k s a consent system forbidden response a status code equal to that given
func (o *AcceptKSAConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the accept k s a consent system forbidden response
func (o *AcceptKSAConsentSystemForbidden) Code() int {
	return 403
}

func (o *AcceptKSAConsentSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemForbidden %s", 403, payload)
}

func (o *AcceptKSAConsentSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemForbidden %s", 403, payload)
}

func (o *AcceptKSAConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptKSAConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptKSAConsentSystemNotFound creates a AcceptKSAConsentSystemNotFound with default headers values
func NewAcceptKSAConsentSystemNotFound() *AcceptKSAConsentSystemNotFound {
	return &AcceptKSAConsentSystemNotFound{}
}

/*
AcceptKSAConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type AcceptKSAConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept k s a consent system not found response has a 2xx status code
func (o *AcceptKSAConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept k s a consent system not found response has a 3xx status code
func (o *AcceptKSAConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept k s a consent system not found response has a 4xx status code
func (o *AcceptKSAConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept k s a consent system not found response has a 5xx status code
func (o *AcceptKSAConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this accept k s a consent system not found response a status code equal to that given
func (o *AcceptKSAConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the accept k s a consent system not found response
func (o *AcceptKSAConsentSystemNotFound) Code() int {
	return 404
}

func (o *AcceptKSAConsentSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemNotFound %s", 404, payload)
}

func (o *AcceptKSAConsentSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemNotFound %s", 404, payload)
}

func (o *AcceptKSAConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptKSAConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptKSAConsentSystemTooManyRequests creates a AcceptKSAConsentSystemTooManyRequests with default headers values
func NewAcceptKSAConsentSystemTooManyRequests() *AcceptKSAConsentSystemTooManyRequests {
	return &AcceptKSAConsentSystemTooManyRequests{}
}

/*
AcceptKSAConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type AcceptKSAConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept k s a consent system too many requests response has a 2xx status code
func (o *AcceptKSAConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept k s a consent system too many requests response has a 3xx status code
func (o *AcceptKSAConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept k s a consent system too many requests response has a 4xx status code
func (o *AcceptKSAConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept k s a consent system too many requests response has a 5xx status code
func (o *AcceptKSAConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this accept k s a consent system too many requests response a status code equal to that given
func (o *AcceptKSAConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the accept k s a consent system too many requests response
func (o *AcceptKSAConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *AcceptKSAConsentSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemTooManyRequests %s", 429, payload)
}

func (o *AcceptKSAConsentSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /ksa/consent/{login}/accept][%d] acceptKSAConsentSystemTooManyRequests %s", 429, payload)
}

func (o *AcceptKSAConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptKSAConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
