// Code generated by go-swagger; DO NOT EDIT.

package c_d_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// ListCustomerClientsReader is a Reader for the ListCustomerClients structure.
type ListCustomerClientsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCustomerClientsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCustomerClientsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListCustomerClientsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListCustomerClientsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCustomerClientsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListCustomerClientsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListCustomerClientsOK creates a ListCustomerClientsOK with default headers values
func NewListCustomerClientsOK() *ListCustomerClientsOK {
	return &ListCustomerClientsOK{}
}

/*
ListCustomerClientsOK describes a response with status code 200, with default header values.

Clients
*/
type ListCustomerClientsOK struct {
	Payload *models.Clients
}

// IsSuccess returns true when this list customer clients o k response has a 2xx status code
func (o *ListCustomerClientsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list customer clients o k response has a 3xx status code
func (o *ListCustomerClientsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list customer clients o k response has a 4xx status code
func (o *ListCustomerClientsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list customer clients o k response has a 5xx status code
func (o *ListCustomerClientsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list customer clients o k response a status code equal to that given
func (o *ListCustomerClientsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListCustomerClientsOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsOK  %+v", 200, o.Payload)
}

func (o *ListCustomerClientsOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsOK  %+v", 200, o.Payload)
}

func (o *ListCustomerClientsOK) GetPayload() *models.Clients {
	return o.Payload
}

func (o *ListCustomerClientsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Clients)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomerClientsUnauthorized creates a ListCustomerClientsUnauthorized with default headers values
func NewListCustomerClientsUnauthorized() *ListCustomerClientsUnauthorized {
	return &ListCustomerClientsUnauthorized{}
}

/*
ListCustomerClientsUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type ListCustomerClientsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list customer clients unauthorized response has a 2xx status code
func (o *ListCustomerClientsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list customer clients unauthorized response has a 3xx status code
func (o *ListCustomerClientsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list customer clients unauthorized response has a 4xx status code
func (o *ListCustomerClientsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list customer clients unauthorized response has a 5xx status code
func (o *ListCustomerClientsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list customer clients unauthorized response a status code equal to that given
func (o *ListCustomerClientsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListCustomerClientsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListCustomerClientsUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListCustomerClientsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCustomerClientsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomerClientsForbidden creates a ListCustomerClientsForbidden with default headers values
func NewListCustomerClientsForbidden() *ListCustomerClientsForbidden {
	return &ListCustomerClientsForbidden{}
}

/*
ListCustomerClientsForbidden describes a response with status code 403, with default header values.

HttpError
*/
type ListCustomerClientsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list customer clients forbidden response has a 2xx status code
func (o *ListCustomerClientsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list customer clients forbidden response has a 3xx status code
func (o *ListCustomerClientsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list customer clients forbidden response has a 4xx status code
func (o *ListCustomerClientsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list customer clients forbidden response has a 5xx status code
func (o *ListCustomerClientsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list customer clients forbidden response a status code equal to that given
func (o *ListCustomerClientsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListCustomerClientsForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsForbidden  %+v", 403, o.Payload)
}

func (o *ListCustomerClientsForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsForbidden  %+v", 403, o.Payload)
}

func (o *ListCustomerClientsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCustomerClientsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomerClientsNotFound creates a ListCustomerClientsNotFound with default headers values
func NewListCustomerClientsNotFound() *ListCustomerClientsNotFound {
	return &ListCustomerClientsNotFound{}
}

/*
ListCustomerClientsNotFound describes a response with status code 404, with default header values.

HttpError
*/
type ListCustomerClientsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list customer clients not found response has a 2xx status code
func (o *ListCustomerClientsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list customer clients not found response has a 3xx status code
func (o *ListCustomerClientsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list customer clients not found response has a 4xx status code
func (o *ListCustomerClientsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list customer clients not found response has a 5xx status code
func (o *ListCustomerClientsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list customer clients not found response a status code equal to that given
func (o *ListCustomerClientsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListCustomerClientsNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsNotFound  %+v", 404, o.Payload)
}

func (o *ListCustomerClientsNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsNotFound  %+v", 404, o.Payload)
}

func (o *ListCustomerClientsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCustomerClientsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCustomerClientsTooManyRequests creates a ListCustomerClientsTooManyRequests with default headers values
func NewListCustomerClientsTooManyRequests() *ListCustomerClientsTooManyRequests {
	return &ListCustomerClientsTooManyRequests{}
}

/*
ListCustomerClientsTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type ListCustomerClientsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list customer clients too many requests response has a 2xx status code
func (o *ListCustomerClientsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list customer clients too many requests response has a 3xx status code
func (o *ListCustomerClientsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list customer clients too many requests response has a 4xx status code
func (o *ListCustomerClientsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list customer clients too many requests response has a 5xx status code
func (o *ListCustomerClientsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list customer clients too many requests response a status code equal to that given
func (o *ListCustomerClientsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListCustomerClientsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListCustomerClientsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/cdr/customer-clients][%d] listCustomerClientsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListCustomerClientsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListCustomerClientsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
