// Code generated by go-swagger; DO NOT EDIT.

package c_d_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// NewListCDRCustomerArrangementsParams creates a new ListCDRCustomerArrangementsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListCDRCustomerArrangementsParams() *ListCDRCustomerArrangementsParams {
	return &ListCDRCustomerArrangementsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListCDRCustomerArrangementsParamsWithTimeout creates a new ListCDRCustomerArrangementsParams object
// with the ability to set a timeout on a request.
func NewListCDRCustomerArrangementsParamsWithTimeout(timeout time.Duration) *ListCDRCustomerArrangementsParams {
	return &ListCDRCustomerArrangementsParams{
		timeout: timeout,
	}
}

// NewListCDRCustomerArrangementsParamsWithContext creates a new ListCDRCustomerArrangementsParams object
// with the ability to set a context for a request.
func NewListCDRCustomerArrangementsParamsWithContext(ctx context.Context) *ListCDRCustomerArrangementsParams {
	return &ListCDRCustomerArrangementsParams{
		Context: ctx,
	}
}

// NewListCDRCustomerArrangementsParamsWithHTTPClient creates a new ListCDRCustomerArrangementsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListCDRCustomerArrangementsParamsWithHTTPClient(client *http.Client) *ListCDRCustomerArrangementsParams {
	return &ListCDRCustomerArrangementsParams{
		HTTPClient: client,
	}
}

/*
ListCDRCustomerArrangementsParams contains all the parameters to send to the API endpoint

	for the list c d r customer arrangements operation.

	Typically these are written to a http.Request.
*/
type ListCDRCustomerArrangementsParams struct {

	// ConsentsRequest.
	ConsentsRequest *models.ConsentsRequest

	/* Wid.

	   Workspace id

	   Default: "default"
	*/
	Wid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list c d r customer arrangements params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListCDRCustomerArrangementsParams) WithDefaults() *ListCDRCustomerArrangementsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list c d r customer arrangements params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListCDRCustomerArrangementsParams) SetDefaults() {
	var (
		widDefault = string("default")
	)

	val := ListCDRCustomerArrangementsParams{
		Wid: widDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) WithTimeout(timeout time.Duration) *ListCDRCustomerArrangementsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) WithContext(ctx context.Context) *ListCDRCustomerArrangementsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) WithHTTPClient(client *http.Client) *ListCDRCustomerArrangementsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConsentsRequest adds the consentsRequest to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) WithConsentsRequest(consentsRequest *models.ConsentsRequest) *ListCDRCustomerArrangementsParams {
	o.SetConsentsRequest(consentsRequest)
	return o
}

// SetConsentsRequest adds the consentsRequest to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) SetConsentsRequest(consentsRequest *models.ConsentsRequest) {
	o.ConsentsRequest = consentsRequest
}

// WithWid adds the wid to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) WithWid(wid string) *ListCDRCustomerArrangementsParams {
	o.SetWid(wid)
	return o
}

// SetWid adds the wid to the list c d r customer arrangements params
func (o *ListCDRCustomerArrangementsParams) SetWid(wid string) {
	o.Wid = wid
}

// WriteToRequest writes these params to a swagger request
func (o *ListCDRCustomerArrangementsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.ConsentsRequest != nil {
		if err := r.SetBodyParam(o.ConsentsRequest); err != nil {
			return err
		}
	}

	// path param wid
	if err := r.SetPathParam("wid", o.Wid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
