// Code generated by go-swagger; DO NOT EDIT.

package openbanking_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// RejectAccountAccessConsentSystemReader is a Reader for the RejectAccountAccessConsentSystem structure.
type RejectAccountAccessConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectAccountAccessConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectAccountAccessConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRejectAccountAccessConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectAccountAccessConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectAccountAccessConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRejectAccountAccessConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRejectAccountAccessConsentSystemOK creates a RejectAccountAccessConsentSystemOK with default headers values
func NewRejectAccountAccessConsentSystemOK() *RejectAccountAccessConsentSystemOK {
	return &RejectAccountAccessConsentSystemOK{}
}

/*
RejectAccountAccessConsentSystemOK describes a response with status code 200, with default header values.

Consent rejected
*/
type RejectAccountAccessConsentSystemOK struct {
	Payload *models.ConsentRejected
}

// IsSuccess returns true when this reject account access consent system o k response has a 2xx status code
func (o *RejectAccountAccessConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reject account access consent system o k response has a 3xx status code
func (o *RejectAccountAccessConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject account access consent system o k response has a 4xx status code
func (o *RejectAccountAccessConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reject account access consent system o k response has a 5xx status code
func (o *RejectAccountAccessConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reject account access consent system o k response a status code equal to that given
func (o *RejectAccountAccessConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

func (o *RejectAccountAccessConsentSystemOK) Error() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemOK  %+v", 200, o.Payload)
}

func (o *RejectAccountAccessConsentSystemOK) String() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemOK  %+v", 200, o.Payload)
}

func (o *RejectAccountAccessConsentSystemOK) GetPayload() *models.ConsentRejected {
	return o.Payload
}

func (o *RejectAccountAccessConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentRejected)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectAccountAccessConsentSystemUnauthorized creates a RejectAccountAccessConsentSystemUnauthorized with default headers values
func NewRejectAccountAccessConsentSystemUnauthorized() *RejectAccountAccessConsentSystemUnauthorized {
	return &RejectAccountAccessConsentSystemUnauthorized{}
}

/*
RejectAccountAccessConsentSystemUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type RejectAccountAccessConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject account access consent system unauthorized response has a 2xx status code
func (o *RejectAccountAccessConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject account access consent system unauthorized response has a 3xx status code
func (o *RejectAccountAccessConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject account access consent system unauthorized response has a 4xx status code
func (o *RejectAccountAccessConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject account access consent system unauthorized response has a 5xx status code
func (o *RejectAccountAccessConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reject account access consent system unauthorized response a status code equal to that given
func (o *RejectAccountAccessConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RejectAccountAccessConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *RejectAccountAccessConsentSystemUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemUnauthorized  %+v", 401, o.Payload)
}

func (o *RejectAccountAccessConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectAccountAccessConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectAccountAccessConsentSystemForbidden creates a RejectAccountAccessConsentSystemForbidden with default headers values
func NewRejectAccountAccessConsentSystemForbidden() *RejectAccountAccessConsentSystemForbidden {
	return &RejectAccountAccessConsentSystemForbidden{}
}

/*
RejectAccountAccessConsentSystemForbidden describes a response with status code 403, with default header values.

HttpError
*/
type RejectAccountAccessConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject account access consent system forbidden response has a 2xx status code
func (o *RejectAccountAccessConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject account access consent system forbidden response has a 3xx status code
func (o *RejectAccountAccessConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject account access consent system forbidden response has a 4xx status code
func (o *RejectAccountAccessConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject account access consent system forbidden response has a 5xx status code
func (o *RejectAccountAccessConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reject account access consent system forbidden response a status code equal to that given
func (o *RejectAccountAccessConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RejectAccountAccessConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *RejectAccountAccessConsentSystemForbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemForbidden  %+v", 403, o.Payload)
}

func (o *RejectAccountAccessConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectAccountAccessConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectAccountAccessConsentSystemNotFound creates a RejectAccountAccessConsentSystemNotFound with default headers values
func NewRejectAccountAccessConsentSystemNotFound() *RejectAccountAccessConsentSystemNotFound {
	return &RejectAccountAccessConsentSystemNotFound{}
}

/*
RejectAccountAccessConsentSystemNotFound describes a response with status code 404, with default header values.

HttpError
*/
type RejectAccountAccessConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject account access consent system not found response has a 2xx status code
func (o *RejectAccountAccessConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject account access consent system not found response has a 3xx status code
func (o *RejectAccountAccessConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject account access consent system not found response has a 4xx status code
func (o *RejectAccountAccessConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject account access consent system not found response has a 5xx status code
func (o *RejectAccountAccessConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reject account access consent system not found response a status code equal to that given
func (o *RejectAccountAccessConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RejectAccountAccessConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *RejectAccountAccessConsentSystemNotFound) String() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemNotFound  %+v", 404, o.Payload)
}

func (o *RejectAccountAccessConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectAccountAccessConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectAccountAccessConsentSystemTooManyRequests creates a RejectAccountAccessConsentSystemTooManyRequests with default headers values
func NewRejectAccountAccessConsentSystemTooManyRequests() *RejectAccountAccessConsentSystemTooManyRequests {
	return &RejectAccountAccessConsentSystemTooManyRequests{}
}

/*
RejectAccountAccessConsentSystemTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type RejectAccountAccessConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this reject account access consent system too many requests response has a 2xx status code
func (o *RejectAccountAccessConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reject account access consent system too many requests response has a 3xx status code
func (o *RejectAccountAccessConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reject account access consent system too many requests response has a 4xx status code
func (o *RejectAccountAccessConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this reject account access consent system too many requests response has a 5xx status code
func (o *RejectAccountAccessConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this reject account access consent system too many requests response a status code equal to that given
func (o *RejectAccountAccessConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *RejectAccountAccessConsentSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *RejectAccountAccessConsentSystemTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/account-access-consent/{login}/reject][%d] rejectAccountAccessConsentSystemTooManyRequests  %+v", 429, o.Payload)
}

func (o *RejectAccountAccessConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectAccountAccessConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
