// Code generated by go-swagger; DO NOT EDIT.

package openbanking_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// OpenbankingFilePaymentConsentIntrospectReader is a Reader for the OpenbankingFilePaymentConsentIntrospect structure.
type OpenbankingFilePaymentConsentIntrospectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OpenbankingFilePaymentConsentIntrospectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOpenbankingFilePaymentConsentIntrospectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewOpenbankingFilePaymentConsentIntrospectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOpenbankingFilePaymentConsentIntrospectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewOpenbankingFilePaymentConsentIntrospectTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewOpenbankingFilePaymentConsentIntrospectOK creates a OpenbankingFilePaymentConsentIntrospectOK with default headers values
func NewOpenbankingFilePaymentConsentIntrospectOK() *OpenbankingFilePaymentConsentIntrospectOK {
	return &OpenbankingFilePaymentConsentIntrospectOK{}
}

/* OpenbankingFilePaymentConsentIntrospectOK describes a response with status code 200, with default header values.

Introspect Openbanking File Payment Consent Response
*/
type OpenbankingFilePaymentConsentIntrospectOK struct {
	Payload *OpenbankingFilePaymentConsentIntrospectOKBody
}

func (o *OpenbankingFilePaymentConsentIntrospectOK) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents/introspect][%d] openbankingFilePaymentConsentIntrospectOK  %+v", 200, o.Payload)
}
func (o *OpenbankingFilePaymentConsentIntrospectOK) GetPayload() *OpenbankingFilePaymentConsentIntrospectOKBody {
	return o.Payload
}

func (o *OpenbankingFilePaymentConsentIntrospectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(OpenbankingFilePaymentConsentIntrospectOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpenbankingFilePaymentConsentIntrospectUnauthorized creates a OpenbankingFilePaymentConsentIntrospectUnauthorized with default headers values
func NewOpenbankingFilePaymentConsentIntrospectUnauthorized() *OpenbankingFilePaymentConsentIntrospectUnauthorized {
	return &OpenbankingFilePaymentConsentIntrospectUnauthorized{}
}

/* OpenbankingFilePaymentConsentIntrospectUnauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type OpenbankingFilePaymentConsentIntrospectUnauthorized struct {
	Payload *models.GenericError
}

func (o *OpenbankingFilePaymentConsentIntrospectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents/introspect][%d] openbankingFilePaymentConsentIntrospectUnauthorized  %+v", 401, o.Payload)
}
func (o *OpenbankingFilePaymentConsentIntrospectUnauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *OpenbankingFilePaymentConsentIntrospectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpenbankingFilePaymentConsentIntrospectNotFound creates a OpenbankingFilePaymentConsentIntrospectNotFound with default headers values
func NewOpenbankingFilePaymentConsentIntrospectNotFound() *OpenbankingFilePaymentConsentIntrospectNotFound {
	return &OpenbankingFilePaymentConsentIntrospectNotFound{}
}

/* OpenbankingFilePaymentConsentIntrospectNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type OpenbankingFilePaymentConsentIntrospectNotFound struct {
	Payload *models.GenericError
}

func (o *OpenbankingFilePaymentConsentIntrospectNotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents/introspect][%d] openbankingFilePaymentConsentIntrospectNotFound  %+v", 404, o.Payload)
}
func (o *OpenbankingFilePaymentConsentIntrospectNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *OpenbankingFilePaymentConsentIntrospectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewOpenbankingFilePaymentConsentIntrospectTooManyRequests creates a OpenbankingFilePaymentConsentIntrospectTooManyRequests with default headers values
func NewOpenbankingFilePaymentConsentIntrospectTooManyRequests() *OpenbankingFilePaymentConsentIntrospectTooManyRequests {
	return &OpenbankingFilePaymentConsentIntrospectTooManyRequests{}
}

/* OpenbankingFilePaymentConsentIntrospectTooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type OpenbankingFilePaymentConsentIntrospectTooManyRequests struct {
	Payload *models.GenericError
}

func (o *OpenbankingFilePaymentConsentIntrospectTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/v3.1/pisp/file-payment-consents/introspect][%d] openbankingFilePaymentConsentIntrospectTooManyRequests  %+v", 429, o.Payload)
}
func (o *OpenbankingFilePaymentConsentIntrospectTooManyRequests) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *OpenbankingFilePaymentConsentIntrospectTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*OpenbankingFilePaymentConsentIntrospectOKBody openbanking file payment consent introspect o k body
swagger:model OpenbankingFilePaymentConsentIntrospectOKBody
*/
type OpenbankingFilePaymentConsentIntrospectOKBody struct {
	models.IntrospectResponse

	models.FilePaymentConsent

	// account i ds
	AccountIDs []string `json:"AccountIDs"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *OpenbankingFilePaymentConsentIntrospectOKBody) UnmarshalJSON(raw []byte) error {
	// OpenbankingFilePaymentConsentIntrospectOKBodyAO0
	var openbankingFilePaymentConsentIntrospectOKBodyAO0 models.IntrospectResponse
	if err := swag.ReadJSON(raw, &openbankingFilePaymentConsentIntrospectOKBodyAO0); err != nil {
		return err
	}
	o.IntrospectResponse = openbankingFilePaymentConsentIntrospectOKBodyAO0

	// OpenbankingFilePaymentConsentIntrospectOKBodyAO1
	var openbankingFilePaymentConsentIntrospectOKBodyAO1 models.FilePaymentConsent
	if err := swag.ReadJSON(raw, &openbankingFilePaymentConsentIntrospectOKBodyAO1); err != nil {
		return err
	}
	o.FilePaymentConsent = openbankingFilePaymentConsentIntrospectOKBodyAO1

	// OpenbankingFilePaymentConsentIntrospectOKBodyAO2
	var dataOpenbankingFilePaymentConsentIntrospectOKBodyAO2 struct {
		AccountIDs []string `json:"AccountIDs"`
	}
	if err := swag.ReadJSON(raw, &dataOpenbankingFilePaymentConsentIntrospectOKBodyAO2); err != nil {
		return err
	}

	o.AccountIDs = dataOpenbankingFilePaymentConsentIntrospectOKBodyAO2.AccountIDs

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o OpenbankingFilePaymentConsentIntrospectOKBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 3)

	openbankingFilePaymentConsentIntrospectOKBodyAO0, err := swag.WriteJSON(o.IntrospectResponse)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, openbankingFilePaymentConsentIntrospectOKBodyAO0)

	openbankingFilePaymentConsentIntrospectOKBodyAO1, err := swag.WriteJSON(o.FilePaymentConsent)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, openbankingFilePaymentConsentIntrospectOKBodyAO1)
	var dataOpenbankingFilePaymentConsentIntrospectOKBodyAO2 struct {
		AccountIDs []string `json:"AccountIDs"`
	}

	dataOpenbankingFilePaymentConsentIntrospectOKBodyAO2.AccountIDs = o.AccountIDs

	jsonDataOpenbankingFilePaymentConsentIntrospectOKBodyAO2, errOpenbankingFilePaymentConsentIntrospectOKBodyAO2 := swag.WriteJSON(dataOpenbankingFilePaymentConsentIntrospectOKBodyAO2)
	if errOpenbankingFilePaymentConsentIntrospectOKBodyAO2 != nil {
		return nil, errOpenbankingFilePaymentConsentIntrospectOKBodyAO2
	}
	_parts = append(_parts, jsonDataOpenbankingFilePaymentConsentIntrospectOKBodyAO2)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this openbanking file payment consent introspect o k body
func (o *OpenbankingFilePaymentConsentIntrospectOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IntrospectResponse
	if err := o.IntrospectResponse.Validate(formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.FilePaymentConsent
	if err := o.FilePaymentConsent.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this openbanking file payment consent introspect o k body based on the context it is used
func (o *OpenbankingFilePaymentConsentIntrospectOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.IntrospectResponse
	if err := o.IntrospectResponse.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}
	// validation for a type composition with models.FilePaymentConsent
	if err := o.FilePaymentConsent.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *OpenbankingFilePaymentConsentIntrospectOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *OpenbankingFilePaymentConsentIntrospectOKBody) UnmarshalBinary(b []byte) error {
	var res OpenbankingFilePaymentConsentIntrospectOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
