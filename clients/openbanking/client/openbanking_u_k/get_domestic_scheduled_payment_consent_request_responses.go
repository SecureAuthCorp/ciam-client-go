// Code generated by go-swagger; DO NOT EDIT.

package openbanking_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// GetDomesticScheduledPaymentConsentRequestReader is a Reader for the GetDomesticScheduledPaymentConsentRequest structure.
type GetDomesticScheduledPaymentConsentRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDomesticScheduledPaymentConsentRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDomesticScheduledPaymentConsentRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDomesticScheduledPaymentConsentRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDomesticScheduledPaymentConsentRequestUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDomesticScheduledPaymentConsentRequestForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDomesticScheduledPaymentConsentRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetDomesticScheduledPaymentConsentRequestNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetDomesticScheduledPaymentConsentRequestUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDomesticScheduledPaymentConsentRequestTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDomesticScheduledPaymentConsentRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDomesticScheduledPaymentConsentRequestOK creates a GetDomesticScheduledPaymentConsentRequestOK with default headers values
func NewGetDomesticScheduledPaymentConsentRequestOK() *GetDomesticScheduledPaymentConsentRequestOK {
	return &GetDomesticScheduledPaymentConsentRequestOK{}
}

/* GetDomesticScheduledPaymentConsentRequestOK describes a response with status code 200, with default header values.

Domestic scheduled payment consent
*/
type GetDomesticScheduledPaymentConsentRequestOK struct {
	Payload *models.DomesticScheduledPaymentConsentResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestOK) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestOK  %+v", 200, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestOK) GetPayload() *models.DomesticScheduledPaymentConsentResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DomesticScheduledPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestBadRequest creates a GetDomesticScheduledPaymentConsentRequestBadRequest with default headers values
func NewGetDomesticScheduledPaymentConsentRequestBadRequest() *GetDomesticScheduledPaymentConsentRequestBadRequest {
	return &GetDomesticScheduledPaymentConsentRequestBadRequest{}
}

/* GetDomesticScheduledPaymentConsentRequestBadRequest describes a response with status code 400, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestBadRequest  %+v", 400, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestUnauthorized creates a GetDomesticScheduledPaymentConsentRequestUnauthorized with default headers values
func NewGetDomesticScheduledPaymentConsentRequestUnauthorized() *GetDomesticScheduledPaymentConsentRequestUnauthorized {
	return &GetDomesticScheduledPaymentConsentRequestUnauthorized{}
}

/* GetDomesticScheduledPaymentConsentRequestUnauthorized describes a response with status code 401, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestUnauthorized  %+v", 401, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestForbidden creates a GetDomesticScheduledPaymentConsentRequestForbidden with default headers values
func NewGetDomesticScheduledPaymentConsentRequestForbidden() *GetDomesticScheduledPaymentConsentRequestForbidden {
	return &GetDomesticScheduledPaymentConsentRequestForbidden{}
}

/* GetDomesticScheduledPaymentConsentRequestForbidden describes a response with status code 403, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestForbidden struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestForbidden) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestForbidden  %+v", 403, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestMethodNotAllowed creates a GetDomesticScheduledPaymentConsentRequestMethodNotAllowed with default headers values
func NewGetDomesticScheduledPaymentConsentRequestMethodNotAllowed() *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed {
	return &GetDomesticScheduledPaymentConsentRequestMethodNotAllowed{}
}

/* GetDomesticScheduledPaymentConsentRequestMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestNotAcceptable creates a GetDomesticScheduledPaymentConsentRequestNotAcceptable with default headers values
func NewGetDomesticScheduledPaymentConsentRequestNotAcceptable() *GetDomesticScheduledPaymentConsentRequestNotAcceptable {
	return &GetDomesticScheduledPaymentConsentRequestNotAcceptable{}
}

/* GetDomesticScheduledPaymentConsentRequestNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestNotAcceptable struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestNotAcceptable  %+v", 406, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestUnsupportedMediaType creates a GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType with default headers values
func NewGetDomesticScheduledPaymentConsentRequestUnsupportedMediaType() *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType {
	return &GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType{}
}

/* GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestTooManyRequests creates a GetDomesticScheduledPaymentConsentRequestTooManyRequests with default headers values
func NewGetDomesticScheduledPaymentConsentRequestTooManyRequests() *GetDomesticScheduledPaymentConsentRequestTooManyRequests {
	return &GetDomesticScheduledPaymentConsentRequestTooManyRequests{}
}

/* GetDomesticScheduledPaymentConsentRequestTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestTooManyRequests struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDomesticScheduledPaymentConsentRequestInternalServerError creates a GetDomesticScheduledPaymentConsentRequestInternalServerError with default headers values
func NewGetDomesticScheduledPaymentConsentRequestInternalServerError() *GetDomesticScheduledPaymentConsentRequestInternalServerError {
	return &GetDomesticScheduledPaymentConsentRequestInternalServerError{}
}

/* GetDomesticScheduledPaymentConsentRequestInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetDomesticScheduledPaymentConsentRequestInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) Error() string {
	return fmt.Sprintf("[GET /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}][%d] getDomesticScheduledPaymentConsentRequestInternalServerError  %+v", 500, o.Payload)
}
func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDomesticScheduledPaymentConsentRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
