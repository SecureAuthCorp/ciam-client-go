// Code generated by go-swagger; DO NOT EDIT.

package openbanking_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// NewAcceptDomesticPaymentConsentSystemParams creates a new AcceptDomesticPaymentConsentSystemParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAcceptDomesticPaymentConsentSystemParams() *AcceptDomesticPaymentConsentSystemParams {
	return &AcceptDomesticPaymentConsentSystemParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAcceptDomesticPaymentConsentSystemParamsWithTimeout creates a new AcceptDomesticPaymentConsentSystemParams object
// with the ability to set a timeout on a request.
func NewAcceptDomesticPaymentConsentSystemParamsWithTimeout(timeout time.Duration) *AcceptDomesticPaymentConsentSystemParams {
	return &AcceptDomesticPaymentConsentSystemParams{
		timeout: timeout,
	}
}

// NewAcceptDomesticPaymentConsentSystemParamsWithContext creates a new AcceptDomesticPaymentConsentSystemParams object
// with the ability to set a context for a request.
func NewAcceptDomesticPaymentConsentSystemParamsWithContext(ctx context.Context) *AcceptDomesticPaymentConsentSystemParams {
	return &AcceptDomesticPaymentConsentSystemParams{
		Context: ctx,
	}
}

// NewAcceptDomesticPaymentConsentSystemParamsWithHTTPClient creates a new AcceptDomesticPaymentConsentSystemParams object
// with the ability to set a custom HTTPClient for a request.
func NewAcceptDomesticPaymentConsentSystemParamsWithHTTPClient(client *http.Client) *AcceptDomesticPaymentConsentSystemParams {
	return &AcceptDomesticPaymentConsentSystemParams{
		HTTPClient: client,
	}
}

/*
AcceptDomesticPaymentConsentSystemParams contains all the parameters to send to the API endpoint

	for the accept domestic payment consent system operation.

	Typically these are written to a http.Request.
*/
type AcceptDomesticPaymentConsentSystemParams struct {

	// AcceptConsent.
	AcceptConsent *models.AcceptConsentRequest

	// Login.
	Login string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the accept domestic payment consent system params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AcceptDomesticPaymentConsentSystemParams) WithDefaults() *AcceptDomesticPaymentConsentSystemParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the accept domestic payment consent system params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AcceptDomesticPaymentConsentSystemParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) WithTimeout(timeout time.Duration) *AcceptDomesticPaymentConsentSystemParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) WithContext(ctx context.Context) *AcceptDomesticPaymentConsentSystemParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) WithHTTPClient(client *http.Client) *AcceptDomesticPaymentConsentSystemParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAcceptConsent adds the acceptConsent to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) WithAcceptConsent(acceptConsent *models.AcceptConsentRequest) *AcceptDomesticPaymentConsentSystemParams {
	o.SetAcceptConsent(acceptConsent)
	return o
}

// SetAcceptConsent adds the acceptConsent to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) SetAcceptConsent(acceptConsent *models.AcceptConsentRequest) {
	o.AcceptConsent = acceptConsent
}

// WithLogin adds the login to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) WithLogin(login string) *AcceptDomesticPaymentConsentSystemParams {
	o.SetLogin(login)
	return o
}

// SetLogin adds the login to the accept domestic payment consent system params
func (o *AcceptDomesticPaymentConsentSystemParams) SetLogin(login string) {
	o.Login = login
}

// WriteToRequest writes these params to a swagger request
func (o *AcceptDomesticPaymentConsentSystemParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.AcceptConsent != nil {
		if err := r.SetBodyParam(o.AcceptConsent); err != nil {
			return err
		}
	}

	// path param login
	if err := r.SetPathParam("login", o.Login); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
