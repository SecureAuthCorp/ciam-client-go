// Code generated by go-swagger; DO NOT EDIT.

package openbanking_u_k

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// RevokeOpenbankingConsentReader is a Reader for the RevokeOpenbankingConsent structure.
type RevokeOpenbankingConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeOpenbankingConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRevokeOpenbankingConsentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeOpenbankingConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeOpenbankingConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeOpenbankingConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeOpenbankingConsentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeOpenbankingConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeOpenbankingConsentNoContent creates a RevokeOpenbankingConsentNoContent with default headers values
func NewRevokeOpenbankingConsentNoContent() *RevokeOpenbankingConsentNoContent {
	return &RevokeOpenbankingConsentNoContent{}
}

/*
RevokeOpenbankingConsentNoContent describes a response with status code 204, with default header values.

	Consent has been revoked
*/
type RevokeOpenbankingConsentNoContent struct {
}

// IsSuccess returns true when this revoke openbanking consent no content response has a 2xx status code
func (o *RevokeOpenbankingConsentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke openbanking consent no content response has a 3xx status code
func (o *RevokeOpenbankingConsentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke openbanking consent no content response has a 4xx status code
func (o *RevokeOpenbankingConsentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke openbanking consent no content response has a 5xx status code
func (o *RevokeOpenbankingConsentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke openbanking consent no content response a status code equal to that given
func (o *RevokeOpenbankingConsentNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *RevokeOpenbankingConsentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentNoContent ", 204)
}

func (o *RevokeOpenbankingConsentNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentNoContent ", 204)
}

func (o *RevokeOpenbankingConsentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeOpenbankingConsentBadRequest creates a RevokeOpenbankingConsentBadRequest with default headers values
func NewRevokeOpenbankingConsentBadRequest() *RevokeOpenbankingConsentBadRequest {
	return &RevokeOpenbankingConsentBadRequest{}
}

/*
RevokeOpenbankingConsentBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type RevokeOpenbankingConsentBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke openbanking consent bad request response has a 2xx status code
func (o *RevokeOpenbankingConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke openbanking consent bad request response has a 3xx status code
func (o *RevokeOpenbankingConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke openbanking consent bad request response has a 4xx status code
func (o *RevokeOpenbankingConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke openbanking consent bad request response has a 5xx status code
func (o *RevokeOpenbankingConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke openbanking consent bad request response a status code equal to that given
func (o *RevokeOpenbankingConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *RevokeOpenbankingConsentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOpenbankingConsentBadRequest) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOpenbankingConsentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOpenbankingConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOpenbankingConsentUnauthorized creates a RevokeOpenbankingConsentUnauthorized with default headers values
func NewRevokeOpenbankingConsentUnauthorized() *RevokeOpenbankingConsentUnauthorized {
	return &RevokeOpenbankingConsentUnauthorized{}
}

/*
RevokeOpenbankingConsentUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type RevokeOpenbankingConsentUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke openbanking consent unauthorized response has a 2xx status code
func (o *RevokeOpenbankingConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke openbanking consent unauthorized response has a 3xx status code
func (o *RevokeOpenbankingConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke openbanking consent unauthorized response has a 4xx status code
func (o *RevokeOpenbankingConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke openbanking consent unauthorized response has a 5xx status code
func (o *RevokeOpenbankingConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke openbanking consent unauthorized response a status code equal to that given
func (o *RevokeOpenbankingConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *RevokeOpenbankingConsentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOpenbankingConsentUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOpenbankingConsentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOpenbankingConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOpenbankingConsentForbidden creates a RevokeOpenbankingConsentForbidden with default headers values
func NewRevokeOpenbankingConsentForbidden() *RevokeOpenbankingConsentForbidden {
	return &RevokeOpenbankingConsentForbidden{}
}

/*
RevokeOpenbankingConsentForbidden describes a response with status code 403, with default header values.

HttpError
*/
type RevokeOpenbankingConsentForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke openbanking consent forbidden response has a 2xx status code
func (o *RevokeOpenbankingConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke openbanking consent forbidden response has a 3xx status code
func (o *RevokeOpenbankingConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke openbanking consent forbidden response has a 4xx status code
func (o *RevokeOpenbankingConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke openbanking consent forbidden response has a 5xx status code
func (o *RevokeOpenbankingConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke openbanking consent forbidden response a status code equal to that given
func (o *RevokeOpenbankingConsentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *RevokeOpenbankingConsentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOpenbankingConsentForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOpenbankingConsentForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOpenbankingConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOpenbankingConsentNotFound creates a RevokeOpenbankingConsentNotFound with default headers values
func NewRevokeOpenbankingConsentNotFound() *RevokeOpenbankingConsentNotFound {
	return &RevokeOpenbankingConsentNotFound{}
}

/*
RevokeOpenbankingConsentNotFound describes a response with status code 404, with default header values.

HttpError
*/
type RevokeOpenbankingConsentNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke openbanking consent not found response has a 2xx status code
func (o *RevokeOpenbankingConsentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke openbanking consent not found response has a 3xx status code
func (o *RevokeOpenbankingConsentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke openbanking consent not found response has a 4xx status code
func (o *RevokeOpenbankingConsentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke openbanking consent not found response has a 5xx status code
func (o *RevokeOpenbankingConsentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke openbanking consent not found response a status code equal to that given
func (o *RevokeOpenbankingConsentNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *RevokeOpenbankingConsentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOpenbankingConsentNotFound) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOpenbankingConsentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOpenbankingConsentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOpenbankingConsentTooManyRequests creates a RevokeOpenbankingConsentTooManyRequests with default headers values
func NewRevokeOpenbankingConsentTooManyRequests() *RevokeOpenbankingConsentTooManyRequests {
	return &RevokeOpenbankingConsentTooManyRequests{}
}

/*
RevokeOpenbankingConsentTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type RevokeOpenbankingConsentTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke openbanking consent too many requests response has a 2xx status code
func (o *RevokeOpenbankingConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke openbanking consent too many requests response has a 3xx status code
func (o *RevokeOpenbankingConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke openbanking consent too many requests response has a 4xx status code
func (o *RevokeOpenbankingConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke openbanking consent too many requests response has a 5xx status code
func (o *RevokeOpenbankingConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke openbanking consent too many requests response a status code equal to that given
func (o *RevokeOpenbankingConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *RevokeOpenbankingConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOpenbankingConsentTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking/consents/{consentID}][%d] revokeOpenbankingConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOpenbankingConsentTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOpenbankingConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
