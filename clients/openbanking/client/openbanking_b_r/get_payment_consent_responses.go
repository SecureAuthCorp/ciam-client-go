// Code generated by go-swagger; DO NOT EDIT.

package openbanking_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// GetPaymentConsentReader is a Reader for the GetPaymentConsent structure.
type GetPaymentConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPaymentConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPaymentConsentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPaymentConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPaymentConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPaymentConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPaymentConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetPaymentConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetPaymentConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetPaymentConsentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetPaymentConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPaymentConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPaymentConsentOK creates a GetPaymentConsentOK with default headers values
func NewGetPaymentConsentOK() *GetPaymentConsentOK {
	return &GetPaymentConsentOK{}
}

/* GetPaymentConsentOK describes a response with status code 200, with default header values.

Customer payment consent
*/
type GetPaymentConsentOK struct {
	Payload *models.BrazilCustomerPaymentConsentResponse
}

func (o *GetPaymentConsentOK) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentOK  %+v", 200, o.Payload)
}
func (o *GetPaymentConsentOK) GetPayload() *models.BrazilCustomerPaymentConsentResponse {
	return o.Payload
}

func (o *GetPaymentConsentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilCustomerPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentBadRequest creates a GetPaymentConsentBadRequest with default headers values
func NewGetPaymentConsentBadRequest() *GetPaymentConsentBadRequest {
	return &GetPaymentConsentBadRequest{}
}

/* GetPaymentConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type GetPaymentConsentBadRequest struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentBadRequest) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentBadRequest  %+v", 400, o.Payload)
}
func (o *GetPaymentConsentBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentUnauthorized creates a GetPaymentConsentUnauthorized with default headers values
func NewGetPaymentConsentUnauthorized() *GetPaymentConsentUnauthorized {
	return &GetPaymentConsentUnauthorized{}
}

/* GetPaymentConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type GetPaymentConsentUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentUnauthorized  %+v", 401, o.Payload)
}
func (o *GetPaymentConsentUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentForbidden creates a GetPaymentConsentForbidden with default headers values
func NewGetPaymentConsentForbidden() *GetPaymentConsentForbidden {
	return &GetPaymentConsentForbidden{}
}

/* GetPaymentConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type GetPaymentConsentForbidden struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentForbidden) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentForbidden  %+v", 403, o.Payload)
}
func (o *GetPaymentConsentForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentMethodNotAllowed creates a GetPaymentConsentMethodNotAllowed with default headers values
func NewGetPaymentConsentMethodNotAllowed() *GetPaymentConsentMethodNotAllowed {
	return &GetPaymentConsentMethodNotAllowed{}
}

/* GetPaymentConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type GetPaymentConsentMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *GetPaymentConsentMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentNotAcceptable creates a GetPaymentConsentNotAcceptable with default headers values
func NewGetPaymentConsentNotAcceptable() *GetPaymentConsentNotAcceptable {
	return &GetPaymentConsentNotAcceptable{}
}

/* GetPaymentConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type GetPaymentConsentNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentNotAcceptable  %+v", 406, o.Payload)
}
func (o *GetPaymentConsentNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentUnsupportedMediaType creates a GetPaymentConsentUnsupportedMediaType with default headers values
func NewGetPaymentConsentUnsupportedMediaType() *GetPaymentConsentUnsupportedMediaType {
	return &GetPaymentConsentUnsupportedMediaType{}
}

/* GetPaymentConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type GetPaymentConsentUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *GetPaymentConsentUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentUnprocessableEntity creates a GetPaymentConsentUnprocessableEntity with default headers values
func NewGetPaymentConsentUnprocessableEntity() *GetPaymentConsentUnprocessableEntity {
	return &GetPaymentConsentUnprocessableEntity{}
}

/* GetPaymentConsentUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type GetPaymentConsentUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *GetPaymentConsentUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentTooManyRequests creates a GetPaymentConsentTooManyRequests with default headers values
func NewGetPaymentConsentTooManyRequests() *GetPaymentConsentTooManyRequests {
	return &GetPaymentConsentTooManyRequests{}
}

/* GetPaymentConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type GetPaymentConsentTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetPaymentConsentTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentConsentInternalServerError creates a GetPaymentConsentInternalServerError with default headers values
func NewGetPaymentConsentInternalServerError() *GetPaymentConsentInternalServerError {
	return &GetPaymentConsentInternalServerError{}
}

/* GetPaymentConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetPaymentConsentInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

func (o *GetPaymentConsentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /open-banking/payments/v1/consents/{consentID}][%d] getPaymentConsentInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPaymentConsentInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetPaymentConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
