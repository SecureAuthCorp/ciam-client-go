// Code generated by go-swagger; DO NOT EDIT.

package openbanking_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// CreatePaymentConsentV2Reader is a Reader for the CreatePaymentConsentV2 structure.
type CreatePaymentConsentV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePaymentConsentV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePaymentConsentV2Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePaymentConsentV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreatePaymentConsentV2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreatePaymentConsentV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreatePaymentConsentV2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreatePaymentConsentV2NotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreatePaymentConsentV2UnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreatePaymentConsentV2UnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreatePaymentConsentV2TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreatePaymentConsentV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreatePaymentConsentV2Created creates a CreatePaymentConsentV2Created with default headers values
func NewCreatePaymentConsentV2Created() *CreatePaymentConsentV2Created {
	return &CreatePaymentConsentV2Created{}
}

/*
CreatePaymentConsentV2Created describes a response with status code 201, with default header values.

Customer payment consent
*/
type CreatePaymentConsentV2Created struct {
	Payload *models.BrazilCustomerPaymentConsentResponseV2
}

// IsSuccess returns true when this create payment consent v2 created response has a 2xx status code
func (o *CreatePaymentConsentV2Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create payment consent v2 created response has a 3xx status code
func (o *CreatePaymentConsentV2Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 created response has a 4xx status code
func (o *CreatePaymentConsentV2Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this create payment consent v2 created response has a 5xx status code
func (o *CreatePaymentConsentV2Created) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 created response a status code equal to that given
func (o *CreatePaymentConsentV2Created) IsCode(code int) bool {
	return code == 201
}

func (o *CreatePaymentConsentV2Created) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2Created  %+v", 201, o.Payload)
}

func (o *CreatePaymentConsentV2Created) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2Created  %+v", 201, o.Payload)
}

func (o *CreatePaymentConsentV2Created) GetPayload() *models.BrazilCustomerPaymentConsentResponseV2 {
	return o.Payload
}

func (o *CreatePaymentConsentV2Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilCustomerPaymentConsentResponseV2)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2BadRequest creates a CreatePaymentConsentV2BadRequest with default headers values
func NewCreatePaymentConsentV2BadRequest() *CreatePaymentConsentV2BadRequest {
	return &CreatePaymentConsentV2BadRequest{}
}

/*
CreatePaymentConsentV2BadRequest describes a response with status code 400, with default header values.

Error
*/
type CreatePaymentConsentV2BadRequest struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 bad request response has a 2xx status code
func (o *CreatePaymentConsentV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 bad request response has a 3xx status code
func (o *CreatePaymentConsentV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 bad request response has a 4xx status code
func (o *CreatePaymentConsentV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 bad request response has a 5xx status code
func (o *CreatePaymentConsentV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 bad request response a status code equal to that given
func (o *CreatePaymentConsentV2BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreatePaymentConsentV2BadRequest) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2BadRequest  %+v", 400, o.Payload)
}

func (o *CreatePaymentConsentV2BadRequest) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2BadRequest  %+v", 400, o.Payload)
}

func (o *CreatePaymentConsentV2BadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2Unauthorized creates a CreatePaymentConsentV2Unauthorized with default headers values
func NewCreatePaymentConsentV2Unauthorized() *CreatePaymentConsentV2Unauthorized {
	return &CreatePaymentConsentV2Unauthorized{}
}

/*
CreatePaymentConsentV2Unauthorized describes a response with status code 401, with default header values.

Error
*/
type CreatePaymentConsentV2Unauthorized struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 unauthorized response has a 2xx status code
func (o *CreatePaymentConsentV2Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 unauthorized response has a 3xx status code
func (o *CreatePaymentConsentV2Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 unauthorized response has a 4xx status code
func (o *CreatePaymentConsentV2Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 unauthorized response has a 5xx status code
func (o *CreatePaymentConsentV2Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 unauthorized response a status code equal to that given
func (o *CreatePaymentConsentV2Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreatePaymentConsentV2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2Unauthorized  %+v", 401, o.Payload)
}

func (o *CreatePaymentConsentV2Unauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2Unauthorized  %+v", 401, o.Payload)
}

func (o *CreatePaymentConsentV2Unauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2Forbidden creates a CreatePaymentConsentV2Forbidden with default headers values
func NewCreatePaymentConsentV2Forbidden() *CreatePaymentConsentV2Forbidden {
	return &CreatePaymentConsentV2Forbidden{}
}

/*
CreatePaymentConsentV2Forbidden describes a response with status code 403, with default header values.

Error
*/
type CreatePaymentConsentV2Forbidden struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 forbidden response has a 2xx status code
func (o *CreatePaymentConsentV2Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 forbidden response has a 3xx status code
func (o *CreatePaymentConsentV2Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 forbidden response has a 4xx status code
func (o *CreatePaymentConsentV2Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 forbidden response has a 5xx status code
func (o *CreatePaymentConsentV2Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 forbidden response a status code equal to that given
func (o *CreatePaymentConsentV2Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreatePaymentConsentV2Forbidden) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2Forbidden  %+v", 403, o.Payload)
}

func (o *CreatePaymentConsentV2Forbidden) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2Forbidden  %+v", 403, o.Payload)
}

func (o *CreatePaymentConsentV2Forbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2MethodNotAllowed creates a CreatePaymentConsentV2MethodNotAllowed with default headers values
func NewCreatePaymentConsentV2MethodNotAllowed() *CreatePaymentConsentV2MethodNotAllowed {
	return &CreatePaymentConsentV2MethodNotAllowed{}
}

/*
CreatePaymentConsentV2MethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreatePaymentConsentV2MethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 method not allowed response has a 2xx status code
func (o *CreatePaymentConsentV2MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 method not allowed response has a 3xx status code
func (o *CreatePaymentConsentV2MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 method not allowed response has a 4xx status code
func (o *CreatePaymentConsentV2MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 method not allowed response has a 5xx status code
func (o *CreatePaymentConsentV2MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 method not allowed response a status code equal to that given
func (o *CreatePaymentConsentV2MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *CreatePaymentConsentV2MethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2MethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreatePaymentConsentV2MethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2MethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreatePaymentConsentV2MethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2NotAcceptable creates a CreatePaymentConsentV2NotAcceptable with default headers values
func NewCreatePaymentConsentV2NotAcceptable() *CreatePaymentConsentV2NotAcceptable {
	return &CreatePaymentConsentV2NotAcceptable{}
}

/*
CreatePaymentConsentV2NotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreatePaymentConsentV2NotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 not acceptable response has a 2xx status code
func (o *CreatePaymentConsentV2NotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 not acceptable response has a 3xx status code
func (o *CreatePaymentConsentV2NotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 not acceptable response has a 4xx status code
func (o *CreatePaymentConsentV2NotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 not acceptable response has a 5xx status code
func (o *CreatePaymentConsentV2NotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 not acceptable response a status code equal to that given
func (o *CreatePaymentConsentV2NotAcceptable) IsCode(code int) bool {
	return code == 406
}

func (o *CreatePaymentConsentV2NotAcceptable) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2NotAcceptable  %+v", 406, o.Payload)
}

func (o *CreatePaymentConsentV2NotAcceptable) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2NotAcceptable  %+v", 406, o.Payload)
}

func (o *CreatePaymentConsentV2NotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2NotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2UnsupportedMediaType creates a CreatePaymentConsentV2UnsupportedMediaType with default headers values
func NewCreatePaymentConsentV2UnsupportedMediaType() *CreatePaymentConsentV2UnsupportedMediaType {
	return &CreatePaymentConsentV2UnsupportedMediaType{}
}

/*
CreatePaymentConsentV2UnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreatePaymentConsentV2UnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 unsupported media type response has a 2xx status code
func (o *CreatePaymentConsentV2UnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 unsupported media type response has a 3xx status code
func (o *CreatePaymentConsentV2UnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 unsupported media type response has a 4xx status code
func (o *CreatePaymentConsentV2UnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 unsupported media type response has a 5xx status code
func (o *CreatePaymentConsentV2UnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 unsupported media type response a status code equal to that given
func (o *CreatePaymentConsentV2UnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *CreatePaymentConsentV2UnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2UnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreatePaymentConsentV2UnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2UnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreatePaymentConsentV2UnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2UnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2UnprocessableEntity creates a CreatePaymentConsentV2UnprocessableEntity with default headers values
func NewCreatePaymentConsentV2UnprocessableEntity() *CreatePaymentConsentV2UnprocessableEntity {
	return &CreatePaymentConsentV2UnprocessableEntity{}
}

/*
CreatePaymentConsentV2UnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type CreatePaymentConsentV2UnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 unprocessable entity response has a 2xx status code
func (o *CreatePaymentConsentV2UnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 unprocessable entity response has a 3xx status code
func (o *CreatePaymentConsentV2UnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 unprocessable entity response has a 4xx status code
func (o *CreatePaymentConsentV2UnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 unprocessable entity response has a 5xx status code
func (o *CreatePaymentConsentV2UnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 unprocessable entity response a status code equal to that given
func (o *CreatePaymentConsentV2UnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *CreatePaymentConsentV2UnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2UnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreatePaymentConsentV2UnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2UnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreatePaymentConsentV2UnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2UnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2TooManyRequests creates a CreatePaymentConsentV2TooManyRequests with default headers values
func NewCreatePaymentConsentV2TooManyRequests() *CreatePaymentConsentV2TooManyRequests {
	return &CreatePaymentConsentV2TooManyRequests{}
}

/*
CreatePaymentConsentV2TooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreatePaymentConsentV2TooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 too many requests response has a 2xx status code
func (o *CreatePaymentConsentV2TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 too many requests response has a 3xx status code
func (o *CreatePaymentConsentV2TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 too many requests response has a 4xx status code
func (o *CreatePaymentConsentV2TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent v2 too many requests response has a 5xx status code
func (o *CreatePaymentConsentV2TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent v2 too many requests response a status code equal to that given
func (o *CreatePaymentConsentV2TooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *CreatePaymentConsentV2TooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2TooManyRequests  %+v", 429, o.Payload)
}

func (o *CreatePaymentConsentV2TooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2TooManyRequests  %+v", 429, o.Payload)
}

func (o *CreatePaymentConsentV2TooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentV2InternalServerError creates a CreatePaymentConsentV2InternalServerError with default headers values
func NewCreatePaymentConsentV2InternalServerError() *CreatePaymentConsentV2InternalServerError {
	return &CreatePaymentConsentV2InternalServerError{}
}

/*
CreatePaymentConsentV2InternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreatePaymentConsentV2InternalServerError struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent v2 internal server error response has a 2xx status code
func (o *CreatePaymentConsentV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent v2 internal server error response has a 3xx status code
func (o *CreatePaymentConsentV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent v2 internal server error response has a 4xx status code
func (o *CreatePaymentConsentV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create payment consent v2 internal server error response has a 5xx status code
func (o *CreatePaymentConsentV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create payment consent v2 internal server error response a status code equal to that given
func (o *CreatePaymentConsentV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CreatePaymentConsentV2InternalServerError) Error() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2InternalServerError  %+v", 500, o.Payload)
}

func (o *CreatePaymentConsentV2InternalServerError) String() string {
	return fmt.Sprintf("[POST /open-banking/payments/v2/consents][%d] createPaymentConsentV2InternalServerError  %+v", 500, o.Payload)
}

func (o *CreatePaymentConsentV2InternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
