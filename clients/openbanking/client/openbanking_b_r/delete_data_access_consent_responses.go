// Code generated by go-swagger; DO NOT EDIT.

package openbanking_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// DeleteDataAccessConsentReader is a Reader for the DeleteDataAccessConsent structure.
type DeleteDataAccessConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDataAccessConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteDataAccessConsentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDataAccessConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteDataAccessConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDataAccessConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteDataAccessConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewDeleteDataAccessConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewDeleteDataAccessConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteDataAccessConsentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteDataAccessConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDataAccessConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteDataAccessConsentNoContent creates a DeleteDataAccessConsentNoContent with default headers values
func NewDeleteDataAccessConsentNoContent() *DeleteDataAccessConsentNoContent {
	return &DeleteDataAccessConsentNoContent{}
}

/* DeleteDataAccessConsentNoContent describes a response with status code 204, with default header values.

Customer data access consent
*/
type DeleteDataAccessConsentNoContent struct {
	Payload *models.OBBRCustomerDataAccessConsentResponse
}

func (o *DeleteDataAccessConsentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentNoContent  %+v", 204, o.Payload)
}
func (o *DeleteDataAccessConsentNoContent) GetPayload() *models.OBBRCustomerDataAccessConsentResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRCustomerDataAccessConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentBadRequest creates a DeleteDataAccessConsentBadRequest with default headers values
func NewDeleteDataAccessConsentBadRequest() *DeleteDataAccessConsentBadRequest {
	return &DeleteDataAccessConsentBadRequest{}
}

/* DeleteDataAccessConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type DeleteDataAccessConsentBadRequest struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteDataAccessConsentBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentUnauthorized creates a DeleteDataAccessConsentUnauthorized with default headers values
func NewDeleteDataAccessConsentUnauthorized() *DeleteDataAccessConsentUnauthorized {
	return &DeleteDataAccessConsentUnauthorized{}
}

/* DeleteDataAccessConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type DeleteDataAccessConsentUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteDataAccessConsentUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentForbidden creates a DeleteDataAccessConsentForbidden with default headers values
func NewDeleteDataAccessConsentForbidden() *DeleteDataAccessConsentForbidden {
	return &DeleteDataAccessConsentForbidden{}
}

/* DeleteDataAccessConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type DeleteDataAccessConsentForbidden struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentForbidden  %+v", 403, o.Payload)
}
func (o *DeleteDataAccessConsentForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentMethodNotAllowed creates a DeleteDataAccessConsentMethodNotAllowed with default headers values
func NewDeleteDataAccessConsentMethodNotAllowed() *DeleteDataAccessConsentMethodNotAllowed {
	return &DeleteDataAccessConsentMethodNotAllowed{}
}

/* DeleteDataAccessConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type DeleteDataAccessConsentMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *DeleteDataAccessConsentMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentNotAcceptable creates a DeleteDataAccessConsentNotAcceptable with default headers values
func NewDeleteDataAccessConsentNotAcceptable() *DeleteDataAccessConsentNotAcceptable {
	return &DeleteDataAccessConsentNotAcceptable{}
}

/* DeleteDataAccessConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type DeleteDataAccessConsentNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentNotAcceptable  %+v", 406, o.Payload)
}
func (o *DeleteDataAccessConsentNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentUnsupportedMediaType creates a DeleteDataAccessConsentUnsupportedMediaType with default headers values
func NewDeleteDataAccessConsentUnsupportedMediaType() *DeleteDataAccessConsentUnsupportedMediaType {
	return &DeleteDataAccessConsentUnsupportedMediaType{}
}

/* DeleteDataAccessConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type DeleteDataAccessConsentUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentUnsupportedMediaType  %+v", 415, o.Payload)
}
func (o *DeleteDataAccessConsentUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentUnprocessableEntity creates a DeleteDataAccessConsentUnprocessableEntity with default headers values
func NewDeleteDataAccessConsentUnprocessableEntity() *DeleteDataAccessConsentUnprocessableEntity {
	return &DeleteDataAccessConsentUnprocessableEntity{}
}

/* DeleteDataAccessConsentUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type DeleteDataAccessConsentUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *DeleteDataAccessConsentUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentTooManyRequests creates a DeleteDataAccessConsentTooManyRequests with default headers values
func NewDeleteDataAccessConsentTooManyRequests() *DeleteDataAccessConsentTooManyRequests {
	return &DeleteDataAccessConsentTooManyRequests{}
}

/* DeleteDataAccessConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type DeleteDataAccessConsentTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentTooManyRequests  %+v", 429, o.Payload)
}
func (o *DeleteDataAccessConsentTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDataAccessConsentInternalServerError creates a DeleteDataAccessConsentInternalServerError with default headers values
func NewDeleteDataAccessConsentInternalServerError() *DeleteDataAccessConsentInternalServerError {
	return &DeleteDataAccessConsentInternalServerError{}
}

/* DeleteDataAccessConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type DeleteDataAccessConsentInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

func (o *DeleteDataAccessConsentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /open-banking/consents/v1/consents/{consentID}][%d] deleteDataAccessConsentInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteDataAccessConsentInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *DeleteDataAccessConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
