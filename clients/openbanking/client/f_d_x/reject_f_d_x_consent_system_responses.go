// Code generated by go-swagger; DO NOT EDIT.

package f_d_x

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// RejectFDXConsentSystemReader is a Reader for the RejectFDXConsentSystem structure.
type RejectFDXConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RejectFDXConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRejectFDXConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRejectFDXConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRejectFDXConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRejectFDXConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRejectFDXConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRejectFDXConsentSystemOK creates a RejectFDXConsentSystemOK with default headers values
func NewRejectFDXConsentSystemOK() *RejectFDXConsentSystemOK {
	return &RejectFDXConsentSystemOK{}
}

/* RejectFDXConsentSystemOK describes a response with status code 200, with default header values.

Consent rejected
*/
type RejectFDXConsentSystemOK struct {
	Payload *models.ConsentRejected
}

func (o *RejectFDXConsentSystemOK) Error() string {
	return fmt.Sprintf("[POST /fdx/fdx/{login}/reject][%d] rejectFDXConsentSystemOK  %+v", 200, o.Payload)
}
func (o *RejectFDXConsentSystemOK) GetPayload() *models.ConsentRejected {
	return o.Payload
}

func (o *RejectFDXConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentRejected)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectFDXConsentSystemUnauthorized creates a RejectFDXConsentSystemUnauthorized with default headers values
func NewRejectFDXConsentSystemUnauthorized() *RejectFDXConsentSystemUnauthorized {
	return &RejectFDXConsentSystemUnauthorized{}
}

/* RejectFDXConsentSystemUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type RejectFDXConsentSystemUnauthorized struct {
	Payload *models.Error
}

func (o *RejectFDXConsentSystemUnauthorized) Error() string {
	return fmt.Sprintf("[POST /fdx/fdx/{login}/reject][%d] rejectFDXConsentSystemUnauthorized  %+v", 401, o.Payload)
}
func (o *RejectFDXConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectFDXConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectFDXConsentSystemForbidden creates a RejectFDXConsentSystemForbidden with default headers values
func NewRejectFDXConsentSystemForbidden() *RejectFDXConsentSystemForbidden {
	return &RejectFDXConsentSystemForbidden{}
}

/* RejectFDXConsentSystemForbidden describes a response with status code 403, with default header values.

HttpError
*/
type RejectFDXConsentSystemForbidden struct {
	Payload *models.Error
}

func (o *RejectFDXConsentSystemForbidden) Error() string {
	return fmt.Sprintf("[POST /fdx/fdx/{login}/reject][%d] rejectFDXConsentSystemForbidden  %+v", 403, o.Payload)
}
func (o *RejectFDXConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectFDXConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectFDXConsentSystemNotFound creates a RejectFDXConsentSystemNotFound with default headers values
func NewRejectFDXConsentSystemNotFound() *RejectFDXConsentSystemNotFound {
	return &RejectFDXConsentSystemNotFound{}
}

/* RejectFDXConsentSystemNotFound describes a response with status code 404, with default header values.

HttpError
*/
type RejectFDXConsentSystemNotFound struct {
	Payload *models.Error
}

func (o *RejectFDXConsentSystemNotFound) Error() string {
	return fmt.Sprintf("[POST /fdx/fdx/{login}/reject][%d] rejectFDXConsentSystemNotFound  %+v", 404, o.Payload)
}
func (o *RejectFDXConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectFDXConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRejectFDXConsentSystemTooManyRequests creates a RejectFDXConsentSystemTooManyRequests with default headers values
func NewRejectFDXConsentSystemTooManyRequests() *RejectFDXConsentSystemTooManyRequests {
	return &RejectFDXConsentSystemTooManyRequests{}
}

/* RejectFDXConsentSystemTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type RejectFDXConsentSystemTooManyRequests struct {
	Payload *models.Error
}

func (o *RejectFDXConsentSystemTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /fdx/fdx/{login}/reject][%d] rejectFDXConsentSystemTooManyRequests  %+v", 429, o.Payload)
}
func (o *RejectFDXConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RejectFDXConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
