// Code generated by go-swagger; DO NOT EDIT.

package o_p_i_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/openbanking/models"
)

// GetInsuranceDataAccessConsentReader is a Reader for the GetInsuranceDataAccessConsent structure.
type GetInsuranceDataAccessConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInsuranceDataAccessConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInsuranceDataAccessConsentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetInsuranceDataAccessConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetInsuranceDataAccessConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInsuranceDataAccessConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetInsuranceDataAccessConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetInsuranceDataAccessConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetInsuranceDataAccessConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetInsuranceDataAccessConsentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetInsuranceDataAccessConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInsuranceDataAccessConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetInsuranceDataAccessConsentOK creates a GetInsuranceDataAccessConsentOK with default headers values
func NewGetInsuranceDataAccessConsentOK() *GetInsuranceDataAccessConsentOK {
	return &GetInsuranceDataAccessConsentOK{}
}

/*
GetInsuranceDataAccessConsentOK describes a response with status code 200, with default header values.

Customer data access consent
*/
type GetInsuranceDataAccessConsentOK struct {
	Payload *models.BrazilInsuranceCustomerDataAccessConsentResponse
}

// IsSuccess returns true when this get insurance data access consent o k response has a 2xx status code
func (o *GetInsuranceDataAccessConsentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get insurance data access consent o k response has a 3xx status code
func (o *GetInsuranceDataAccessConsentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent o k response has a 4xx status code
func (o *GetInsuranceDataAccessConsentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get insurance data access consent o k response has a 5xx status code
func (o *GetInsuranceDataAccessConsentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent o k response a status code equal to that given
func (o *GetInsuranceDataAccessConsentOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetInsuranceDataAccessConsentOK) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentOK  %+v", 200, o.Payload)
}

func (o *GetInsuranceDataAccessConsentOK) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentOK  %+v", 200, o.Payload)
}

func (o *GetInsuranceDataAccessConsentOK) GetPayload() *models.BrazilInsuranceCustomerDataAccessConsentResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilInsuranceCustomerDataAccessConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentBadRequest creates a GetInsuranceDataAccessConsentBadRequest with default headers values
func NewGetInsuranceDataAccessConsentBadRequest() *GetInsuranceDataAccessConsentBadRequest {
	return &GetInsuranceDataAccessConsentBadRequest{}
}

/*
GetInsuranceDataAccessConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type GetInsuranceDataAccessConsentBadRequest struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent bad request response has a 2xx status code
func (o *GetInsuranceDataAccessConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent bad request response has a 3xx status code
func (o *GetInsuranceDataAccessConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent bad request response has a 4xx status code
func (o *GetInsuranceDataAccessConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent bad request response has a 5xx status code
func (o *GetInsuranceDataAccessConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent bad request response a status code equal to that given
func (o *GetInsuranceDataAccessConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetInsuranceDataAccessConsentBadRequest) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentBadRequest  %+v", 400, o.Payload)
}

func (o *GetInsuranceDataAccessConsentBadRequest) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentBadRequest  %+v", 400, o.Payload)
}

func (o *GetInsuranceDataAccessConsentBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentUnauthorized creates a GetInsuranceDataAccessConsentUnauthorized with default headers values
func NewGetInsuranceDataAccessConsentUnauthorized() *GetInsuranceDataAccessConsentUnauthorized {
	return &GetInsuranceDataAccessConsentUnauthorized{}
}

/*
GetInsuranceDataAccessConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type GetInsuranceDataAccessConsentUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent unauthorized response has a 2xx status code
func (o *GetInsuranceDataAccessConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent unauthorized response has a 3xx status code
func (o *GetInsuranceDataAccessConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent unauthorized response has a 4xx status code
func (o *GetInsuranceDataAccessConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent unauthorized response has a 5xx status code
func (o *GetInsuranceDataAccessConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent unauthorized response a status code equal to that given
func (o *GetInsuranceDataAccessConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetInsuranceDataAccessConsentUnauthorized) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInsuranceDataAccessConsentUnauthorized) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *GetInsuranceDataAccessConsentUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentForbidden creates a GetInsuranceDataAccessConsentForbidden with default headers values
func NewGetInsuranceDataAccessConsentForbidden() *GetInsuranceDataAccessConsentForbidden {
	return &GetInsuranceDataAccessConsentForbidden{}
}

/*
GetInsuranceDataAccessConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type GetInsuranceDataAccessConsentForbidden struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent forbidden response has a 2xx status code
func (o *GetInsuranceDataAccessConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent forbidden response has a 3xx status code
func (o *GetInsuranceDataAccessConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent forbidden response has a 4xx status code
func (o *GetInsuranceDataAccessConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent forbidden response has a 5xx status code
func (o *GetInsuranceDataAccessConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent forbidden response a status code equal to that given
func (o *GetInsuranceDataAccessConsentForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetInsuranceDataAccessConsentForbidden) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentForbidden  %+v", 403, o.Payload)
}

func (o *GetInsuranceDataAccessConsentForbidden) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentForbidden  %+v", 403, o.Payload)
}

func (o *GetInsuranceDataAccessConsentForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentMethodNotAllowed creates a GetInsuranceDataAccessConsentMethodNotAllowed with default headers values
func NewGetInsuranceDataAccessConsentMethodNotAllowed() *GetInsuranceDataAccessConsentMethodNotAllowed {
	return &GetInsuranceDataAccessConsentMethodNotAllowed{}
}

/*
GetInsuranceDataAccessConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type GetInsuranceDataAccessConsentMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent method not allowed response has a 2xx status code
func (o *GetInsuranceDataAccessConsentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent method not allowed response has a 3xx status code
func (o *GetInsuranceDataAccessConsentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent method not allowed response has a 4xx status code
func (o *GetInsuranceDataAccessConsentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent method not allowed response has a 5xx status code
func (o *GetInsuranceDataAccessConsentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent method not allowed response a status code equal to that given
func (o *GetInsuranceDataAccessConsentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

func (o *GetInsuranceDataAccessConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetInsuranceDataAccessConsentMethodNotAllowed) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *GetInsuranceDataAccessConsentMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentNotAcceptable creates a GetInsuranceDataAccessConsentNotAcceptable with default headers values
func NewGetInsuranceDataAccessConsentNotAcceptable() *GetInsuranceDataAccessConsentNotAcceptable {
	return &GetInsuranceDataAccessConsentNotAcceptable{}
}

/*
GetInsuranceDataAccessConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type GetInsuranceDataAccessConsentNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent not acceptable response has a 2xx status code
func (o *GetInsuranceDataAccessConsentNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent not acceptable response has a 3xx status code
func (o *GetInsuranceDataAccessConsentNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent not acceptable response has a 4xx status code
func (o *GetInsuranceDataAccessConsentNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent not acceptable response has a 5xx status code
func (o *GetInsuranceDataAccessConsentNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent not acceptable response a status code equal to that given
func (o *GetInsuranceDataAccessConsentNotAcceptable) IsCode(code int) bool {
	return code == 406
}

func (o *GetInsuranceDataAccessConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetInsuranceDataAccessConsentNotAcceptable) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *GetInsuranceDataAccessConsentNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentUnsupportedMediaType creates a GetInsuranceDataAccessConsentUnsupportedMediaType with default headers values
func NewGetInsuranceDataAccessConsentUnsupportedMediaType() *GetInsuranceDataAccessConsentUnsupportedMediaType {
	return &GetInsuranceDataAccessConsentUnsupportedMediaType{}
}

/*
GetInsuranceDataAccessConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type GetInsuranceDataAccessConsentUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent unsupported media type response has a 2xx status code
func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent unsupported media type response has a 3xx status code
func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent unsupported media type response has a 4xx status code
func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent unsupported media type response has a 5xx status code
func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent unsupported media type response a status code equal to that given
func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentUnprocessableEntity creates a GetInsuranceDataAccessConsentUnprocessableEntity with default headers values
func NewGetInsuranceDataAccessConsentUnprocessableEntity() *GetInsuranceDataAccessConsentUnprocessableEntity {
	return &GetInsuranceDataAccessConsentUnprocessableEntity{}
}

/*
GetInsuranceDataAccessConsentUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type GetInsuranceDataAccessConsentUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent unprocessable entity response has a 2xx status code
func (o *GetInsuranceDataAccessConsentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent unprocessable entity response has a 3xx status code
func (o *GetInsuranceDataAccessConsentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent unprocessable entity response has a 4xx status code
func (o *GetInsuranceDataAccessConsentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent unprocessable entity response has a 5xx status code
func (o *GetInsuranceDataAccessConsentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent unprocessable entity response a status code equal to that given
func (o *GetInsuranceDataAccessConsentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *GetInsuranceDataAccessConsentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetInsuranceDataAccessConsentUnprocessableEntity) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *GetInsuranceDataAccessConsentUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentTooManyRequests creates a GetInsuranceDataAccessConsentTooManyRequests with default headers values
func NewGetInsuranceDataAccessConsentTooManyRequests() *GetInsuranceDataAccessConsentTooManyRequests {
	return &GetInsuranceDataAccessConsentTooManyRequests{}
}

/*
GetInsuranceDataAccessConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type GetInsuranceDataAccessConsentTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent too many requests response has a 2xx status code
func (o *GetInsuranceDataAccessConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent too many requests response has a 3xx status code
func (o *GetInsuranceDataAccessConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent too many requests response has a 4xx status code
func (o *GetInsuranceDataAccessConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get insurance data access consent too many requests response has a 5xx status code
func (o *GetInsuranceDataAccessConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get insurance data access consent too many requests response a status code equal to that given
func (o *GetInsuranceDataAccessConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetInsuranceDataAccessConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInsuranceDataAccessConsentTooManyRequests) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetInsuranceDataAccessConsentTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInsuranceDataAccessConsentInternalServerError creates a GetInsuranceDataAccessConsentInternalServerError with default headers values
func NewGetInsuranceDataAccessConsentInternalServerError() *GetInsuranceDataAccessConsentInternalServerError {
	return &GetInsuranceDataAccessConsentInternalServerError{}
}

/*
GetInsuranceDataAccessConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetInsuranceDataAccessConsentInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get insurance data access consent internal server error response has a 2xx status code
func (o *GetInsuranceDataAccessConsentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get insurance data access consent internal server error response has a 3xx status code
func (o *GetInsuranceDataAccessConsentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get insurance data access consent internal server error response has a 4xx status code
func (o *GetInsuranceDataAccessConsentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get insurance data access consent internal server error response has a 5xx status code
func (o *GetInsuranceDataAccessConsentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get insurance data access consent internal server error response a status code equal to that given
func (o *GetInsuranceDataAccessConsentInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetInsuranceDataAccessConsentInternalServerError) Error() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInsuranceDataAccessConsentInternalServerError) String() string {
	return fmt.Sprintf("[GET /open-insurance/consents/v1/{consentID}][%d] getInsuranceDataAccessConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInsuranceDataAccessConsentInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetInsuranceDataAccessConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
