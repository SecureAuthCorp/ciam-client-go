// Code generated by go-swagger; DO NOT EDIT.

package licenses

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/licensingroot/models"
)

// SystemSetTenantLicenseReader is a Reader for the SystemSetTenantLicense structure.
type SystemSetTenantLicenseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemSetTenantLicenseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSystemSetTenantLicenseNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemSetTenantLicenseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemSetTenantLicenseUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemSetTenantLicenseForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemSetTenantLicenseNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSystemSetTenantLicenseUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemSetTenantLicenseTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /system/tenants/{tenantID}/license] systemSetTenantLicense", response, response.Code())
	}
}

// NewSystemSetTenantLicenseNoContent creates a SystemSetTenantLicenseNoContent with default headers values
func NewSystemSetTenantLicenseNoContent() *SystemSetTenantLicenseNoContent {
	return &SystemSetTenantLicenseNoContent{}
}

/*
SystemSetTenantLicenseNoContent describes a response with status code 204, with default header values.

	license set
*/
type SystemSetTenantLicenseNoContent struct {
}

// IsSuccess returns true when this system set tenant license no content response has a 2xx status code
func (o *SystemSetTenantLicenseNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system set tenant license no content response has a 3xx status code
func (o *SystemSetTenantLicenseNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license no content response has a 4xx status code
func (o *SystemSetTenantLicenseNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this system set tenant license no content response has a 5xx status code
func (o *SystemSetTenantLicenseNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license no content response a status code equal to that given
func (o *SystemSetTenantLicenseNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the system set tenant license no content response
func (o *SystemSetTenantLicenseNoContent) Code() int {
	return 204
}

func (o *SystemSetTenantLicenseNoContent) Error() string {
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseNoContent", 204)
}

func (o *SystemSetTenantLicenseNoContent) String() string {
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseNoContent", 204)
}

func (o *SystemSetTenantLicenseNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemSetTenantLicenseBadRequest creates a SystemSetTenantLicenseBadRequest with default headers values
func NewSystemSetTenantLicenseBadRequest() *SystemSetTenantLicenseBadRequest {
	return &SystemSetTenantLicenseBadRequest{}
}

/*
SystemSetTenantLicenseBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SystemSetTenantLicenseBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this system set tenant license bad request response has a 2xx status code
func (o *SystemSetTenantLicenseBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system set tenant license bad request response has a 3xx status code
func (o *SystemSetTenantLicenseBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license bad request response has a 4xx status code
func (o *SystemSetTenantLicenseBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this system set tenant license bad request response has a 5xx status code
func (o *SystemSetTenantLicenseBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license bad request response a status code equal to that given
func (o *SystemSetTenantLicenseBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the system set tenant license bad request response
func (o *SystemSetTenantLicenseBadRequest) Code() int {
	return 400
}

func (o *SystemSetTenantLicenseBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseBadRequest %s", 400, payload)
}

func (o *SystemSetTenantLicenseBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseBadRequest %s", 400, payload)
}

func (o *SystemSetTenantLicenseBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemSetTenantLicenseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemSetTenantLicenseUnauthorized creates a SystemSetTenantLicenseUnauthorized with default headers values
func NewSystemSetTenantLicenseUnauthorized() *SystemSetTenantLicenseUnauthorized {
	return &SystemSetTenantLicenseUnauthorized{}
}

/*
SystemSetTenantLicenseUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemSetTenantLicenseUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system set tenant license unauthorized response has a 2xx status code
func (o *SystemSetTenantLicenseUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system set tenant license unauthorized response has a 3xx status code
func (o *SystemSetTenantLicenseUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license unauthorized response has a 4xx status code
func (o *SystemSetTenantLicenseUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system set tenant license unauthorized response has a 5xx status code
func (o *SystemSetTenantLicenseUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license unauthorized response a status code equal to that given
func (o *SystemSetTenantLicenseUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the system set tenant license unauthorized response
func (o *SystemSetTenantLicenseUnauthorized) Code() int {
	return 401
}

func (o *SystemSetTenantLicenseUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseUnauthorized %s", 401, payload)
}

func (o *SystemSetTenantLicenseUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseUnauthorized %s", 401, payload)
}

func (o *SystemSetTenantLicenseUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemSetTenantLicenseUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemSetTenantLicenseForbidden creates a SystemSetTenantLicenseForbidden with default headers values
func NewSystemSetTenantLicenseForbidden() *SystemSetTenantLicenseForbidden {
	return &SystemSetTenantLicenseForbidden{}
}

/*
SystemSetTenantLicenseForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemSetTenantLicenseForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system set tenant license forbidden response has a 2xx status code
func (o *SystemSetTenantLicenseForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system set tenant license forbidden response has a 3xx status code
func (o *SystemSetTenantLicenseForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license forbidden response has a 4xx status code
func (o *SystemSetTenantLicenseForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system set tenant license forbidden response has a 5xx status code
func (o *SystemSetTenantLicenseForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license forbidden response a status code equal to that given
func (o *SystemSetTenantLicenseForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the system set tenant license forbidden response
func (o *SystemSetTenantLicenseForbidden) Code() int {
	return 403
}

func (o *SystemSetTenantLicenseForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseForbidden %s", 403, payload)
}

func (o *SystemSetTenantLicenseForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseForbidden %s", 403, payload)
}

func (o *SystemSetTenantLicenseForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemSetTenantLicenseForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemSetTenantLicenseNotFound creates a SystemSetTenantLicenseNotFound with default headers values
func NewSystemSetTenantLicenseNotFound() *SystemSetTenantLicenseNotFound {
	return &SystemSetTenantLicenseNotFound{}
}

/*
SystemSetTenantLicenseNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemSetTenantLicenseNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system set tenant license not found response has a 2xx status code
func (o *SystemSetTenantLicenseNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system set tenant license not found response has a 3xx status code
func (o *SystemSetTenantLicenseNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license not found response has a 4xx status code
func (o *SystemSetTenantLicenseNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system set tenant license not found response has a 5xx status code
func (o *SystemSetTenantLicenseNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license not found response a status code equal to that given
func (o *SystemSetTenantLicenseNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the system set tenant license not found response
func (o *SystemSetTenantLicenseNotFound) Code() int {
	return 404
}

func (o *SystemSetTenantLicenseNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseNotFound %s", 404, payload)
}

func (o *SystemSetTenantLicenseNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseNotFound %s", 404, payload)
}

func (o *SystemSetTenantLicenseNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemSetTenantLicenseNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemSetTenantLicenseUnprocessableEntity creates a SystemSetTenantLicenseUnprocessableEntity with default headers values
func NewSystemSetTenantLicenseUnprocessableEntity() *SystemSetTenantLicenseUnprocessableEntity {
	return &SystemSetTenantLicenseUnprocessableEntity{}
}

/*
SystemSetTenantLicenseUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SystemSetTenantLicenseUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this system set tenant license unprocessable entity response has a 2xx status code
func (o *SystemSetTenantLicenseUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system set tenant license unprocessable entity response has a 3xx status code
func (o *SystemSetTenantLicenseUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license unprocessable entity response has a 4xx status code
func (o *SystemSetTenantLicenseUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this system set tenant license unprocessable entity response has a 5xx status code
func (o *SystemSetTenantLicenseUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license unprocessable entity response a status code equal to that given
func (o *SystemSetTenantLicenseUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the system set tenant license unprocessable entity response
func (o *SystemSetTenantLicenseUnprocessableEntity) Code() int {
	return 422
}

func (o *SystemSetTenantLicenseUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseUnprocessableEntity %s", 422, payload)
}

func (o *SystemSetTenantLicenseUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseUnprocessableEntity %s", 422, payload)
}

func (o *SystemSetTenantLicenseUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemSetTenantLicenseUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemSetTenantLicenseTooManyRequests creates a SystemSetTenantLicenseTooManyRequests with default headers values
func NewSystemSetTenantLicenseTooManyRequests() *SystemSetTenantLicenseTooManyRequests {
	return &SystemSetTenantLicenseTooManyRequests{}
}

/*
SystemSetTenantLicenseTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemSetTenantLicenseTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system set tenant license too many requests response has a 2xx status code
func (o *SystemSetTenantLicenseTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system set tenant license too many requests response has a 3xx status code
func (o *SystemSetTenantLicenseTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system set tenant license too many requests response has a 4xx status code
func (o *SystemSetTenantLicenseTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system set tenant license too many requests response has a 5xx status code
func (o *SystemSetTenantLicenseTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system set tenant license too many requests response a status code equal to that given
func (o *SystemSetTenantLicenseTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the system set tenant license too many requests response
func (o *SystemSetTenantLicenseTooManyRequests) Code() int {
	return 429
}

func (o *SystemSetTenantLicenseTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseTooManyRequests %s", 429, payload)
}

func (o *SystemSetTenantLicenseTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /system/tenants/{tenantID}/license][%d] systemSetTenantLicenseTooManyRequests %s", 429, payload)
}

func (o *SystemSetTenantLicenseTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemSetTenantLicenseTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
