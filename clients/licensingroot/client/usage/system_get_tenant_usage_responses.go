// Code generated by go-swagger; DO NOT EDIT.

package usage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/licensingroot/models"
)

// SystemGetTenantUsageReader is a Reader for the SystemGetTenantUsage structure.
type SystemGetTenantUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemGetTenantUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemGetTenantUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemGetTenantUsageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSystemGetTenantUsageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSystemGetTenantUsageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSystemGetTenantUsageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /system/tenants/{tenantID}/usage] systemGetTenantUsage", response, response.Code())
	}
}

// NewSystemGetTenantUsageOK creates a SystemGetTenantUsageOK with default headers values
func NewSystemGetTenantUsageOK() *SystemGetTenantUsageOK {
	return &SystemGetTenantUsageOK{}
}

/*
SystemGetTenantUsageOK describes a response with status code 200, with default header values.

Usage
*/
type SystemGetTenantUsageOK struct {
	Payload *models.Usage
}

// IsSuccess returns true when this system get tenant usage o k response has a 2xx status code
func (o *SystemGetTenantUsageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this system get tenant usage o k response has a 3xx status code
func (o *SystemGetTenantUsageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get tenant usage o k response has a 4xx status code
func (o *SystemGetTenantUsageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this system get tenant usage o k response has a 5xx status code
func (o *SystemGetTenantUsageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this system get tenant usage o k response a status code equal to that given
func (o *SystemGetTenantUsageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the system get tenant usage o k response
func (o *SystemGetTenantUsageOK) Code() int {
	return 200
}

func (o *SystemGetTenantUsageOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageOK %s", 200, payload)
}

func (o *SystemGetTenantUsageOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageOK %s", 200, payload)
}

func (o *SystemGetTenantUsageOK) GetPayload() *models.Usage {
	return o.Payload
}

func (o *SystemGetTenantUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Usage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetTenantUsageUnauthorized creates a SystemGetTenantUsageUnauthorized with default headers values
func NewSystemGetTenantUsageUnauthorized() *SystemGetTenantUsageUnauthorized {
	return &SystemGetTenantUsageUnauthorized{}
}

/*
SystemGetTenantUsageUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SystemGetTenantUsageUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get tenant usage unauthorized response has a 2xx status code
func (o *SystemGetTenantUsageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get tenant usage unauthorized response has a 3xx status code
func (o *SystemGetTenantUsageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get tenant usage unauthorized response has a 4xx status code
func (o *SystemGetTenantUsageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get tenant usage unauthorized response has a 5xx status code
func (o *SystemGetTenantUsageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this system get tenant usage unauthorized response a status code equal to that given
func (o *SystemGetTenantUsageUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the system get tenant usage unauthorized response
func (o *SystemGetTenantUsageUnauthorized) Code() int {
	return 401
}

func (o *SystemGetTenantUsageUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageUnauthorized %s", 401, payload)
}

func (o *SystemGetTenantUsageUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageUnauthorized %s", 401, payload)
}

func (o *SystemGetTenantUsageUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetTenantUsageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetTenantUsageForbidden creates a SystemGetTenantUsageForbidden with default headers values
func NewSystemGetTenantUsageForbidden() *SystemGetTenantUsageForbidden {
	return &SystemGetTenantUsageForbidden{}
}

/*
SystemGetTenantUsageForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SystemGetTenantUsageForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get tenant usage forbidden response has a 2xx status code
func (o *SystemGetTenantUsageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get tenant usage forbidden response has a 3xx status code
func (o *SystemGetTenantUsageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get tenant usage forbidden response has a 4xx status code
func (o *SystemGetTenantUsageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get tenant usage forbidden response has a 5xx status code
func (o *SystemGetTenantUsageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this system get tenant usage forbidden response a status code equal to that given
func (o *SystemGetTenantUsageForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the system get tenant usage forbidden response
func (o *SystemGetTenantUsageForbidden) Code() int {
	return 403
}

func (o *SystemGetTenantUsageForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageForbidden %s", 403, payload)
}

func (o *SystemGetTenantUsageForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageForbidden %s", 403, payload)
}

func (o *SystemGetTenantUsageForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetTenantUsageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetTenantUsageNotFound creates a SystemGetTenantUsageNotFound with default headers values
func NewSystemGetTenantUsageNotFound() *SystemGetTenantUsageNotFound {
	return &SystemGetTenantUsageNotFound{}
}

/*
SystemGetTenantUsageNotFound describes a response with status code 404, with default header values.

Not found
*/
type SystemGetTenantUsageNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get tenant usage not found response has a 2xx status code
func (o *SystemGetTenantUsageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get tenant usage not found response has a 3xx status code
func (o *SystemGetTenantUsageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get tenant usage not found response has a 4xx status code
func (o *SystemGetTenantUsageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get tenant usage not found response has a 5xx status code
func (o *SystemGetTenantUsageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this system get tenant usage not found response a status code equal to that given
func (o *SystemGetTenantUsageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the system get tenant usage not found response
func (o *SystemGetTenantUsageNotFound) Code() int {
	return 404
}

func (o *SystemGetTenantUsageNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageNotFound %s", 404, payload)
}

func (o *SystemGetTenantUsageNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageNotFound %s", 404, payload)
}

func (o *SystemGetTenantUsageNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetTenantUsageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemGetTenantUsageTooManyRequests creates a SystemGetTenantUsageTooManyRequests with default headers values
func NewSystemGetTenantUsageTooManyRequests() *SystemGetTenantUsageTooManyRequests {
	return &SystemGetTenantUsageTooManyRequests{}
}

/*
SystemGetTenantUsageTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SystemGetTenantUsageTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this system get tenant usage too many requests response has a 2xx status code
func (o *SystemGetTenantUsageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this system get tenant usage too many requests response has a 3xx status code
func (o *SystemGetTenantUsageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this system get tenant usage too many requests response has a 4xx status code
func (o *SystemGetTenantUsageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this system get tenant usage too many requests response has a 5xx status code
func (o *SystemGetTenantUsageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this system get tenant usage too many requests response a status code equal to that given
func (o *SystemGetTenantUsageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the system get tenant usage too many requests response
func (o *SystemGetTenantUsageTooManyRequests) Code() int {
	return 429
}

func (o *SystemGetTenantUsageTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageTooManyRequests %s", 429, payload)
}

func (o *SystemGetTenantUsageTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /system/tenants/{tenantID}/usage][%d] systemGetTenantUsageTooManyRequests %s", 429, payload)
}

func (o *SystemGetTenantUsageTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SystemGetTenantUsageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
