// Code generated by go-swagger; DO NOT EDIT.

package d_c_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/fdx/models"
)

// FDXDynamicClientRegistrationGetReader is a Reader for the FDXDynamicClientRegistrationGet structure.
type FDXDynamicClientRegistrationGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FDXDynamicClientRegistrationGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFDXDynamicClientRegistrationGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFDXDynamicClientRegistrationGetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFDXDynamicClientRegistrationGetUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFDXDynamicClientRegistrationGetForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFDXDynamicClientRegistrationGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /fdx/dcr/register/{cid}] FDXDynamicClientRegistrationGet", response, response.Code())
	}
}

// NewFDXDynamicClientRegistrationGetOK creates a FDXDynamicClientRegistrationGetOK with default headers values
func NewFDXDynamicClientRegistrationGetOK() *FDXDynamicClientRegistrationGetOK {
	return &FDXDynamicClientRegistrationGetOK{}
}

/*
FDXDynamicClientRegistrationGetOK describes a response with status code 200, with default header values.

Get client response
*/
type FDXDynamicClientRegistrationGetOK struct {
	Payload *models.FDXDynamicClientRegistrationResponse
}

// IsSuccess returns true when this f d x dynamic client registration get o k response has a 2xx status code
func (o *FDXDynamicClientRegistrationGetOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this f d x dynamic client registration get o k response has a 3xx status code
func (o *FDXDynamicClientRegistrationGetOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration get o k response has a 4xx status code
func (o *FDXDynamicClientRegistrationGetOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this f d x dynamic client registration get o k response has a 5xx status code
func (o *FDXDynamicClientRegistrationGetOK) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration get o k response a status code equal to that given
func (o *FDXDynamicClientRegistrationGetOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the f d x dynamic client registration get o k response
func (o *FDXDynamicClientRegistrationGetOK) Code() int {
	return 200
}

func (o *FDXDynamicClientRegistrationGetOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetOK %s", 200, payload)
}

func (o *FDXDynamicClientRegistrationGetOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetOK %s", 200, payload)
}

func (o *FDXDynamicClientRegistrationGetOK) GetPayload() *models.FDXDynamicClientRegistrationResponse {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FDXDynamicClientRegistrationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationGetBadRequest creates a FDXDynamicClientRegistrationGetBadRequest with default headers values
func NewFDXDynamicClientRegistrationGetBadRequest() *FDXDynamicClientRegistrationGetBadRequest {
	return &FDXDynamicClientRegistrationGetBadRequest{}
}

/*
FDXDynamicClientRegistrationGetBadRequest describes a response with status code 400, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationGetBadRequest struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration get bad request response has a 2xx status code
func (o *FDXDynamicClientRegistrationGetBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration get bad request response has a 3xx status code
func (o *FDXDynamicClientRegistrationGetBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration get bad request response has a 4xx status code
func (o *FDXDynamicClientRegistrationGetBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration get bad request response has a 5xx status code
func (o *FDXDynamicClientRegistrationGetBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration get bad request response a status code equal to that given
func (o *FDXDynamicClientRegistrationGetBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the f d x dynamic client registration get bad request response
func (o *FDXDynamicClientRegistrationGetBadRequest) Code() int {
	return 400
}

func (o *FDXDynamicClientRegistrationGetBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetBadRequest %s", 400, payload)
}

func (o *FDXDynamicClientRegistrationGetBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetBadRequest %s", 400, payload)
}

func (o *FDXDynamicClientRegistrationGetBadRequest) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationGetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationGetUnauthorized creates a FDXDynamicClientRegistrationGetUnauthorized with default headers values
func NewFDXDynamicClientRegistrationGetUnauthorized() *FDXDynamicClientRegistrationGetUnauthorized {
	return &FDXDynamicClientRegistrationGetUnauthorized{}
}

/*
FDXDynamicClientRegistrationGetUnauthorized describes a response with status code 401, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationGetUnauthorized struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration get unauthorized response has a 2xx status code
func (o *FDXDynamicClientRegistrationGetUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration get unauthorized response has a 3xx status code
func (o *FDXDynamicClientRegistrationGetUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration get unauthorized response has a 4xx status code
func (o *FDXDynamicClientRegistrationGetUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration get unauthorized response has a 5xx status code
func (o *FDXDynamicClientRegistrationGetUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration get unauthorized response a status code equal to that given
func (o *FDXDynamicClientRegistrationGetUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the f d x dynamic client registration get unauthorized response
func (o *FDXDynamicClientRegistrationGetUnauthorized) Code() int {
	return 401
}

func (o *FDXDynamicClientRegistrationGetUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetUnauthorized %s", 401, payload)
}

func (o *FDXDynamicClientRegistrationGetUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetUnauthorized %s", 401, payload)
}

func (o *FDXDynamicClientRegistrationGetUnauthorized) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationGetUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationGetForbidden creates a FDXDynamicClientRegistrationGetForbidden with default headers values
func NewFDXDynamicClientRegistrationGetForbidden() *FDXDynamicClientRegistrationGetForbidden {
	return &FDXDynamicClientRegistrationGetForbidden{}
}

/*
FDXDynamicClientRegistrationGetForbidden describes a response with status code 403, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationGetForbidden struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration get forbidden response has a 2xx status code
func (o *FDXDynamicClientRegistrationGetForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration get forbidden response has a 3xx status code
func (o *FDXDynamicClientRegistrationGetForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration get forbidden response has a 4xx status code
func (o *FDXDynamicClientRegistrationGetForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration get forbidden response has a 5xx status code
func (o *FDXDynamicClientRegistrationGetForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration get forbidden response a status code equal to that given
func (o *FDXDynamicClientRegistrationGetForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the f d x dynamic client registration get forbidden response
func (o *FDXDynamicClientRegistrationGetForbidden) Code() int {
	return 403
}

func (o *FDXDynamicClientRegistrationGetForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetForbidden %s", 403, payload)
}

func (o *FDXDynamicClientRegistrationGetForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetForbidden %s", 403, payload)
}

func (o *FDXDynamicClientRegistrationGetForbidden) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationGetForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationGetNotFound creates a FDXDynamicClientRegistrationGetNotFound with default headers values
func NewFDXDynamicClientRegistrationGetNotFound() *FDXDynamicClientRegistrationGetNotFound {
	return &FDXDynamicClientRegistrationGetNotFound{}
}

/*
FDXDynamicClientRegistrationGetNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type FDXDynamicClientRegistrationGetNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this f d x dynamic client registration get not found response has a 2xx status code
func (o *FDXDynamicClientRegistrationGetNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration get not found response has a 3xx status code
func (o *FDXDynamicClientRegistrationGetNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration get not found response has a 4xx status code
func (o *FDXDynamicClientRegistrationGetNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration get not found response has a 5xx status code
func (o *FDXDynamicClientRegistrationGetNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration get not found response a status code equal to that given
func (o *FDXDynamicClientRegistrationGetNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the f d x dynamic client registration get not found response
func (o *FDXDynamicClientRegistrationGetNotFound) Code() int {
	return 404
}

func (o *FDXDynamicClientRegistrationGetNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetNotFound %s", 404, payload)
}

func (o *FDXDynamicClientRegistrationGetNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationGetNotFound %s", 404, payload)
}

func (o *FDXDynamicClientRegistrationGetNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationGetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
