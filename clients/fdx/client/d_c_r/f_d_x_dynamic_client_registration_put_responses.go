// Code generated by go-swagger; DO NOT EDIT.

package d_c_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/fdx/models"
)

// FDXDynamicClientRegistrationPutReader is a Reader for the FDXDynamicClientRegistrationPut structure.
type FDXDynamicClientRegistrationPutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FDXDynamicClientRegistrationPutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFDXDynamicClientRegistrationPutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFDXDynamicClientRegistrationPutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFDXDynamicClientRegistrationPutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFDXDynamicClientRegistrationPutForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFDXDynamicClientRegistrationPutNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /fdx/dcr/register/{cid}] FDXDynamicClientRegistrationPut", response, response.Code())
	}
}

// NewFDXDynamicClientRegistrationPutOK creates a FDXDynamicClientRegistrationPutOK with default headers values
func NewFDXDynamicClientRegistrationPutOK() *FDXDynamicClientRegistrationPutOK {
	return &FDXDynamicClientRegistrationPutOK{}
}

/*
FDXDynamicClientRegistrationPutOK describes a response with status code 200, with default header values.

Client Details Updated Response
*/
type FDXDynamicClientRegistrationPutOK struct {
	Payload *models.FDXDynamicClientRegistrationResponse
}

// IsSuccess returns true when this f d x dynamic client registration put o k response has a 2xx status code
func (o *FDXDynamicClientRegistrationPutOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this f d x dynamic client registration put o k response has a 3xx status code
func (o *FDXDynamicClientRegistrationPutOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration put o k response has a 4xx status code
func (o *FDXDynamicClientRegistrationPutOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this f d x dynamic client registration put o k response has a 5xx status code
func (o *FDXDynamicClientRegistrationPutOK) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration put o k response a status code equal to that given
func (o *FDXDynamicClientRegistrationPutOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the f d x dynamic client registration put o k response
func (o *FDXDynamicClientRegistrationPutOK) Code() int {
	return 200
}

func (o *FDXDynamicClientRegistrationPutOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutOK %s", 200, payload)
}

func (o *FDXDynamicClientRegistrationPutOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutOK %s", 200, payload)
}

func (o *FDXDynamicClientRegistrationPutOK) GetPayload() *models.FDXDynamicClientRegistrationResponse {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationPutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FDXDynamicClientRegistrationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationPutBadRequest creates a FDXDynamicClientRegistrationPutBadRequest with default headers values
func NewFDXDynamicClientRegistrationPutBadRequest() *FDXDynamicClientRegistrationPutBadRequest {
	return &FDXDynamicClientRegistrationPutBadRequest{}
}

/*
FDXDynamicClientRegistrationPutBadRequest describes a response with status code 400, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationPutBadRequest struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration put bad request response has a 2xx status code
func (o *FDXDynamicClientRegistrationPutBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration put bad request response has a 3xx status code
func (o *FDXDynamicClientRegistrationPutBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration put bad request response has a 4xx status code
func (o *FDXDynamicClientRegistrationPutBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration put bad request response has a 5xx status code
func (o *FDXDynamicClientRegistrationPutBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration put bad request response a status code equal to that given
func (o *FDXDynamicClientRegistrationPutBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the f d x dynamic client registration put bad request response
func (o *FDXDynamicClientRegistrationPutBadRequest) Code() int {
	return 400
}

func (o *FDXDynamicClientRegistrationPutBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutBadRequest %s", 400, payload)
}

func (o *FDXDynamicClientRegistrationPutBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutBadRequest %s", 400, payload)
}

func (o *FDXDynamicClientRegistrationPutBadRequest) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationPutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationPutUnauthorized creates a FDXDynamicClientRegistrationPutUnauthorized with default headers values
func NewFDXDynamicClientRegistrationPutUnauthorized() *FDXDynamicClientRegistrationPutUnauthorized {
	return &FDXDynamicClientRegistrationPutUnauthorized{}
}

/*
FDXDynamicClientRegistrationPutUnauthorized describes a response with status code 401, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationPutUnauthorized struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration put unauthorized response has a 2xx status code
func (o *FDXDynamicClientRegistrationPutUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration put unauthorized response has a 3xx status code
func (o *FDXDynamicClientRegistrationPutUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration put unauthorized response has a 4xx status code
func (o *FDXDynamicClientRegistrationPutUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration put unauthorized response has a 5xx status code
func (o *FDXDynamicClientRegistrationPutUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration put unauthorized response a status code equal to that given
func (o *FDXDynamicClientRegistrationPutUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the f d x dynamic client registration put unauthorized response
func (o *FDXDynamicClientRegistrationPutUnauthorized) Code() int {
	return 401
}

func (o *FDXDynamicClientRegistrationPutUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutUnauthorized %s", 401, payload)
}

func (o *FDXDynamicClientRegistrationPutUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutUnauthorized %s", 401, payload)
}

func (o *FDXDynamicClientRegistrationPutUnauthorized) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationPutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationPutForbidden creates a FDXDynamicClientRegistrationPutForbidden with default headers values
func NewFDXDynamicClientRegistrationPutForbidden() *FDXDynamicClientRegistrationPutForbidden {
	return &FDXDynamicClientRegistrationPutForbidden{}
}

/*
FDXDynamicClientRegistrationPutForbidden describes a response with status code 403, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationPutForbidden struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration put forbidden response has a 2xx status code
func (o *FDXDynamicClientRegistrationPutForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration put forbidden response has a 3xx status code
func (o *FDXDynamicClientRegistrationPutForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration put forbidden response has a 4xx status code
func (o *FDXDynamicClientRegistrationPutForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration put forbidden response has a 5xx status code
func (o *FDXDynamicClientRegistrationPutForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration put forbidden response a status code equal to that given
func (o *FDXDynamicClientRegistrationPutForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the f d x dynamic client registration put forbidden response
func (o *FDXDynamicClientRegistrationPutForbidden) Code() int {
	return 403
}

func (o *FDXDynamicClientRegistrationPutForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutForbidden %s", 403, payload)
}

func (o *FDXDynamicClientRegistrationPutForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutForbidden %s", 403, payload)
}

func (o *FDXDynamicClientRegistrationPutForbidden) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationPutForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationPutNotFound creates a FDXDynamicClientRegistrationPutNotFound with default headers values
func NewFDXDynamicClientRegistrationPutNotFound() *FDXDynamicClientRegistrationPutNotFound {
	return &FDXDynamicClientRegistrationPutNotFound{}
}

/*
FDXDynamicClientRegistrationPutNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type FDXDynamicClientRegistrationPutNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this f d x dynamic client registration put not found response has a 2xx status code
func (o *FDXDynamicClientRegistrationPutNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration put not found response has a 3xx status code
func (o *FDXDynamicClientRegistrationPutNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration put not found response has a 4xx status code
func (o *FDXDynamicClientRegistrationPutNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration put not found response has a 5xx status code
func (o *FDXDynamicClientRegistrationPutNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration put not found response a status code equal to that given
func (o *FDXDynamicClientRegistrationPutNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the f d x dynamic client registration put not found response
func (o *FDXDynamicClientRegistrationPutNotFound) Code() int {
	return 404
}

func (o *FDXDynamicClientRegistrationPutNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutNotFound %s", 404, payload)
}

func (o *FDXDynamicClientRegistrationPutNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /fdx/dcr/register/{cid}][%d] fDXDynamicClientRegistrationPutNotFound %s", 404, payload)
}

func (o *FDXDynamicClientRegistrationPutNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationPutNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
