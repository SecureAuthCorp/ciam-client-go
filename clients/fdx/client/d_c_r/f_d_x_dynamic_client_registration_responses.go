// Code generated by go-swagger; DO NOT EDIT.

package d_c_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/fdx/models"
)

// FDXDynamicClientRegistrationReader is a Reader for the FDXDynamicClientRegistration structure.
type FDXDynamicClientRegistrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FDXDynamicClientRegistrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewFDXDynamicClientRegistrationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFDXDynamicClientRegistrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewFDXDynamicClientRegistrationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewFDXDynamicClientRegistrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFDXDynamicClientRegistrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /fdx/dcr/register] FDXDynamicClientRegistration", response, response.Code())
	}
}

// NewFDXDynamicClientRegistrationCreated creates a FDXDynamicClientRegistrationCreated with default headers values
func NewFDXDynamicClientRegistrationCreated() *FDXDynamicClientRegistrationCreated {
	return &FDXDynamicClientRegistrationCreated{}
}

/*
FDXDynamicClientRegistrationCreated describes a response with status code 201, with default header values.

Dynamic Client Registration Response
*/
type FDXDynamicClientRegistrationCreated struct {
	Payload *models.FDXDynamicClientRegistrationResponse
}

// IsSuccess returns true when this f d x dynamic client registration created response has a 2xx status code
func (o *FDXDynamicClientRegistrationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this f d x dynamic client registration created response has a 3xx status code
func (o *FDXDynamicClientRegistrationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration created response has a 4xx status code
func (o *FDXDynamicClientRegistrationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this f d x dynamic client registration created response has a 5xx status code
func (o *FDXDynamicClientRegistrationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration created response a status code equal to that given
func (o *FDXDynamicClientRegistrationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the f d x dynamic client registration created response
func (o *FDXDynamicClientRegistrationCreated) Code() int {
	return 201
}

func (o *FDXDynamicClientRegistrationCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationCreated %s", 201, payload)
}

func (o *FDXDynamicClientRegistrationCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationCreated %s", 201, payload)
}

func (o *FDXDynamicClientRegistrationCreated) GetPayload() *models.FDXDynamicClientRegistrationResponse {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.FDXDynamicClientRegistrationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationBadRequest creates a FDXDynamicClientRegistrationBadRequest with default headers values
func NewFDXDynamicClientRegistrationBadRequest() *FDXDynamicClientRegistrationBadRequest {
	return &FDXDynamicClientRegistrationBadRequest{}
}

/*
FDXDynamicClientRegistrationBadRequest describes a response with status code 400, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationBadRequest struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration bad request response has a 2xx status code
func (o *FDXDynamicClientRegistrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration bad request response has a 3xx status code
func (o *FDXDynamicClientRegistrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration bad request response has a 4xx status code
func (o *FDXDynamicClientRegistrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration bad request response has a 5xx status code
func (o *FDXDynamicClientRegistrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration bad request response a status code equal to that given
func (o *FDXDynamicClientRegistrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the f d x dynamic client registration bad request response
func (o *FDXDynamicClientRegistrationBadRequest) Code() int {
	return 400
}

func (o *FDXDynamicClientRegistrationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationBadRequest %s", 400, payload)
}

func (o *FDXDynamicClientRegistrationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationBadRequest %s", 400, payload)
}

func (o *FDXDynamicClientRegistrationBadRequest) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationUnauthorized creates a FDXDynamicClientRegistrationUnauthorized with default headers values
func NewFDXDynamicClientRegistrationUnauthorized() *FDXDynamicClientRegistrationUnauthorized {
	return &FDXDynamicClientRegistrationUnauthorized{}
}

/*
FDXDynamicClientRegistrationUnauthorized describes a response with status code 401, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationUnauthorized struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration unauthorized response has a 2xx status code
func (o *FDXDynamicClientRegistrationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration unauthorized response has a 3xx status code
func (o *FDXDynamicClientRegistrationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration unauthorized response has a 4xx status code
func (o *FDXDynamicClientRegistrationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration unauthorized response has a 5xx status code
func (o *FDXDynamicClientRegistrationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration unauthorized response a status code equal to that given
func (o *FDXDynamicClientRegistrationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the f d x dynamic client registration unauthorized response
func (o *FDXDynamicClientRegistrationUnauthorized) Code() int {
	return 401
}

func (o *FDXDynamicClientRegistrationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationUnauthorized %s", 401, payload)
}

func (o *FDXDynamicClientRegistrationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationUnauthorized %s", 401, payload)
}

func (o *FDXDynamicClientRegistrationUnauthorized) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationForbidden creates a FDXDynamicClientRegistrationForbidden with default headers values
func NewFDXDynamicClientRegistrationForbidden() *FDXDynamicClientRegistrationForbidden {
	return &FDXDynamicClientRegistrationForbidden{}
}

/*
FDXDynamicClientRegistrationForbidden describes a response with status code 403, with default header values.

RFC6749 error
*/
type FDXDynamicClientRegistrationForbidden struct {
	Payload *models.RFC6749Error
}

// IsSuccess returns true when this f d x dynamic client registration forbidden response has a 2xx status code
func (o *FDXDynamicClientRegistrationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration forbidden response has a 3xx status code
func (o *FDXDynamicClientRegistrationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration forbidden response has a 4xx status code
func (o *FDXDynamicClientRegistrationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration forbidden response has a 5xx status code
func (o *FDXDynamicClientRegistrationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration forbidden response a status code equal to that given
func (o *FDXDynamicClientRegistrationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the f d x dynamic client registration forbidden response
func (o *FDXDynamicClientRegistrationForbidden) Code() int {
	return 403
}

func (o *FDXDynamicClientRegistrationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationForbidden %s", 403, payload)
}

func (o *FDXDynamicClientRegistrationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationForbidden %s", 403, payload)
}

func (o *FDXDynamicClientRegistrationForbidden) GetPayload() *models.RFC6749Error {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RFC6749Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFDXDynamicClientRegistrationNotFound creates a FDXDynamicClientRegistrationNotFound with default headers values
func NewFDXDynamicClientRegistrationNotFound() *FDXDynamicClientRegistrationNotFound {
	return &FDXDynamicClientRegistrationNotFound{}
}

/*
FDXDynamicClientRegistrationNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type FDXDynamicClientRegistrationNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this f d x dynamic client registration not found response has a 2xx status code
func (o *FDXDynamicClientRegistrationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this f d x dynamic client registration not found response has a 3xx status code
func (o *FDXDynamicClientRegistrationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this f d x dynamic client registration not found response has a 4xx status code
func (o *FDXDynamicClientRegistrationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this f d x dynamic client registration not found response has a 5xx status code
func (o *FDXDynamicClientRegistrationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this f d x dynamic client registration not found response a status code equal to that given
func (o *FDXDynamicClientRegistrationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the f d x dynamic client registration not found response
func (o *FDXDynamicClientRegistrationNotFound) Code() int {
	return 404
}

func (o *FDXDynamicClientRegistrationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationNotFound %s", 404, payload)
}

func (o *FDXDynamicClientRegistrationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /fdx/dcr/register][%d] fDXDynamicClientRegistrationNotFound %s", 404, payload)
}

func (o *FDXDynamicClientRegistrationNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *FDXDynamicClientRegistrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
