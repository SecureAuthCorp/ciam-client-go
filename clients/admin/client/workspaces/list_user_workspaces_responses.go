// Code generated by go-swagger; DO NOT EDIT.

package workspaces

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListUserWorkspacesReader is a Reader for the ListUserWorkspaces structure.
type ListUserWorkspacesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserWorkspacesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserWorkspacesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserWorkspacesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserWorkspacesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserWorkspacesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserWorkspacesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /user/workspaces] listUserWorkspaces", response, response.Code())
	}
}

// NewListUserWorkspacesOK creates a ListUserWorkspacesOK with default headers values
func NewListUserWorkspacesOK() *ListUserWorkspacesOK {
	return &ListUserWorkspacesOK{}
}

/*
ListUserWorkspacesOK describes a response with status code 200, with default header values.

User Workspaces
*/
type ListUserWorkspacesOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserWorkspacesResponse
}

// IsSuccess returns true when this list user workspaces o k response has a 2xx status code
func (o *ListUserWorkspacesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user workspaces o k response has a 3xx status code
func (o *ListUserWorkspacesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user workspaces o k response has a 4xx status code
func (o *ListUserWorkspacesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user workspaces o k response has a 5xx status code
func (o *ListUserWorkspacesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user workspaces o k response a status code equal to that given
func (o *ListUserWorkspacesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user workspaces o k response
func (o *ListUserWorkspacesOK) Code() int {
	return 200
}

func (o *ListUserWorkspacesOK) Error() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesOK  %+v", 200, o.Payload)
}

func (o *ListUserWorkspacesOK) String() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesOK  %+v", 200, o.Payload)
}

func (o *ListUserWorkspacesOK) GetPayload() *models.UserWorkspacesResponse {
	return o.Payload
}

func (o *ListUserWorkspacesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserWorkspacesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserWorkspacesUnauthorized creates a ListUserWorkspacesUnauthorized with default headers values
func NewListUserWorkspacesUnauthorized() *ListUserWorkspacesUnauthorized {
	return &ListUserWorkspacesUnauthorized{}
}

/*
ListUserWorkspacesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserWorkspacesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user workspaces unauthorized response has a 2xx status code
func (o *ListUserWorkspacesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user workspaces unauthorized response has a 3xx status code
func (o *ListUserWorkspacesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user workspaces unauthorized response has a 4xx status code
func (o *ListUserWorkspacesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user workspaces unauthorized response has a 5xx status code
func (o *ListUserWorkspacesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user workspaces unauthorized response a status code equal to that given
func (o *ListUserWorkspacesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user workspaces unauthorized response
func (o *ListUserWorkspacesUnauthorized) Code() int {
	return 401
}

func (o *ListUserWorkspacesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserWorkspacesUnauthorized) String() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserWorkspacesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserWorkspacesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserWorkspacesForbidden creates a ListUserWorkspacesForbidden with default headers values
func NewListUserWorkspacesForbidden() *ListUserWorkspacesForbidden {
	return &ListUserWorkspacesForbidden{}
}

/*
ListUserWorkspacesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserWorkspacesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user workspaces forbidden response has a 2xx status code
func (o *ListUserWorkspacesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user workspaces forbidden response has a 3xx status code
func (o *ListUserWorkspacesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user workspaces forbidden response has a 4xx status code
func (o *ListUserWorkspacesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user workspaces forbidden response has a 5xx status code
func (o *ListUserWorkspacesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user workspaces forbidden response a status code equal to that given
func (o *ListUserWorkspacesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user workspaces forbidden response
func (o *ListUserWorkspacesForbidden) Code() int {
	return 403
}

func (o *ListUserWorkspacesForbidden) Error() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesForbidden  %+v", 403, o.Payload)
}

func (o *ListUserWorkspacesForbidden) String() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesForbidden  %+v", 403, o.Payload)
}

func (o *ListUserWorkspacesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserWorkspacesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserWorkspacesNotFound creates a ListUserWorkspacesNotFound with default headers values
func NewListUserWorkspacesNotFound() *ListUserWorkspacesNotFound {
	return &ListUserWorkspacesNotFound{}
}

/*
ListUserWorkspacesNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUserWorkspacesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user workspaces not found response has a 2xx status code
func (o *ListUserWorkspacesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user workspaces not found response has a 3xx status code
func (o *ListUserWorkspacesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user workspaces not found response has a 4xx status code
func (o *ListUserWorkspacesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user workspaces not found response has a 5xx status code
func (o *ListUserWorkspacesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user workspaces not found response a status code equal to that given
func (o *ListUserWorkspacesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user workspaces not found response
func (o *ListUserWorkspacesNotFound) Code() int {
	return 404
}

func (o *ListUserWorkspacesNotFound) Error() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesNotFound  %+v", 404, o.Payload)
}

func (o *ListUserWorkspacesNotFound) String() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesNotFound  %+v", 404, o.Payload)
}

func (o *ListUserWorkspacesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserWorkspacesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserWorkspacesTooManyRequests creates a ListUserWorkspacesTooManyRequests with default headers values
func NewListUserWorkspacesTooManyRequests() *ListUserWorkspacesTooManyRequests {
	return &ListUserWorkspacesTooManyRequests{}
}

/*
ListUserWorkspacesTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUserWorkspacesTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user workspaces too many requests response has a 2xx status code
func (o *ListUserWorkspacesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user workspaces too many requests response has a 3xx status code
func (o *ListUserWorkspacesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user workspaces too many requests response has a 4xx status code
func (o *ListUserWorkspacesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user workspaces too many requests response has a 5xx status code
func (o *ListUserWorkspacesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user workspaces too many requests response a status code equal to that given
func (o *ListUserWorkspacesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list user workspaces too many requests response
func (o *ListUserWorkspacesTooManyRequests) Code() int {
	return 429
}

func (o *ListUserWorkspacesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserWorkspacesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /user/workspaces][%d] listUserWorkspacesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserWorkspacesTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserWorkspacesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
