// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ImportSpecificationFromFileReader is a Reader for the ImportSpecificationFromFile structure.
type ImportSpecificationFromFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportSpecificationFromFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewImportSpecificationFromFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportSpecificationFromFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportSpecificationFromFileUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportSpecificationFromFileForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportSpecificationFromFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImportSpecificationFromFileConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewImportSpecificationFromFileUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewImportSpecificationFromFileTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /services/{sid}/apis/import/file] importSpecificationFromFile", response, response.Code())
	}
}

// NewImportSpecificationFromFileOK creates a ImportSpecificationFromFileOK with default headers values
func NewImportSpecificationFromFileOK() *ImportSpecificationFromFileOK {
	return &ImportSpecificationFromFileOK{}
}

/*
ImportSpecificationFromFileOK describes a response with status code 200, with default header values.

Import service configuration result
*/
type ImportSpecificationFromFileOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ImportServiceConfigurationResult
}

// IsSuccess returns true when this import specification from file o k response has a 2xx status code
func (o *ImportSpecificationFromFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import specification from file o k response has a 3xx status code
func (o *ImportSpecificationFromFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file o k response has a 4xx status code
func (o *ImportSpecificationFromFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this import specification from file o k response has a 5xx status code
func (o *ImportSpecificationFromFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file o k response a status code equal to that given
func (o *ImportSpecificationFromFileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the import specification from file o k response
func (o *ImportSpecificationFromFileOK) Code() int {
	return 200
}

func (o *ImportSpecificationFromFileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileOK %s", 200, payload)
}

func (o *ImportSpecificationFromFileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileOK %s", 200, payload)
}

func (o *ImportSpecificationFromFileOK) GetPayload() *models.ImportServiceConfigurationResult {
	return o.Payload
}

func (o *ImportSpecificationFromFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ImportServiceConfigurationResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileBadRequest creates a ImportSpecificationFromFileBadRequest with default headers values
func NewImportSpecificationFromFileBadRequest() *ImportSpecificationFromFileBadRequest {
	return &ImportSpecificationFromFileBadRequest{}
}

/*
ImportSpecificationFromFileBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ImportSpecificationFromFileBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file bad request response has a 2xx status code
func (o *ImportSpecificationFromFileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file bad request response has a 3xx status code
func (o *ImportSpecificationFromFileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file bad request response has a 4xx status code
func (o *ImportSpecificationFromFileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file bad request response has a 5xx status code
func (o *ImportSpecificationFromFileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file bad request response a status code equal to that given
func (o *ImportSpecificationFromFileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import specification from file bad request response
func (o *ImportSpecificationFromFileBadRequest) Code() int {
	return 400
}

func (o *ImportSpecificationFromFileBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileBadRequest %s", 400, payload)
}

func (o *ImportSpecificationFromFileBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileBadRequest %s", 400, payload)
}

func (o *ImportSpecificationFromFileBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileUnauthorized creates a ImportSpecificationFromFileUnauthorized with default headers values
func NewImportSpecificationFromFileUnauthorized() *ImportSpecificationFromFileUnauthorized {
	return &ImportSpecificationFromFileUnauthorized{}
}

/*
ImportSpecificationFromFileUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImportSpecificationFromFileUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file unauthorized response has a 2xx status code
func (o *ImportSpecificationFromFileUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file unauthorized response has a 3xx status code
func (o *ImportSpecificationFromFileUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file unauthorized response has a 4xx status code
func (o *ImportSpecificationFromFileUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file unauthorized response has a 5xx status code
func (o *ImportSpecificationFromFileUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file unauthorized response a status code equal to that given
func (o *ImportSpecificationFromFileUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import specification from file unauthorized response
func (o *ImportSpecificationFromFileUnauthorized) Code() int {
	return 401
}

func (o *ImportSpecificationFromFileUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileUnauthorized %s", 401, payload)
}

func (o *ImportSpecificationFromFileUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileUnauthorized %s", 401, payload)
}

func (o *ImportSpecificationFromFileUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileForbidden creates a ImportSpecificationFromFileForbidden with default headers values
func NewImportSpecificationFromFileForbidden() *ImportSpecificationFromFileForbidden {
	return &ImportSpecificationFromFileForbidden{}
}

/*
ImportSpecificationFromFileForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImportSpecificationFromFileForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file forbidden response has a 2xx status code
func (o *ImportSpecificationFromFileForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file forbidden response has a 3xx status code
func (o *ImportSpecificationFromFileForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file forbidden response has a 4xx status code
func (o *ImportSpecificationFromFileForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file forbidden response has a 5xx status code
func (o *ImportSpecificationFromFileForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file forbidden response a status code equal to that given
func (o *ImportSpecificationFromFileForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the import specification from file forbidden response
func (o *ImportSpecificationFromFileForbidden) Code() int {
	return 403
}

func (o *ImportSpecificationFromFileForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileForbidden %s", 403, payload)
}

func (o *ImportSpecificationFromFileForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileForbidden %s", 403, payload)
}

func (o *ImportSpecificationFromFileForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileNotFound creates a ImportSpecificationFromFileNotFound with default headers values
func NewImportSpecificationFromFileNotFound() *ImportSpecificationFromFileNotFound {
	return &ImportSpecificationFromFileNotFound{}
}

/*
ImportSpecificationFromFileNotFound describes a response with status code 404, with default header values.

Not found
*/
type ImportSpecificationFromFileNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file not found response has a 2xx status code
func (o *ImportSpecificationFromFileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file not found response has a 3xx status code
func (o *ImportSpecificationFromFileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file not found response has a 4xx status code
func (o *ImportSpecificationFromFileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file not found response has a 5xx status code
func (o *ImportSpecificationFromFileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file not found response a status code equal to that given
func (o *ImportSpecificationFromFileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the import specification from file not found response
func (o *ImportSpecificationFromFileNotFound) Code() int {
	return 404
}

func (o *ImportSpecificationFromFileNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileNotFound %s", 404, payload)
}

func (o *ImportSpecificationFromFileNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileNotFound %s", 404, payload)
}

func (o *ImportSpecificationFromFileNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileConflict creates a ImportSpecificationFromFileConflict with default headers values
func NewImportSpecificationFromFileConflict() *ImportSpecificationFromFileConflict {
	return &ImportSpecificationFromFileConflict{}
}

/*
ImportSpecificationFromFileConflict describes a response with status code 409, with default header values.

Conflict
*/
type ImportSpecificationFromFileConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file conflict response has a 2xx status code
func (o *ImportSpecificationFromFileConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file conflict response has a 3xx status code
func (o *ImportSpecificationFromFileConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file conflict response has a 4xx status code
func (o *ImportSpecificationFromFileConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file conflict response has a 5xx status code
func (o *ImportSpecificationFromFileConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file conflict response a status code equal to that given
func (o *ImportSpecificationFromFileConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the import specification from file conflict response
func (o *ImportSpecificationFromFileConflict) Code() int {
	return 409
}

func (o *ImportSpecificationFromFileConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileConflict %s", 409, payload)
}

func (o *ImportSpecificationFromFileConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileConflict %s", 409, payload)
}

func (o *ImportSpecificationFromFileConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileUnprocessableEntity creates a ImportSpecificationFromFileUnprocessableEntity with default headers values
func NewImportSpecificationFromFileUnprocessableEntity() *ImportSpecificationFromFileUnprocessableEntity {
	return &ImportSpecificationFromFileUnprocessableEntity{}
}

/*
ImportSpecificationFromFileUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ImportSpecificationFromFileUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file unprocessable entity response has a 2xx status code
func (o *ImportSpecificationFromFileUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file unprocessable entity response has a 3xx status code
func (o *ImportSpecificationFromFileUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file unprocessable entity response has a 4xx status code
func (o *ImportSpecificationFromFileUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file unprocessable entity response has a 5xx status code
func (o *ImportSpecificationFromFileUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file unprocessable entity response a status code equal to that given
func (o *ImportSpecificationFromFileUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the import specification from file unprocessable entity response
func (o *ImportSpecificationFromFileUnprocessableEntity) Code() int {
	return 422
}

func (o *ImportSpecificationFromFileUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileUnprocessableEntity %s", 422, payload)
}

func (o *ImportSpecificationFromFileUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileUnprocessableEntity %s", 422, payload)
}

func (o *ImportSpecificationFromFileUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSpecificationFromFileTooManyRequests creates a ImportSpecificationFromFileTooManyRequests with default headers values
func NewImportSpecificationFromFileTooManyRequests() *ImportSpecificationFromFileTooManyRequests {
	return &ImportSpecificationFromFileTooManyRequests{}
}

/*
ImportSpecificationFromFileTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ImportSpecificationFromFileTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this import specification from file too many requests response has a 2xx status code
func (o *ImportSpecificationFromFileTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import specification from file too many requests response has a 3xx status code
func (o *ImportSpecificationFromFileTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import specification from file too many requests response has a 4xx status code
func (o *ImportSpecificationFromFileTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this import specification from file too many requests response has a 5xx status code
func (o *ImportSpecificationFromFileTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this import specification from file too many requests response a status code equal to that given
func (o *ImportSpecificationFromFileTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the import specification from file too many requests response
func (o *ImportSpecificationFromFileTooManyRequests) Code() int {
	return 429
}

func (o *ImportSpecificationFromFileTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileTooManyRequests %s", 429, payload)
}

func (o *ImportSpecificationFromFileTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /services/{sid}/apis/import/file][%d] importSpecificationFromFileTooManyRequests %s", 429, payload)
}

func (o *ImportSpecificationFromFileTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSpecificationFromFileTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
