// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteServiceReader is a Reader for the DeleteService structure.
type DeleteServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteServiceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteServiceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /services/{sid}] deleteService", response, response.Code())
	}
}

// NewDeleteServiceNoContent creates a DeleteServiceNoContent with default headers values
func NewDeleteServiceNoContent() *DeleteServiceNoContent {
	return &DeleteServiceNoContent{}
}

/*
DeleteServiceNoContent describes a response with status code 204, with default header values.

	Service has been deleted
*/
type DeleteServiceNoContent struct {
}

// IsSuccess returns true when this delete service no content response has a 2xx status code
func (o *DeleteServiceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete service no content response has a 3xx status code
func (o *DeleteServiceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service no content response has a 4xx status code
func (o *DeleteServiceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete service no content response has a 5xx status code
func (o *DeleteServiceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service no content response a status code equal to that given
func (o *DeleteServiceNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete service no content response
func (o *DeleteServiceNoContent) Code() int {
	return 204
}

func (o *DeleteServiceNoContent) Error() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceNoContent ", 204)
}

func (o *DeleteServiceNoContent) String() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceNoContent ", 204)
}

func (o *DeleteServiceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteServiceBadRequest creates a DeleteServiceBadRequest with default headers values
func NewDeleteServiceBadRequest() *DeleteServiceBadRequest {
	return &DeleteServiceBadRequest{}
}

/*
DeleteServiceBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteServiceBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service bad request response has a 2xx status code
func (o *DeleteServiceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service bad request response has a 3xx status code
func (o *DeleteServiceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service bad request response has a 4xx status code
func (o *DeleteServiceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service bad request response has a 5xx status code
func (o *DeleteServiceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service bad request response a status code equal to that given
func (o *DeleteServiceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete service bad request response
func (o *DeleteServiceBadRequest) Code() int {
	return 400
}

func (o *DeleteServiceBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteServiceBadRequest) String() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteServiceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceUnauthorized creates a DeleteServiceUnauthorized with default headers values
func NewDeleteServiceUnauthorized() *DeleteServiceUnauthorized {
	return &DeleteServiceUnauthorized{}
}

/*
DeleteServiceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteServiceUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service unauthorized response has a 2xx status code
func (o *DeleteServiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service unauthorized response has a 3xx status code
func (o *DeleteServiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service unauthorized response has a 4xx status code
func (o *DeleteServiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service unauthorized response has a 5xx status code
func (o *DeleteServiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service unauthorized response a status code equal to that given
func (o *DeleteServiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete service unauthorized response
func (o *DeleteServiceUnauthorized) Code() int {
	return 401
}

func (o *DeleteServiceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteServiceUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteServiceUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceForbidden creates a DeleteServiceForbidden with default headers values
func NewDeleteServiceForbidden() *DeleteServiceForbidden {
	return &DeleteServiceForbidden{}
}

/*
DeleteServiceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteServiceForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service forbidden response has a 2xx status code
func (o *DeleteServiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service forbidden response has a 3xx status code
func (o *DeleteServiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service forbidden response has a 4xx status code
func (o *DeleteServiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service forbidden response has a 5xx status code
func (o *DeleteServiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service forbidden response a status code equal to that given
func (o *DeleteServiceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete service forbidden response
func (o *DeleteServiceForbidden) Code() int {
	return 403
}

func (o *DeleteServiceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteServiceForbidden) String() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceForbidden  %+v", 403, o.Payload)
}

func (o *DeleteServiceForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceNotFound creates a DeleteServiceNotFound with default headers values
func NewDeleteServiceNotFound() *DeleteServiceNotFound {
	return &DeleteServiceNotFound{}
}

/*
DeleteServiceNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteServiceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service not found response has a 2xx status code
func (o *DeleteServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service not found response has a 3xx status code
func (o *DeleteServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service not found response has a 4xx status code
func (o *DeleteServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service not found response has a 5xx status code
func (o *DeleteServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service not found response a status code equal to that given
func (o *DeleteServiceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete service not found response
func (o *DeleteServiceNotFound) Code() int {
	return 404
}

func (o *DeleteServiceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteServiceNotFound) String() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceNotFound  %+v", 404, o.Payload)
}

func (o *DeleteServiceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteServiceTooManyRequests creates a DeleteServiceTooManyRequests with default headers values
func NewDeleteServiceTooManyRequests() *DeleteServiceTooManyRequests {
	return &DeleteServiceTooManyRequests{}
}

/*
DeleteServiceTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteServiceTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete service too many requests response has a 2xx status code
func (o *DeleteServiceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete service too many requests response has a 3xx status code
func (o *DeleteServiceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete service too many requests response has a 4xx status code
func (o *DeleteServiceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete service too many requests response has a 5xx status code
func (o *DeleteServiceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete service too many requests response a status code equal to that given
func (o *DeleteServiceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete service too many requests response
func (o *DeleteServiceTooManyRequests) Code() int {
	return 429
}

func (o *DeleteServiceTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteServiceTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /services/{sid}][%d] deleteServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteServiceTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteServiceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
