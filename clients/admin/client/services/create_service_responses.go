// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateServiceReader is a Reader for the CreateService structure.
type CreateServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateServiceCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateServiceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateServiceConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateServiceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateServiceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateServiceCreated creates a CreateServiceCreated with default headers values
func NewCreateServiceCreated() *CreateServiceCreated {
	return &CreateServiceCreated{}
}

/*
CreateServiceCreated describes a response with status code 201, with default header values.

Service
*/
type CreateServiceCreated struct {
	Payload *models.ServiceWithAudience
}

// IsSuccess returns true when this create service created response has a 2xx status code
func (o *CreateServiceCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create service created response has a 3xx status code
func (o *CreateServiceCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service created response has a 4xx status code
func (o *CreateServiceCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create service created response has a 5xx status code
func (o *CreateServiceCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create service created response a status code equal to that given
func (o *CreateServiceCreated) IsCode(code int) bool {
	return code == 201
}

func (o *CreateServiceCreated) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceCreated  %+v", 201, o.Payload)
}

func (o *CreateServiceCreated) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceCreated  %+v", 201, o.Payload)
}

func (o *CreateServiceCreated) GetPayload() *models.ServiceWithAudience {
	return o.Payload
}

func (o *CreateServiceCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceWithAudience)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceBadRequest creates a CreateServiceBadRequest with default headers values
func NewCreateServiceBadRequest() *CreateServiceBadRequest {
	return &CreateServiceBadRequest{}
}

/*
CreateServiceBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type CreateServiceBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service bad request response has a 2xx status code
func (o *CreateServiceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service bad request response has a 3xx status code
func (o *CreateServiceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service bad request response has a 4xx status code
func (o *CreateServiceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service bad request response has a 5xx status code
func (o *CreateServiceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create service bad request response a status code equal to that given
func (o *CreateServiceBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *CreateServiceBadRequest) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceBadRequest  %+v", 400, o.Payload)
}

func (o *CreateServiceBadRequest) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceBadRequest  %+v", 400, o.Payload)
}

func (o *CreateServiceBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceUnauthorized creates a CreateServiceUnauthorized with default headers values
func NewCreateServiceUnauthorized() *CreateServiceUnauthorized {
	return &CreateServiceUnauthorized{}
}

/*
CreateServiceUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type CreateServiceUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service unauthorized response has a 2xx status code
func (o *CreateServiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service unauthorized response has a 3xx status code
func (o *CreateServiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service unauthorized response has a 4xx status code
func (o *CreateServiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service unauthorized response has a 5xx status code
func (o *CreateServiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create service unauthorized response a status code equal to that given
func (o *CreateServiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *CreateServiceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateServiceUnauthorized) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateServiceUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceForbidden creates a CreateServiceForbidden with default headers values
func NewCreateServiceForbidden() *CreateServiceForbidden {
	return &CreateServiceForbidden{}
}

/*
CreateServiceForbidden describes a response with status code 403, with default header values.

HttpError
*/
type CreateServiceForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service forbidden response has a 2xx status code
func (o *CreateServiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service forbidden response has a 3xx status code
func (o *CreateServiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service forbidden response has a 4xx status code
func (o *CreateServiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service forbidden response has a 5xx status code
func (o *CreateServiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create service forbidden response a status code equal to that given
func (o *CreateServiceForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *CreateServiceForbidden) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceForbidden  %+v", 403, o.Payload)
}

func (o *CreateServiceForbidden) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceForbidden  %+v", 403, o.Payload)
}

func (o *CreateServiceForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceNotFound creates a CreateServiceNotFound with default headers values
func NewCreateServiceNotFound() *CreateServiceNotFound {
	return &CreateServiceNotFound{}
}

/*
CreateServiceNotFound describes a response with status code 404, with default header values.

HttpError
*/
type CreateServiceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service not found response has a 2xx status code
func (o *CreateServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service not found response has a 3xx status code
func (o *CreateServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service not found response has a 4xx status code
func (o *CreateServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service not found response has a 5xx status code
func (o *CreateServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create service not found response a status code equal to that given
func (o *CreateServiceNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *CreateServiceNotFound) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceNotFound  %+v", 404, o.Payload)
}

func (o *CreateServiceNotFound) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceNotFound  %+v", 404, o.Payload)
}

func (o *CreateServiceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceConflict creates a CreateServiceConflict with default headers values
func NewCreateServiceConflict() *CreateServiceConflict {
	return &CreateServiceConflict{}
}

/*
CreateServiceConflict describes a response with status code 409, with default header values.

HttpError
*/
type CreateServiceConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service conflict response has a 2xx status code
func (o *CreateServiceConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service conflict response has a 3xx status code
func (o *CreateServiceConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service conflict response has a 4xx status code
func (o *CreateServiceConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service conflict response has a 5xx status code
func (o *CreateServiceConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create service conflict response a status code equal to that given
func (o *CreateServiceConflict) IsCode(code int) bool {
	return code == 409
}

func (o *CreateServiceConflict) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceConflict  %+v", 409, o.Payload)
}

func (o *CreateServiceConflict) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceConflict  %+v", 409, o.Payload)
}

func (o *CreateServiceConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceUnprocessableEntity creates a CreateServiceUnprocessableEntity with default headers values
func NewCreateServiceUnprocessableEntity() *CreateServiceUnprocessableEntity {
	return &CreateServiceUnprocessableEntity{}
}

/*
CreateServiceUnprocessableEntity describes a response with status code 422, with default header values.

HttpError
*/
type CreateServiceUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service unprocessable entity response has a 2xx status code
func (o *CreateServiceUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service unprocessable entity response has a 3xx status code
func (o *CreateServiceUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service unprocessable entity response has a 4xx status code
func (o *CreateServiceUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service unprocessable entity response has a 5xx status code
func (o *CreateServiceUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create service unprocessable entity response a status code equal to that given
func (o *CreateServiceUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

func (o *CreateServiceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateServiceUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateServiceUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceTooManyRequests creates a CreateServiceTooManyRequests with default headers values
func NewCreateServiceTooManyRequests() *CreateServiceTooManyRequests {
	return &CreateServiceTooManyRequests{}
}

/*
CreateServiceTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type CreateServiceTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create service too many requests response has a 2xx status code
func (o *CreateServiceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create service too many requests response has a 3xx status code
func (o *CreateServiceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create service too many requests response has a 4xx status code
func (o *CreateServiceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create service too many requests response has a 5xx status code
func (o *CreateServiceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create service too many requests response a status code equal to that given
func (o *CreateServiceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *CreateServiceTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /services][%d] createServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateServiceTooManyRequests) String() string {
	return fmt.Sprintf("[POST /services][%d] createServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateServiceTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateServiceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
