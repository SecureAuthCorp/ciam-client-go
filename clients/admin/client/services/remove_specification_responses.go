// Code generated by go-swagger; DO NOT EDIT.

package services

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// RemoveSpecificationReader is a Reader for the RemoveSpecification structure.
type RemoveSpecificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveSpecificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveSpecificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveSpecificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRemoveSpecificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveSpecificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveSpecificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveSpecificationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRemoveSpecificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRemoveSpecificationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /services/{sid}/apis] removeSpecification", response, response.Code())
	}
}

// NewRemoveSpecificationOK creates a RemoveSpecificationOK with default headers values
func NewRemoveSpecificationOK() *RemoveSpecificationOK {
	return &RemoveSpecificationOK{}
}

/*
RemoveSpecificationOK describes a response with status code 200, with default header values.

Remove service configuration result
*/
type RemoveSpecificationOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.RemoveServiceConfigurationResult
}

// IsSuccess returns true when this remove specification o k response has a 2xx status code
func (o *RemoveSpecificationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove specification o k response has a 3xx status code
func (o *RemoveSpecificationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification o k response has a 4xx status code
func (o *RemoveSpecificationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove specification o k response has a 5xx status code
func (o *RemoveSpecificationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification o k response a status code equal to that given
func (o *RemoveSpecificationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the remove specification o k response
func (o *RemoveSpecificationOK) Code() int {
	return 200
}

func (o *RemoveSpecificationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationOK %s", 200, payload)
}

func (o *RemoveSpecificationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationOK %s", 200, payload)
}

func (o *RemoveSpecificationOK) GetPayload() *models.RemoveServiceConfigurationResult {
	return o.Payload
}

func (o *RemoveSpecificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.RemoveServiceConfigurationResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationBadRequest creates a RemoveSpecificationBadRequest with default headers values
func NewRemoveSpecificationBadRequest() *RemoveSpecificationBadRequest {
	return &RemoveSpecificationBadRequest{}
}

/*
RemoveSpecificationBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RemoveSpecificationBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification bad request response has a 2xx status code
func (o *RemoveSpecificationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification bad request response has a 3xx status code
func (o *RemoveSpecificationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification bad request response has a 4xx status code
func (o *RemoveSpecificationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification bad request response has a 5xx status code
func (o *RemoveSpecificationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification bad request response a status code equal to that given
func (o *RemoveSpecificationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove specification bad request response
func (o *RemoveSpecificationBadRequest) Code() int {
	return 400
}

func (o *RemoveSpecificationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationBadRequest %s", 400, payload)
}

func (o *RemoveSpecificationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationBadRequest %s", 400, payload)
}

func (o *RemoveSpecificationBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationUnauthorized creates a RemoveSpecificationUnauthorized with default headers values
func NewRemoveSpecificationUnauthorized() *RemoveSpecificationUnauthorized {
	return &RemoveSpecificationUnauthorized{}
}

/*
RemoveSpecificationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RemoveSpecificationUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification unauthorized response has a 2xx status code
func (o *RemoveSpecificationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification unauthorized response has a 3xx status code
func (o *RemoveSpecificationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification unauthorized response has a 4xx status code
func (o *RemoveSpecificationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification unauthorized response has a 5xx status code
func (o *RemoveSpecificationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification unauthorized response a status code equal to that given
func (o *RemoveSpecificationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the remove specification unauthorized response
func (o *RemoveSpecificationUnauthorized) Code() int {
	return 401
}

func (o *RemoveSpecificationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationUnauthorized %s", 401, payload)
}

func (o *RemoveSpecificationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationUnauthorized %s", 401, payload)
}

func (o *RemoveSpecificationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationForbidden creates a RemoveSpecificationForbidden with default headers values
func NewRemoveSpecificationForbidden() *RemoveSpecificationForbidden {
	return &RemoveSpecificationForbidden{}
}

/*
RemoveSpecificationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RemoveSpecificationForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification forbidden response has a 2xx status code
func (o *RemoveSpecificationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification forbidden response has a 3xx status code
func (o *RemoveSpecificationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification forbidden response has a 4xx status code
func (o *RemoveSpecificationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification forbidden response has a 5xx status code
func (o *RemoveSpecificationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification forbidden response a status code equal to that given
func (o *RemoveSpecificationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the remove specification forbidden response
func (o *RemoveSpecificationForbidden) Code() int {
	return 403
}

func (o *RemoveSpecificationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationForbidden %s", 403, payload)
}

func (o *RemoveSpecificationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationForbidden %s", 403, payload)
}

func (o *RemoveSpecificationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationNotFound creates a RemoveSpecificationNotFound with default headers values
func NewRemoveSpecificationNotFound() *RemoveSpecificationNotFound {
	return &RemoveSpecificationNotFound{}
}

/*
RemoveSpecificationNotFound describes a response with status code 404, with default header values.

Not found
*/
type RemoveSpecificationNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification not found response has a 2xx status code
func (o *RemoveSpecificationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification not found response has a 3xx status code
func (o *RemoveSpecificationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification not found response has a 4xx status code
func (o *RemoveSpecificationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification not found response has a 5xx status code
func (o *RemoveSpecificationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification not found response a status code equal to that given
func (o *RemoveSpecificationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove specification not found response
func (o *RemoveSpecificationNotFound) Code() int {
	return 404
}

func (o *RemoveSpecificationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationNotFound %s", 404, payload)
}

func (o *RemoveSpecificationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationNotFound %s", 404, payload)
}

func (o *RemoveSpecificationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationConflict creates a RemoveSpecificationConflict with default headers values
func NewRemoveSpecificationConflict() *RemoveSpecificationConflict {
	return &RemoveSpecificationConflict{}
}

/*
RemoveSpecificationConflict describes a response with status code 409, with default header values.

Conflict
*/
type RemoveSpecificationConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification conflict response has a 2xx status code
func (o *RemoveSpecificationConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification conflict response has a 3xx status code
func (o *RemoveSpecificationConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification conflict response has a 4xx status code
func (o *RemoveSpecificationConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification conflict response has a 5xx status code
func (o *RemoveSpecificationConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification conflict response a status code equal to that given
func (o *RemoveSpecificationConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the remove specification conflict response
func (o *RemoveSpecificationConflict) Code() int {
	return 409
}

func (o *RemoveSpecificationConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationConflict %s", 409, payload)
}

func (o *RemoveSpecificationConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationConflict %s", 409, payload)
}

func (o *RemoveSpecificationConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationUnprocessableEntity creates a RemoveSpecificationUnprocessableEntity with default headers values
func NewRemoveSpecificationUnprocessableEntity() *RemoveSpecificationUnprocessableEntity {
	return &RemoveSpecificationUnprocessableEntity{}
}

/*
RemoveSpecificationUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type RemoveSpecificationUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification unprocessable entity response has a 2xx status code
func (o *RemoveSpecificationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification unprocessable entity response has a 3xx status code
func (o *RemoveSpecificationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification unprocessable entity response has a 4xx status code
func (o *RemoveSpecificationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification unprocessable entity response has a 5xx status code
func (o *RemoveSpecificationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification unprocessable entity response a status code equal to that given
func (o *RemoveSpecificationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the remove specification unprocessable entity response
func (o *RemoveSpecificationUnprocessableEntity) Code() int {
	return 422
}

func (o *RemoveSpecificationUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationUnprocessableEntity %s", 422, payload)
}

func (o *RemoveSpecificationUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationUnprocessableEntity %s", 422, payload)
}

func (o *RemoveSpecificationUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveSpecificationTooManyRequests creates a RemoveSpecificationTooManyRequests with default headers values
func NewRemoveSpecificationTooManyRequests() *RemoveSpecificationTooManyRequests {
	return &RemoveSpecificationTooManyRequests{}
}

/*
RemoveSpecificationTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RemoveSpecificationTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this remove specification too many requests response has a 2xx status code
func (o *RemoveSpecificationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove specification too many requests response has a 3xx status code
func (o *RemoveSpecificationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove specification too many requests response has a 4xx status code
func (o *RemoveSpecificationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove specification too many requests response has a 5xx status code
func (o *RemoveSpecificationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this remove specification too many requests response a status code equal to that given
func (o *RemoveSpecificationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the remove specification too many requests response
func (o *RemoveSpecificationTooManyRequests) Code() int {
	return 429
}

func (o *RemoveSpecificationTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationTooManyRequests %s", 429, payload)
}

func (o *RemoveSpecificationTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /services/{sid}/apis][%d] removeSpecificationTooManyRequests %s", 429, payload)
}

func (o *RemoveSpecificationTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RemoveSpecificationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
