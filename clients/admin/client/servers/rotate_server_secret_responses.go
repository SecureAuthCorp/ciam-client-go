// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// RotateServerSecretReader is a Reader for the RotateServerSecret structure.
type RotateServerSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RotateServerSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRotateServerSecretNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRotateServerSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRotateServerSecretUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRotateServerSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRotateServerSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRotateServerSecretTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/rotateSecret] rotateServerSecret", response, response.Code())
	}
}

// NewRotateServerSecretNoContent creates a RotateServerSecretNoContent with default headers values
func NewRotateServerSecretNoContent() *RotateServerSecretNoContent {
	return &RotateServerSecretNoContent{}
}

/*
RotateServerSecretNoContent describes a response with status code 204, with default header values.

	secret has been rotated
*/
type RotateServerSecretNoContent struct {
}

// IsSuccess returns true when this rotate server secret no content response has a 2xx status code
func (o *RotateServerSecretNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this rotate server secret no content response has a 3xx status code
func (o *RotateServerSecretNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotate server secret no content response has a 4xx status code
func (o *RotateServerSecretNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this rotate server secret no content response has a 5xx status code
func (o *RotateServerSecretNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this rotate server secret no content response a status code equal to that given
func (o *RotateServerSecretNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the rotate server secret no content response
func (o *RotateServerSecretNoContent) Code() int {
	return 204
}

func (o *RotateServerSecretNoContent) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretNoContent", 204)
}

func (o *RotateServerSecretNoContent) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretNoContent", 204)
}

func (o *RotateServerSecretNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRotateServerSecretBadRequest creates a RotateServerSecretBadRequest with default headers values
func NewRotateServerSecretBadRequest() *RotateServerSecretBadRequest {
	return &RotateServerSecretBadRequest{}
}

/*
RotateServerSecretBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RotateServerSecretBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this rotate server secret bad request response has a 2xx status code
func (o *RotateServerSecretBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotate server secret bad request response has a 3xx status code
func (o *RotateServerSecretBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotate server secret bad request response has a 4xx status code
func (o *RotateServerSecretBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotate server secret bad request response has a 5xx status code
func (o *RotateServerSecretBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this rotate server secret bad request response a status code equal to that given
func (o *RotateServerSecretBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the rotate server secret bad request response
func (o *RotateServerSecretBadRequest) Code() int {
	return 400
}

func (o *RotateServerSecretBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretBadRequest %s", 400, payload)
}

func (o *RotateServerSecretBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretBadRequest %s", 400, payload)
}

func (o *RotateServerSecretBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RotateServerSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotateServerSecretUnauthorized creates a RotateServerSecretUnauthorized with default headers values
func NewRotateServerSecretUnauthorized() *RotateServerSecretUnauthorized {
	return &RotateServerSecretUnauthorized{}
}

/*
RotateServerSecretUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RotateServerSecretUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this rotate server secret unauthorized response has a 2xx status code
func (o *RotateServerSecretUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotate server secret unauthorized response has a 3xx status code
func (o *RotateServerSecretUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotate server secret unauthorized response has a 4xx status code
func (o *RotateServerSecretUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotate server secret unauthorized response has a 5xx status code
func (o *RotateServerSecretUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this rotate server secret unauthorized response a status code equal to that given
func (o *RotateServerSecretUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the rotate server secret unauthorized response
func (o *RotateServerSecretUnauthorized) Code() int {
	return 401
}

func (o *RotateServerSecretUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretUnauthorized %s", 401, payload)
}

func (o *RotateServerSecretUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretUnauthorized %s", 401, payload)
}

func (o *RotateServerSecretUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RotateServerSecretUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotateServerSecretForbidden creates a RotateServerSecretForbidden with default headers values
func NewRotateServerSecretForbidden() *RotateServerSecretForbidden {
	return &RotateServerSecretForbidden{}
}

/*
RotateServerSecretForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RotateServerSecretForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this rotate server secret forbidden response has a 2xx status code
func (o *RotateServerSecretForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotate server secret forbidden response has a 3xx status code
func (o *RotateServerSecretForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotate server secret forbidden response has a 4xx status code
func (o *RotateServerSecretForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotate server secret forbidden response has a 5xx status code
func (o *RotateServerSecretForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this rotate server secret forbidden response a status code equal to that given
func (o *RotateServerSecretForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the rotate server secret forbidden response
func (o *RotateServerSecretForbidden) Code() int {
	return 403
}

func (o *RotateServerSecretForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretForbidden %s", 403, payload)
}

func (o *RotateServerSecretForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretForbidden %s", 403, payload)
}

func (o *RotateServerSecretForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RotateServerSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotateServerSecretNotFound creates a RotateServerSecretNotFound with default headers values
func NewRotateServerSecretNotFound() *RotateServerSecretNotFound {
	return &RotateServerSecretNotFound{}
}

/*
RotateServerSecretNotFound describes a response with status code 404, with default header values.

Not found
*/
type RotateServerSecretNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this rotate server secret not found response has a 2xx status code
func (o *RotateServerSecretNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotate server secret not found response has a 3xx status code
func (o *RotateServerSecretNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotate server secret not found response has a 4xx status code
func (o *RotateServerSecretNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotate server secret not found response has a 5xx status code
func (o *RotateServerSecretNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this rotate server secret not found response a status code equal to that given
func (o *RotateServerSecretNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the rotate server secret not found response
func (o *RotateServerSecretNotFound) Code() int {
	return 404
}

func (o *RotateServerSecretNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretNotFound %s", 404, payload)
}

func (o *RotateServerSecretNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretNotFound %s", 404, payload)
}

func (o *RotateServerSecretNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RotateServerSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRotateServerSecretTooManyRequests creates a RotateServerSecretTooManyRequests with default headers values
func NewRotateServerSecretTooManyRequests() *RotateServerSecretTooManyRequests {
	return &RotateServerSecretTooManyRequests{}
}

/*
RotateServerSecretTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RotateServerSecretTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this rotate server secret too many requests response has a 2xx status code
func (o *RotateServerSecretTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this rotate server secret too many requests response has a 3xx status code
func (o *RotateServerSecretTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this rotate server secret too many requests response has a 4xx status code
func (o *RotateServerSecretTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this rotate server secret too many requests response has a 5xx status code
func (o *RotateServerSecretTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this rotate server secret too many requests response a status code equal to that given
func (o *RotateServerSecretTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the rotate server secret too many requests response
func (o *RotateServerSecretTooManyRequests) Code() int {
	return 429
}

func (o *RotateServerSecretTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretTooManyRequests %s", 429, payload)
}

func (o *RotateServerSecretTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/rotateSecret][%d] rotateServerSecretTooManyRequests %s", 429, payload)
}

func (o *RotateServerSecretTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RotateServerSecretTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
