// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListServersBindingsParams creates a new ListServersBindingsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListServersBindingsParams() *ListServersBindingsParams {
	return &ListServersBindingsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListServersBindingsParamsWithTimeout creates a new ListServersBindingsParams object
// with the ability to set a timeout on a request.
func NewListServersBindingsParamsWithTimeout(timeout time.Duration) *ListServersBindingsParams {
	return &ListServersBindingsParams{
		timeout: timeout,
	}
}

// NewListServersBindingsParamsWithContext creates a new ListServersBindingsParams object
// with the ability to set a context for a request.
func NewListServersBindingsParamsWithContext(ctx context.Context) *ListServersBindingsParams {
	return &ListServersBindingsParams{
		Context: ctx,
	}
}

// NewListServersBindingsParamsWithHTTPClient creates a new ListServersBindingsParams object
// with the ability to set a custom HTTPClient for a request.
func NewListServersBindingsParamsWithHTTPClient(client *http.Client) *ListServersBindingsParams {
	return &ListServersBindingsParams{
		HTTPClient: client,
	}
}

/*
ListServersBindingsParams contains all the parameters to send to the API endpoint

	for the list servers bindings operation.

	Typically these are written to a http.Request.
*/
type ListServersBindingsParams struct {

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list servers bindings params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListServersBindingsParams) WithDefaults() *ListServersBindingsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list servers bindings params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListServersBindingsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list servers bindings params
func (o *ListServersBindingsParams) WithTimeout(timeout time.Duration) *ListServersBindingsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list servers bindings params
func (o *ListServersBindingsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list servers bindings params
func (o *ListServersBindingsParams) WithContext(ctx context.Context) *ListServersBindingsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list servers bindings params
func (o *ListServersBindingsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list servers bindings params
func (o *ListServersBindingsParams) WithHTTPClient(client *http.Client) *ListServersBindingsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list servers bindings params
func (o *ListServersBindingsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the list servers bindings params
func (o *ListServersBindingsParams) WithIfMatch(ifMatch *string) *ListServersBindingsParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the list servers bindings params
func (o *ListServersBindingsParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WriteToRequest writes these params to a swagger request
func (o *ListServersBindingsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
