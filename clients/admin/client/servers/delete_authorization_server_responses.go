// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteAuthorizationServerReader is a Reader for the DeleteAuthorizationServer structure.
type DeleteAuthorizationServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAuthorizationServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAuthorizationServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAuthorizationServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAuthorizationServerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAuthorizationServerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAuthorizationServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAuthorizationServerTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /servers/{wid}] deleteAuthorizationServer", response, response.Code())
	}
}

// NewDeleteAuthorizationServerNoContent creates a DeleteAuthorizationServerNoContent with default headers values
func NewDeleteAuthorizationServerNoContent() *DeleteAuthorizationServerNoContent {
	return &DeleteAuthorizationServerNoContent{}
}

/*
DeleteAuthorizationServerNoContent describes a response with status code 204, with default header values.

	Authorization server has been deleted
*/
type DeleteAuthorizationServerNoContent struct {
}

// IsSuccess returns true when this delete authorization server no content response has a 2xx status code
func (o *DeleteAuthorizationServerNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete authorization server no content response has a 3xx status code
func (o *DeleteAuthorizationServerNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization server no content response has a 4xx status code
func (o *DeleteAuthorizationServerNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete authorization server no content response has a 5xx status code
func (o *DeleteAuthorizationServerNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization server no content response a status code equal to that given
func (o *DeleteAuthorizationServerNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete authorization server no content response
func (o *DeleteAuthorizationServerNoContent) Code() int {
	return 204
}

func (o *DeleteAuthorizationServerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerNoContent", 204)
}

func (o *DeleteAuthorizationServerNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerNoContent", 204)
}

func (o *DeleteAuthorizationServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAuthorizationServerBadRequest creates a DeleteAuthorizationServerBadRequest with default headers values
func NewDeleteAuthorizationServerBadRequest() *DeleteAuthorizationServerBadRequest {
	return &DeleteAuthorizationServerBadRequest{}
}

/*
DeleteAuthorizationServerBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteAuthorizationServerBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization server bad request response has a 2xx status code
func (o *DeleteAuthorizationServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization server bad request response has a 3xx status code
func (o *DeleteAuthorizationServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization server bad request response has a 4xx status code
func (o *DeleteAuthorizationServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization server bad request response has a 5xx status code
func (o *DeleteAuthorizationServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization server bad request response a status code equal to that given
func (o *DeleteAuthorizationServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete authorization server bad request response
func (o *DeleteAuthorizationServerBadRequest) Code() int {
	return 400
}

func (o *DeleteAuthorizationServerBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerBadRequest %s", 400, payload)
}

func (o *DeleteAuthorizationServerBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerBadRequest %s", 400, payload)
}

func (o *DeleteAuthorizationServerBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerUnauthorized creates a DeleteAuthorizationServerUnauthorized with default headers values
func NewDeleteAuthorizationServerUnauthorized() *DeleteAuthorizationServerUnauthorized {
	return &DeleteAuthorizationServerUnauthorized{}
}

/*
DeleteAuthorizationServerUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAuthorizationServerUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization server unauthorized response has a 2xx status code
func (o *DeleteAuthorizationServerUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization server unauthorized response has a 3xx status code
func (o *DeleteAuthorizationServerUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization server unauthorized response has a 4xx status code
func (o *DeleteAuthorizationServerUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization server unauthorized response has a 5xx status code
func (o *DeleteAuthorizationServerUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization server unauthorized response a status code equal to that given
func (o *DeleteAuthorizationServerUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete authorization server unauthorized response
func (o *DeleteAuthorizationServerUnauthorized) Code() int {
	return 401
}

func (o *DeleteAuthorizationServerUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerUnauthorized %s", 401, payload)
}

func (o *DeleteAuthorizationServerUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerUnauthorized %s", 401, payload)
}

func (o *DeleteAuthorizationServerUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerForbidden creates a DeleteAuthorizationServerForbidden with default headers values
func NewDeleteAuthorizationServerForbidden() *DeleteAuthorizationServerForbidden {
	return &DeleteAuthorizationServerForbidden{}
}

/*
DeleteAuthorizationServerForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAuthorizationServerForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization server forbidden response has a 2xx status code
func (o *DeleteAuthorizationServerForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization server forbidden response has a 3xx status code
func (o *DeleteAuthorizationServerForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization server forbidden response has a 4xx status code
func (o *DeleteAuthorizationServerForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization server forbidden response has a 5xx status code
func (o *DeleteAuthorizationServerForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization server forbidden response a status code equal to that given
func (o *DeleteAuthorizationServerForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete authorization server forbidden response
func (o *DeleteAuthorizationServerForbidden) Code() int {
	return 403
}

func (o *DeleteAuthorizationServerForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerForbidden %s", 403, payload)
}

func (o *DeleteAuthorizationServerForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerForbidden %s", 403, payload)
}

func (o *DeleteAuthorizationServerForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerNotFound creates a DeleteAuthorizationServerNotFound with default headers values
func NewDeleteAuthorizationServerNotFound() *DeleteAuthorizationServerNotFound {
	return &DeleteAuthorizationServerNotFound{}
}

/*
DeleteAuthorizationServerNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteAuthorizationServerNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization server not found response has a 2xx status code
func (o *DeleteAuthorizationServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization server not found response has a 3xx status code
func (o *DeleteAuthorizationServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization server not found response has a 4xx status code
func (o *DeleteAuthorizationServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization server not found response has a 5xx status code
func (o *DeleteAuthorizationServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization server not found response a status code equal to that given
func (o *DeleteAuthorizationServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete authorization server not found response
func (o *DeleteAuthorizationServerNotFound) Code() int {
	return 404
}

func (o *DeleteAuthorizationServerNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerNotFound %s", 404, payload)
}

func (o *DeleteAuthorizationServerNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerNotFound %s", 404, payload)
}

func (o *DeleteAuthorizationServerNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationServerTooManyRequests creates a DeleteAuthorizationServerTooManyRequests with default headers values
func NewDeleteAuthorizationServerTooManyRequests() *DeleteAuthorizationServerTooManyRequests {
	return &DeleteAuthorizationServerTooManyRequests{}
}

/*
DeleteAuthorizationServerTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteAuthorizationServerTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization server too many requests response has a 2xx status code
func (o *DeleteAuthorizationServerTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization server too many requests response has a 3xx status code
func (o *DeleteAuthorizationServerTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization server too many requests response has a 4xx status code
func (o *DeleteAuthorizationServerTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization server too many requests response has a 5xx status code
func (o *DeleteAuthorizationServerTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization server too many requests response a status code equal to that given
func (o *DeleteAuthorizationServerTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete authorization server too many requests response
func (o *DeleteAuthorizationServerTooManyRequests) Code() int {
	return 429
}

func (o *DeleteAuthorizationServerTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerTooManyRequests %s", 429, payload)
}

func (o *DeleteAuthorizationServerTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}][%d] deleteAuthorizationServerTooManyRequests %s", 429, payload)
}

func (o *DeleteAuthorizationServerTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationServerTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
