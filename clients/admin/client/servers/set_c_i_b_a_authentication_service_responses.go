// Code generated by go-swagger; DO NOT EDIT.

package servers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// SetCIBAAuthenticationServiceReader is a Reader for the SetCIBAAuthenticationService structure.
type SetCIBAAuthenticationServiceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetCIBAAuthenticationServiceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetCIBAAuthenticationServiceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetCIBAAuthenticationServiceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetCIBAAuthenticationServiceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetCIBAAuthenticationServiceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSetCIBAAuthenticationServiceTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/ciba-authentication-service] setCIBAAuthenticationService", response, response.Code())
	}
}

// NewSetCIBAAuthenticationServiceOK creates a SetCIBAAuthenticationServiceOK with default headers values
func NewSetCIBAAuthenticationServiceOK() *SetCIBAAuthenticationServiceOK {
	return &SetCIBAAuthenticationServiceOK{}
}

/*
SetCIBAAuthenticationServiceOK describes a response with status code 200, with default header values.

CIBA authentication service
*/
type SetCIBAAuthenticationServiceOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.CIBAAuthenticationService
}

// IsSuccess returns true when this set c i b a authentication service o k response has a 2xx status code
func (o *SetCIBAAuthenticationServiceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set c i b a authentication service o k response has a 3xx status code
func (o *SetCIBAAuthenticationServiceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set c i b a authentication service o k response has a 4xx status code
func (o *SetCIBAAuthenticationServiceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set c i b a authentication service o k response has a 5xx status code
func (o *SetCIBAAuthenticationServiceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set c i b a authentication service o k response a status code equal to that given
func (o *SetCIBAAuthenticationServiceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set c i b a authentication service o k response
func (o *SetCIBAAuthenticationServiceOK) Code() int {
	return 200
}

func (o *SetCIBAAuthenticationServiceOK) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceOK  %+v", 200, o.Payload)
}

func (o *SetCIBAAuthenticationServiceOK) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceOK  %+v", 200, o.Payload)
}

func (o *SetCIBAAuthenticationServiceOK) GetPayload() *models.CIBAAuthenticationService {
	return o.Payload
}

func (o *SetCIBAAuthenticationServiceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.CIBAAuthenticationService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetCIBAAuthenticationServiceUnauthorized creates a SetCIBAAuthenticationServiceUnauthorized with default headers values
func NewSetCIBAAuthenticationServiceUnauthorized() *SetCIBAAuthenticationServiceUnauthorized {
	return &SetCIBAAuthenticationServiceUnauthorized{}
}

/*
SetCIBAAuthenticationServiceUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetCIBAAuthenticationServiceUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this set c i b a authentication service unauthorized response has a 2xx status code
func (o *SetCIBAAuthenticationServiceUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set c i b a authentication service unauthorized response has a 3xx status code
func (o *SetCIBAAuthenticationServiceUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set c i b a authentication service unauthorized response has a 4xx status code
func (o *SetCIBAAuthenticationServiceUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set c i b a authentication service unauthorized response has a 5xx status code
func (o *SetCIBAAuthenticationServiceUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set c i b a authentication service unauthorized response a status code equal to that given
func (o *SetCIBAAuthenticationServiceUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set c i b a authentication service unauthorized response
func (o *SetCIBAAuthenticationServiceUnauthorized) Code() int {
	return 401
}

func (o *SetCIBAAuthenticationServiceUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *SetCIBAAuthenticationServiceUnauthorized) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceUnauthorized  %+v", 401, o.Payload)
}

func (o *SetCIBAAuthenticationServiceUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetCIBAAuthenticationServiceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetCIBAAuthenticationServiceForbidden creates a SetCIBAAuthenticationServiceForbidden with default headers values
func NewSetCIBAAuthenticationServiceForbidden() *SetCIBAAuthenticationServiceForbidden {
	return &SetCIBAAuthenticationServiceForbidden{}
}

/*
SetCIBAAuthenticationServiceForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetCIBAAuthenticationServiceForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this set c i b a authentication service forbidden response has a 2xx status code
func (o *SetCIBAAuthenticationServiceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set c i b a authentication service forbidden response has a 3xx status code
func (o *SetCIBAAuthenticationServiceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set c i b a authentication service forbidden response has a 4xx status code
func (o *SetCIBAAuthenticationServiceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set c i b a authentication service forbidden response has a 5xx status code
func (o *SetCIBAAuthenticationServiceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set c i b a authentication service forbidden response a status code equal to that given
func (o *SetCIBAAuthenticationServiceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set c i b a authentication service forbidden response
func (o *SetCIBAAuthenticationServiceForbidden) Code() int {
	return 403
}

func (o *SetCIBAAuthenticationServiceForbidden) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceForbidden  %+v", 403, o.Payload)
}

func (o *SetCIBAAuthenticationServiceForbidden) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceForbidden  %+v", 403, o.Payload)
}

func (o *SetCIBAAuthenticationServiceForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetCIBAAuthenticationServiceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetCIBAAuthenticationServiceNotFound creates a SetCIBAAuthenticationServiceNotFound with default headers values
func NewSetCIBAAuthenticationServiceNotFound() *SetCIBAAuthenticationServiceNotFound {
	return &SetCIBAAuthenticationServiceNotFound{}
}

/*
SetCIBAAuthenticationServiceNotFound describes a response with status code 404, with default header values.

Not found
*/
type SetCIBAAuthenticationServiceNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this set c i b a authentication service not found response has a 2xx status code
func (o *SetCIBAAuthenticationServiceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set c i b a authentication service not found response has a 3xx status code
func (o *SetCIBAAuthenticationServiceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set c i b a authentication service not found response has a 4xx status code
func (o *SetCIBAAuthenticationServiceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set c i b a authentication service not found response has a 5xx status code
func (o *SetCIBAAuthenticationServiceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set c i b a authentication service not found response a status code equal to that given
func (o *SetCIBAAuthenticationServiceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set c i b a authentication service not found response
func (o *SetCIBAAuthenticationServiceNotFound) Code() int {
	return 404
}

func (o *SetCIBAAuthenticationServiceNotFound) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceNotFound  %+v", 404, o.Payload)
}

func (o *SetCIBAAuthenticationServiceNotFound) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceNotFound  %+v", 404, o.Payload)
}

func (o *SetCIBAAuthenticationServiceNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetCIBAAuthenticationServiceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetCIBAAuthenticationServiceTooManyRequests creates a SetCIBAAuthenticationServiceTooManyRequests with default headers values
func NewSetCIBAAuthenticationServiceTooManyRequests() *SetCIBAAuthenticationServiceTooManyRequests {
	return &SetCIBAAuthenticationServiceTooManyRequests{}
}

/*
SetCIBAAuthenticationServiceTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SetCIBAAuthenticationServiceTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this set c i b a authentication service too many requests response has a 2xx status code
func (o *SetCIBAAuthenticationServiceTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set c i b a authentication service too many requests response has a 3xx status code
func (o *SetCIBAAuthenticationServiceTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set c i b a authentication service too many requests response has a 4xx status code
func (o *SetCIBAAuthenticationServiceTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this set c i b a authentication service too many requests response has a 5xx status code
func (o *SetCIBAAuthenticationServiceTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this set c i b a authentication service too many requests response a status code equal to that given
func (o *SetCIBAAuthenticationServiceTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the set c i b a authentication service too many requests response
func (o *SetCIBAAuthenticationServiceTooManyRequests) Code() int {
	return 429
}

func (o *SetCIBAAuthenticationServiceTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetCIBAAuthenticationServiceTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/ciba-authentication-service][%d] setCIBAAuthenticationServiceTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetCIBAAuthenticationServiceTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetCIBAAuthenticationServiceTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
