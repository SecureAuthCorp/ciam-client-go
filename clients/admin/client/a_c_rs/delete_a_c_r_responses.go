// Code generated by go-swagger; DO NOT EDIT.

package a_c_rs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteACRReader is a Reader for the DeleteACR structure.
type DeleteACRReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteACRReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteACRNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteACRUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteACRForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteACRNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteACRTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /servers/{wid}/acrs/{acrID}] deleteACR", response, response.Code())
	}
}

// NewDeleteACRNoContent creates a DeleteACRNoContent with default headers values
func NewDeleteACRNoContent() *DeleteACRNoContent {
	return &DeleteACRNoContent{}
}

/*
DeleteACRNoContent describes a response with status code 204, with default header values.

	ACR has been deleted
*/
type DeleteACRNoContent struct {
}

// IsSuccess returns true when this delete a c r no content response has a 2xx status code
func (o *DeleteACRNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete a c r no content response has a 3xx status code
func (o *DeleteACRNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a c r no content response has a 4xx status code
func (o *DeleteACRNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete a c r no content response has a 5xx status code
func (o *DeleteACRNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a c r no content response a status code equal to that given
func (o *DeleteACRNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete a c r no content response
func (o *DeleteACRNoContent) Code() int {
	return 204
}

func (o *DeleteACRNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRNoContent", 204)
}

func (o *DeleteACRNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRNoContent", 204)
}

func (o *DeleteACRNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteACRUnauthorized creates a DeleteACRUnauthorized with default headers values
func NewDeleteACRUnauthorized() *DeleteACRUnauthorized {
	return &DeleteACRUnauthorized{}
}

/*
DeleteACRUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteACRUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete a c r unauthorized response has a 2xx status code
func (o *DeleteACRUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a c r unauthorized response has a 3xx status code
func (o *DeleteACRUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a c r unauthorized response has a 4xx status code
func (o *DeleteACRUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a c r unauthorized response has a 5xx status code
func (o *DeleteACRUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a c r unauthorized response a status code equal to that given
func (o *DeleteACRUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete a c r unauthorized response
func (o *DeleteACRUnauthorized) Code() int {
	return 401
}

func (o *DeleteACRUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRUnauthorized %s", 401, payload)
}

func (o *DeleteACRUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRUnauthorized %s", 401, payload)
}

func (o *DeleteACRUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteACRUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteACRForbidden creates a DeleteACRForbidden with default headers values
func NewDeleteACRForbidden() *DeleteACRForbidden {
	return &DeleteACRForbidden{}
}

/*
DeleteACRForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteACRForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete a c r forbidden response has a 2xx status code
func (o *DeleteACRForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a c r forbidden response has a 3xx status code
func (o *DeleteACRForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a c r forbidden response has a 4xx status code
func (o *DeleteACRForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a c r forbidden response has a 5xx status code
func (o *DeleteACRForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a c r forbidden response a status code equal to that given
func (o *DeleteACRForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete a c r forbidden response
func (o *DeleteACRForbidden) Code() int {
	return 403
}

func (o *DeleteACRForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRForbidden %s", 403, payload)
}

func (o *DeleteACRForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRForbidden %s", 403, payload)
}

func (o *DeleteACRForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteACRForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteACRNotFound creates a DeleteACRNotFound with default headers values
func NewDeleteACRNotFound() *DeleteACRNotFound {
	return &DeleteACRNotFound{}
}

/*
DeleteACRNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteACRNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete a c r not found response has a 2xx status code
func (o *DeleteACRNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a c r not found response has a 3xx status code
func (o *DeleteACRNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a c r not found response has a 4xx status code
func (o *DeleteACRNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a c r not found response has a 5xx status code
func (o *DeleteACRNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a c r not found response a status code equal to that given
func (o *DeleteACRNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete a c r not found response
func (o *DeleteACRNotFound) Code() int {
	return 404
}

func (o *DeleteACRNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRNotFound %s", 404, payload)
}

func (o *DeleteACRNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRNotFound %s", 404, payload)
}

func (o *DeleteACRNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteACRNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteACRTooManyRequests creates a DeleteACRTooManyRequests with default headers values
func NewDeleteACRTooManyRequests() *DeleteACRTooManyRequests {
	return &DeleteACRTooManyRequests{}
}

/*
DeleteACRTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteACRTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete a c r too many requests response has a 2xx status code
func (o *DeleteACRTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a c r too many requests response has a 3xx status code
func (o *DeleteACRTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a c r too many requests response has a 4xx status code
func (o *DeleteACRTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a c r too many requests response has a 5xx status code
func (o *DeleteACRTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a c r too many requests response a status code equal to that given
func (o *DeleteACRTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete a c r too many requests response
func (o *DeleteACRTooManyRequests) Code() int {
	return 429
}

func (o *DeleteACRTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRTooManyRequests %s", 429, payload)
}

func (o *DeleteACRTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/acrs/{acrID}][%d] deleteACRTooManyRequests %s", 429, payload)
}

func (o *DeleteACRTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteACRTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
