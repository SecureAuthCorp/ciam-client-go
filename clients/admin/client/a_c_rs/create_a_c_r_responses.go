// Code generated by go-swagger; DO NOT EDIT.

package a_c_rs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateACRReader is a Reader for the CreateACR structure.
type CreateACRReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateACRReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateACRCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateACRBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateACRUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateACRForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateACRNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateACRConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateACRUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateACRTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/acrs] createACR", response, response.Code())
	}
}

// NewCreateACRCreated creates a CreateACRCreated with default headers values
func NewCreateACRCreated() *CreateACRCreated {
	return &CreateACRCreated{}
}

/*
CreateACRCreated describes a response with status code 201, with default header values.

ACR
*/
type CreateACRCreated struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ACR
}

// IsSuccess returns true when this create a c r created response has a 2xx status code
func (o *CreateACRCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create a c r created response has a 3xx status code
func (o *CreateACRCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r created response has a 4xx status code
func (o *CreateACRCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create a c r created response has a 5xx status code
func (o *CreateACRCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r created response a status code equal to that given
func (o *CreateACRCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create a c r created response
func (o *CreateACRCreated) Code() int {
	return 201
}

func (o *CreateACRCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRCreated %s", 201, payload)
}

func (o *CreateACRCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRCreated %s", 201, payload)
}

func (o *CreateACRCreated) GetPayload() *models.ACR {
	return o.Payload
}

func (o *CreateACRCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ACR)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRBadRequest creates a CreateACRBadRequest with default headers values
func NewCreateACRBadRequest() *CreateACRBadRequest {
	return &CreateACRBadRequest{}
}

/*
CreateACRBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateACRBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r bad request response has a 2xx status code
func (o *CreateACRBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r bad request response has a 3xx status code
func (o *CreateACRBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r bad request response has a 4xx status code
func (o *CreateACRBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r bad request response has a 5xx status code
func (o *CreateACRBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r bad request response a status code equal to that given
func (o *CreateACRBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create a c r bad request response
func (o *CreateACRBadRequest) Code() int {
	return 400
}

func (o *CreateACRBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRBadRequest %s", 400, payload)
}

func (o *CreateACRBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRBadRequest %s", 400, payload)
}

func (o *CreateACRBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRUnauthorized creates a CreateACRUnauthorized with default headers values
func NewCreateACRUnauthorized() *CreateACRUnauthorized {
	return &CreateACRUnauthorized{}
}

/*
CreateACRUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateACRUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r unauthorized response has a 2xx status code
func (o *CreateACRUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r unauthorized response has a 3xx status code
func (o *CreateACRUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r unauthorized response has a 4xx status code
func (o *CreateACRUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r unauthorized response has a 5xx status code
func (o *CreateACRUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r unauthorized response a status code equal to that given
func (o *CreateACRUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create a c r unauthorized response
func (o *CreateACRUnauthorized) Code() int {
	return 401
}

func (o *CreateACRUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRUnauthorized %s", 401, payload)
}

func (o *CreateACRUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRUnauthorized %s", 401, payload)
}

func (o *CreateACRUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRForbidden creates a CreateACRForbidden with default headers values
func NewCreateACRForbidden() *CreateACRForbidden {
	return &CreateACRForbidden{}
}

/*
CreateACRForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateACRForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r forbidden response has a 2xx status code
func (o *CreateACRForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r forbidden response has a 3xx status code
func (o *CreateACRForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r forbidden response has a 4xx status code
func (o *CreateACRForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r forbidden response has a 5xx status code
func (o *CreateACRForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r forbidden response a status code equal to that given
func (o *CreateACRForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create a c r forbidden response
func (o *CreateACRForbidden) Code() int {
	return 403
}

func (o *CreateACRForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRForbidden %s", 403, payload)
}

func (o *CreateACRForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRForbidden %s", 403, payload)
}

func (o *CreateACRForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRNotFound creates a CreateACRNotFound with default headers values
func NewCreateACRNotFound() *CreateACRNotFound {
	return &CreateACRNotFound{}
}

/*
CreateACRNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateACRNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r not found response has a 2xx status code
func (o *CreateACRNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r not found response has a 3xx status code
func (o *CreateACRNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r not found response has a 4xx status code
func (o *CreateACRNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r not found response has a 5xx status code
func (o *CreateACRNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r not found response a status code equal to that given
func (o *CreateACRNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create a c r not found response
func (o *CreateACRNotFound) Code() int {
	return 404
}

func (o *CreateACRNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRNotFound %s", 404, payload)
}

func (o *CreateACRNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRNotFound %s", 404, payload)
}

func (o *CreateACRNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRConflict creates a CreateACRConflict with default headers values
func NewCreateACRConflict() *CreateACRConflict {
	return &CreateACRConflict{}
}

/*
CreateACRConflict describes a response with status code 409, with default header values.

Unprocessable entity
*/
type CreateACRConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r conflict response has a 2xx status code
func (o *CreateACRConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r conflict response has a 3xx status code
func (o *CreateACRConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r conflict response has a 4xx status code
func (o *CreateACRConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r conflict response has a 5xx status code
func (o *CreateACRConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r conflict response a status code equal to that given
func (o *CreateACRConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create a c r conflict response
func (o *CreateACRConflict) Code() int {
	return 409
}

func (o *CreateACRConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRConflict %s", 409, payload)
}

func (o *CreateACRConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRConflict %s", 409, payload)
}

func (o *CreateACRConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRUnprocessableEntity creates a CreateACRUnprocessableEntity with default headers values
func NewCreateACRUnprocessableEntity() *CreateACRUnprocessableEntity {
	return &CreateACRUnprocessableEntity{}
}

/*
CreateACRUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateACRUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r unprocessable entity response has a 2xx status code
func (o *CreateACRUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r unprocessable entity response has a 3xx status code
func (o *CreateACRUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r unprocessable entity response has a 4xx status code
func (o *CreateACRUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r unprocessable entity response has a 5xx status code
func (o *CreateACRUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r unprocessable entity response a status code equal to that given
func (o *CreateACRUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create a c r unprocessable entity response
func (o *CreateACRUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateACRUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRUnprocessableEntity %s", 422, payload)
}

func (o *CreateACRUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRUnprocessableEntity %s", 422, payload)
}

func (o *CreateACRUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateACRTooManyRequests creates a CreateACRTooManyRequests with default headers values
func NewCreateACRTooManyRequests() *CreateACRTooManyRequests {
	return &CreateACRTooManyRequests{}
}

/*
CreateACRTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateACRTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create a c r too many requests response has a 2xx status code
func (o *CreateACRTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create a c r too many requests response has a 3xx status code
func (o *CreateACRTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create a c r too many requests response has a 4xx status code
func (o *CreateACRTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create a c r too many requests response has a 5xx status code
func (o *CreateACRTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create a c r too many requests response a status code equal to that given
func (o *CreateACRTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create a c r too many requests response
func (o *CreateACRTooManyRequests) Code() int {
	return 429
}

func (o *CreateACRTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRTooManyRequests %s", 429, payload)
}

func (o *CreateACRTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/acrs][%d] createACRTooManyRequests %s", 429, payload)
}

func (o *CreateACRTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateACRTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
