// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetDefaultTemplateReader is a Reader for the GetDefaultTemplate structure.
type GetDefaultTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDefaultTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDefaultTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDefaultTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDefaultTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDefaultTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDefaultTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDefaultTemplateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /themes/template/{fsPath}] getDefaultTemplate", response, response.Code())
	}
}

// NewGetDefaultTemplateOK creates a GetDefaultTemplateOK with default headers values
func NewGetDefaultTemplateOK() *GetDefaultTemplateOK {
	return &GetDefaultTemplateOK{}
}

/*
GetDefaultTemplateOK describes a response with status code 200, with default header values.

Template
*/
type GetDefaultTemplateOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.Template
}

// IsSuccess returns true when this get default template o k response has a 2xx status code
func (o *GetDefaultTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get default template o k response has a 3xx status code
func (o *GetDefaultTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get default template o k response has a 4xx status code
func (o *GetDefaultTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get default template o k response has a 5xx status code
func (o *GetDefaultTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get default template o k response a status code equal to that given
func (o *GetDefaultTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get default template o k response
func (o *GetDefaultTemplateOK) Code() int {
	return 200
}

func (o *GetDefaultTemplateOK) Error() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateOK  %+v", 200, o.Payload)
}

func (o *GetDefaultTemplateOK) String() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateOK  %+v", 200, o.Payload)
}

func (o *GetDefaultTemplateOK) GetPayload() *models.Template {
	return o.Payload
}

func (o *GetDefaultTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.Template)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDefaultTemplateBadRequest creates a GetDefaultTemplateBadRequest with default headers values
func NewGetDefaultTemplateBadRequest() *GetDefaultTemplateBadRequest {
	return &GetDefaultTemplateBadRequest{}
}

/*
GetDefaultTemplateBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetDefaultTemplateBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get default template bad request response has a 2xx status code
func (o *GetDefaultTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get default template bad request response has a 3xx status code
func (o *GetDefaultTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get default template bad request response has a 4xx status code
func (o *GetDefaultTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get default template bad request response has a 5xx status code
func (o *GetDefaultTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get default template bad request response a status code equal to that given
func (o *GetDefaultTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get default template bad request response
func (o *GetDefaultTemplateBadRequest) Code() int {
	return 400
}

func (o *GetDefaultTemplateBadRequest) Error() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *GetDefaultTemplateBadRequest) String() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateBadRequest  %+v", 400, o.Payload)
}

func (o *GetDefaultTemplateBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDefaultTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDefaultTemplateUnauthorized creates a GetDefaultTemplateUnauthorized with default headers values
func NewGetDefaultTemplateUnauthorized() *GetDefaultTemplateUnauthorized {
	return &GetDefaultTemplateUnauthorized{}
}

/*
GetDefaultTemplateUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDefaultTemplateUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get default template unauthorized response has a 2xx status code
func (o *GetDefaultTemplateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get default template unauthorized response has a 3xx status code
func (o *GetDefaultTemplateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get default template unauthorized response has a 4xx status code
func (o *GetDefaultTemplateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get default template unauthorized response has a 5xx status code
func (o *GetDefaultTemplateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get default template unauthorized response a status code equal to that given
func (o *GetDefaultTemplateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get default template unauthorized response
func (o *GetDefaultTemplateUnauthorized) Code() int {
	return 401
}

func (o *GetDefaultTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDefaultTemplateUnauthorized) String() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *GetDefaultTemplateUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDefaultTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDefaultTemplateForbidden creates a GetDefaultTemplateForbidden with default headers values
func NewGetDefaultTemplateForbidden() *GetDefaultTemplateForbidden {
	return &GetDefaultTemplateForbidden{}
}

/*
GetDefaultTemplateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDefaultTemplateForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get default template forbidden response has a 2xx status code
func (o *GetDefaultTemplateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get default template forbidden response has a 3xx status code
func (o *GetDefaultTemplateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get default template forbidden response has a 4xx status code
func (o *GetDefaultTemplateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get default template forbidden response has a 5xx status code
func (o *GetDefaultTemplateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get default template forbidden response a status code equal to that given
func (o *GetDefaultTemplateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get default template forbidden response
func (o *GetDefaultTemplateForbidden) Code() int {
	return 403
}

func (o *GetDefaultTemplateForbidden) Error() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateForbidden  %+v", 403, o.Payload)
}

func (o *GetDefaultTemplateForbidden) String() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateForbidden  %+v", 403, o.Payload)
}

func (o *GetDefaultTemplateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDefaultTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDefaultTemplateNotFound creates a GetDefaultTemplateNotFound with default headers values
func NewGetDefaultTemplateNotFound() *GetDefaultTemplateNotFound {
	return &GetDefaultTemplateNotFound{}
}

/*
GetDefaultTemplateNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetDefaultTemplateNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get default template not found response has a 2xx status code
func (o *GetDefaultTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get default template not found response has a 3xx status code
func (o *GetDefaultTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get default template not found response has a 4xx status code
func (o *GetDefaultTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get default template not found response has a 5xx status code
func (o *GetDefaultTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get default template not found response a status code equal to that given
func (o *GetDefaultTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get default template not found response
func (o *GetDefaultTemplateNotFound) Code() int {
	return 404
}

func (o *GetDefaultTemplateNotFound) Error() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateNotFound  %+v", 404, o.Payload)
}

func (o *GetDefaultTemplateNotFound) String() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateNotFound  %+v", 404, o.Payload)
}

func (o *GetDefaultTemplateNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDefaultTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDefaultTemplateTooManyRequests creates a GetDefaultTemplateTooManyRequests with default headers values
func NewGetDefaultTemplateTooManyRequests() *GetDefaultTemplateTooManyRequests {
	return &GetDefaultTemplateTooManyRequests{}
}

/*
GetDefaultTemplateTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetDefaultTemplateTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get default template too many requests response has a 2xx status code
func (o *GetDefaultTemplateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get default template too many requests response has a 3xx status code
func (o *GetDefaultTemplateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get default template too many requests response has a 4xx status code
func (o *GetDefaultTemplateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get default template too many requests response has a 5xx status code
func (o *GetDefaultTemplateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get default template too many requests response a status code equal to that given
func (o *GetDefaultTemplateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get default template too many requests response
func (o *GetDefaultTemplateTooManyRequests) Code() int {
	return 429
}

func (o *GetDefaultTemplateTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDefaultTemplateTooManyRequests) String() string {
	return fmt.Sprintf("[GET /themes/template/{fsPath}][%d] getDefaultTemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetDefaultTemplateTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetDefaultTemplateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
