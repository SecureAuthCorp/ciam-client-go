// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListThemeTemplatesReader is a Reader for the ListThemeTemplates structure.
type ListThemeTemplatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListThemeTemplatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListThemeTemplatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListThemeTemplatesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListThemeTemplatesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListThemeTemplatesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /theme/{themeID}/templates] listThemeTemplates", response, response.Code())
	}
}

// NewListThemeTemplatesOK creates a ListThemeTemplatesOK with default headers values
func NewListThemeTemplatesOK() *ListThemeTemplatesOK {
	return &ListThemeTemplatesOK{}
}

/*
ListThemeTemplatesOK describes a response with status code 200, with default header values.

TemplatePaths
*/
type ListThemeTemplatesOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.TemplatePaths
}

// IsSuccess returns true when this list theme templates o k response has a 2xx status code
func (o *ListThemeTemplatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list theme templates o k response has a 3xx status code
func (o *ListThemeTemplatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list theme templates o k response has a 4xx status code
func (o *ListThemeTemplatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list theme templates o k response has a 5xx status code
func (o *ListThemeTemplatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list theme templates o k response a status code equal to that given
func (o *ListThemeTemplatesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list theme templates o k response
func (o *ListThemeTemplatesOK) Code() int {
	return 200
}

func (o *ListThemeTemplatesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesOK %s", 200, payload)
}

func (o *ListThemeTemplatesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesOK %s", 200, payload)
}

func (o *ListThemeTemplatesOK) GetPayload() *models.TemplatePaths {
	return o.Payload
}

func (o *ListThemeTemplatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.TemplatePaths)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListThemeTemplatesUnauthorized creates a ListThemeTemplatesUnauthorized with default headers values
func NewListThemeTemplatesUnauthorized() *ListThemeTemplatesUnauthorized {
	return &ListThemeTemplatesUnauthorized{}
}

/*
ListThemeTemplatesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListThemeTemplatesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list theme templates unauthorized response has a 2xx status code
func (o *ListThemeTemplatesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list theme templates unauthorized response has a 3xx status code
func (o *ListThemeTemplatesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list theme templates unauthorized response has a 4xx status code
func (o *ListThemeTemplatesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list theme templates unauthorized response has a 5xx status code
func (o *ListThemeTemplatesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list theme templates unauthorized response a status code equal to that given
func (o *ListThemeTemplatesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list theme templates unauthorized response
func (o *ListThemeTemplatesUnauthorized) Code() int {
	return 401
}

func (o *ListThemeTemplatesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesUnauthorized %s", 401, payload)
}

func (o *ListThemeTemplatesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesUnauthorized %s", 401, payload)
}

func (o *ListThemeTemplatesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListThemeTemplatesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListThemeTemplatesForbidden creates a ListThemeTemplatesForbidden with default headers values
func NewListThemeTemplatesForbidden() *ListThemeTemplatesForbidden {
	return &ListThemeTemplatesForbidden{}
}

/*
ListThemeTemplatesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListThemeTemplatesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list theme templates forbidden response has a 2xx status code
func (o *ListThemeTemplatesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list theme templates forbidden response has a 3xx status code
func (o *ListThemeTemplatesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list theme templates forbidden response has a 4xx status code
func (o *ListThemeTemplatesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list theme templates forbidden response has a 5xx status code
func (o *ListThemeTemplatesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list theme templates forbidden response a status code equal to that given
func (o *ListThemeTemplatesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list theme templates forbidden response
func (o *ListThemeTemplatesForbidden) Code() int {
	return 403
}

func (o *ListThemeTemplatesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesForbidden %s", 403, payload)
}

func (o *ListThemeTemplatesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesForbidden %s", 403, payload)
}

func (o *ListThemeTemplatesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListThemeTemplatesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListThemeTemplatesTooManyRequests creates a ListThemeTemplatesTooManyRequests with default headers values
func NewListThemeTemplatesTooManyRequests() *ListThemeTemplatesTooManyRequests {
	return &ListThemeTemplatesTooManyRequests{}
}

/*
ListThemeTemplatesTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListThemeTemplatesTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list theme templates too many requests response has a 2xx status code
func (o *ListThemeTemplatesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list theme templates too many requests response has a 3xx status code
func (o *ListThemeTemplatesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list theme templates too many requests response has a 4xx status code
func (o *ListThemeTemplatesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list theme templates too many requests response has a 5xx status code
func (o *ListThemeTemplatesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list theme templates too many requests response a status code equal to that given
func (o *ListThemeTemplatesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list theme templates too many requests response
func (o *ListThemeTemplatesTooManyRequests) Code() int {
	return 429
}

func (o *ListThemeTemplatesTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesTooManyRequests %s", 429, payload)
}

func (o *ListThemeTemplatesTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /theme/{themeID}/templates][%d] listThemeTemplatesTooManyRequests %s", 429, payload)
}

func (o *ListThemeTemplatesTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListThemeTemplatesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
