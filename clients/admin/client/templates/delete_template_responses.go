// Code generated by go-swagger; DO NOT EDIT.

package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteTemplateReader is a Reader for the DeleteTemplate structure.
type DeleteTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteTemplateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTemplateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteTemplateTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteTemplateNoContent creates a DeleteTemplateNoContent with default headers values
func NewDeleteTemplateNoContent() *DeleteTemplateNoContent {
	return &DeleteTemplateNoContent{}
}

/*
DeleteTemplateNoContent describes a response with status code 204, with default header values.

	template has been deleted
*/
type DeleteTemplateNoContent struct {
}

// IsSuccess returns true when this delete template no content response has a 2xx status code
func (o *DeleteTemplateNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete template no content response has a 3xx status code
func (o *DeleteTemplateNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template no content response has a 4xx status code
func (o *DeleteTemplateNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete template no content response has a 5xx status code
func (o *DeleteTemplateNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template no content response a status code equal to that given
func (o *DeleteTemplateNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteTemplateNoContent) Error() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateNoContent ", 204)
}

func (o *DeleteTemplateNoContent) String() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateNoContent ", 204)
}

func (o *DeleteTemplateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTemplateUnauthorized creates a DeleteTemplateUnauthorized with default headers values
func NewDeleteTemplateUnauthorized() *DeleteTemplateUnauthorized {
	return &DeleteTemplateUnauthorized{}
}

/*
DeleteTemplateUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type DeleteTemplateUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete template unauthorized response has a 2xx status code
func (o *DeleteTemplateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template unauthorized response has a 3xx status code
func (o *DeleteTemplateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template unauthorized response has a 4xx status code
func (o *DeleteTemplateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template unauthorized response has a 5xx status code
func (o *DeleteTemplateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template unauthorized response a status code equal to that given
func (o *DeleteTemplateUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTemplateUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteTemplateUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateForbidden creates a DeleteTemplateForbidden with default headers values
func NewDeleteTemplateForbidden() *DeleteTemplateForbidden {
	return &DeleteTemplateForbidden{}
}

/*
DeleteTemplateForbidden describes a response with status code 403, with default header values.

HttpError
*/
type DeleteTemplateForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete template forbidden response has a 2xx status code
func (o *DeleteTemplateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template forbidden response has a 3xx status code
func (o *DeleteTemplateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template forbidden response has a 4xx status code
func (o *DeleteTemplateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template forbidden response has a 5xx status code
func (o *DeleteTemplateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template forbidden response a status code equal to that given
func (o *DeleteTemplateForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteTemplateForbidden) Error() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTemplateForbidden) String() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateForbidden  %+v", 403, o.Payload)
}

func (o *DeleteTemplateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTemplateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateNotFound creates a DeleteTemplateNotFound with default headers values
func NewDeleteTemplateNotFound() *DeleteTemplateNotFound {
	return &DeleteTemplateNotFound{}
}

/*
DeleteTemplateNotFound describes a response with status code 404, with default header values.

HttpError
*/
type DeleteTemplateNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete template not found response has a 2xx status code
func (o *DeleteTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template not found response has a 3xx status code
func (o *DeleteTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template not found response has a 4xx status code
func (o *DeleteTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template not found response has a 5xx status code
func (o *DeleteTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template not found response a status code equal to that given
func (o *DeleteTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteTemplateNotFound) Error() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTemplateNotFound) String() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateNotFound  %+v", 404, o.Payload)
}

func (o *DeleteTemplateNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTemplateTooManyRequests creates a DeleteTemplateTooManyRequests with default headers values
func NewDeleteTemplateTooManyRequests() *DeleteTemplateTooManyRequests {
	return &DeleteTemplateTooManyRequests{}
}

/*
DeleteTemplateTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type DeleteTemplateTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete template too many requests response has a 2xx status code
func (o *DeleteTemplateTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete template too many requests response has a 3xx status code
func (o *DeleteTemplateTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete template too many requests response has a 4xx status code
func (o *DeleteTemplateTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete template too many requests response has a 5xx status code
func (o *DeleteTemplateTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete template too many requests response a status code equal to that given
func (o *DeleteTemplateTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteTemplateTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTemplateTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /theme/{themeID}/template/{fsPath}][%d] deleteTemplateTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteTemplateTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteTemplateTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
