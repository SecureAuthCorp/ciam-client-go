// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListPrivacyLedgerEventsBySubjectReader is a Reader for the ListPrivacyLedgerEventsBySubject structure.
type ListPrivacyLedgerEventsBySubjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPrivacyLedgerEventsBySubjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPrivacyLedgerEventsBySubjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPrivacyLedgerEventsBySubjectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPrivacyLedgerEventsBySubjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPrivacyLedgerEventsBySubjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListPrivacyLedgerEventsBySubjectTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListPrivacyLedgerEventsBySubjectOK creates a ListPrivacyLedgerEventsBySubjectOK with default headers values
func NewListPrivacyLedgerEventsBySubjectOK() *ListPrivacyLedgerEventsBySubjectOK {
	return &ListPrivacyLedgerEventsBySubjectOK{}
}

/*
ListPrivacyLedgerEventsBySubjectOK describes a response with status code 200, with default header values.

Privacy ledger events
*/
type ListPrivacyLedgerEventsBySubjectOK struct {
	Payload *models.PrivacyLedgerEvents
}

// IsSuccess returns true when this list privacy ledger events by subject o k response has a 2xx status code
func (o *ListPrivacyLedgerEventsBySubjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list privacy ledger events by subject o k response has a 3xx status code
func (o *ListPrivacyLedgerEventsBySubjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events by subject o k response has a 4xx status code
func (o *ListPrivacyLedgerEventsBySubjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list privacy ledger events by subject o k response has a 5xx status code
func (o *ListPrivacyLedgerEventsBySubjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events by subject o k response a status code equal to that given
func (o *ListPrivacyLedgerEventsBySubjectOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListPrivacyLedgerEventsBySubjectOK) Error() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectOK  %+v", 200, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectOK) String() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectOK  %+v", 200, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectOK) GetPayload() *models.PrivacyLedgerEvents {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrivacyLedgerEvents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectUnauthorized creates a ListPrivacyLedgerEventsBySubjectUnauthorized with default headers values
func NewListPrivacyLedgerEventsBySubjectUnauthorized() *ListPrivacyLedgerEventsBySubjectUnauthorized {
	return &ListPrivacyLedgerEventsBySubjectUnauthorized{}
}

/*
ListPrivacyLedgerEventsBySubjectUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events by subject unauthorized response has a 2xx status code
func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events by subject unauthorized response has a 3xx status code
func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events by subject unauthorized response has a 4xx status code
func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events by subject unauthorized response has a 5xx status code
func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events by subject unauthorized response a status code equal to that given
func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) Error() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) String() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectForbidden creates a ListPrivacyLedgerEventsBySubjectForbidden with default headers values
func NewListPrivacyLedgerEventsBySubjectForbidden() *ListPrivacyLedgerEventsBySubjectForbidden {
	return &ListPrivacyLedgerEventsBySubjectForbidden{}
}

/*
ListPrivacyLedgerEventsBySubjectForbidden describes a response with status code 403, with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events by subject forbidden response has a 2xx status code
func (o *ListPrivacyLedgerEventsBySubjectForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events by subject forbidden response has a 3xx status code
func (o *ListPrivacyLedgerEventsBySubjectForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events by subject forbidden response has a 4xx status code
func (o *ListPrivacyLedgerEventsBySubjectForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events by subject forbidden response has a 5xx status code
func (o *ListPrivacyLedgerEventsBySubjectForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events by subject forbidden response a status code equal to that given
func (o *ListPrivacyLedgerEventsBySubjectForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) Error() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectForbidden  %+v", 403, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) String() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectForbidden  %+v", 403, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectNotFound creates a ListPrivacyLedgerEventsBySubjectNotFound with default headers values
func NewListPrivacyLedgerEventsBySubjectNotFound() *ListPrivacyLedgerEventsBySubjectNotFound {
	return &ListPrivacyLedgerEventsBySubjectNotFound{}
}

/*
ListPrivacyLedgerEventsBySubjectNotFound describes a response with status code 404, with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events by subject not found response has a 2xx status code
func (o *ListPrivacyLedgerEventsBySubjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events by subject not found response has a 3xx status code
func (o *ListPrivacyLedgerEventsBySubjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events by subject not found response has a 4xx status code
func (o *ListPrivacyLedgerEventsBySubjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events by subject not found response has a 5xx status code
func (o *ListPrivacyLedgerEventsBySubjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events by subject not found response a status code equal to that given
func (o *ListPrivacyLedgerEventsBySubjectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) Error() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectNotFound  %+v", 404, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) String() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectNotFound  %+v", 404, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsBySubjectTooManyRequests creates a ListPrivacyLedgerEventsBySubjectTooManyRequests with default headers values
func NewListPrivacyLedgerEventsBySubjectTooManyRequests() *ListPrivacyLedgerEventsBySubjectTooManyRequests {
	return &ListPrivacyLedgerEventsBySubjectTooManyRequests{}
}

/*
ListPrivacyLedgerEventsBySubjectTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type ListPrivacyLedgerEventsBySubjectTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events by subject too many requests response has a 2xx status code
func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events by subject too many requests response has a 3xx status code
func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events by subject too many requests response has a 4xx status code
func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events by subject too many requests response has a 5xx status code
func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events by subject too many requests response a status code equal to that given
func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) String() string {
	return fmt.Sprintf("[GET /events][%d] listPrivacyLedgerEventsBySubjectTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsBySubjectTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
