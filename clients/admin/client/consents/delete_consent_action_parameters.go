// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteConsentActionParams creates a new DeleteConsentActionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteConsentActionParams() *DeleteConsentActionParams {
	return &DeleteConsentActionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteConsentActionParamsWithTimeout creates a new DeleteConsentActionParams object
// with the ability to set a timeout on a request.
func NewDeleteConsentActionParamsWithTimeout(timeout time.Duration) *DeleteConsentActionParams {
	return &DeleteConsentActionParams{
		timeout: timeout,
	}
}

// NewDeleteConsentActionParamsWithContext creates a new DeleteConsentActionParams object
// with the ability to set a context for a request.
func NewDeleteConsentActionParamsWithContext(ctx context.Context) *DeleteConsentActionParams {
	return &DeleteConsentActionParams{
		Context: ctx,
	}
}

// NewDeleteConsentActionParamsWithHTTPClient creates a new DeleteConsentActionParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteConsentActionParamsWithHTTPClient(client *http.Client) *DeleteConsentActionParams {
	return &DeleteConsentActionParams{
		HTTPClient: client,
	}
}

/*
DeleteConsentActionParams contains all the parameters to send to the API endpoint

	for the delete consent action operation.

	Typically these are written to a http.Request.
*/
type DeleteConsentActionParams struct {

	// Action.
	Action string

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete consent action params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteConsentActionParams) WithDefaults() *DeleteConsentActionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete consent action params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteConsentActionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete consent action params
func (o *DeleteConsentActionParams) WithTimeout(timeout time.Duration) *DeleteConsentActionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete consent action params
func (o *DeleteConsentActionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete consent action params
func (o *DeleteConsentActionParams) WithContext(ctx context.Context) *DeleteConsentActionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete consent action params
func (o *DeleteConsentActionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete consent action params
func (o *DeleteConsentActionParams) WithHTTPClient(client *http.Client) *DeleteConsentActionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete consent action params
func (o *DeleteConsentActionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the delete consent action params
func (o *DeleteConsentActionParams) WithAction(action string) *DeleteConsentActionParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the delete consent action params
func (o *DeleteConsentActionParams) SetAction(action string) {
	o.Action = action
}

// WithIfMatch adds the ifMatch to the delete consent action params
func (o *DeleteConsentActionParams) WithIfMatch(ifMatch *string) *DeleteConsentActionParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the delete consent action params
func (o *DeleteConsentActionParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteConsentActionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param action
	if err := r.SetPathParam("action", o.Action); err != nil {
		return err
	}

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
