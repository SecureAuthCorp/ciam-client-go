// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetCognitoIDPClientReader is a Reader for the GetCognitoIDPClient structure.
type GetCognitoIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCognitoIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCognitoIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCognitoIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCognitoIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCognitoIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCognitoIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCognitoIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/cognito/{iid}/client] getCognitoIDPClient", response, response.Code())
	}
}

// NewGetCognitoIDPClientOK creates a GetCognitoIDPClientOK with default headers values
func NewGetCognitoIDPClientOK() *GetCognitoIDPClientOK {
	return &GetCognitoIDPClientOK{}
}

/*
GetCognitoIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetCognitoIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get cognito Id p client o k response has a 2xx status code
func (o *GetCognitoIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cognito Id p client o k response has a 3xx status code
func (o *GetCognitoIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cognito Id p client o k response has a 4xx status code
func (o *GetCognitoIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cognito Id p client o k response has a 5xx status code
func (o *GetCognitoIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cognito Id p client o k response a status code equal to that given
func (o *GetCognitoIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cognito Id p client o k response
func (o *GetCognitoIDPClientOK) Code() int {
	return 200
}

func (o *GetCognitoIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetCognitoIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetCognitoIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetCognitoIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCognitoIDPClientBadRequest creates a GetCognitoIDPClientBadRequest with default headers values
func NewGetCognitoIDPClientBadRequest() *GetCognitoIDPClientBadRequest {
	return &GetCognitoIDPClientBadRequest{}
}

/*
GetCognitoIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCognitoIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cognito Id p client bad request response has a 2xx status code
func (o *GetCognitoIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cognito Id p client bad request response has a 3xx status code
func (o *GetCognitoIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cognito Id p client bad request response has a 4xx status code
func (o *GetCognitoIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cognito Id p client bad request response has a 5xx status code
func (o *GetCognitoIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get cognito Id p client bad request response a status code equal to that given
func (o *GetCognitoIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get cognito Id p client bad request response
func (o *GetCognitoIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetCognitoIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetCognitoIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetCognitoIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCognitoIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCognitoIDPClientUnauthorized creates a GetCognitoIDPClientUnauthorized with default headers values
func NewGetCognitoIDPClientUnauthorized() *GetCognitoIDPClientUnauthorized {
	return &GetCognitoIDPClientUnauthorized{}
}

/*
GetCognitoIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCognitoIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cognito Id p client unauthorized response has a 2xx status code
func (o *GetCognitoIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cognito Id p client unauthorized response has a 3xx status code
func (o *GetCognitoIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cognito Id p client unauthorized response has a 4xx status code
func (o *GetCognitoIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cognito Id p client unauthorized response has a 5xx status code
func (o *GetCognitoIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cognito Id p client unauthorized response a status code equal to that given
func (o *GetCognitoIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cognito Id p client unauthorized response
func (o *GetCognitoIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetCognitoIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCognitoIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCognitoIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCognitoIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCognitoIDPClientForbidden creates a GetCognitoIDPClientForbidden with default headers values
func NewGetCognitoIDPClientForbidden() *GetCognitoIDPClientForbidden {
	return &GetCognitoIDPClientForbidden{}
}

/*
GetCognitoIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCognitoIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cognito Id p client forbidden response has a 2xx status code
func (o *GetCognitoIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cognito Id p client forbidden response has a 3xx status code
func (o *GetCognitoIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cognito Id p client forbidden response has a 4xx status code
func (o *GetCognitoIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cognito Id p client forbidden response has a 5xx status code
func (o *GetCognitoIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cognito Id p client forbidden response a status code equal to that given
func (o *GetCognitoIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cognito Id p client forbidden response
func (o *GetCognitoIDPClientForbidden) Code() int {
	return 403
}

func (o *GetCognitoIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetCognitoIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetCognitoIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCognitoIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCognitoIDPClientNotFound creates a GetCognitoIDPClientNotFound with default headers values
func NewGetCognitoIDPClientNotFound() *GetCognitoIDPClientNotFound {
	return &GetCognitoIDPClientNotFound{}
}

/*
GetCognitoIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetCognitoIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cognito Id p client not found response has a 2xx status code
func (o *GetCognitoIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cognito Id p client not found response has a 3xx status code
func (o *GetCognitoIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cognito Id p client not found response has a 4xx status code
func (o *GetCognitoIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cognito Id p client not found response has a 5xx status code
func (o *GetCognitoIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cognito Id p client not found response a status code equal to that given
func (o *GetCognitoIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cognito Id p client not found response
func (o *GetCognitoIDPClientNotFound) Code() int {
	return 404
}

func (o *GetCognitoIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetCognitoIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetCognitoIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCognitoIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCognitoIDPClientTooManyRequests creates a GetCognitoIDPClientTooManyRequests with default headers values
func NewGetCognitoIDPClientTooManyRequests() *GetCognitoIDPClientTooManyRequests {
	return &GetCognitoIDPClientTooManyRequests{}
}

/*
GetCognitoIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetCognitoIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get cognito Id p client too many requests response has a 2xx status code
func (o *GetCognitoIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cognito Id p client too many requests response has a 3xx status code
func (o *GetCognitoIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cognito Id p client too many requests response has a 4xx status code
func (o *GetCognitoIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cognito Id p client too many requests response has a 5xx status code
func (o *GetCognitoIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get cognito Id p client too many requests response a status code equal to that given
func (o *GetCognitoIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get cognito Id p client too many requests response
func (o *GetCognitoIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetCognitoIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCognitoIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/cognito/{iid}/client][%d] getCognitoIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCognitoIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCognitoIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
