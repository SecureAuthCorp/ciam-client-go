// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetMicrosoftIDPClientReader is a Reader for the GetMicrosoftIDPClient structure.
type GetMicrosoftIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMicrosoftIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMicrosoftIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMicrosoftIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMicrosoftIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMicrosoftIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMicrosoftIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetMicrosoftIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/microsoft/{iid}/client] getMicrosoftIDPClient", response, response.Code())
	}
}

// NewGetMicrosoftIDPClientOK creates a GetMicrosoftIDPClientOK with default headers values
func NewGetMicrosoftIDPClientOK() *GetMicrosoftIDPClientOK {
	return &GetMicrosoftIDPClientOK{}
}

/*
GetMicrosoftIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetMicrosoftIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get microsoft Id p client o k response has a 2xx status code
func (o *GetMicrosoftIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get microsoft Id p client o k response has a 3xx status code
func (o *GetMicrosoftIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get microsoft Id p client o k response has a 4xx status code
func (o *GetMicrosoftIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get microsoft Id p client o k response has a 5xx status code
func (o *GetMicrosoftIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get microsoft Id p client o k response a status code equal to that given
func (o *GetMicrosoftIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get microsoft Id p client o k response
func (o *GetMicrosoftIDPClientOK) Code() int {
	return 200
}

func (o *GetMicrosoftIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetMicrosoftIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetMicrosoftIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetMicrosoftIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicrosoftIDPClientBadRequest creates a GetMicrosoftIDPClientBadRequest with default headers values
func NewGetMicrosoftIDPClientBadRequest() *GetMicrosoftIDPClientBadRequest {
	return &GetMicrosoftIDPClientBadRequest{}
}

/*
GetMicrosoftIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetMicrosoftIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get microsoft Id p client bad request response has a 2xx status code
func (o *GetMicrosoftIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get microsoft Id p client bad request response has a 3xx status code
func (o *GetMicrosoftIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get microsoft Id p client bad request response has a 4xx status code
func (o *GetMicrosoftIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get microsoft Id p client bad request response has a 5xx status code
func (o *GetMicrosoftIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get microsoft Id p client bad request response a status code equal to that given
func (o *GetMicrosoftIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get microsoft Id p client bad request response
func (o *GetMicrosoftIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetMicrosoftIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetMicrosoftIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetMicrosoftIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicrosoftIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicrosoftIDPClientUnauthorized creates a GetMicrosoftIDPClientUnauthorized with default headers values
func NewGetMicrosoftIDPClientUnauthorized() *GetMicrosoftIDPClientUnauthorized {
	return &GetMicrosoftIDPClientUnauthorized{}
}

/*
GetMicrosoftIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMicrosoftIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get microsoft Id p client unauthorized response has a 2xx status code
func (o *GetMicrosoftIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get microsoft Id p client unauthorized response has a 3xx status code
func (o *GetMicrosoftIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get microsoft Id p client unauthorized response has a 4xx status code
func (o *GetMicrosoftIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get microsoft Id p client unauthorized response has a 5xx status code
func (o *GetMicrosoftIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get microsoft Id p client unauthorized response a status code equal to that given
func (o *GetMicrosoftIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get microsoft Id p client unauthorized response
func (o *GetMicrosoftIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetMicrosoftIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMicrosoftIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMicrosoftIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicrosoftIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicrosoftIDPClientForbidden creates a GetMicrosoftIDPClientForbidden with default headers values
func NewGetMicrosoftIDPClientForbidden() *GetMicrosoftIDPClientForbidden {
	return &GetMicrosoftIDPClientForbidden{}
}

/*
GetMicrosoftIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMicrosoftIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get microsoft Id p client forbidden response has a 2xx status code
func (o *GetMicrosoftIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get microsoft Id p client forbidden response has a 3xx status code
func (o *GetMicrosoftIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get microsoft Id p client forbidden response has a 4xx status code
func (o *GetMicrosoftIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get microsoft Id p client forbidden response has a 5xx status code
func (o *GetMicrosoftIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get microsoft Id p client forbidden response a status code equal to that given
func (o *GetMicrosoftIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get microsoft Id p client forbidden response
func (o *GetMicrosoftIDPClientForbidden) Code() int {
	return 403
}

func (o *GetMicrosoftIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetMicrosoftIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetMicrosoftIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicrosoftIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicrosoftIDPClientNotFound creates a GetMicrosoftIDPClientNotFound with default headers values
func NewGetMicrosoftIDPClientNotFound() *GetMicrosoftIDPClientNotFound {
	return &GetMicrosoftIDPClientNotFound{}
}

/*
GetMicrosoftIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetMicrosoftIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get microsoft Id p client not found response has a 2xx status code
func (o *GetMicrosoftIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get microsoft Id p client not found response has a 3xx status code
func (o *GetMicrosoftIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get microsoft Id p client not found response has a 4xx status code
func (o *GetMicrosoftIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get microsoft Id p client not found response has a 5xx status code
func (o *GetMicrosoftIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get microsoft Id p client not found response a status code equal to that given
func (o *GetMicrosoftIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get microsoft Id p client not found response
func (o *GetMicrosoftIDPClientNotFound) Code() int {
	return 404
}

func (o *GetMicrosoftIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetMicrosoftIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetMicrosoftIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicrosoftIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMicrosoftIDPClientTooManyRequests creates a GetMicrosoftIDPClientTooManyRequests with default headers values
func NewGetMicrosoftIDPClientTooManyRequests() *GetMicrosoftIDPClientTooManyRequests {
	return &GetMicrosoftIDPClientTooManyRequests{}
}

/*
GetMicrosoftIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetMicrosoftIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get microsoft Id p client too many requests response has a 2xx status code
func (o *GetMicrosoftIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get microsoft Id p client too many requests response has a 3xx status code
func (o *GetMicrosoftIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get microsoft Id p client too many requests response has a 4xx status code
func (o *GetMicrosoftIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get microsoft Id p client too many requests response has a 5xx status code
func (o *GetMicrosoftIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get microsoft Id p client too many requests response a status code equal to that given
func (o *GetMicrosoftIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get microsoft Id p client too many requests response
func (o *GetMicrosoftIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetMicrosoftIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetMicrosoftIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/microsoft/{iid}/client][%d] getMicrosoftIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetMicrosoftIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMicrosoftIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
