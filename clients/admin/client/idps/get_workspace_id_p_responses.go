// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetWorkspaceIDPReader is a Reader for the GetWorkspaceIDP structure.
type GetWorkspaceIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkspaceIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkspaceIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkspaceIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkspaceIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkspaceIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWorkspaceIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/workspace/{iid}] getWorkspaceIDP", response, response.Code())
	}
}

// NewGetWorkspaceIDPOK creates a GetWorkspaceIDPOK with default headers values
func NewGetWorkspaceIDPOK() *GetWorkspaceIDPOK {
	return &GetWorkspaceIDPOK{}
}

/*
GetWorkspaceIDPOK describes a response with status code 200, with default header values.

WorkspaceIDP
*/
type GetWorkspaceIDPOK struct {
	Payload *models.WorkspaceIDP
}

// IsSuccess returns true when this get workspace Id p o k response has a 2xx status code
func (o *GetWorkspaceIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workspace Id p o k response has a 3xx status code
func (o *GetWorkspaceIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p o k response has a 4xx status code
func (o *GetWorkspaceIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workspace Id p o k response has a 5xx status code
func (o *GetWorkspaceIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p o k response a status code equal to that given
func (o *GetWorkspaceIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workspace Id p o k response
func (o *GetWorkspaceIDPOK) Code() int {
	return 200
}

func (o *GetWorkspaceIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPOK %s", 200, payload)
}

func (o *GetWorkspaceIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPOK %s", 200, payload)
}

func (o *GetWorkspaceIDPOK) GetPayload() *models.WorkspaceIDP {
	return o.Payload
}

func (o *GetWorkspaceIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WorkspaceIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPUnauthorized creates a GetWorkspaceIDPUnauthorized with default headers values
func NewGetWorkspaceIDPUnauthorized() *GetWorkspaceIDPUnauthorized {
	return &GetWorkspaceIDPUnauthorized{}
}

/*
GetWorkspaceIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetWorkspaceIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p unauthorized response has a 2xx status code
func (o *GetWorkspaceIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p unauthorized response has a 3xx status code
func (o *GetWorkspaceIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p unauthorized response has a 4xx status code
func (o *GetWorkspaceIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p unauthorized response has a 5xx status code
func (o *GetWorkspaceIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p unauthorized response a status code equal to that given
func (o *GetWorkspaceIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workspace Id p unauthorized response
func (o *GetWorkspaceIDPUnauthorized) Code() int {
	return 401
}

func (o *GetWorkspaceIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPUnauthorized %s", 401, payload)
}

func (o *GetWorkspaceIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPUnauthorized %s", 401, payload)
}

func (o *GetWorkspaceIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPForbidden creates a GetWorkspaceIDPForbidden with default headers values
func NewGetWorkspaceIDPForbidden() *GetWorkspaceIDPForbidden {
	return &GetWorkspaceIDPForbidden{}
}

/*
GetWorkspaceIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWorkspaceIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p forbidden response has a 2xx status code
func (o *GetWorkspaceIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p forbidden response has a 3xx status code
func (o *GetWorkspaceIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p forbidden response has a 4xx status code
func (o *GetWorkspaceIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p forbidden response has a 5xx status code
func (o *GetWorkspaceIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p forbidden response a status code equal to that given
func (o *GetWorkspaceIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workspace Id p forbidden response
func (o *GetWorkspaceIDPForbidden) Code() int {
	return 403
}

func (o *GetWorkspaceIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPForbidden %s", 403, payload)
}

func (o *GetWorkspaceIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPForbidden %s", 403, payload)
}

func (o *GetWorkspaceIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPNotFound creates a GetWorkspaceIDPNotFound with default headers values
func NewGetWorkspaceIDPNotFound() *GetWorkspaceIDPNotFound {
	return &GetWorkspaceIDPNotFound{}
}

/*
GetWorkspaceIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetWorkspaceIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p not found response has a 2xx status code
func (o *GetWorkspaceIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p not found response has a 3xx status code
func (o *GetWorkspaceIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p not found response has a 4xx status code
func (o *GetWorkspaceIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p not found response has a 5xx status code
func (o *GetWorkspaceIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p not found response a status code equal to that given
func (o *GetWorkspaceIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workspace Id p not found response
func (o *GetWorkspaceIDPNotFound) Code() int {
	return 404
}

func (o *GetWorkspaceIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPNotFound %s", 404, payload)
}

func (o *GetWorkspaceIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPNotFound %s", 404, payload)
}

func (o *GetWorkspaceIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPTooManyRequests creates a GetWorkspaceIDPTooManyRequests with default headers values
func NewGetWorkspaceIDPTooManyRequests() *GetWorkspaceIDPTooManyRequests {
	return &GetWorkspaceIDPTooManyRequests{}
}

/*
GetWorkspaceIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetWorkspaceIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p too many requests response has a 2xx status code
func (o *GetWorkspaceIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p too many requests response has a 3xx status code
func (o *GetWorkspaceIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p too many requests response has a 4xx status code
func (o *GetWorkspaceIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p too many requests response has a 5xx status code
func (o *GetWorkspaceIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p too many requests response a status code equal to that given
func (o *GetWorkspaceIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get workspace Id p too many requests response
func (o *GetWorkspaceIDPTooManyRequests) Code() int {
	return 429
}

func (o *GetWorkspaceIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPTooManyRequests %s", 429, payload)
}

func (o *GetWorkspaceIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}][%d] getWorkspaceIdPTooManyRequests %s", 429, payload)
}

func (o *GetWorkspaceIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
