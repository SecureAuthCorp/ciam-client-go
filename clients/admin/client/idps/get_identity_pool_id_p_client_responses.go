// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetIdentityPoolIDPClientReader is a Reader for the GetIdentityPoolIDPClient structure.
type GetIdentityPoolIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIdentityPoolIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIdentityPoolIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIdentityPoolIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIdentityPoolIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIdentityPoolIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIdentityPoolIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIdentityPoolIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/identity_pool/{iid}/client] getIdentityPoolIDPClient", response, response.Code())
	}
}

// NewGetIdentityPoolIDPClientOK creates a GetIdentityPoolIDPClientOK with default headers values
func NewGetIdentityPoolIDPClientOK() *GetIdentityPoolIDPClientOK {
	return &GetIdentityPoolIDPClientOK{}
}

/*
GetIdentityPoolIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetIdentityPoolIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get identity pool Id p client o k response has a 2xx status code
func (o *GetIdentityPoolIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get identity pool Id p client o k response has a 3xx status code
func (o *GetIdentityPoolIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity pool Id p client o k response has a 4xx status code
func (o *GetIdentityPoolIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get identity pool Id p client o k response has a 5xx status code
func (o *GetIdentityPoolIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity pool Id p client o k response a status code equal to that given
func (o *GetIdentityPoolIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get identity pool Id p client o k response
func (o *GetIdentityPoolIDPClientOK) Code() int {
	return 200
}

func (o *GetIdentityPoolIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetIdentityPoolIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetIdentityPoolIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetIdentityPoolIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPoolIDPClientBadRequest creates a GetIdentityPoolIDPClientBadRequest with default headers values
func NewGetIdentityPoolIDPClientBadRequest() *GetIdentityPoolIDPClientBadRequest {
	return &GetIdentityPoolIDPClientBadRequest{}
}

/*
GetIdentityPoolIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetIdentityPoolIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get identity pool Id p client bad request response has a 2xx status code
func (o *GetIdentityPoolIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity pool Id p client bad request response has a 3xx status code
func (o *GetIdentityPoolIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity pool Id p client bad request response has a 4xx status code
func (o *GetIdentityPoolIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity pool Id p client bad request response has a 5xx status code
func (o *GetIdentityPoolIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity pool Id p client bad request response a status code equal to that given
func (o *GetIdentityPoolIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get identity pool Id p client bad request response
func (o *GetIdentityPoolIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetIdentityPoolIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityPoolIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetIdentityPoolIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIdentityPoolIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPoolIDPClientUnauthorized creates a GetIdentityPoolIDPClientUnauthorized with default headers values
func NewGetIdentityPoolIDPClientUnauthorized() *GetIdentityPoolIDPClientUnauthorized {
	return &GetIdentityPoolIDPClientUnauthorized{}
}

/*
GetIdentityPoolIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIdentityPoolIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get identity pool Id p client unauthorized response has a 2xx status code
func (o *GetIdentityPoolIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity pool Id p client unauthorized response has a 3xx status code
func (o *GetIdentityPoolIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity pool Id p client unauthorized response has a 4xx status code
func (o *GetIdentityPoolIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity pool Id p client unauthorized response has a 5xx status code
func (o *GetIdentityPoolIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity pool Id p client unauthorized response a status code equal to that given
func (o *GetIdentityPoolIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get identity pool Id p client unauthorized response
func (o *GetIdentityPoolIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetIdentityPoolIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityPoolIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIdentityPoolIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIdentityPoolIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPoolIDPClientForbidden creates a GetIdentityPoolIDPClientForbidden with default headers values
func NewGetIdentityPoolIDPClientForbidden() *GetIdentityPoolIDPClientForbidden {
	return &GetIdentityPoolIDPClientForbidden{}
}

/*
GetIdentityPoolIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIdentityPoolIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get identity pool Id p client forbidden response has a 2xx status code
func (o *GetIdentityPoolIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity pool Id p client forbidden response has a 3xx status code
func (o *GetIdentityPoolIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity pool Id p client forbidden response has a 4xx status code
func (o *GetIdentityPoolIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity pool Id p client forbidden response has a 5xx status code
func (o *GetIdentityPoolIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity pool Id p client forbidden response a status code equal to that given
func (o *GetIdentityPoolIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get identity pool Id p client forbidden response
func (o *GetIdentityPoolIDPClientForbidden) Code() int {
	return 403
}

func (o *GetIdentityPoolIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityPoolIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetIdentityPoolIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIdentityPoolIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPoolIDPClientNotFound creates a GetIdentityPoolIDPClientNotFound with default headers values
func NewGetIdentityPoolIDPClientNotFound() *GetIdentityPoolIDPClientNotFound {
	return &GetIdentityPoolIDPClientNotFound{}
}

/*
GetIdentityPoolIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetIdentityPoolIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get identity pool Id p client not found response has a 2xx status code
func (o *GetIdentityPoolIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity pool Id p client not found response has a 3xx status code
func (o *GetIdentityPoolIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity pool Id p client not found response has a 4xx status code
func (o *GetIdentityPoolIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity pool Id p client not found response has a 5xx status code
func (o *GetIdentityPoolIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity pool Id p client not found response a status code equal to that given
func (o *GetIdentityPoolIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get identity pool Id p client not found response
func (o *GetIdentityPoolIDPClientNotFound) Code() int {
	return 404
}

func (o *GetIdentityPoolIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityPoolIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetIdentityPoolIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIdentityPoolIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIdentityPoolIDPClientTooManyRequests creates a GetIdentityPoolIDPClientTooManyRequests with default headers values
func NewGetIdentityPoolIDPClientTooManyRequests() *GetIdentityPoolIDPClientTooManyRequests {
	return &GetIdentityPoolIDPClientTooManyRequests{}
}

/*
GetIdentityPoolIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetIdentityPoolIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get identity pool Id p client too many requests response has a 2xx status code
func (o *GetIdentityPoolIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get identity pool Id p client too many requests response has a 3xx status code
func (o *GetIdentityPoolIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get identity pool Id p client too many requests response has a 4xx status code
func (o *GetIdentityPoolIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get identity pool Id p client too many requests response has a 5xx status code
func (o *GetIdentityPoolIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get identity pool Id p client too many requests response a status code equal to that given
func (o *GetIdentityPoolIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get identity pool Id p client too many requests response
func (o *GetIdentityPoolIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetIdentityPoolIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityPoolIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/identity_pool/{iid}/client][%d] getIdentityPoolIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIdentityPoolIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIdentityPoolIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
