// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateGoogleEmbeddedIDPReader is a Reader for the UpdateGoogleEmbeddedIDP structure.
type UpdateGoogleEmbeddedIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGoogleEmbeddedIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGoogleEmbeddedIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateGoogleEmbeddedIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateGoogleEmbeddedIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateGoogleEmbeddedIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateGoogleEmbeddedIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateGoogleEmbeddedIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateGoogleEmbeddedIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/google_embedded/{iid}] updateGoogleEmbeddedIDP", response, response.Code())
	}
}

// NewUpdateGoogleEmbeddedIDPOK creates a UpdateGoogleEmbeddedIDPOK with default headers values
func NewUpdateGoogleEmbeddedIDPOK() *UpdateGoogleEmbeddedIDPOK {
	return &UpdateGoogleEmbeddedIDPOK{}
}

/*
UpdateGoogleEmbeddedIDPOK describes a response with status code 200, with default header values.

GoogleEmbeddedIDP
*/
type UpdateGoogleEmbeddedIDPOK struct {
	Payload *models.GoogleEmbeddedIDP
}

// IsSuccess returns true when this update google embedded Id p o k response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update google embedded Id p o k response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p o k response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update google embedded Id p o k response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p o k response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update google embedded Id p o k response
func (o *UpdateGoogleEmbeddedIDPOK) Code() int {
	return 200
}

func (o *UpdateGoogleEmbeddedIDPOK) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPOK) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPOK) GetPayload() *models.GoogleEmbeddedIDP {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GoogleEmbeddedIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGoogleEmbeddedIDPBadRequest creates a UpdateGoogleEmbeddedIDPBadRequest with default headers values
func NewUpdateGoogleEmbeddedIDPBadRequest() *UpdateGoogleEmbeddedIDPBadRequest {
	return &UpdateGoogleEmbeddedIDPBadRequest{}
}

/*
UpdateGoogleEmbeddedIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateGoogleEmbeddedIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update google embedded Id p bad request response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update google embedded Id p bad request response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p bad request response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update google embedded Id p bad request response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p bad request response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update google embedded Id p bad request response
func (o *UpdateGoogleEmbeddedIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateGoogleEmbeddedIDPBadRequest) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPBadRequest) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGoogleEmbeddedIDPUnauthorized creates a UpdateGoogleEmbeddedIDPUnauthorized with default headers values
func NewUpdateGoogleEmbeddedIDPUnauthorized() *UpdateGoogleEmbeddedIDPUnauthorized {
	return &UpdateGoogleEmbeddedIDPUnauthorized{}
}

/*
UpdateGoogleEmbeddedIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateGoogleEmbeddedIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update google embedded Id p unauthorized response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update google embedded Id p unauthorized response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p unauthorized response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update google embedded Id p unauthorized response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p unauthorized response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update google embedded Id p unauthorized response
func (o *UpdateGoogleEmbeddedIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateGoogleEmbeddedIDPUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPUnauthorized) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGoogleEmbeddedIDPForbidden creates a UpdateGoogleEmbeddedIDPForbidden with default headers values
func NewUpdateGoogleEmbeddedIDPForbidden() *UpdateGoogleEmbeddedIDPForbidden {
	return &UpdateGoogleEmbeddedIDPForbidden{}
}

/*
UpdateGoogleEmbeddedIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateGoogleEmbeddedIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update google embedded Id p forbidden response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update google embedded Id p forbidden response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p forbidden response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update google embedded Id p forbidden response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p forbidden response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update google embedded Id p forbidden response
func (o *UpdateGoogleEmbeddedIDPForbidden) Code() int {
	return 403
}

func (o *UpdateGoogleEmbeddedIDPForbidden) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPForbidden) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGoogleEmbeddedIDPNotFound creates a UpdateGoogleEmbeddedIDPNotFound with default headers values
func NewUpdateGoogleEmbeddedIDPNotFound() *UpdateGoogleEmbeddedIDPNotFound {
	return &UpdateGoogleEmbeddedIDPNotFound{}
}

/*
UpdateGoogleEmbeddedIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateGoogleEmbeddedIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update google embedded Id p not found response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update google embedded Id p not found response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p not found response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update google embedded Id p not found response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p not found response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update google embedded Id p not found response
func (o *UpdateGoogleEmbeddedIDPNotFound) Code() int {
	return 404
}

func (o *UpdateGoogleEmbeddedIDPNotFound) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPNotFound) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGoogleEmbeddedIDPUnprocessableEntity creates a UpdateGoogleEmbeddedIDPUnprocessableEntity with default headers values
func NewUpdateGoogleEmbeddedIDPUnprocessableEntity() *UpdateGoogleEmbeddedIDPUnprocessableEntity {
	return &UpdateGoogleEmbeddedIDPUnprocessableEntity{}
}

/*
UpdateGoogleEmbeddedIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateGoogleEmbeddedIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update google embedded Id p unprocessable entity response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update google embedded Id p unprocessable entity response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p unprocessable entity response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update google embedded Id p unprocessable entity response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p unprocessable entity response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update google embedded Id p unprocessable entity response
func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGoogleEmbeddedIDPTooManyRequests creates a UpdateGoogleEmbeddedIDPTooManyRequests with default headers values
func NewUpdateGoogleEmbeddedIDPTooManyRequests() *UpdateGoogleEmbeddedIDPTooManyRequests {
	return &UpdateGoogleEmbeddedIDPTooManyRequests{}
}

/*
UpdateGoogleEmbeddedIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateGoogleEmbeddedIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update google embedded Id p too many requests response has a 2xx status code
func (o *UpdateGoogleEmbeddedIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update google embedded Id p too many requests response has a 3xx status code
func (o *UpdateGoogleEmbeddedIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update google embedded Id p too many requests response has a 4xx status code
func (o *UpdateGoogleEmbeddedIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update google embedded Id p too many requests response has a 5xx status code
func (o *UpdateGoogleEmbeddedIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update google embedded Id p too many requests response a status code equal to that given
func (o *UpdateGoogleEmbeddedIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update google embedded Id p too many requests response
func (o *UpdateGoogleEmbeddedIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateGoogleEmbeddedIDPTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/google_embedded/{iid}][%d] updateGoogleEmbeddedIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateGoogleEmbeddedIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateGoogleEmbeddedIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
