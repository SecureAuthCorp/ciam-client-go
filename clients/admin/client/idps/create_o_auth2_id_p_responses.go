// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateOAuth2IDPReader is a Reader for the CreateOAuth2IDP structure.
type CreateOAuth2IDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOAuth2IDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOAuth2IDPCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOAuth2IDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateOAuth2IDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateOAuth2IDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOAuth2IDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateOAuth2IDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateOAuth2IDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/idps/oauth2] createOAuth2IDP", response, response.Code())
	}
}

// NewCreateOAuth2IDPCreated creates a CreateOAuth2IDPCreated with default headers values
func NewCreateOAuth2IDPCreated() *CreateOAuth2IDPCreated {
	return &CreateOAuth2IDPCreated{}
}

/*
CreateOAuth2IDPCreated describes a response with status code 201, with default header values.

OAuth2IDP
*/
type CreateOAuth2IDPCreated struct {
	Payload *models.OAuth2IDP
}

// IsSuccess returns true when this create o auth2 Id p created response has a 2xx status code
func (o *CreateOAuth2IDPCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create o auth2 Id p created response has a 3xx status code
func (o *CreateOAuth2IDPCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p created response has a 4xx status code
func (o *CreateOAuth2IDPCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create o auth2 Id p created response has a 5xx status code
func (o *CreateOAuth2IDPCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p created response a status code equal to that given
func (o *CreateOAuth2IDPCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create o auth2 Id p created response
func (o *CreateOAuth2IDPCreated) Code() int {
	return 201
}

func (o *CreateOAuth2IDPCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPCreated %s", 201, payload)
}

func (o *CreateOAuth2IDPCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPCreated %s", 201, payload)
}

func (o *CreateOAuth2IDPCreated) GetPayload() *models.OAuth2IDP {
	return o.Payload
}

func (o *CreateOAuth2IDPCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuth2IDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOAuth2IDPBadRequest creates a CreateOAuth2IDPBadRequest with default headers values
func NewCreateOAuth2IDPBadRequest() *CreateOAuth2IDPBadRequest {
	return &CreateOAuth2IDPBadRequest{}
}

/*
CreateOAuth2IDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateOAuth2IDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create o auth2 Id p bad request response has a 2xx status code
func (o *CreateOAuth2IDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create o auth2 Id p bad request response has a 3xx status code
func (o *CreateOAuth2IDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p bad request response has a 4xx status code
func (o *CreateOAuth2IDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create o auth2 Id p bad request response has a 5xx status code
func (o *CreateOAuth2IDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p bad request response a status code equal to that given
func (o *CreateOAuth2IDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create o auth2 Id p bad request response
func (o *CreateOAuth2IDPBadRequest) Code() int {
	return 400
}

func (o *CreateOAuth2IDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPBadRequest %s", 400, payload)
}

func (o *CreateOAuth2IDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPBadRequest %s", 400, payload)
}

func (o *CreateOAuth2IDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOAuth2IDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOAuth2IDPUnauthorized creates a CreateOAuth2IDPUnauthorized with default headers values
func NewCreateOAuth2IDPUnauthorized() *CreateOAuth2IDPUnauthorized {
	return &CreateOAuth2IDPUnauthorized{}
}

/*
CreateOAuth2IDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateOAuth2IDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create o auth2 Id p unauthorized response has a 2xx status code
func (o *CreateOAuth2IDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create o auth2 Id p unauthorized response has a 3xx status code
func (o *CreateOAuth2IDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p unauthorized response has a 4xx status code
func (o *CreateOAuth2IDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create o auth2 Id p unauthorized response has a 5xx status code
func (o *CreateOAuth2IDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p unauthorized response a status code equal to that given
func (o *CreateOAuth2IDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create o auth2 Id p unauthorized response
func (o *CreateOAuth2IDPUnauthorized) Code() int {
	return 401
}

func (o *CreateOAuth2IDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPUnauthorized %s", 401, payload)
}

func (o *CreateOAuth2IDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPUnauthorized %s", 401, payload)
}

func (o *CreateOAuth2IDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOAuth2IDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOAuth2IDPForbidden creates a CreateOAuth2IDPForbidden with default headers values
func NewCreateOAuth2IDPForbidden() *CreateOAuth2IDPForbidden {
	return &CreateOAuth2IDPForbidden{}
}

/*
CreateOAuth2IDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateOAuth2IDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create o auth2 Id p forbidden response has a 2xx status code
func (o *CreateOAuth2IDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create o auth2 Id p forbidden response has a 3xx status code
func (o *CreateOAuth2IDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p forbidden response has a 4xx status code
func (o *CreateOAuth2IDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create o auth2 Id p forbidden response has a 5xx status code
func (o *CreateOAuth2IDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p forbidden response a status code equal to that given
func (o *CreateOAuth2IDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create o auth2 Id p forbidden response
func (o *CreateOAuth2IDPForbidden) Code() int {
	return 403
}

func (o *CreateOAuth2IDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPForbidden %s", 403, payload)
}

func (o *CreateOAuth2IDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPForbidden %s", 403, payload)
}

func (o *CreateOAuth2IDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOAuth2IDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOAuth2IDPNotFound creates a CreateOAuth2IDPNotFound with default headers values
func NewCreateOAuth2IDPNotFound() *CreateOAuth2IDPNotFound {
	return &CreateOAuth2IDPNotFound{}
}

/*
CreateOAuth2IDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateOAuth2IDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create o auth2 Id p not found response has a 2xx status code
func (o *CreateOAuth2IDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create o auth2 Id p not found response has a 3xx status code
func (o *CreateOAuth2IDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p not found response has a 4xx status code
func (o *CreateOAuth2IDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create o auth2 Id p not found response has a 5xx status code
func (o *CreateOAuth2IDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p not found response a status code equal to that given
func (o *CreateOAuth2IDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create o auth2 Id p not found response
func (o *CreateOAuth2IDPNotFound) Code() int {
	return 404
}

func (o *CreateOAuth2IDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPNotFound %s", 404, payload)
}

func (o *CreateOAuth2IDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPNotFound %s", 404, payload)
}

func (o *CreateOAuth2IDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOAuth2IDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOAuth2IDPUnprocessableEntity creates a CreateOAuth2IDPUnprocessableEntity with default headers values
func NewCreateOAuth2IDPUnprocessableEntity() *CreateOAuth2IDPUnprocessableEntity {
	return &CreateOAuth2IDPUnprocessableEntity{}
}

/*
CreateOAuth2IDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateOAuth2IDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create o auth2 Id p unprocessable entity response has a 2xx status code
func (o *CreateOAuth2IDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create o auth2 Id p unprocessable entity response has a 3xx status code
func (o *CreateOAuth2IDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p unprocessable entity response has a 4xx status code
func (o *CreateOAuth2IDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create o auth2 Id p unprocessable entity response has a 5xx status code
func (o *CreateOAuth2IDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p unprocessable entity response a status code equal to that given
func (o *CreateOAuth2IDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create o auth2 Id p unprocessable entity response
func (o *CreateOAuth2IDPUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateOAuth2IDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateOAuth2IDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateOAuth2IDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOAuth2IDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOAuth2IDPTooManyRequests creates a CreateOAuth2IDPTooManyRequests with default headers values
func NewCreateOAuth2IDPTooManyRequests() *CreateOAuth2IDPTooManyRequests {
	return &CreateOAuth2IDPTooManyRequests{}
}

/*
CreateOAuth2IDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateOAuth2IDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create o auth2 Id p too many requests response has a 2xx status code
func (o *CreateOAuth2IDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create o auth2 Id p too many requests response has a 3xx status code
func (o *CreateOAuth2IDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create o auth2 Id p too many requests response has a 4xx status code
func (o *CreateOAuth2IDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create o auth2 Id p too many requests response has a 5xx status code
func (o *CreateOAuth2IDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create o auth2 Id p too many requests response a status code equal to that given
func (o *CreateOAuth2IDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create o auth2 Id p too many requests response
func (o *CreateOAuth2IDPTooManyRequests) Code() int {
	return 429
}

func (o *CreateOAuth2IDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPTooManyRequests %s", 429, payload)
}

func (o *CreateOAuth2IDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/oauth2][%d] createOAuth2IdPTooManyRequests %s", 429, payload)
}

func (o *CreateOAuth2IDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOAuth2IDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
