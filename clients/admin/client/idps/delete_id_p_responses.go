// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteIDPReader is a Reader for the DeleteIDP structure.
type DeleteIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteIDPNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewDeleteIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /servers/{wid}/idps/{iid}] deleteIDP", response, response.Code())
	}
}

// NewDeleteIDPNoContent creates a DeleteIDPNoContent with default headers values
func NewDeleteIDPNoContent() *DeleteIDPNoContent {
	return &DeleteIDPNoContent{}
}

/*
DeleteIDPNoContent describes a response with status code 204, with default header values.

	IDP has been deleted
*/
type DeleteIDPNoContent struct {
}

// IsSuccess returns true when this delete Id p no content response has a 2xx status code
func (o *DeleteIDPNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete Id p no content response has a 3xx status code
func (o *DeleteIDPNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p no content response has a 4xx status code
func (o *DeleteIDPNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete Id p no content response has a 5xx status code
func (o *DeleteIDPNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p no content response a status code equal to that given
func (o *DeleteIDPNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete Id p no content response
func (o *DeleteIDPNoContent) Code() int {
	return 204
}

func (o *DeleteIDPNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPNoContent", 204)
}

func (o *DeleteIDPNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPNoContent", 204)
}

func (o *DeleteIDPNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteIDPBadRequest creates a DeleteIDPBadRequest with default headers values
func NewDeleteIDPBadRequest() *DeleteIDPBadRequest {
	return &DeleteIDPBadRequest{}
}

/*
DeleteIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Id p bad request response has a 2xx status code
func (o *DeleteIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Id p bad request response has a 3xx status code
func (o *DeleteIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p bad request response has a 4xx status code
func (o *DeleteIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Id p bad request response has a 5xx status code
func (o *DeleteIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p bad request response a status code equal to that given
func (o *DeleteIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete Id p bad request response
func (o *DeleteIDPBadRequest) Code() int {
	return 400
}

func (o *DeleteIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPBadRequest %s", 400, payload)
}

func (o *DeleteIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPBadRequest %s", 400, payload)
}

func (o *DeleteIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIDPUnauthorized creates a DeleteIDPUnauthorized with default headers values
func NewDeleteIDPUnauthorized() *DeleteIDPUnauthorized {
	return &DeleteIDPUnauthorized{}
}

/*
DeleteIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Id p unauthorized response has a 2xx status code
func (o *DeleteIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Id p unauthorized response has a 3xx status code
func (o *DeleteIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p unauthorized response has a 4xx status code
func (o *DeleteIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Id p unauthorized response has a 5xx status code
func (o *DeleteIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p unauthorized response a status code equal to that given
func (o *DeleteIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete Id p unauthorized response
func (o *DeleteIDPUnauthorized) Code() int {
	return 401
}

func (o *DeleteIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPUnauthorized %s", 401, payload)
}

func (o *DeleteIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPUnauthorized %s", 401, payload)
}

func (o *DeleteIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIDPForbidden creates a DeleteIDPForbidden with default headers values
func NewDeleteIDPForbidden() *DeleteIDPForbidden {
	return &DeleteIDPForbidden{}
}

/*
DeleteIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Id p forbidden response has a 2xx status code
func (o *DeleteIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Id p forbidden response has a 3xx status code
func (o *DeleteIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p forbidden response has a 4xx status code
func (o *DeleteIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Id p forbidden response has a 5xx status code
func (o *DeleteIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p forbidden response a status code equal to that given
func (o *DeleteIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete Id p forbidden response
func (o *DeleteIDPForbidden) Code() int {
	return 403
}

func (o *DeleteIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPForbidden %s", 403, payload)
}

func (o *DeleteIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPForbidden %s", 403, payload)
}

func (o *DeleteIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIDPNotFound creates a DeleteIDPNotFound with default headers values
func NewDeleteIDPNotFound() *DeleteIDPNotFound {
	return &DeleteIDPNotFound{}
}

/*
DeleteIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Id p not found response has a 2xx status code
func (o *DeleteIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Id p not found response has a 3xx status code
func (o *DeleteIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p not found response has a 4xx status code
func (o *DeleteIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Id p not found response has a 5xx status code
func (o *DeleteIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p not found response a status code equal to that given
func (o *DeleteIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete Id p not found response
func (o *DeleteIDPNotFound) Code() int {
	return 404
}

func (o *DeleteIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPNotFound %s", 404, payload)
}

func (o *DeleteIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPNotFound %s", 404, payload)
}

func (o *DeleteIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIDPUnprocessableEntity creates a DeleteIDPUnprocessableEntity with default headers values
func NewDeleteIDPUnprocessableEntity() *DeleteIDPUnprocessableEntity {
	return &DeleteIDPUnprocessableEntity{}
}

/*
DeleteIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type DeleteIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Id p unprocessable entity response has a 2xx status code
func (o *DeleteIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Id p unprocessable entity response has a 3xx status code
func (o *DeleteIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p unprocessable entity response has a 4xx status code
func (o *DeleteIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Id p unprocessable entity response has a 5xx status code
func (o *DeleteIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p unprocessable entity response a status code equal to that given
func (o *DeleteIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the delete Id p unprocessable entity response
func (o *DeleteIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *DeleteIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPUnprocessableEntity %s", 422, payload)
}

func (o *DeleteIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPUnprocessableEntity %s", 422, payload)
}

func (o *DeleteIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIDPTooManyRequests creates a DeleteIDPTooManyRequests with default headers values
func NewDeleteIDPTooManyRequests() *DeleteIDPTooManyRequests {
	return &DeleteIDPTooManyRequests{}
}

/*
DeleteIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete Id p too many requests response has a 2xx status code
func (o *DeleteIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete Id p too many requests response has a 3xx status code
func (o *DeleteIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete Id p too many requests response has a 4xx status code
func (o *DeleteIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete Id p too many requests response has a 5xx status code
func (o *DeleteIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete Id p too many requests response a status code equal to that given
func (o *DeleteIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete Id p too many requests response
func (o *DeleteIDPTooManyRequests) Code() int {
	return 429
}

func (o *DeleteIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPTooManyRequests %s", 429, payload)
}

func (o *DeleteIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /servers/{wid}/idps/{iid}][%d] deleteIdPTooManyRequests %s", 429, payload)
}

func (o *DeleteIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
