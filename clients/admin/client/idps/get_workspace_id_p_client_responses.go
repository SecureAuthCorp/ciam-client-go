// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetWorkspaceIDPClientReader is a Reader for the GetWorkspaceIDPClient structure.
type GetWorkspaceIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkspaceIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkspaceIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkspaceIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetWorkspaceIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkspaceIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkspaceIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetWorkspaceIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/workspace/{iid}/client] getWorkspaceIDPClient", response, response.Code())
	}
}

// NewGetWorkspaceIDPClientOK creates a GetWorkspaceIDPClientOK with default headers values
func NewGetWorkspaceIDPClientOK() *GetWorkspaceIDPClientOK {
	return &GetWorkspaceIDPClientOK{}
}

/*
GetWorkspaceIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetWorkspaceIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get workspace Id p client o k response has a 2xx status code
func (o *GetWorkspaceIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workspace Id p client o k response has a 3xx status code
func (o *GetWorkspaceIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p client o k response has a 4xx status code
func (o *GetWorkspaceIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workspace Id p client o k response has a 5xx status code
func (o *GetWorkspaceIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p client o k response a status code equal to that given
func (o *GetWorkspaceIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workspace Id p client o k response
func (o *GetWorkspaceIDPClientOK) Code() int {
	return 200
}

func (o *GetWorkspaceIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetWorkspaceIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetWorkspaceIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetWorkspaceIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPClientBadRequest creates a GetWorkspaceIDPClientBadRequest with default headers values
func NewGetWorkspaceIDPClientBadRequest() *GetWorkspaceIDPClientBadRequest {
	return &GetWorkspaceIDPClientBadRequest{}
}

/*
GetWorkspaceIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetWorkspaceIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p client bad request response has a 2xx status code
func (o *GetWorkspaceIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p client bad request response has a 3xx status code
func (o *GetWorkspaceIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p client bad request response has a 4xx status code
func (o *GetWorkspaceIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p client bad request response has a 5xx status code
func (o *GetWorkspaceIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p client bad request response a status code equal to that given
func (o *GetWorkspaceIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get workspace Id p client bad request response
func (o *GetWorkspaceIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetWorkspaceIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkspaceIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetWorkspaceIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPClientUnauthorized creates a GetWorkspaceIDPClientUnauthorized with default headers values
func NewGetWorkspaceIDPClientUnauthorized() *GetWorkspaceIDPClientUnauthorized {
	return &GetWorkspaceIDPClientUnauthorized{}
}

/*
GetWorkspaceIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetWorkspaceIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p client unauthorized response has a 2xx status code
func (o *GetWorkspaceIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p client unauthorized response has a 3xx status code
func (o *GetWorkspaceIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p client unauthorized response has a 4xx status code
func (o *GetWorkspaceIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p client unauthorized response has a 5xx status code
func (o *GetWorkspaceIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p client unauthorized response a status code equal to that given
func (o *GetWorkspaceIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workspace Id p client unauthorized response
func (o *GetWorkspaceIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetWorkspaceIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkspaceIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetWorkspaceIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPClientForbidden creates a GetWorkspaceIDPClientForbidden with default headers values
func NewGetWorkspaceIDPClientForbidden() *GetWorkspaceIDPClientForbidden {
	return &GetWorkspaceIDPClientForbidden{}
}

/*
GetWorkspaceIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWorkspaceIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p client forbidden response has a 2xx status code
func (o *GetWorkspaceIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p client forbidden response has a 3xx status code
func (o *GetWorkspaceIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p client forbidden response has a 4xx status code
func (o *GetWorkspaceIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p client forbidden response has a 5xx status code
func (o *GetWorkspaceIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p client forbidden response a status code equal to that given
func (o *GetWorkspaceIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workspace Id p client forbidden response
func (o *GetWorkspaceIDPClientForbidden) Code() int {
	return 403
}

func (o *GetWorkspaceIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkspaceIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetWorkspaceIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPClientNotFound creates a GetWorkspaceIDPClientNotFound with default headers values
func NewGetWorkspaceIDPClientNotFound() *GetWorkspaceIDPClientNotFound {
	return &GetWorkspaceIDPClientNotFound{}
}

/*
GetWorkspaceIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetWorkspaceIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p client not found response has a 2xx status code
func (o *GetWorkspaceIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p client not found response has a 3xx status code
func (o *GetWorkspaceIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p client not found response has a 4xx status code
func (o *GetWorkspaceIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p client not found response has a 5xx status code
func (o *GetWorkspaceIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p client not found response a status code equal to that given
func (o *GetWorkspaceIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workspace Id p client not found response
func (o *GetWorkspaceIDPClientNotFound) Code() int {
	return 404
}

func (o *GetWorkspaceIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkspaceIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetWorkspaceIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkspaceIDPClientTooManyRequests creates a GetWorkspaceIDPClientTooManyRequests with default headers values
func NewGetWorkspaceIDPClientTooManyRequests() *GetWorkspaceIDPClientTooManyRequests {
	return &GetWorkspaceIDPClientTooManyRequests{}
}

/*
GetWorkspaceIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetWorkspaceIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get workspace Id p client too many requests response has a 2xx status code
func (o *GetWorkspaceIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workspace Id p client too many requests response has a 3xx status code
func (o *GetWorkspaceIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workspace Id p client too many requests response has a 4xx status code
func (o *GetWorkspaceIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workspace Id p client too many requests response has a 5xx status code
func (o *GetWorkspaceIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get workspace Id p client too many requests response a status code equal to that given
func (o *GetWorkspaceIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get workspace Id p client too many requests response
func (o *GetWorkspaceIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetWorkspaceIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWorkspaceIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/workspace/{iid}/client][%d] getWorkspaceIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetWorkspaceIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetWorkspaceIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
