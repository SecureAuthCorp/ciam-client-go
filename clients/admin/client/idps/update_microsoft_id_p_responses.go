// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateMicrosoftIDPReader is a Reader for the UpdateMicrosoftIDP structure.
type UpdateMicrosoftIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMicrosoftIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateMicrosoftIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateMicrosoftIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateMicrosoftIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateMicrosoftIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateMicrosoftIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateMicrosoftIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateMicrosoftIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/microsoft/{iid}] updateMicrosoftIDP", response, response.Code())
	}
}

// NewUpdateMicrosoftIDPOK creates a UpdateMicrosoftIDPOK with default headers values
func NewUpdateMicrosoftIDPOK() *UpdateMicrosoftIDPOK {
	return &UpdateMicrosoftIDPOK{}
}

/*
UpdateMicrosoftIDPOK describes a response with status code 200, with default header values.

MicrosoftIDP
*/
type UpdateMicrosoftIDPOK struct {
	Payload *models.MicrosoftIDP
}

// IsSuccess returns true when this update microsoft Id p o k response has a 2xx status code
func (o *UpdateMicrosoftIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update microsoft Id p o k response has a 3xx status code
func (o *UpdateMicrosoftIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p o k response has a 4xx status code
func (o *UpdateMicrosoftIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update microsoft Id p o k response has a 5xx status code
func (o *UpdateMicrosoftIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p o k response a status code equal to that given
func (o *UpdateMicrosoftIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update microsoft Id p o k response
func (o *UpdateMicrosoftIDPOK) Code() int {
	return 200
}

func (o *UpdateMicrosoftIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPOK %s", 200, payload)
}

func (o *UpdateMicrosoftIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPOK %s", 200, payload)
}

func (o *UpdateMicrosoftIDPOK) GetPayload() *models.MicrosoftIDP {
	return o.Payload
}

func (o *UpdateMicrosoftIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MicrosoftIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMicrosoftIDPBadRequest creates a UpdateMicrosoftIDPBadRequest with default headers values
func NewUpdateMicrosoftIDPBadRequest() *UpdateMicrosoftIDPBadRequest {
	return &UpdateMicrosoftIDPBadRequest{}
}

/*
UpdateMicrosoftIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateMicrosoftIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update microsoft Id p bad request response has a 2xx status code
func (o *UpdateMicrosoftIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update microsoft Id p bad request response has a 3xx status code
func (o *UpdateMicrosoftIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p bad request response has a 4xx status code
func (o *UpdateMicrosoftIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update microsoft Id p bad request response has a 5xx status code
func (o *UpdateMicrosoftIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p bad request response a status code equal to that given
func (o *UpdateMicrosoftIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update microsoft Id p bad request response
func (o *UpdateMicrosoftIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateMicrosoftIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPBadRequest %s", 400, payload)
}

func (o *UpdateMicrosoftIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPBadRequest %s", 400, payload)
}

func (o *UpdateMicrosoftIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateMicrosoftIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMicrosoftIDPUnauthorized creates a UpdateMicrosoftIDPUnauthorized with default headers values
func NewUpdateMicrosoftIDPUnauthorized() *UpdateMicrosoftIDPUnauthorized {
	return &UpdateMicrosoftIDPUnauthorized{}
}

/*
UpdateMicrosoftIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateMicrosoftIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update microsoft Id p unauthorized response has a 2xx status code
func (o *UpdateMicrosoftIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update microsoft Id p unauthorized response has a 3xx status code
func (o *UpdateMicrosoftIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p unauthorized response has a 4xx status code
func (o *UpdateMicrosoftIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update microsoft Id p unauthorized response has a 5xx status code
func (o *UpdateMicrosoftIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p unauthorized response a status code equal to that given
func (o *UpdateMicrosoftIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update microsoft Id p unauthorized response
func (o *UpdateMicrosoftIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateMicrosoftIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPUnauthorized %s", 401, payload)
}

func (o *UpdateMicrosoftIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPUnauthorized %s", 401, payload)
}

func (o *UpdateMicrosoftIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateMicrosoftIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMicrosoftIDPForbidden creates a UpdateMicrosoftIDPForbidden with default headers values
func NewUpdateMicrosoftIDPForbidden() *UpdateMicrosoftIDPForbidden {
	return &UpdateMicrosoftIDPForbidden{}
}

/*
UpdateMicrosoftIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateMicrosoftIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update microsoft Id p forbidden response has a 2xx status code
func (o *UpdateMicrosoftIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update microsoft Id p forbidden response has a 3xx status code
func (o *UpdateMicrosoftIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p forbidden response has a 4xx status code
func (o *UpdateMicrosoftIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update microsoft Id p forbidden response has a 5xx status code
func (o *UpdateMicrosoftIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p forbidden response a status code equal to that given
func (o *UpdateMicrosoftIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update microsoft Id p forbidden response
func (o *UpdateMicrosoftIDPForbidden) Code() int {
	return 403
}

func (o *UpdateMicrosoftIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPForbidden %s", 403, payload)
}

func (o *UpdateMicrosoftIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPForbidden %s", 403, payload)
}

func (o *UpdateMicrosoftIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateMicrosoftIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMicrosoftIDPNotFound creates a UpdateMicrosoftIDPNotFound with default headers values
func NewUpdateMicrosoftIDPNotFound() *UpdateMicrosoftIDPNotFound {
	return &UpdateMicrosoftIDPNotFound{}
}

/*
UpdateMicrosoftIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateMicrosoftIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update microsoft Id p not found response has a 2xx status code
func (o *UpdateMicrosoftIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update microsoft Id p not found response has a 3xx status code
func (o *UpdateMicrosoftIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p not found response has a 4xx status code
func (o *UpdateMicrosoftIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update microsoft Id p not found response has a 5xx status code
func (o *UpdateMicrosoftIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p not found response a status code equal to that given
func (o *UpdateMicrosoftIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update microsoft Id p not found response
func (o *UpdateMicrosoftIDPNotFound) Code() int {
	return 404
}

func (o *UpdateMicrosoftIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPNotFound %s", 404, payload)
}

func (o *UpdateMicrosoftIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPNotFound %s", 404, payload)
}

func (o *UpdateMicrosoftIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateMicrosoftIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMicrosoftIDPUnprocessableEntity creates a UpdateMicrosoftIDPUnprocessableEntity with default headers values
func NewUpdateMicrosoftIDPUnprocessableEntity() *UpdateMicrosoftIDPUnprocessableEntity {
	return &UpdateMicrosoftIDPUnprocessableEntity{}
}

/*
UpdateMicrosoftIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateMicrosoftIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update microsoft Id p unprocessable entity response has a 2xx status code
func (o *UpdateMicrosoftIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update microsoft Id p unprocessable entity response has a 3xx status code
func (o *UpdateMicrosoftIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p unprocessable entity response has a 4xx status code
func (o *UpdateMicrosoftIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update microsoft Id p unprocessable entity response has a 5xx status code
func (o *UpdateMicrosoftIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p unprocessable entity response a status code equal to that given
func (o *UpdateMicrosoftIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update microsoft Id p unprocessable entity response
func (o *UpdateMicrosoftIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateMicrosoftIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateMicrosoftIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateMicrosoftIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateMicrosoftIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMicrosoftIDPTooManyRequests creates a UpdateMicrosoftIDPTooManyRequests with default headers values
func NewUpdateMicrosoftIDPTooManyRequests() *UpdateMicrosoftIDPTooManyRequests {
	return &UpdateMicrosoftIDPTooManyRequests{}
}

/*
UpdateMicrosoftIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateMicrosoftIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update microsoft Id p too many requests response has a 2xx status code
func (o *UpdateMicrosoftIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update microsoft Id p too many requests response has a 3xx status code
func (o *UpdateMicrosoftIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update microsoft Id p too many requests response has a 4xx status code
func (o *UpdateMicrosoftIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update microsoft Id p too many requests response has a 5xx status code
func (o *UpdateMicrosoftIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update microsoft Id p too many requests response a status code equal to that given
func (o *UpdateMicrosoftIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update microsoft Id p too many requests response
func (o *UpdateMicrosoftIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateMicrosoftIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateMicrosoftIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/microsoft/{iid}][%d] updateMicrosoftIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateMicrosoftIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateMicrosoftIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
