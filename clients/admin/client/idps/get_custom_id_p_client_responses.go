// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetCustomIDPClientReader is a Reader for the GetCustomIDPClient structure.
type GetCustomIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetCustomIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/custom/{iid}/client] getCustomIDPClient", response, response.Code())
	}
}

// NewGetCustomIDPClientOK creates a GetCustomIDPClientOK with default headers values
func NewGetCustomIDPClientOK() *GetCustomIDPClientOK {
	return &GetCustomIDPClientOK{}
}

/*
GetCustomIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetCustomIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get custom Id p client o k response has a 2xx status code
func (o *GetCustomIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get custom Id p client o k response has a 3xx status code
func (o *GetCustomIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom Id p client o k response has a 4xx status code
func (o *GetCustomIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get custom Id p client o k response has a 5xx status code
func (o *GetCustomIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom Id p client o k response a status code equal to that given
func (o *GetCustomIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get custom Id p client o k response
func (o *GetCustomIDPClientOK) Code() int {
	return 200
}

func (o *GetCustomIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetCustomIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetCustomIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetCustomIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomIDPClientBadRequest creates a GetCustomIDPClientBadRequest with default headers values
func NewGetCustomIDPClientBadRequest() *GetCustomIDPClientBadRequest {
	return &GetCustomIDPClientBadRequest{}
}

/*
GetCustomIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetCustomIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom Id p client bad request response has a 2xx status code
func (o *GetCustomIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom Id p client bad request response has a 3xx status code
func (o *GetCustomIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom Id p client bad request response has a 4xx status code
func (o *GetCustomIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom Id p client bad request response has a 5xx status code
func (o *GetCustomIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom Id p client bad request response a status code equal to that given
func (o *GetCustomIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get custom Id p client bad request response
func (o *GetCustomIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetCustomIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetCustomIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomIDPClientUnauthorized creates a GetCustomIDPClientUnauthorized with default headers values
func NewGetCustomIDPClientUnauthorized() *GetCustomIDPClientUnauthorized {
	return &GetCustomIDPClientUnauthorized{}
}

/*
GetCustomIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCustomIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom Id p client unauthorized response has a 2xx status code
func (o *GetCustomIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom Id p client unauthorized response has a 3xx status code
func (o *GetCustomIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom Id p client unauthorized response has a 4xx status code
func (o *GetCustomIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom Id p client unauthorized response has a 5xx status code
func (o *GetCustomIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom Id p client unauthorized response a status code equal to that given
func (o *GetCustomIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get custom Id p client unauthorized response
func (o *GetCustomIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetCustomIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCustomIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetCustomIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomIDPClientForbidden creates a GetCustomIDPClientForbidden with default headers values
func NewGetCustomIDPClientForbidden() *GetCustomIDPClientForbidden {
	return &GetCustomIDPClientForbidden{}
}

/*
GetCustomIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCustomIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom Id p client forbidden response has a 2xx status code
func (o *GetCustomIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom Id p client forbidden response has a 3xx status code
func (o *GetCustomIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom Id p client forbidden response has a 4xx status code
func (o *GetCustomIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom Id p client forbidden response has a 5xx status code
func (o *GetCustomIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom Id p client forbidden response a status code equal to that given
func (o *GetCustomIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get custom Id p client forbidden response
func (o *GetCustomIDPClientForbidden) Code() int {
	return 403
}

func (o *GetCustomIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetCustomIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomIDPClientNotFound creates a GetCustomIDPClientNotFound with default headers values
func NewGetCustomIDPClientNotFound() *GetCustomIDPClientNotFound {
	return &GetCustomIDPClientNotFound{}
}

/*
GetCustomIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetCustomIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom Id p client not found response has a 2xx status code
func (o *GetCustomIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom Id p client not found response has a 3xx status code
func (o *GetCustomIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom Id p client not found response has a 4xx status code
func (o *GetCustomIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom Id p client not found response has a 5xx status code
func (o *GetCustomIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom Id p client not found response a status code equal to that given
func (o *GetCustomIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get custom Id p client not found response
func (o *GetCustomIDPClientNotFound) Code() int {
	return 404
}

func (o *GetCustomIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetCustomIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomIDPClientTooManyRequests creates a GetCustomIDPClientTooManyRequests with default headers values
func NewGetCustomIDPClientTooManyRequests() *GetCustomIDPClientTooManyRequests {
	return &GetCustomIDPClientTooManyRequests{}
}

/*
GetCustomIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetCustomIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom Id p client too many requests response has a 2xx status code
func (o *GetCustomIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom Id p client too many requests response has a 3xx status code
func (o *GetCustomIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom Id p client too many requests response has a 4xx status code
func (o *GetCustomIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom Id p client too many requests response has a 5xx status code
func (o *GetCustomIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom Id p client too many requests response a status code equal to that given
func (o *GetCustomIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get custom Id p client too many requests response
func (o *GetCustomIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetCustomIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCustomIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/custom/{iid}/client][%d] getCustomIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetCustomIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
