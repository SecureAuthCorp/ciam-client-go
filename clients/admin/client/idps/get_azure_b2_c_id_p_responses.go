// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAzureB2CIDPReader is a Reader for the GetAzureB2CIDP structure.
type GetAzureB2CIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAzureB2CIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAzureB2CIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAzureB2CIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAzureB2CIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAzureB2CIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAzureB2CIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/azureb2c/{iid}] getAzureB2CIDP", response, response.Code())
	}
}

// NewGetAzureB2CIDPOK creates a GetAzureB2CIDPOK with default headers values
func NewGetAzureB2CIDPOK() *GetAzureB2CIDPOK {
	return &GetAzureB2CIDPOK{}
}

/*
GetAzureB2CIDPOK describes a response with status code 200, with default header values.

AzureB2CIDP
*/
type GetAzureB2CIDPOK struct {
	Payload *models.AzureB2CIDP
}

// IsSuccess returns true when this get azure b2 c Id p o k response has a 2xx status code
func (o *GetAzureB2CIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get azure b2 c Id p o k response has a 3xx status code
func (o *GetAzureB2CIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure b2 c Id p o k response has a 4xx status code
func (o *GetAzureB2CIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get azure b2 c Id p o k response has a 5xx status code
func (o *GetAzureB2CIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure b2 c Id p o k response a status code equal to that given
func (o *GetAzureB2CIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get azure b2 c Id p o k response
func (o *GetAzureB2CIDPOK) Code() int {
	return 200
}

func (o *GetAzureB2CIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPOK %s", 200, payload)
}

func (o *GetAzureB2CIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPOK %s", 200, payload)
}

func (o *GetAzureB2CIDPOK) GetPayload() *models.AzureB2CIDP {
	return o.Payload
}

func (o *GetAzureB2CIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AzureB2CIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureB2CIDPUnauthorized creates a GetAzureB2CIDPUnauthorized with default headers values
func NewGetAzureB2CIDPUnauthorized() *GetAzureB2CIDPUnauthorized {
	return &GetAzureB2CIDPUnauthorized{}
}

/*
GetAzureB2CIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAzureB2CIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure b2 c Id p unauthorized response has a 2xx status code
func (o *GetAzureB2CIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure b2 c Id p unauthorized response has a 3xx status code
func (o *GetAzureB2CIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure b2 c Id p unauthorized response has a 4xx status code
func (o *GetAzureB2CIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure b2 c Id p unauthorized response has a 5xx status code
func (o *GetAzureB2CIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure b2 c Id p unauthorized response a status code equal to that given
func (o *GetAzureB2CIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get azure b2 c Id p unauthorized response
func (o *GetAzureB2CIDPUnauthorized) Code() int {
	return 401
}

func (o *GetAzureB2CIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPUnauthorized %s", 401, payload)
}

func (o *GetAzureB2CIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPUnauthorized %s", 401, payload)
}

func (o *GetAzureB2CIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureB2CIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureB2CIDPForbidden creates a GetAzureB2CIDPForbidden with default headers values
func NewGetAzureB2CIDPForbidden() *GetAzureB2CIDPForbidden {
	return &GetAzureB2CIDPForbidden{}
}

/*
GetAzureB2CIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAzureB2CIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure b2 c Id p forbidden response has a 2xx status code
func (o *GetAzureB2CIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure b2 c Id p forbidden response has a 3xx status code
func (o *GetAzureB2CIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure b2 c Id p forbidden response has a 4xx status code
func (o *GetAzureB2CIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure b2 c Id p forbidden response has a 5xx status code
func (o *GetAzureB2CIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure b2 c Id p forbidden response a status code equal to that given
func (o *GetAzureB2CIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get azure b2 c Id p forbidden response
func (o *GetAzureB2CIDPForbidden) Code() int {
	return 403
}

func (o *GetAzureB2CIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPForbidden %s", 403, payload)
}

func (o *GetAzureB2CIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPForbidden %s", 403, payload)
}

func (o *GetAzureB2CIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureB2CIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureB2CIDPNotFound creates a GetAzureB2CIDPNotFound with default headers values
func NewGetAzureB2CIDPNotFound() *GetAzureB2CIDPNotFound {
	return &GetAzureB2CIDPNotFound{}
}

/*
GetAzureB2CIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAzureB2CIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure b2 c Id p not found response has a 2xx status code
func (o *GetAzureB2CIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure b2 c Id p not found response has a 3xx status code
func (o *GetAzureB2CIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure b2 c Id p not found response has a 4xx status code
func (o *GetAzureB2CIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure b2 c Id p not found response has a 5xx status code
func (o *GetAzureB2CIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure b2 c Id p not found response a status code equal to that given
func (o *GetAzureB2CIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get azure b2 c Id p not found response
func (o *GetAzureB2CIDPNotFound) Code() int {
	return 404
}

func (o *GetAzureB2CIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPNotFound %s", 404, payload)
}

func (o *GetAzureB2CIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPNotFound %s", 404, payload)
}

func (o *GetAzureB2CIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureB2CIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureB2CIDPTooManyRequests creates a GetAzureB2CIDPTooManyRequests with default headers values
func NewGetAzureB2CIDPTooManyRequests() *GetAzureB2CIDPTooManyRequests {
	return &GetAzureB2CIDPTooManyRequests{}
}

/*
GetAzureB2CIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetAzureB2CIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure b2 c Id p too many requests response has a 2xx status code
func (o *GetAzureB2CIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure b2 c Id p too many requests response has a 3xx status code
func (o *GetAzureB2CIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure b2 c Id p too many requests response has a 4xx status code
func (o *GetAzureB2CIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure b2 c Id p too many requests response has a 5xx status code
func (o *GetAzureB2CIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure b2 c Id p too many requests response a status code equal to that given
func (o *GetAzureB2CIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get azure b2 c Id p too many requests response
func (o *GetAzureB2CIDPTooManyRequests) Code() int {
	return 429
}

func (o *GetAzureB2CIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPTooManyRequests %s", 429, payload)
}

func (o *GetAzureB2CIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/azureb2c/{iid}][%d] getAzureB2CIdPTooManyRequests %s", 429, payload)
}

func (o *GetAzureB2CIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureB2CIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
