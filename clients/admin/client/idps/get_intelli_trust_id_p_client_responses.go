// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetIntelliTrustIDPClientReader is a Reader for the GetIntelliTrustIDPClient structure.
type GetIntelliTrustIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIntelliTrustIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIntelliTrustIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIntelliTrustIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIntelliTrustIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIntelliTrustIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIntelliTrustIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetIntelliTrustIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/intelli_trust/{iid}/client] getIntelliTrustIDPClient", response, response.Code())
	}
}

// NewGetIntelliTrustIDPClientOK creates a GetIntelliTrustIDPClientOK with default headers values
func NewGetIntelliTrustIDPClientOK() *GetIntelliTrustIDPClientOK {
	return &GetIntelliTrustIDPClientOK{}
}

/*
GetIntelliTrustIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetIntelliTrustIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get intelli trust Id p client o k response has a 2xx status code
func (o *GetIntelliTrustIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get intelli trust Id p client o k response has a 3xx status code
func (o *GetIntelliTrustIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intelli trust Id p client o k response has a 4xx status code
func (o *GetIntelliTrustIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get intelli trust Id p client o k response has a 5xx status code
func (o *GetIntelliTrustIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get intelli trust Id p client o k response a status code equal to that given
func (o *GetIntelliTrustIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get intelli trust Id p client o k response
func (o *GetIntelliTrustIDPClientOK) Code() int {
	return 200
}

func (o *GetIntelliTrustIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetIntelliTrustIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetIntelliTrustIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetIntelliTrustIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntelliTrustIDPClientBadRequest creates a GetIntelliTrustIDPClientBadRequest with default headers values
func NewGetIntelliTrustIDPClientBadRequest() *GetIntelliTrustIDPClientBadRequest {
	return &GetIntelliTrustIDPClientBadRequest{}
}

/*
GetIntelliTrustIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetIntelliTrustIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get intelli trust Id p client bad request response has a 2xx status code
func (o *GetIntelliTrustIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intelli trust Id p client bad request response has a 3xx status code
func (o *GetIntelliTrustIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intelli trust Id p client bad request response has a 4xx status code
func (o *GetIntelliTrustIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intelli trust Id p client bad request response has a 5xx status code
func (o *GetIntelliTrustIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get intelli trust Id p client bad request response a status code equal to that given
func (o *GetIntelliTrustIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get intelli trust Id p client bad request response
func (o *GetIntelliTrustIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetIntelliTrustIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetIntelliTrustIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetIntelliTrustIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIntelliTrustIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntelliTrustIDPClientUnauthorized creates a GetIntelliTrustIDPClientUnauthorized with default headers values
func NewGetIntelliTrustIDPClientUnauthorized() *GetIntelliTrustIDPClientUnauthorized {
	return &GetIntelliTrustIDPClientUnauthorized{}
}

/*
GetIntelliTrustIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIntelliTrustIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get intelli trust Id p client unauthorized response has a 2xx status code
func (o *GetIntelliTrustIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intelli trust Id p client unauthorized response has a 3xx status code
func (o *GetIntelliTrustIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intelli trust Id p client unauthorized response has a 4xx status code
func (o *GetIntelliTrustIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intelli trust Id p client unauthorized response has a 5xx status code
func (o *GetIntelliTrustIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get intelli trust Id p client unauthorized response a status code equal to that given
func (o *GetIntelliTrustIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get intelli trust Id p client unauthorized response
func (o *GetIntelliTrustIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetIntelliTrustIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIntelliTrustIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetIntelliTrustIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIntelliTrustIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntelliTrustIDPClientForbidden creates a GetIntelliTrustIDPClientForbidden with default headers values
func NewGetIntelliTrustIDPClientForbidden() *GetIntelliTrustIDPClientForbidden {
	return &GetIntelliTrustIDPClientForbidden{}
}

/*
GetIntelliTrustIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIntelliTrustIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get intelli trust Id p client forbidden response has a 2xx status code
func (o *GetIntelliTrustIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intelli trust Id p client forbidden response has a 3xx status code
func (o *GetIntelliTrustIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intelli trust Id p client forbidden response has a 4xx status code
func (o *GetIntelliTrustIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intelli trust Id p client forbidden response has a 5xx status code
func (o *GetIntelliTrustIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get intelli trust Id p client forbidden response a status code equal to that given
func (o *GetIntelliTrustIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get intelli trust Id p client forbidden response
func (o *GetIntelliTrustIDPClientForbidden) Code() int {
	return 403
}

func (o *GetIntelliTrustIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetIntelliTrustIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetIntelliTrustIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIntelliTrustIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntelliTrustIDPClientNotFound creates a GetIntelliTrustIDPClientNotFound with default headers values
func NewGetIntelliTrustIDPClientNotFound() *GetIntelliTrustIDPClientNotFound {
	return &GetIntelliTrustIDPClientNotFound{}
}

/*
GetIntelliTrustIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetIntelliTrustIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get intelli trust Id p client not found response has a 2xx status code
func (o *GetIntelliTrustIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intelli trust Id p client not found response has a 3xx status code
func (o *GetIntelliTrustIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intelli trust Id p client not found response has a 4xx status code
func (o *GetIntelliTrustIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intelli trust Id p client not found response has a 5xx status code
func (o *GetIntelliTrustIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get intelli trust Id p client not found response a status code equal to that given
func (o *GetIntelliTrustIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get intelli trust Id p client not found response
func (o *GetIntelliTrustIDPClientNotFound) Code() int {
	return 404
}

func (o *GetIntelliTrustIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetIntelliTrustIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetIntelliTrustIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIntelliTrustIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntelliTrustIDPClientTooManyRequests creates a GetIntelliTrustIDPClientTooManyRequests with default headers values
func NewGetIntelliTrustIDPClientTooManyRequests() *GetIntelliTrustIDPClientTooManyRequests {
	return &GetIntelliTrustIDPClientTooManyRequests{}
}

/*
GetIntelliTrustIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetIntelliTrustIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get intelli trust Id p client too many requests response has a 2xx status code
func (o *GetIntelliTrustIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intelli trust Id p client too many requests response has a 3xx status code
func (o *GetIntelliTrustIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intelli trust Id p client too many requests response has a 4xx status code
func (o *GetIntelliTrustIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intelli trust Id p client too many requests response has a 5xx status code
func (o *GetIntelliTrustIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get intelli trust Id p client too many requests response a status code equal to that given
func (o *GetIntelliTrustIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get intelli trust Id p client too many requests response
func (o *GetIntelliTrustIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetIntelliTrustIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIntelliTrustIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/intelli_trust/{iid}/client][%d] getIntelliTrustIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetIntelliTrustIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetIntelliTrustIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
