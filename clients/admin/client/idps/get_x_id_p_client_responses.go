// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetXIDPClientReader is a Reader for the GetXIDPClient structure.
type GetXIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetXIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetXIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetXIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetXIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetXIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetXIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetXIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/x/{iid}/client] getXIDPClient", response, response.Code())
	}
}

// NewGetXIDPClientOK creates a GetXIDPClientOK with default headers values
func NewGetXIDPClientOK() *GetXIDPClientOK {
	return &GetXIDPClientOK{}
}

/*
GetXIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetXIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get x Id p client o k response has a 2xx status code
func (o *GetXIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get x Id p client o k response has a 3xx status code
func (o *GetXIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p client o k response has a 4xx status code
func (o *GetXIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get x Id p client o k response has a 5xx status code
func (o *GetXIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p client o k response a status code equal to that given
func (o *GetXIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get x Id p client o k response
func (o *GetXIDPClientOK) Code() int {
	return 200
}

func (o *GetXIDPClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientOK %s", 200, payload)
}

func (o *GetXIDPClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientOK %s", 200, payload)
}

func (o *GetXIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetXIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPClientBadRequest creates a GetXIDPClientBadRequest with default headers values
func NewGetXIDPClientBadRequest() *GetXIDPClientBadRequest {
	return &GetXIDPClientBadRequest{}
}

/*
GetXIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetXIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p client bad request response has a 2xx status code
func (o *GetXIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p client bad request response has a 3xx status code
func (o *GetXIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p client bad request response has a 4xx status code
func (o *GetXIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p client bad request response has a 5xx status code
func (o *GetXIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p client bad request response a status code equal to that given
func (o *GetXIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get x Id p client bad request response
func (o *GetXIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetXIDPClientBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientBadRequest %s", 400, payload)
}

func (o *GetXIDPClientBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientBadRequest %s", 400, payload)
}

func (o *GetXIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPClientUnauthorized creates a GetXIDPClientUnauthorized with default headers values
func NewGetXIDPClientUnauthorized() *GetXIDPClientUnauthorized {
	return &GetXIDPClientUnauthorized{}
}

/*
GetXIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetXIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p client unauthorized response has a 2xx status code
func (o *GetXIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p client unauthorized response has a 3xx status code
func (o *GetXIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p client unauthorized response has a 4xx status code
func (o *GetXIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p client unauthorized response has a 5xx status code
func (o *GetXIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p client unauthorized response a status code equal to that given
func (o *GetXIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get x Id p client unauthorized response
func (o *GetXIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetXIDPClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientUnauthorized %s", 401, payload)
}

func (o *GetXIDPClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientUnauthorized %s", 401, payload)
}

func (o *GetXIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPClientForbidden creates a GetXIDPClientForbidden with default headers values
func NewGetXIDPClientForbidden() *GetXIDPClientForbidden {
	return &GetXIDPClientForbidden{}
}

/*
GetXIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetXIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p client forbidden response has a 2xx status code
func (o *GetXIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p client forbidden response has a 3xx status code
func (o *GetXIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p client forbidden response has a 4xx status code
func (o *GetXIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p client forbidden response has a 5xx status code
func (o *GetXIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p client forbidden response a status code equal to that given
func (o *GetXIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get x Id p client forbidden response
func (o *GetXIDPClientForbidden) Code() int {
	return 403
}

func (o *GetXIDPClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientForbidden %s", 403, payload)
}

func (o *GetXIDPClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientForbidden %s", 403, payload)
}

func (o *GetXIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPClientNotFound creates a GetXIDPClientNotFound with default headers values
func NewGetXIDPClientNotFound() *GetXIDPClientNotFound {
	return &GetXIDPClientNotFound{}
}

/*
GetXIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetXIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p client not found response has a 2xx status code
func (o *GetXIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p client not found response has a 3xx status code
func (o *GetXIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p client not found response has a 4xx status code
func (o *GetXIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p client not found response has a 5xx status code
func (o *GetXIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p client not found response a status code equal to that given
func (o *GetXIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get x Id p client not found response
func (o *GetXIDPClientNotFound) Code() int {
	return 404
}

func (o *GetXIDPClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientNotFound %s", 404, payload)
}

func (o *GetXIDPClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientNotFound %s", 404, payload)
}

func (o *GetXIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPClientTooManyRequests creates a GetXIDPClientTooManyRequests with default headers values
func NewGetXIDPClientTooManyRequests() *GetXIDPClientTooManyRequests {
	return &GetXIDPClientTooManyRequests{}
}

/*
GetXIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetXIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p client too many requests response has a 2xx status code
func (o *GetXIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p client too many requests response has a 3xx status code
func (o *GetXIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p client too many requests response has a 4xx status code
func (o *GetXIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p client too many requests response has a 5xx status code
func (o *GetXIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p client too many requests response a status code equal to that given
func (o *GetXIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get x Id p client too many requests response
func (o *GetXIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetXIDPClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetXIDPClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}/client][%d] getXIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetXIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
