// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateAppleIDPReader is a Reader for the CreateAppleIDP structure.
type CreateAppleIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAppleIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateAppleIDPCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAppleIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateAppleIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAppleIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAppleIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateAppleIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateAppleIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/idps/apple] createAppleIDP", response, response.Code())
	}
}

// NewCreateAppleIDPCreated creates a CreateAppleIDPCreated with default headers values
func NewCreateAppleIDPCreated() *CreateAppleIDPCreated {
	return &CreateAppleIDPCreated{}
}

/*
CreateAppleIDPCreated describes a response with status code 201, with default header values.

AppleIDP
*/
type CreateAppleIDPCreated struct {
	Payload *models.AppleIDP
}

// IsSuccess returns true when this create apple Id p created response has a 2xx status code
func (o *CreateAppleIDPCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create apple Id p created response has a 3xx status code
func (o *CreateAppleIDPCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p created response has a 4xx status code
func (o *CreateAppleIDPCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create apple Id p created response has a 5xx status code
func (o *CreateAppleIDPCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p created response a status code equal to that given
func (o *CreateAppleIDPCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create apple Id p created response
func (o *CreateAppleIDPCreated) Code() int {
	return 201
}

func (o *CreateAppleIDPCreated) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPCreated  %+v", 201, o.Payload)
}

func (o *CreateAppleIDPCreated) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPCreated  %+v", 201, o.Payload)
}

func (o *CreateAppleIDPCreated) GetPayload() *models.AppleIDP {
	return o.Payload
}

func (o *CreateAppleIDPCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AppleIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppleIDPBadRequest creates a CreateAppleIDPBadRequest with default headers values
func NewCreateAppleIDPBadRequest() *CreateAppleIDPBadRequest {
	return &CreateAppleIDPBadRequest{}
}

/*
CreateAppleIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateAppleIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create apple Id p bad request response has a 2xx status code
func (o *CreateAppleIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create apple Id p bad request response has a 3xx status code
func (o *CreateAppleIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p bad request response has a 4xx status code
func (o *CreateAppleIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create apple Id p bad request response has a 5xx status code
func (o *CreateAppleIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p bad request response a status code equal to that given
func (o *CreateAppleIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create apple Id p bad request response
func (o *CreateAppleIDPBadRequest) Code() int {
	return 400
}

func (o *CreateAppleIDPBadRequest) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAppleIDPBadRequest) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPBadRequest  %+v", 400, o.Payload)
}

func (o *CreateAppleIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAppleIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppleIDPUnauthorized creates a CreateAppleIDPUnauthorized with default headers values
func NewCreateAppleIDPUnauthorized() *CreateAppleIDPUnauthorized {
	return &CreateAppleIDPUnauthorized{}
}

/*
CreateAppleIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateAppleIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create apple Id p unauthorized response has a 2xx status code
func (o *CreateAppleIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create apple Id p unauthorized response has a 3xx status code
func (o *CreateAppleIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p unauthorized response has a 4xx status code
func (o *CreateAppleIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create apple Id p unauthorized response has a 5xx status code
func (o *CreateAppleIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p unauthorized response a status code equal to that given
func (o *CreateAppleIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create apple Id p unauthorized response
func (o *CreateAppleIDPUnauthorized) Code() int {
	return 401
}

func (o *CreateAppleIDPUnauthorized) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateAppleIDPUnauthorized) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateAppleIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAppleIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppleIDPForbidden creates a CreateAppleIDPForbidden with default headers values
func NewCreateAppleIDPForbidden() *CreateAppleIDPForbidden {
	return &CreateAppleIDPForbidden{}
}

/*
CreateAppleIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateAppleIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create apple Id p forbidden response has a 2xx status code
func (o *CreateAppleIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create apple Id p forbidden response has a 3xx status code
func (o *CreateAppleIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p forbidden response has a 4xx status code
func (o *CreateAppleIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create apple Id p forbidden response has a 5xx status code
func (o *CreateAppleIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p forbidden response a status code equal to that given
func (o *CreateAppleIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create apple Id p forbidden response
func (o *CreateAppleIDPForbidden) Code() int {
	return 403
}

func (o *CreateAppleIDPForbidden) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPForbidden  %+v", 403, o.Payload)
}

func (o *CreateAppleIDPForbidden) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPForbidden  %+v", 403, o.Payload)
}

func (o *CreateAppleIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAppleIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppleIDPNotFound creates a CreateAppleIDPNotFound with default headers values
func NewCreateAppleIDPNotFound() *CreateAppleIDPNotFound {
	return &CreateAppleIDPNotFound{}
}

/*
CreateAppleIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateAppleIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create apple Id p not found response has a 2xx status code
func (o *CreateAppleIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create apple Id p not found response has a 3xx status code
func (o *CreateAppleIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p not found response has a 4xx status code
func (o *CreateAppleIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create apple Id p not found response has a 5xx status code
func (o *CreateAppleIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p not found response a status code equal to that given
func (o *CreateAppleIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create apple Id p not found response
func (o *CreateAppleIDPNotFound) Code() int {
	return 404
}

func (o *CreateAppleIDPNotFound) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPNotFound  %+v", 404, o.Payload)
}

func (o *CreateAppleIDPNotFound) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPNotFound  %+v", 404, o.Payload)
}

func (o *CreateAppleIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAppleIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppleIDPUnprocessableEntity creates a CreateAppleIDPUnprocessableEntity with default headers values
func NewCreateAppleIDPUnprocessableEntity() *CreateAppleIDPUnprocessableEntity {
	return &CreateAppleIDPUnprocessableEntity{}
}

/*
CreateAppleIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateAppleIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create apple Id p unprocessable entity response has a 2xx status code
func (o *CreateAppleIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create apple Id p unprocessable entity response has a 3xx status code
func (o *CreateAppleIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p unprocessable entity response has a 4xx status code
func (o *CreateAppleIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create apple Id p unprocessable entity response has a 5xx status code
func (o *CreateAppleIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p unprocessable entity response a status code equal to that given
func (o *CreateAppleIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create apple Id p unprocessable entity response
func (o *CreateAppleIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateAppleIDPUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateAppleIDPUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateAppleIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAppleIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAppleIDPTooManyRequests creates a CreateAppleIDPTooManyRequests with default headers values
func NewCreateAppleIDPTooManyRequests() *CreateAppleIDPTooManyRequests {
	return &CreateAppleIDPTooManyRequests{}
}

/*
CreateAppleIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateAppleIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create apple Id p too many requests response has a 2xx status code
func (o *CreateAppleIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create apple Id p too many requests response has a 3xx status code
func (o *CreateAppleIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create apple Id p too many requests response has a 4xx status code
func (o *CreateAppleIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create apple Id p too many requests response has a 5xx status code
func (o *CreateAppleIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create apple Id p too many requests response a status code equal to that given
func (o *CreateAppleIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create apple Id p too many requests response
func (o *CreateAppleIDPTooManyRequests) Code() int {
	return 429
}

func (o *CreateAppleIDPTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateAppleIDPTooManyRequests) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/idps/apple][%d] createAppleIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateAppleIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateAppleIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
