// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetXIDPReader is a Reader for the GetXIDP structure.
type GetXIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetXIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetXIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetXIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetXIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetXIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetXIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/x/{iid}] getXIDP", response, response.Code())
	}
}

// NewGetXIDPOK creates a GetXIDPOK with default headers values
func NewGetXIDPOK() *GetXIDPOK {
	return &GetXIDPOK{}
}

/*
GetXIDPOK describes a response with status code 200, with default header values.

XIDP
*/
type GetXIDPOK struct {
	Payload *models.XIDP
}

// IsSuccess returns true when this get x Id p o k response has a 2xx status code
func (o *GetXIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get x Id p o k response has a 3xx status code
func (o *GetXIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p o k response has a 4xx status code
func (o *GetXIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get x Id p o k response has a 5xx status code
func (o *GetXIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p o k response a status code equal to that given
func (o *GetXIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get x Id p o k response
func (o *GetXIDPOK) Code() int {
	return 200
}

func (o *GetXIDPOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPOK  %+v", 200, o.Payload)
}

func (o *GetXIDPOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPOK  %+v", 200, o.Payload)
}

func (o *GetXIDPOK) GetPayload() *models.XIDP {
	return o.Payload
}

func (o *GetXIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.XIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPUnauthorized creates a GetXIDPUnauthorized with default headers values
func NewGetXIDPUnauthorized() *GetXIDPUnauthorized {
	return &GetXIDPUnauthorized{}
}

/*
GetXIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetXIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p unauthorized response has a 2xx status code
func (o *GetXIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p unauthorized response has a 3xx status code
func (o *GetXIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p unauthorized response has a 4xx status code
func (o *GetXIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p unauthorized response has a 5xx status code
func (o *GetXIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p unauthorized response a status code equal to that given
func (o *GetXIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get x Id p unauthorized response
func (o *GetXIDPUnauthorized) Code() int {
	return 401
}

func (o *GetXIDPUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *GetXIDPUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *GetXIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPForbidden creates a GetXIDPForbidden with default headers values
func NewGetXIDPForbidden() *GetXIDPForbidden {
	return &GetXIDPForbidden{}
}

/*
GetXIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetXIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p forbidden response has a 2xx status code
func (o *GetXIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p forbidden response has a 3xx status code
func (o *GetXIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p forbidden response has a 4xx status code
func (o *GetXIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p forbidden response has a 5xx status code
func (o *GetXIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p forbidden response a status code equal to that given
func (o *GetXIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get x Id p forbidden response
func (o *GetXIDPForbidden) Code() int {
	return 403
}

func (o *GetXIDPForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPForbidden  %+v", 403, o.Payload)
}

func (o *GetXIDPForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPForbidden  %+v", 403, o.Payload)
}

func (o *GetXIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPNotFound creates a GetXIDPNotFound with default headers values
func NewGetXIDPNotFound() *GetXIDPNotFound {
	return &GetXIDPNotFound{}
}

/*
GetXIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetXIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p not found response has a 2xx status code
func (o *GetXIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p not found response has a 3xx status code
func (o *GetXIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p not found response has a 4xx status code
func (o *GetXIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p not found response has a 5xx status code
func (o *GetXIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p not found response a status code equal to that given
func (o *GetXIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get x Id p not found response
func (o *GetXIDPNotFound) Code() int {
	return 404
}

func (o *GetXIDPNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPNotFound  %+v", 404, o.Payload)
}

func (o *GetXIDPNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPNotFound  %+v", 404, o.Payload)
}

func (o *GetXIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXIDPTooManyRequests creates a GetXIDPTooManyRequests with default headers values
func NewGetXIDPTooManyRequests() *GetXIDPTooManyRequests {
	return &GetXIDPTooManyRequests{}
}

/*
GetXIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetXIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get x Id p too many requests response has a 2xx status code
func (o *GetXIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get x Id p too many requests response has a 3xx status code
func (o *GetXIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get x Id p too many requests response has a 4xx status code
func (o *GetXIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get x Id p too many requests response has a 5xx status code
func (o *GetXIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get x Id p too many requests response a status code equal to that given
func (o *GetXIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get x Id p too many requests response
func (o *GetXIDPTooManyRequests) Code() int {
	return 429
}

func (o *GetXIDPTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetXIDPTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/x/{iid}][%d] getXIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetXIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetXIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
