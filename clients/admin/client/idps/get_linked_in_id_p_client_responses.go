// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetLinkedInIDPClientReader is a Reader for the GetLinkedInIDPClient structure.
type GetLinkedInIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLinkedInIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLinkedInIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLinkedInIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetLinkedInIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLinkedInIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLinkedInIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetLinkedInIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/linkedin/{iid}/client] getLinkedInIDPClient", response, response.Code())
	}
}

// NewGetLinkedInIDPClientOK creates a GetLinkedInIDPClientOK with default headers values
func NewGetLinkedInIDPClientOK() *GetLinkedInIDPClientOK {
	return &GetLinkedInIDPClientOK{}
}

/*
GetLinkedInIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetLinkedInIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get linked in Id p client o k response has a 2xx status code
func (o *GetLinkedInIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get linked in Id p client o k response has a 3xx status code
func (o *GetLinkedInIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get linked in Id p client o k response has a 4xx status code
func (o *GetLinkedInIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get linked in Id p client o k response has a 5xx status code
func (o *GetLinkedInIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get linked in Id p client o k response a status code equal to that given
func (o *GetLinkedInIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get linked in Id p client o k response
func (o *GetLinkedInIDPClientOK) Code() int {
	return 200
}

func (o *GetLinkedInIDPClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientOK %s", 200, payload)
}

func (o *GetLinkedInIDPClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientOK %s", 200, payload)
}

func (o *GetLinkedInIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetLinkedInIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkedInIDPClientBadRequest creates a GetLinkedInIDPClientBadRequest with default headers values
func NewGetLinkedInIDPClientBadRequest() *GetLinkedInIDPClientBadRequest {
	return &GetLinkedInIDPClientBadRequest{}
}

/*
GetLinkedInIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetLinkedInIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get linked in Id p client bad request response has a 2xx status code
func (o *GetLinkedInIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get linked in Id p client bad request response has a 3xx status code
func (o *GetLinkedInIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get linked in Id p client bad request response has a 4xx status code
func (o *GetLinkedInIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get linked in Id p client bad request response has a 5xx status code
func (o *GetLinkedInIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get linked in Id p client bad request response a status code equal to that given
func (o *GetLinkedInIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get linked in Id p client bad request response
func (o *GetLinkedInIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetLinkedInIDPClientBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientBadRequest %s", 400, payload)
}

func (o *GetLinkedInIDPClientBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientBadRequest %s", 400, payload)
}

func (o *GetLinkedInIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLinkedInIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkedInIDPClientUnauthorized creates a GetLinkedInIDPClientUnauthorized with default headers values
func NewGetLinkedInIDPClientUnauthorized() *GetLinkedInIDPClientUnauthorized {
	return &GetLinkedInIDPClientUnauthorized{}
}

/*
GetLinkedInIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLinkedInIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get linked in Id p client unauthorized response has a 2xx status code
func (o *GetLinkedInIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get linked in Id p client unauthorized response has a 3xx status code
func (o *GetLinkedInIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get linked in Id p client unauthorized response has a 4xx status code
func (o *GetLinkedInIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get linked in Id p client unauthorized response has a 5xx status code
func (o *GetLinkedInIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get linked in Id p client unauthorized response a status code equal to that given
func (o *GetLinkedInIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get linked in Id p client unauthorized response
func (o *GetLinkedInIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetLinkedInIDPClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientUnauthorized %s", 401, payload)
}

func (o *GetLinkedInIDPClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientUnauthorized %s", 401, payload)
}

func (o *GetLinkedInIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLinkedInIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkedInIDPClientForbidden creates a GetLinkedInIDPClientForbidden with default headers values
func NewGetLinkedInIDPClientForbidden() *GetLinkedInIDPClientForbidden {
	return &GetLinkedInIDPClientForbidden{}
}

/*
GetLinkedInIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLinkedInIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get linked in Id p client forbidden response has a 2xx status code
func (o *GetLinkedInIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get linked in Id p client forbidden response has a 3xx status code
func (o *GetLinkedInIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get linked in Id p client forbidden response has a 4xx status code
func (o *GetLinkedInIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get linked in Id p client forbidden response has a 5xx status code
func (o *GetLinkedInIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get linked in Id p client forbidden response a status code equal to that given
func (o *GetLinkedInIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get linked in Id p client forbidden response
func (o *GetLinkedInIDPClientForbidden) Code() int {
	return 403
}

func (o *GetLinkedInIDPClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientForbidden %s", 403, payload)
}

func (o *GetLinkedInIDPClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientForbidden %s", 403, payload)
}

func (o *GetLinkedInIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLinkedInIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkedInIDPClientNotFound creates a GetLinkedInIDPClientNotFound with default headers values
func NewGetLinkedInIDPClientNotFound() *GetLinkedInIDPClientNotFound {
	return &GetLinkedInIDPClientNotFound{}
}

/*
GetLinkedInIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetLinkedInIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get linked in Id p client not found response has a 2xx status code
func (o *GetLinkedInIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get linked in Id p client not found response has a 3xx status code
func (o *GetLinkedInIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get linked in Id p client not found response has a 4xx status code
func (o *GetLinkedInIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get linked in Id p client not found response has a 5xx status code
func (o *GetLinkedInIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get linked in Id p client not found response a status code equal to that given
func (o *GetLinkedInIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get linked in Id p client not found response
func (o *GetLinkedInIDPClientNotFound) Code() int {
	return 404
}

func (o *GetLinkedInIDPClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientNotFound %s", 404, payload)
}

func (o *GetLinkedInIDPClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientNotFound %s", 404, payload)
}

func (o *GetLinkedInIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLinkedInIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLinkedInIDPClientTooManyRequests creates a GetLinkedInIDPClientTooManyRequests with default headers values
func NewGetLinkedInIDPClientTooManyRequests() *GetLinkedInIDPClientTooManyRequests {
	return &GetLinkedInIDPClientTooManyRequests{}
}

/*
GetLinkedInIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetLinkedInIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get linked in Id p client too many requests response has a 2xx status code
func (o *GetLinkedInIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get linked in Id p client too many requests response has a 3xx status code
func (o *GetLinkedInIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get linked in Id p client too many requests response has a 4xx status code
func (o *GetLinkedInIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get linked in Id p client too many requests response has a 5xx status code
func (o *GetLinkedInIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get linked in Id p client too many requests response a status code equal to that given
func (o *GetLinkedInIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get linked in Id p client too many requests response
func (o *GetLinkedInIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetLinkedInIDPClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetLinkedInIDPClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/linkedin/{iid}/client][%d] getLinkedInIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetLinkedInIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetLinkedInIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
