// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateAzureIDPReader is a Reader for the UpdateAzureIDP structure.
type UpdateAzureIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAzureIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAzureIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAzureIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateAzureIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAzureIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAzureIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateAzureIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateAzureIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/azure/{iid}] updateAzureIDP", response, response.Code())
	}
}

// NewUpdateAzureIDPOK creates a UpdateAzureIDPOK with default headers values
func NewUpdateAzureIDPOK() *UpdateAzureIDPOK {
	return &UpdateAzureIDPOK{}
}

/*
UpdateAzureIDPOK describes a response with status code 200, with default header values.

AzureIDP
*/
type UpdateAzureIDPOK struct {
	Payload *models.AzureIDP
}

// IsSuccess returns true when this update azure Id p o k response has a 2xx status code
func (o *UpdateAzureIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update azure Id p o k response has a 3xx status code
func (o *UpdateAzureIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p o k response has a 4xx status code
func (o *UpdateAzureIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update azure Id p o k response has a 5xx status code
func (o *UpdateAzureIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p o k response a status code equal to that given
func (o *UpdateAzureIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update azure Id p o k response
func (o *UpdateAzureIDPOK) Code() int {
	return 200
}

func (o *UpdateAzureIDPOK) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateAzureIDPOK) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateAzureIDPOK) GetPayload() *models.AzureIDP {
	return o.Payload
}

func (o *UpdateAzureIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AzureIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureIDPBadRequest creates a UpdateAzureIDPBadRequest with default headers values
func NewUpdateAzureIDPBadRequest() *UpdateAzureIDPBadRequest {
	return &UpdateAzureIDPBadRequest{}
}

/*
UpdateAzureIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateAzureIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update azure Id p bad request response has a 2xx status code
func (o *UpdateAzureIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure Id p bad request response has a 3xx status code
func (o *UpdateAzureIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p bad request response has a 4xx status code
func (o *UpdateAzureIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure Id p bad request response has a 5xx status code
func (o *UpdateAzureIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p bad request response a status code equal to that given
func (o *UpdateAzureIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update azure Id p bad request response
func (o *UpdateAzureIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateAzureIDPBadRequest) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAzureIDPBadRequest) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateAzureIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAzureIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureIDPUnauthorized creates a UpdateAzureIDPUnauthorized with default headers values
func NewUpdateAzureIDPUnauthorized() *UpdateAzureIDPUnauthorized {
	return &UpdateAzureIDPUnauthorized{}
}

/*
UpdateAzureIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateAzureIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update azure Id p unauthorized response has a 2xx status code
func (o *UpdateAzureIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure Id p unauthorized response has a 3xx status code
func (o *UpdateAzureIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p unauthorized response has a 4xx status code
func (o *UpdateAzureIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure Id p unauthorized response has a 5xx status code
func (o *UpdateAzureIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p unauthorized response a status code equal to that given
func (o *UpdateAzureIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update azure Id p unauthorized response
func (o *UpdateAzureIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateAzureIDPUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateAzureIDPUnauthorized) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateAzureIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAzureIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureIDPForbidden creates a UpdateAzureIDPForbidden with default headers values
func NewUpdateAzureIDPForbidden() *UpdateAzureIDPForbidden {
	return &UpdateAzureIDPForbidden{}
}

/*
UpdateAzureIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAzureIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update azure Id p forbidden response has a 2xx status code
func (o *UpdateAzureIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure Id p forbidden response has a 3xx status code
func (o *UpdateAzureIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p forbidden response has a 4xx status code
func (o *UpdateAzureIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure Id p forbidden response has a 5xx status code
func (o *UpdateAzureIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p forbidden response a status code equal to that given
func (o *UpdateAzureIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update azure Id p forbidden response
func (o *UpdateAzureIDPForbidden) Code() int {
	return 403
}

func (o *UpdateAzureIDPForbidden) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAzureIDPForbidden) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateAzureIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAzureIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureIDPNotFound creates a UpdateAzureIDPNotFound with default headers values
func NewUpdateAzureIDPNotFound() *UpdateAzureIDPNotFound {
	return &UpdateAzureIDPNotFound{}
}

/*
UpdateAzureIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateAzureIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update azure Id p not found response has a 2xx status code
func (o *UpdateAzureIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure Id p not found response has a 3xx status code
func (o *UpdateAzureIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p not found response has a 4xx status code
func (o *UpdateAzureIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure Id p not found response has a 5xx status code
func (o *UpdateAzureIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p not found response a status code equal to that given
func (o *UpdateAzureIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update azure Id p not found response
func (o *UpdateAzureIDPNotFound) Code() int {
	return 404
}

func (o *UpdateAzureIDPNotFound) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAzureIDPNotFound) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateAzureIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAzureIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureIDPUnprocessableEntity creates a UpdateAzureIDPUnprocessableEntity with default headers values
func NewUpdateAzureIDPUnprocessableEntity() *UpdateAzureIDPUnprocessableEntity {
	return &UpdateAzureIDPUnprocessableEntity{}
}

/*
UpdateAzureIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateAzureIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update azure Id p unprocessable entity response has a 2xx status code
func (o *UpdateAzureIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure Id p unprocessable entity response has a 3xx status code
func (o *UpdateAzureIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p unprocessable entity response has a 4xx status code
func (o *UpdateAzureIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure Id p unprocessable entity response has a 5xx status code
func (o *UpdateAzureIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p unprocessable entity response a status code equal to that given
func (o *UpdateAzureIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update azure Id p unprocessable entity response
func (o *UpdateAzureIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateAzureIDPUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateAzureIDPUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateAzureIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAzureIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureIDPTooManyRequests creates a UpdateAzureIDPTooManyRequests with default headers values
func NewUpdateAzureIDPTooManyRequests() *UpdateAzureIDPTooManyRequests {
	return &UpdateAzureIDPTooManyRequests{}
}

/*
UpdateAzureIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateAzureIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update azure Id p too many requests response has a 2xx status code
func (o *UpdateAzureIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure Id p too many requests response has a 3xx status code
func (o *UpdateAzureIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure Id p too many requests response has a 4xx status code
func (o *UpdateAzureIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure Id p too many requests response has a 5xx status code
func (o *UpdateAzureIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure Id p too many requests response a status code equal to that given
func (o *UpdateAzureIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update azure Id p too many requests response
func (o *UpdateAzureIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateAzureIDPTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateAzureIDPTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/azure/{iid}][%d] updateAzureIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateAzureIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateAzureIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
