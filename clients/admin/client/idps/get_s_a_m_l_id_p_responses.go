// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetSAMLIDPReader is a Reader for the GetSAMLIDP structure.
type GetSAMLIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSAMLIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSAMLIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSAMLIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSAMLIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSAMLIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSAMLIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/saml/{iid}] getSAMLIDP", response, response.Code())
	}
}

// NewGetSAMLIDPOK creates a GetSAMLIDPOK with default headers values
func NewGetSAMLIDPOK() *GetSAMLIDPOK {
	return &GetSAMLIDPOK{}
}

/*
GetSAMLIDPOK describes a response with status code 200, with default header values.

SAMLIDP
*/
type GetSAMLIDPOK struct {
	Payload *models.SAMLIDP
}

// IsSuccess returns true when this get s a m l Id p o k response has a 2xx status code
func (o *GetSAMLIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get s a m l Id p o k response has a 3xx status code
func (o *GetSAMLIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l Id p o k response has a 4xx status code
func (o *GetSAMLIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get s a m l Id p o k response has a 5xx status code
func (o *GetSAMLIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l Id p o k response a status code equal to that given
func (o *GetSAMLIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get s a m l Id p o k response
func (o *GetSAMLIDPOK) Code() int {
	return 200
}

func (o *GetSAMLIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPOK %s", 200, payload)
}

func (o *GetSAMLIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPOK %s", 200, payload)
}

func (o *GetSAMLIDPOK) GetPayload() *models.SAMLIDP {
	return o.Payload
}

func (o *GetSAMLIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SAMLIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLIDPUnauthorized creates a GetSAMLIDPUnauthorized with default headers values
func NewGetSAMLIDPUnauthorized() *GetSAMLIDPUnauthorized {
	return &GetSAMLIDPUnauthorized{}
}

/*
GetSAMLIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSAMLIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l Id p unauthorized response has a 2xx status code
func (o *GetSAMLIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l Id p unauthorized response has a 3xx status code
func (o *GetSAMLIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l Id p unauthorized response has a 4xx status code
func (o *GetSAMLIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l Id p unauthorized response has a 5xx status code
func (o *GetSAMLIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l Id p unauthorized response a status code equal to that given
func (o *GetSAMLIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get s a m l Id p unauthorized response
func (o *GetSAMLIDPUnauthorized) Code() int {
	return 401
}

func (o *GetSAMLIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPUnauthorized %s", 401, payload)
}

func (o *GetSAMLIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPUnauthorized %s", 401, payload)
}

func (o *GetSAMLIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLIDPForbidden creates a GetSAMLIDPForbidden with default headers values
func NewGetSAMLIDPForbidden() *GetSAMLIDPForbidden {
	return &GetSAMLIDPForbidden{}
}

/*
GetSAMLIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSAMLIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l Id p forbidden response has a 2xx status code
func (o *GetSAMLIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l Id p forbidden response has a 3xx status code
func (o *GetSAMLIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l Id p forbidden response has a 4xx status code
func (o *GetSAMLIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l Id p forbidden response has a 5xx status code
func (o *GetSAMLIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l Id p forbidden response a status code equal to that given
func (o *GetSAMLIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get s a m l Id p forbidden response
func (o *GetSAMLIDPForbidden) Code() int {
	return 403
}

func (o *GetSAMLIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPForbidden %s", 403, payload)
}

func (o *GetSAMLIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPForbidden %s", 403, payload)
}

func (o *GetSAMLIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLIDPNotFound creates a GetSAMLIDPNotFound with default headers values
func NewGetSAMLIDPNotFound() *GetSAMLIDPNotFound {
	return &GetSAMLIDPNotFound{}
}

/*
GetSAMLIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSAMLIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l Id p not found response has a 2xx status code
func (o *GetSAMLIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l Id p not found response has a 3xx status code
func (o *GetSAMLIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l Id p not found response has a 4xx status code
func (o *GetSAMLIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l Id p not found response has a 5xx status code
func (o *GetSAMLIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l Id p not found response a status code equal to that given
func (o *GetSAMLIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get s a m l Id p not found response
func (o *GetSAMLIDPNotFound) Code() int {
	return 404
}

func (o *GetSAMLIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPNotFound %s", 404, payload)
}

func (o *GetSAMLIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPNotFound %s", 404, payload)
}

func (o *GetSAMLIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLIDPTooManyRequests creates a GetSAMLIDPTooManyRequests with default headers values
func NewGetSAMLIDPTooManyRequests() *GetSAMLIDPTooManyRequests {
	return &GetSAMLIDPTooManyRequests{}
}

/*
GetSAMLIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetSAMLIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l Id p too many requests response has a 2xx status code
func (o *GetSAMLIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l Id p too many requests response has a 3xx status code
func (o *GetSAMLIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l Id p too many requests response has a 4xx status code
func (o *GetSAMLIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l Id p too many requests response has a 5xx status code
func (o *GetSAMLIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l Id p too many requests response a status code equal to that given
func (o *GetSAMLIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get s a m l Id p too many requests response
func (o *GetSAMLIDPTooManyRequests) Code() int {
	return 429
}

func (o *GetSAMLIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPTooManyRequests %s", 429, payload)
}

func (o *GetSAMLIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml/{iid}][%d] getSAMLIdPTooManyRequests %s", 429, payload)
}

func (o *GetSAMLIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
