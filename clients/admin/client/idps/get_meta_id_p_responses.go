// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetMetaIDPReader is a Reader for the GetMetaIDP structure.
type GetMetaIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetaIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetaIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMetaIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMetaIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetaIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetMetaIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/meta/{iid}] getMetaIDP", response, response.Code())
	}
}

// NewGetMetaIDPOK creates a GetMetaIDPOK with default headers values
func NewGetMetaIDPOK() *GetMetaIDPOK {
	return &GetMetaIDPOK{}
}

/*
GetMetaIDPOK describes a response with status code 200, with default header values.

MetaIDP
*/
type GetMetaIDPOK struct {
	Payload *models.MetaIDP
}

// IsSuccess returns true when this get meta Id p o k response has a 2xx status code
func (o *GetMetaIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get meta Id p o k response has a 3xx status code
func (o *GetMetaIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p o k response has a 4xx status code
func (o *GetMetaIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get meta Id p o k response has a 5xx status code
func (o *GetMetaIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p o k response a status code equal to that given
func (o *GetMetaIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get meta Id p o k response
func (o *GetMetaIDPOK) Code() int {
	return 200
}

func (o *GetMetaIDPOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPOK  %+v", 200, o.Payload)
}

func (o *GetMetaIDPOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPOK  %+v", 200, o.Payload)
}

func (o *GetMetaIDPOK) GetPayload() *models.MetaIDP {
	return o.Payload
}

func (o *GetMetaIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MetaIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPUnauthorized creates a GetMetaIDPUnauthorized with default headers values
func NewGetMetaIDPUnauthorized() *GetMetaIDPUnauthorized {
	return &GetMetaIDPUnauthorized{}
}

/*
GetMetaIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMetaIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p unauthorized response has a 2xx status code
func (o *GetMetaIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p unauthorized response has a 3xx status code
func (o *GetMetaIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p unauthorized response has a 4xx status code
func (o *GetMetaIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p unauthorized response has a 5xx status code
func (o *GetMetaIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p unauthorized response a status code equal to that given
func (o *GetMetaIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get meta Id p unauthorized response
func (o *GetMetaIDPUnauthorized) Code() int {
	return 401
}

func (o *GetMetaIDPUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMetaIDPUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMetaIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPForbidden creates a GetMetaIDPForbidden with default headers values
func NewGetMetaIDPForbidden() *GetMetaIDPForbidden {
	return &GetMetaIDPForbidden{}
}

/*
GetMetaIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMetaIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p forbidden response has a 2xx status code
func (o *GetMetaIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p forbidden response has a 3xx status code
func (o *GetMetaIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p forbidden response has a 4xx status code
func (o *GetMetaIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p forbidden response has a 5xx status code
func (o *GetMetaIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p forbidden response a status code equal to that given
func (o *GetMetaIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get meta Id p forbidden response
func (o *GetMetaIDPForbidden) Code() int {
	return 403
}

func (o *GetMetaIDPForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPForbidden  %+v", 403, o.Payload)
}

func (o *GetMetaIDPForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPForbidden  %+v", 403, o.Payload)
}

func (o *GetMetaIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPNotFound creates a GetMetaIDPNotFound with default headers values
func NewGetMetaIDPNotFound() *GetMetaIDPNotFound {
	return &GetMetaIDPNotFound{}
}

/*
GetMetaIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetMetaIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p not found response has a 2xx status code
func (o *GetMetaIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p not found response has a 3xx status code
func (o *GetMetaIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p not found response has a 4xx status code
func (o *GetMetaIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p not found response has a 5xx status code
func (o *GetMetaIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p not found response a status code equal to that given
func (o *GetMetaIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get meta Id p not found response
func (o *GetMetaIDPNotFound) Code() int {
	return 404
}

func (o *GetMetaIDPNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPNotFound  %+v", 404, o.Payload)
}

func (o *GetMetaIDPNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPNotFound  %+v", 404, o.Payload)
}

func (o *GetMetaIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPTooManyRequests creates a GetMetaIDPTooManyRequests with default headers values
func NewGetMetaIDPTooManyRequests() *GetMetaIDPTooManyRequests {
	return &GetMetaIDPTooManyRequests{}
}

/*
GetMetaIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetMetaIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p too many requests response has a 2xx status code
func (o *GetMetaIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p too many requests response has a 3xx status code
func (o *GetMetaIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p too many requests response has a 4xx status code
func (o *GetMetaIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p too many requests response has a 5xx status code
func (o *GetMetaIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p too many requests response a status code equal to that given
func (o *GetMetaIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get meta Id p too many requests response
func (o *GetMetaIDPTooManyRequests) Code() int {
	return 429
}

func (o *GetMetaIDPTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetMetaIDPTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}][%d] getMetaIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetMetaIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
