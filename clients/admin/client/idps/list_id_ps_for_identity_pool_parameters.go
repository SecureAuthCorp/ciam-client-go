// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListIDPsForIdentityPoolParams creates a new ListIDPsForIdentityPoolParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListIDPsForIdentityPoolParams() *ListIDPsForIdentityPoolParams {
	return &ListIDPsForIdentityPoolParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListIDPsForIdentityPoolParamsWithTimeout creates a new ListIDPsForIdentityPoolParams object
// with the ability to set a timeout on a request.
func NewListIDPsForIdentityPoolParamsWithTimeout(timeout time.Duration) *ListIDPsForIdentityPoolParams {
	return &ListIDPsForIdentityPoolParams{
		timeout: timeout,
	}
}

// NewListIDPsForIdentityPoolParamsWithContext creates a new ListIDPsForIdentityPoolParams object
// with the ability to set a context for a request.
func NewListIDPsForIdentityPoolParamsWithContext(ctx context.Context) *ListIDPsForIdentityPoolParams {
	return &ListIDPsForIdentityPoolParams{
		Context: ctx,
	}
}

// NewListIDPsForIdentityPoolParamsWithHTTPClient creates a new ListIDPsForIdentityPoolParams object
// with the ability to set a custom HTTPClient for a request.
func NewListIDPsForIdentityPoolParamsWithHTTPClient(client *http.Client) *ListIDPsForIdentityPoolParams {
	return &ListIDPsForIdentityPoolParams{
		HTTPClient: client,
	}
}

/*
ListIDPsForIdentityPoolParams contains all the parameters to send to the API endpoint

	for the list ID ps for identity pool operation.

	Typically these are written to a http.Request.
*/
type ListIDPsForIdentityPoolParams struct {

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	/* IPID.

	   ID of your identity pool
	*/
	IPID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list ID ps for identity pool params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListIDPsForIdentityPoolParams) WithDefaults() *ListIDPsForIdentityPoolParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list ID ps for identity pool params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListIDPsForIdentityPoolParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) WithTimeout(timeout time.Duration) *ListIDPsForIdentityPoolParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) WithContext(ctx context.Context) *ListIDPsForIdentityPoolParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) WithHTTPClient(client *http.Client) *ListIDPsForIdentityPoolParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) WithIfMatch(ifMatch *string) *ListIDPsForIdentityPoolParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithIPID adds the iPID to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) WithIPID(iPID string) *ListIDPsForIdentityPoolParams {
	o.SetIPID(iPID)
	return o
}

// SetIPID adds the ipId to the list ID ps for identity pool params
func (o *ListIDPsForIdentityPoolParams) SetIPID(iPID string) {
	o.IPID = iPID
}

// WriteToRequest writes these params to a swagger request
func (o *ListIDPsForIdentityPoolParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	// path param ipID
	if err := r.SetPathParam("ipID", o.IPID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
