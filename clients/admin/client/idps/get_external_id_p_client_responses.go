// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetExternalIDPClientReader is a Reader for the GetExternalIDPClient structure.
type GetExternalIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExternalIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExternalIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetExternalIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetExternalIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExternalIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExternalIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetExternalIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/external/{iid}/client] getExternalIDPClient", response, response.Code())
	}
}

// NewGetExternalIDPClientOK creates a GetExternalIDPClientOK with default headers values
func NewGetExternalIDPClientOK() *GetExternalIDPClientOK {
	return &GetExternalIDPClientOK{}
}

/*
GetExternalIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetExternalIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get external Id p client o k response has a 2xx status code
func (o *GetExternalIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get external Id p client o k response has a 3xx status code
func (o *GetExternalIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external Id p client o k response has a 4xx status code
func (o *GetExternalIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get external Id p client o k response has a 5xx status code
func (o *GetExternalIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get external Id p client o k response a status code equal to that given
func (o *GetExternalIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get external Id p client o k response
func (o *GetExternalIDPClientOK) Code() int {
	return 200
}

func (o *GetExternalIDPClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientOK %s", 200, payload)
}

func (o *GetExternalIDPClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientOK %s", 200, payload)
}

func (o *GetExternalIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetExternalIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalIDPClientBadRequest creates a GetExternalIDPClientBadRequest with default headers values
func NewGetExternalIDPClientBadRequest() *GetExternalIDPClientBadRequest {
	return &GetExternalIDPClientBadRequest{}
}

/*
GetExternalIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetExternalIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get external Id p client bad request response has a 2xx status code
func (o *GetExternalIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external Id p client bad request response has a 3xx status code
func (o *GetExternalIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external Id p client bad request response has a 4xx status code
func (o *GetExternalIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external Id p client bad request response has a 5xx status code
func (o *GetExternalIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get external Id p client bad request response a status code equal to that given
func (o *GetExternalIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get external Id p client bad request response
func (o *GetExternalIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetExternalIDPClientBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientBadRequest %s", 400, payload)
}

func (o *GetExternalIDPClientBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientBadRequest %s", 400, payload)
}

func (o *GetExternalIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExternalIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalIDPClientUnauthorized creates a GetExternalIDPClientUnauthorized with default headers values
func NewGetExternalIDPClientUnauthorized() *GetExternalIDPClientUnauthorized {
	return &GetExternalIDPClientUnauthorized{}
}

/*
GetExternalIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetExternalIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get external Id p client unauthorized response has a 2xx status code
func (o *GetExternalIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external Id p client unauthorized response has a 3xx status code
func (o *GetExternalIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external Id p client unauthorized response has a 4xx status code
func (o *GetExternalIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external Id p client unauthorized response has a 5xx status code
func (o *GetExternalIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get external Id p client unauthorized response a status code equal to that given
func (o *GetExternalIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get external Id p client unauthorized response
func (o *GetExternalIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetExternalIDPClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientUnauthorized %s", 401, payload)
}

func (o *GetExternalIDPClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientUnauthorized %s", 401, payload)
}

func (o *GetExternalIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExternalIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalIDPClientForbidden creates a GetExternalIDPClientForbidden with default headers values
func NewGetExternalIDPClientForbidden() *GetExternalIDPClientForbidden {
	return &GetExternalIDPClientForbidden{}
}

/*
GetExternalIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetExternalIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get external Id p client forbidden response has a 2xx status code
func (o *GetExternalIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external Id p client forbidden response has a 3xx status code
func (o *GetExternalIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external Id p client forbidden response has a 4xx status code
func (o *GetExternalIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external Id p client forbidden response has a 5xx status code
func (o *GetExternalIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get external Id p client forbidden response a status code equal to that given
func (o *GetExternalIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get external Id p client forbidden response
func (o *GetExternalIDPClientForbidden) Code() int {
	return 403
}

func (o *GetExternalIDPClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientForbidden %s", 403, payload)
}

func (o *GetExternalIDPClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientForbidden %s", 403, payload)
}

func (o *GetExternalIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExternalIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalIDPClientNotFound creates a GetExternalIDPClientNotFound with default headers values
func NewGetExternalIDPClientNotFound() *GetExternalIDPClientNotFound {
	return &GetExternalIDPClientNotFound{}
}

/*
GetExternalIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetExternalIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get external Id p client not found response has a 2xx status code
func (o *GetExternalIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external Id p client not found response has a 3xx status code
func (o *GetExternalIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external Id p client not found response has a 4xx status code
func (o *GetExternalIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external Id p client not found response has a 5xx status code
func (o *GetExternalIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get external Id p client not found response a status code equal to that given
func (o *GetExternalIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get external Id p client not found response
func (o *GetExternalIDPClientNotFound) Code() int {
	return 404
}

func (o *GetExternalIDPClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientNotFound %s", 404, payload)
}

func (o *GetExternalIDPClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientNotFound %s", 404, payload)
}

func (o *GetExternalIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExternalIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExternalIDPClientTooManyRequests creates a GetExternalIDPClientTooManyRequests with default headers values
func NewGetExternalIDPClientTooManyRequests() *GetExternalIDPClientTooManyRequests {
	return &GetExternalIDPClientTooManyRequests{}
}

/*
GetExternalIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetExternalIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get external Id p client too many requests response has a 2xx status code
func (o *GetExternalIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get external Id p client too many requests response has a 3xx status code
func (o *GetExternalIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get external Id p client too many requests response has a 4xx status code
func (o *GetExternalIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get external Id p client too many requests response has a 5xx status code
func (o *GetExternalIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get external Id p client too many requests response a status code equal to that given
func (o *GetExternalIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get external Id p client too many requests response
func (o *GetExternalIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetExternalIDPClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetExternalIDPClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/external/{iid}/client][%d] getExternalIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetExternalIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetExternalIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
