// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateOIDCIDPReader is a Reader for the UpdateOIDCIDP structure.
type UpdateOIDCIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateOIDCIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateOIDCIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateOIDCIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateOIDCIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateOIDCIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateOIDCIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateOIDCIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateOIDCIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/oidc/{iid}] updateOIDCIDP", response, response.Code())
	}
}

// NewUpdateOIDCIDPOK creates a UpdateOIDCIDPOK with default headers values
func NewUpdateOIDCIDPOK() *UpdateOIDCIDPOK {
	return &UpdateOIDCIDPOK{}
}

/*
UpdateOIDCIDPOK describes a response with status code 200, with default header values.

OIDCIDP
*/
type UpdateOIDCIDPOK struct {
	Payload *models.OIDCIDP
}

// IsSuccess returns true when this update o Id c Id p o k response has a 2xx status code
func (o *UpdateOIDCIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update o Id c Id p o k response has a 3xx status code
func (o *UpdateOIDCIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p o k response has a 4xx status code
func (o *UpdateOIDCIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update o Id c Id p o k response has a 5xx status code
func (o *UpdateOIDCIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p o k response a status code equal to that given
func (o *UpdateOIDCIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update o Id c Id p o k response
func (o *UpdateOIDCIDPOK) Code() int {
	return 200
}

func (o *UpdateOIDCIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPOK %s", 200, payload)
}

func (o *UpdateOIDCIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPOK %s", 200, payload)
}

func (o *UpdateOIDCIDPOK) GetPayload() *models.OIDCIDP {
	return o.Payload
}

func (o *UpdateOIDCIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OIDCIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOIDCIDPBadRequest creates a UpdateOIDCIDPBadRequest with default headers values
func NewUpdateOIDCIDPBadRequest() *UpdateOIDCIDPBadRequest {
	return &UpdateOIDCIDPBadRequest{}
}

/*
UpdateOIDCIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateOIDCIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update o Id c Id p bad request response has a 2xx status code
func (o *UpdateOIDCIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update o Id c Id p bad request response has a 3xx status code
func (o *UpdateOIDCIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p bad request response has a 4xx status code
func (o *UpdateOIDCIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update o Id c Id p bad request response has a 5xx status code
func (o *UpdateOIDCIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p bad request response a status code equal to that given
func (o *UpdateOIDCIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update o Id c Id p bad request response
func (o *UpdateOIDCIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateOIDCIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPBadRequest %s", 400, payload)
}

func (o *UpdateOIDCIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPBadRequest %s", 400, payload)
}

func (o *UpdateOIDCIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOIDCIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOIDCIDPUnauthorized creates a UpdateOIDCIDPUnauthorized with default headers values
func NewUpdateOIDCIDPUnauthorized() *UpdateOIDCIDPUnauthorized {
	return &UpdateOIDCIDPUnauthorized{}
}

/*
UpdateOIDCIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateOIDCIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update o Id c Id p unauthorized response has a 2xx status code
func (o *UpdateOIDCIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update o Id c Id p unauthorized response has a 3xx status code
func (o *UpdateOIDCIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p unauthorized response has a 4xx status code
func (o *UpdateOIDCIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update o Id c Id p unauthorized response has a 5xx status code
func (o *UpdateOIDCIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p unauthorized response a status code equal to that given
func (o *UpdateOIDCIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update o Id c Id p unauthorized response
func (o *UpdateOIDCIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateOIDCIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPUnauthorized %s", 401, payload)
}

func (o *UpdateOIDCIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPUnauthorized %s", 401, payload)
}

func (o *UpdateOIDCIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOIDCIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOIDCIDPForbidden creates a UpdateOIDCIDPForbidden with default headers values
func NewUpdateOIDCIDPForbidden() *UpdateOIDCIDPForbidden {
	return &UpdateOIDCIDPForbidden{}
}

/*
UpdateOIDCIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateOIDCIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update o Id c Id p forbidden response has a 2xx status code
func (o *UpdateOIDCIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update o Id c Id p forbidden response has a 3xx status code
func (o *UpdateOIDCIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p forbidden response has a 4xx status code
func (o *UpdateOIDCIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update o Id c Id p forbidden response has a 5xx status code
func (o *UpdateOIDCIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p forbidden response a status code equal to that given
func (o *UpdateOIDCIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update o Id c Id p forbidden response
func (o *UpdateOIDCIDPForbidden) Code() int {
	return 403
}

func (o *UpdateOIDCIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPForbidden %s", 403, payload)
}

func (o *UpdateOIDCIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPForbidden %s", 403, payload)
}

func (o *UpdateOIDCIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOIDCIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOIDCIDPNotFound creates a UpdateOIDCIDPNotFound with default headers values
func NewUpdateOIDCIDPNotFound() *UpdateOIDCIDPNotFound {
	return &UpdateOIDCIDPNotFound{}
}

/*
UpdateOIDCIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateOIDCIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update o Id c Id p not found response has a 2xx status code
func (o *UpdateOIDCIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update o Id c Id p not found response has a 3xx status code
func (o *UpdateOIDCIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p not found response has a 4xx status code
func (o *UpdateOIDCIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update o Id c Id p not found response has a 5xx status code
func (o *UpdateOIDCIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p not found response a status code equal to that given
func (o *UpdateOIDCIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update o Id c Id p not found response
func (o *UpdateOIDCIDPNotFound) Code() int {
	return 404
}

func (o *UpdateOIDCIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPNotFound %s", 404, payload)
}

func (o *UpdateOIDCIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPNotFound %s", 404, payload)
}

func (o *UpdateOIDCIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOIDCIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOIDCIDPUnprocessableEntity creates a UpdateOIDCIDPUnprocessableEntity with default headers values
func NewUpdateOIDCIDPUnprocessableEntity() *UpdateOIDCIDPUnprocessableEntity {
	return &UpdateOIDCIDPUnprocessableEntity{}
}

/*
UpdateOIDCIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateOIDCIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update o Id c Id p unprocessable entity response has a 2xx status code
func (o *UpdateOIDCIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update o Id c Id p unprocessable entity response has a 3xx status code
func (o *UpdateOIDCIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p unprocessable entity response has a 4xx status code
func (o *UpdateOIDCIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update o Id c Id p unprocessable entity response has a 5xx status code
func (o *UpdateOIDCIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p unprocessable entity response a status code equal to that given
func (o *UpdateOIDCIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update o Id c Id p unprocessable entity response
func (o *UpdateOIDCIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateOIDCIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateOIDCIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateOIDCIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOIDCIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateOIDCIDPTooManyRequests creates a UpdateOIDCIDPTooManyRequests with default headers values
func NewUpdateOIDCIDPTooManyRequests() *UpdateOIDCIDPTooManyRequests {
	return &UpdateOIDCIDPTooManyRequests{}
}

/*
UpdateOIDCIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateOIDCIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update o Id c Id p too many requests response has a 2xx status code
func (o *UpdateOIDCIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update o Id c Id p too many requests response has a 3xx status code
func (o *UpdateOIDCIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update o Id c Id p too many requests response has a 4xx status code
func (o *UpdateOIDCIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update o Id c Id p too many requests response has a 5xx status code
func (o *UpdateOIDCIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update o Id c Id p too many requests response a status code equal to that given
func (o *UpdateOIDCIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update o Id c Id p too many requests response
func (o *UpdateOIDCIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateOIDCIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateOIDCIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/oidc/{iid}][%d] updateOIdCIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateOIDCIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateOIDCIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
