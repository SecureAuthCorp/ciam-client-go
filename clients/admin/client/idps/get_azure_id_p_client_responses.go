// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAzureIDPClientReader is a Reader for the GetAzureIDPClient structure.
type GetAzureIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAzureIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAzureIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAzureIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAzureIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAzureIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAzureIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAzureIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/azure/{iid}/client] getAzureIDPClient", response, response.Code())
	}
}

// NewGetAzureIDPClientOK creates a GetAzureIDPClientOK with default headers values
func NewGetAzureIDPClientOK() *GetAzureIDPClientOK {
	return &GetAzureIDPClientOK{}
}

/*
GetAzureIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetAzureIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get azure Id p client o k response has a 2xx status code
func (o *GetAzureIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get azure Id p client o k response has a 3xx status code
func (o *GetAzureIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure Id p client o k response has a 4xx status code
func (o *GetAzureIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get azure Id p client o k response has a 5xx status code
func (o *GetAzureIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure Id p client o k response a status code equal to that given
func (o *GetAzureIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get azure Id p client o k response
func (o *GetAzureIDPClientOK) Code() int {
	return 200
}

func (o *GetAzureIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetAzureIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetAzureIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetAzureIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureIDPClientBadRequest creates a GetAzureIDPClientBadRequest with default headers values
func NewGetAzureIDPClientBadRequest() *GetAzureIDPClientBadRequest {
	return &GetAzureIDPClientBadRequest{}
}

/*
GetAzureIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetAzureIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure Id p client bad request response has a 2xx status code
func (o *GetAzureIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure Id p client bad request response has a 3xx status code
func (o *GetAzureIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure Id p client bad request response has a 4xx status code
func (o *GetAzureIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure Id p client bad request response has a 5xx status code
func (o *GetAzureIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure Id p client bad request response a status code equal to that given
func (o *GetAzureIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get azure Id p client bad request response
func (o *GetAzureIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetAzureIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetAzureIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetAzureIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureIDPClientUnauthorized creates a GetAzureIDPClientUnauthorized with default headers values
func NewGetAzureIDPClientUnauthorized() *GetAzureIDPClientUnauthorized {
	return &GetAzureIDPClientUnauthorized{}
}

/*
GetAzureIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAzureIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure Id p client unauthorized response has a 2xx status code
func (o *GetAzureIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure Id p client unauthorized response has a 3xx status code
func (o *GetAzureIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure Id p client unauthorized response has a 4xx status code
func (o *GetAzureIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure Id p client unauthorized response has a 5xx status code
func (o *GetAzureIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure Id p client unauthorized response a status code equal to that given
func (o *GetAzureIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get azure Id p client unauthorized response
func (o *GetAzureIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetAzureIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAzureIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAzureIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureIDPClientForbidden creates a GetAzureIDPClientForbidden with default headers values
func NewGetAzureIDPClientForbidden() *GetAzureIDPClientForbidden {
	return &GetAzureIDPClientForbidden{}
}

/*
GetAzureIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAzureIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure Id p client forbidden response has a 2xx status code
func (o *GetAzureIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure Id p client forbidden response has a 3xx status code
func (o *GetAzureIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure Id p client forbidden response has a 4xx status code
func (o *GetAzureIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure Id p client forbidden response has a 5xx status code
func (o *GetAzureIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure Id p client forbidden response a status code equal to that given
func (o *GetAzureIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get azure Id p client forbidden response
func (o *GetAzureIDPClientForbidden) Code() int {
	return 403
}

func (o *GetAzureIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetAzureIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetAzureIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureIDPClientNotFound creates a GetAzureIDPClientNotFound with default headers values
func NewGetAzureIDPClientNotFound() *GetAzureIDPClientNotFound {
	return &GetAzureIDPClientNotFound{}
}

/*
GetAzureIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAzureIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure Id p client not found response has a 2xx status code
func (o *GetAzureIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure Id p client not found response has a 3xx status code
func (o *GetAzureIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure Id p client not found response has a 4xx status code
func (o *GetAzureIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure Id p client not found response has a 5xx status code
func (o *GetAzureIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure Id p client not found response a status code equal to that given
func (o *GetAzureIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get azure Id p client not found response
func (o *GetAzureIDPClientNotFound) Code() int {
	return 404
}

func (o *GetAzureIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetAzureIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetAzureIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzureIDPClientTooManyRequests creates a GetAzureIDPClientTooManyRequests with default headers values
func NewGetAzureIDPClientTooManyRequests() *GetAzureIDPClientTooManyRequests {
	return &GetAzureIDPClientTooManyRequests{}
}

/*
GetAzureIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetAzureIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get azure Id p client too many requests response has a 2xx status code
func (o *GetAzureIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get azure Id p client too many requests response has a 3xx status code
func (o *GetAzureIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get azure Id p client too many requests response has a 4xx status code
func (o *GetAzureIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get azure Id p client too many requests response has a 5xx status code
func (o *GetAzureIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get azure Id p client too many requests response a status code equal to that given
func (o *GetAzureIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get azure Id p client too many requests response
func (o *GetAzureIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetAzureIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAzureIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/azure/{iid}/client][%d] getAzureIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAzureIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAzureIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
