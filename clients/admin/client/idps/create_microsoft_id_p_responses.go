// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateMicrosoftIDPReader is a Reader for the CreateMicrosoftIDP structure.
type CreateMicrosoftIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateMicrosoftIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateMicrosoftIDPCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateMicrosoftIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateMicrosoftIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateMicrosoftIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateMicrosoftIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateMicrosoftIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateMicrosoftIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/idps/microsoft] createMicrosoftIDP", response, response.Code())
	}
}

// NewCreateMicrosoftIDPCreated creates a CreateMicrosoftIDPCreated with default headers values
func NewCreateMicrosoftIDPCreated() *CreateMicrosoftIDPCreated {
	return &CreateMicrosoftIDPCreated{}
}

/*
CreateMicrosoftIDPCreated describes a response with status code 201, with default header values.

MicrosoftIDP
*/
type CreateMicrosoftIDPCreated struct {
	Payload *models.MicrosoftIDP
}

// IsSuccess returns true when this create microsoft Id p created response has a 2xx status code
func (o *CreateMicrosoftIDPCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create microsoft Id p created response has a 3xx status code
func (o *CreateMicrosoftIDPCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p created response has a 4xx status code
func (o *CreateMicrosoftIDPCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create microsoft Id p created response has a 5xx status code
func (o *CreateMicrosoftIDPCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p created response a status code equal to that given
func (o *CreateMicrosoftIDPCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create microsoft Id p created response
func (o *CreateMicrosoftIDPCreated) Code() int {
	return 201
}

func (o *CreateMicrosoftIDPCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPCreated %s", 201, payload)
}

func (o *CreateMicrosoftIDPCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPCreated %s", 201, payload)
}

func (o *CreateMicrosoftIDPCreated) GetPayload() *models.MicrosoftIDP {
	return o.Payload
}

func (o *CreateMicrosoftIDPCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MicrosoftIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMicrosoftIDPBadRequest creates a CreateMicrosoftIDPBadRequest with default headers values
func NewCreateMicrosoftIDPBadRequest() *CreateMicrosoftIDPBadRequest {
	return &CreateMicrosoftIDPBadRequest{}
}

/*
CreateMicrosoftIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateMicrosoftIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create microsoft Id p bad request response has a 2xx status code
func (o *CreateMicrosoftIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create microsoft Id p bad request response has a 3xx status code
func (o *CreateMicrosoftIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p bad request response has a 4xx status code
func (o *CreateMicrosoftIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create microsoft Id p bad request response has a 5xx status code
func (o *CreateMicrosoftIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p bad request response a status code equal to that given
func (o *CreateMicrosoftIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create microsoft Id p bad request response
func (o *CreateMicrosoftIDPBadRequest) Code() int {
	return 400
}

func (o *CreateMicrosoftIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPBadRequest %s", 400, payload)
}

func (o *CreateMicrosoftIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPBadRequest %s", 400, payload)
}

func (o *CreateMicrosoftIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMicrosoftIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMicrosoftIDPUnauthorized creates a CreateMicrosoftIDPUnauthorized with default headers values
func NewCreateMicrosoftIDPUnauthorized() *CreateMicrosoftIDPUnauthorized {
	return &CreateMicrosoftIDPUnauthorized{}
}

/*
CreateMicrosoftIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateMicrosoftIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create microsoft Id p unauthorized response has a 2xx status code
func (o *CreateMicrosoftIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create microsoft Id p unauthorized response has a 3xx status code
func (o *CreateMicrosoftIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p unauthorized response has a 4xx status code
func (o *CreateMicrosoftIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create microsoft Id p unauthorized response has a 5xx status code
func (o *CreateMicrosoftIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p unauthorized response a status code equal to that given
func (o *CreateMicrosoftIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create microsoft Id p unauthorized response
func (o *CreateMicrosoftIDPUnauthorized) Code() int {
	return 401
}

func (o *CreateMicrosoftIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPUnauthorized %s", 401, payload)
}

func (o *CreateMicrosoftIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPUnauthorized %s", 401, payload)
}

func (o *CreateMicrosoftIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMicrosoftIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMicrosoftIDPForbidden creates a CreateMicrosoftIDPForbidden with default headers values
func NewCreateMicrosoftIDPForbidden() *CreateMicrosoftIDPForbidden {
	return &CreateMicrosoftIDPForbidden{}
}

/*
CreateMicrosoftIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateMicrosoftIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create microsoft Id p forbidden response has a 2xx status code
func (o *CreateMicrosoftIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create microsoft Id p forbidden response has a 3xx status code
func (o *CreateMicrosoftIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p forbidden response has a 4xx status code
func (o *CreateMicrosoftIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create microsoft Id p forbidden response has a 5xx status code
func (o *CreateMicrosoftIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p forbidden response a status code equal to that given
func (o *CreateMicrosoftIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create microsoft Id p forbidden response
func (o *CreateMicrosoftIDPForbidden) Code() int {
	return 403
}

func (o *CreateMicrosoftIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPForbidden %s", 403, payload)
}

func (o *CreateMicrosoftIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPForbidden %s", 403, payload)
}

func (o *CreateMicrosoftIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMicrosoftIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMicrosoftIDPNotFound creates a CreateMicrosoftIDPNotFound with default headers values
func NewCreateMicrosoftIDPNotFound() *CreateMicrosoftIDPNotFound {
	return &CreateMicrosoftIDPNotFound{}
}

/*
CreateMicrosoftIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateMicrosoftIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create microsoft Id p not found response has a 2xx status code
func (o *CreateMicrosoftIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create microsoft Id p not found response has a 3xx status code
func (o *CreateMicrosoftIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p not found response has a 4xx status code
func (o *CreateMicrosoftIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create microsoft Id p not found response has a 5xx status code
func (o *CreateMicrosoftIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p not found response a status code equal to that given
func (o *CreateMicrosoftIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create microsoft Id p not found response
func (o *CreateMicrosoftIDPNotFound) Code() int {
	return 404
}

func (o *CreateMicrosoftIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPNotFound %s", 404, payload)
}

func (o *CreateMicrosoftIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPNotFound %s", 404, payload)
}

func (o *CreateMicrosoftIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMicrosoftIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMicrosoftIDPUnprocessableEntity creates a CreateMicrosoftIDPUnprocessableEntity with default headers values
func NewCreateMicrosoftIDPUnprocessableEntity() *CreateMicrosoftIDPUnprocessableEntity {
	return &CreateMicrosoftIDPUnprocessableEntity{}
}

/*
CreateMicrosoftIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateMicrosoftIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create microsoft Id p unprocessable entity response has a 2xx status code
func (o *CreateMicrosoftIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create microsoft Id p unprocessable entity response has a 3xx status code
func (o *CreateMicrosoftIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p unprocessable entity response has a 4xx status code
func (o *CreateMicrosoftIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create microsoft Id p unprocessable entity response has a 5xx status code
func (o *CreateMicrosoftIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p unprocessable entity response a status code equal to that given
func (o *CreateMicrosoftIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create microsoft Id p unprocessable entity response
func (o *CreateMicrosoftIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateMicrosoftIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateMicrosoftIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateMicrosoftIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMicrosoftIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateMicrosoftIDPTooManyRequests creates a CreateMicrosoftIDPTooManyRequests with default headers values
func NewCreateMicrosoftIDPTooManyRequests() *CreateMicrosoftIDPTooManyRequests {
	return &CreateMicrosoftIDPTooManyRequests{}
}

/*
CreateMicrosoftIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateMicrosoftIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create microsoft Id p too many requests response has a 2xx status code
func (o *CreateMicrosoftIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create microsoft Id p too many requests response has a 3xx status code
func (o *CreateMicrosoftIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create microsoft Id p too many requests response has a 4xx status code
func (o *CreateMicrosoftIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create microsoft Id p too many requests response has a 5xx status code
func (o *CreateMicrosoftIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create microsoft Id p too many requests response a status code equal to that given
func (o *CreateMicrosoftIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create microsoft Id p too many requests response
func (o *CreateMicrosoftIDPTooManyRequests) Code() int {
	return 429
}

func (o *CreateMicrosoftIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPTooManyRequests %s", 429, payload)
}

func (o *CreateMicrosoftIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/microsoft][%d] createMicrosoftIdPTooManyRequests %s", 429, payload)
}

func (o *CreateMicrosoftIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateMicrosoftIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
