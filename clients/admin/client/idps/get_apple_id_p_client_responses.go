// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAppleIDPClientReader is a Reader for the GetAppleIDPClient structure.
type GetAppleIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppleIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppleIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAppleIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAppleIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppleIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAppleIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAppleIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/apple/{iid}/client] getAppleIDPClient", response, response.Code())
	}
}

// NewGetAppleIDPClientOK creates a GetAppleIDPClientOK with default headers values
func NewGetAppleIDPClientOK() *GetAppleIDPClientOK {
	return &GetAppleIDPClientOK{}
}

/*
GetAppleIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetAppleIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get apple Id p client o k response has a 2xx status code
func (o *GetAppleIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get apple Id p client o k response has a 3xx status code
func (o *GetAppleIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apple Id p client o k response has a 4xx status code
func (o *GetAppleIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get apple Id p client o k response has a 5xx status code
func (o *GetAppleIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get apple Id p client o k response a status code equal to that given
func (o *GetAppleIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get apple Id p client o k response
func (o *GetAppleIDPClientOK) Code() int {
	return 200
}

func (o *GetAppleIDPClientOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetAppleIDPClientOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientOK  %+v", 200, o.Payload)
}

func (o *GetAppleIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetAppleIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppleIDPClientBadRequest creates a GetAppleIDPClientBadRequest with default headers values
func NewGetAppleIDPClientBadRequest() *GetAppleIDPClientBadRequest {
	return &GetAppleIDPClientBadRequest{}
}

/*
GetAppleIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetAppleIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apple Id p client bad request response has a 2xx status code
func (o *GetAppleIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apple Id p client bad request response has a 3xx status code
func (o *GetAppleIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apple Id p client bad request response has a 4xx status code
func (o *GetAppleIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apple Id p client bad request response has a 5xx status code
func (o *GetAppleIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get apple Id p client bad request response a status code equal to that given
func (o *GetAppleIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get apple Id p client bad request response
func (o *GetAppleIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetAppleIDPClientBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppleIDPClientBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientBadRequest  %+v", 400, o.Payload)
}

func (o *GetAppleIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppleIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppleIDPClientUnauthorized creates a GetAppleIDPClientUnauthorized with default headers values
func NewGetAppleIDPClientUnauthorized() *GetAppleIDPClientUnauthorized {
	return &GetAppleIDPClientUnauthorized{}
}

/*
GetAppleIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppleIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apple Id p client unauthorized response has a 2xx status code
func (o *GetAppleIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apple Id p client unauthorized response has a 3xx status code
func (o *GetAppleIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apple Id p client unauthorized response has a 4xx status code
func (o *GetAppleIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apple Id p client unauthorized response has a 5xx status code
func (o *GetAppleIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get apple Id p client unauthorized response a status code equal to that given
func (o *GetAppleIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get apple Id p client unauthorized response
func (o *GetAppleIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetAppleIDPClientUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppleIDPClientUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAppleIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppleIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppleIDPClientForbidden creates a GetAppleIDPClientForbidden with default headers values
func NewGetAppleIDPClientForbidden() *GetAppleIDPClientForbidden {
	return &GetAppleIDPClientForbidden{}
}

/*
GetAppleIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppleIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apple Id p client forbidden response has a 2xx status code
func (o *GetAppleIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apple Id p client forbidden response has a 3xx status code
func (o *GetAppleIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apple Id p client forbidden response has a 4xx status code
func (o *GetAppleIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apple Id p client forbidden response has a 5xx status code
func (o *GetAppleIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get apple Id p client forbidden response a status code equal to that given
func (o *GetAppleIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get apple Id p client forbidden response
func (o *GetAppleIDPClientForbidden) Code() int {
	return 403
}

func (o *GetAppleIDPClientForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetAppleIDPClientForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientForbidden  %+v", 403, o.Payload)
}

func (o *GetAppleIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppleIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppleIDPClientNotFound creates a GetAppleIDPClientNotFound with default headers values
func NewGetAppleIDPClientNotFound() *GetAppleIDPClientNotFound {
	return &GetAppleIDPClientNotFound{}
}

/*
GetAppleIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAppleIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apple Id p client not found response has a 2xx status code
func (o *GetAppleIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apple Id p client not found response has a 3xx status code
func (o *GetAppleIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apple Id p client not found response has a 4xx status code
func (o *GetAppleIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apple Id p client not found response has a 5xx status code
func (o *GetAppleIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get apple Id p client not found response a status code equal to that given
func (o *GetAppleIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get apple Id p client not found response
func (o *GetAppleIDPClientNotFound) Code() int {
	return 404
}

func (o *GetAppleIDPClientNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetAppleIDPClientNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientNotFound  %+v", 404, o.Payload)
}

func (o *GetAppleIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppleIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppleIDPClientTooManyRequests creates a GetAppleIDPClientTooManyRequests with default headers values
func NewGetAppleIDPClientTooManyRequests() *GetAppleIDPClientTooManyRequests {
	return &GetAppleIDPClientTooManyRequests{}
}

/*
GetAppleIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetAppleIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apple Id p client too many requests response has a 2xx status code
func (o *GetAppleIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apple Id p client too many requests response has a 3xx status code
func (o *GetAppleIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apple Id p client too many requests response has a 4xx status code
func (o *GetAppleIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apple Id p client too many requests response has a 5xx status code
func (o *GetAppleIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get apple Id p client too many requests response a status code equal to that given
func (o *GetAppleIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get apple Id p client too many requests response
func (o *GetAppleIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetAppleIDPClientTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAppleIDPClientTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/apple/{iid}/client][%d] getAppleIdPClientTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAppleIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppleIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
