// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateIdentityPoolIDPReader is a Reader for the UpdateIdentityPoolIDP structure.
type UpdateIdentityPoolIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIdentityPoolIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIdentityPoolIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateIdentityPoolIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateIdentityPoolIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateIdentityPoolIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateIdentityPoolIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateIdentityPoolIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateIdentityPoolIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/identity_pool/{iid}] updateIdentityPoolIDP", response, response.Code())
	}
}

// NewUpdateIdentityPoolIDPOK creates a UpdateIdentityPoolIDPOK with default headers values
func NewUpdateIdentityPoolIDPOK() *UpdateIdentityPoolIDPOK {
	return &UpdateIdentityPoolIDPOK{}
}

/*
UpdateIdentityPoolIDPOK describes a response with status code 200, with default header values.

IdentityPoolIDP
*/
type UpdateIdentityPoolIDPOK struct {
	Payload *models.IdentityPoolIDP
}

// IsSuccess returns true when this update identity pool Id p o k response has a 2xx status code
func (o *UpdateIdentityPoolIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update identity pool Id p o k response has a 3xx status code
func (o *UpdateIdentityPoolIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p o k response has a 4xx status code
func (o *UpdateIdentityPoolIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update identity pool Id p o k response has a 5xx status code
func (o *UpdateIdentityPoolIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p o k response a status code equal to that given
func (o *UpdateIdentityPoolIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update identity pool Id p o k response
func (o *UpdateIdentityPoolIDPOK) Code() int {
	return 200
}

func (o *UpdateIdentityPoolIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPOK %s", 200, payload)
}

func (o *UpdateIdentityPoolIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPOK %s", 200, payload)
}

func (o *UpdateIdentityPoolIDPOK) GetPayload() *models.IdentityPoolIDP {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdentityPoolIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdentityPoolIDPBadRequest creates a UpdateIdentityPoolIDPBadRequest with default headers values
func NewUpdateIdentityPoolIDPBadRequest() *UpdateIdentityPoolIDPBadRequest {
	return &UpdateIdentityPoolIDPBadRequest{}
}

/*
UpdateIdentityPoolIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateIdentityPoolIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update identity pool Id p bad request response has a 2xx status code
func (o *UpdateIdentityPoolIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update identity pool Id p bad request response has a 3xx status code
func (o *UpdateIdentityPoolIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p bad request response has a 4xx status code
func (o *UpdateIdentityPoolIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update identity pool Id p bad request response has a 5xx status code
func (o *UpdateIdentityPoolIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p bad request response a status code equal to that given
func (o *UpdateIdentityPoolIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update identity pool Id p bad request response
func (o *UpdateIdentityPoolIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateIdentityPoolIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPBadRequest %s", 400, payload)
}

func (o *UpdateIdentityPoolIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPBadRequest %s", 400, payload)
}

func (o *UpdateIdentityPoolIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdentityPoolIDPUnauthorized creates a UpdateIdentityPoolIDPUnauthorized with default headers values
func NewUpdateIdentityPoolIDPUnauthorized() *UpdateIdentityPoolIDPUnauthorized {
	return &UpdateIdentityPoolIDPUnauthorized{}
}

/*
UpdateIdentityPoolIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateIdentityPoolIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update identity pool Id p unauthorized response has a 2xx status code
func (o *UpdateIdentityPoolIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update identity pool Id p unauthorized response has a 3xx status code
func (o *UpdateIdentityPoolIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p unauthorized response has a 4xx status code
func (o *UpdateIdentityPoolIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update identity pool Id p unauthorized response has a 5xx status code
func (o *UpdateIdentityPoolIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p unauthorized response a status code equal to that given
func (o *UpdateIdentityPoolIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update identity pool Id p unauthorized response
func (o *UpdateIdentityPoolIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateIdentityPoolIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPUnauthorized %s", 401, payload)
}

func (o *UpdateIdentityPoolIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPUnauthorized %s", 401, payload)
}

func (o *UpdateIdentityPoolIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdentityPoolIDPForbidden creates a UpdateIdentityPoolIDPForbidden with default headers values
func NewUpdateIdentityPoolIDPForbidden() *UpdateIdentityPoolIDPForbidden {
	return &UpdateIdentityPoolIDPForbidden{}
}

/*
UpdateIdentityPoolIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateIdentityPoolIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update identity pool Id p forbidden response has a 2xx status code
func (o *UpdateIdentityPoolIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update identity pool Id p forbidden response has a 3xx status code
func (o *UpdateIdentityPoolIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p forbidden response has a 4xx status code
func (o *UpdateIdentityPoolIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update identity pool Id p forbidden response has a 5xx status code
func (o *UpdateIdentityPoolIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p forbidden response a status code equal to that given
func (o *UpdateIdentityPoolIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update identity pool Id p forbidden response
func (o *UpdateIdentityPoolIDPForbidden) Code() int {
	return 403
}

func (o *UpdateIdentityPoolIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPForbidden %s", 403, payload)
}

func (o *UpdateIdentityPoolIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPForbidden %s", 403, payload)
}

func (o *UpdateIdentityPoolIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdentityPoolIDPNotFound creates a UpdateIdentityPoolIDPNotFound with default headers values
func NewUpdateIdentityPoolIDPNotFound() *UpdateIdentityPoolIDPNotFound {
	return &UpdateIdentityPoolIDPNotFound{}
}

/*
UpdateIdentityPoolIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateIdentityPoolIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update identity pool Id p not found response has a 2xx status code
func (o *UpdateIdentityPoolIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update identity pool Id p not found response has a 3xx status code
func (o *UpdateIdentityPoolIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p not found response has a 4xx status code
func (o *UpdateIdentityPoolIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update identity pool Id p not found response has a 5xx status code
func (o *UpdateIdentityPoolIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p not found response a status code equal to that given
func (o *UpdateIdentityPoolIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update identity pool Id p not found response
func (o *UpdateIdentityPoolIDPNotFound) Code() int {
	return 404
}

func (o *UpdateIdentityPoolIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPNotFound %s", 404, payload)
}

func (o *UpdateIdentityPoolIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPNotFound %s", 404, payload)
}

func (o *UpdateIdentityPoolIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdentityPoolIDPUnprocessableEntity creates a UpdateIdentityPoolIDPUnprocessableEntity with default headers values
func NewUpdateIdentityPoolIDPUnprocessableEntity() *UpdateIdentityPoolIDPUnprocessableEntity {
	return &UpdateIdentityPoolIDPUnprocessableEntity{}
}

/*
UpdateIdentityPoolIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateIdentityPoolIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update identity pool Id p unprocessable entity response has a 2xx status code
func (o *UpdateIdentityPoolIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update identity pool Id p unprocessable entity response has a 3xx status code
func (o *UpdateIdentityPoolIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p unprocessable entity response has a 4xx status code
func (o *UpdateIdentityPoolIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update identity pool Id p unprocessable entity response has a 5xx status code
func (o *UpdateIdentityPoolIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p unprocessable entity response a status code equal to that given
func (o *UpdateIdentityPoolIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update identity pool Id p unprocessable entity response
func (o *UpdateIdentityPoolIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateIdentityPoolIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateIdentityPoolIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateIdentityPoolIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIdentityPoolIDPTooManyRequests creates a UpdateIdentityPoolIDPTooManyRequests with default headers values
func NewUpdateIdentityPoolIDPTooManyRequests() *UpdateIdentityPoolIDPTooManyRequests {
	return &UpdateIdentityPoolIDPTooManyRequests{}
}

/*
UpdateIdentityPoolIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateIdentityPoolIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update identity pool Id p too many requests response has a 2xx status code
func (o *UpdateIdentityPoolIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update identity pool Id p too many requests response has a 3xx status code
func (o *UpdateIdentityPoolIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update identity pool Id p too many requests response has a 4xx status code
func (o *UpdateIdentityPoolIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update identity pool Id p too many requests response has a 5xx status code
func (o *UpdateIdentityPoolIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update identity pool Id p too many requests response a status code equal to that given
func (o *UpdateIdentityPoolIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update identity pool Id p too many requests response
func (o *UpdateIdentityPoolIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateIdentityPoolIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateIdentityPoolIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/identity_pool/{iid}][%d] updateIdentityPoolIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateIdentityPoolIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateIdentityPoolIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
