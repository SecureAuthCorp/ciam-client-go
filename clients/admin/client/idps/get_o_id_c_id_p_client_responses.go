// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetOIDCIDPClientReader is a Reader for the GetOIDCIDPClient structure.
type GetOIDCIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOIDCIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOIDCIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOIDCIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOIDCIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOIDCIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOIDCIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOIDCIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/oidc/{iid}/client] getOIDCIDPClient", response, response.Code())
	}
}

// NewGetOIDCIDPClientOK creates a GetOIDCIDPClientOK with default headers values
func NewGetOIDCIDPClientOK() *GetOIDCIDPClientOK {
	return &GetOIDCIDPClientOK{}
}

/*
GetOIDCIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetOIDCIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get o Id c Id p client o k response has a 2xx status code
func (o *GetOIDCIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get o Id c Id p client o k response has a 3xx status code
func (o *GetOIDCIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o Id c Id p client o k response has a 4xx status code
func (o *GetOIDCIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o Id c Id p client o k response has a 5xx status code
func (o *GetOIDCIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get o Id c Id p client o k response a status code equal to that given
func (o *GetOIDCIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get o Id c Id p client o k response
func (o *GetOIDCIDPClientOK) Code() int {
	return 200
}

func (o *GetOIDCIDPClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientOK %s", 200, payload)
}

func (o *GetOIDCIDPClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientOK %s", 200, payload)
}

func (o *GetOIDCIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetOIDCIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOIDCIDPClientBadRequest creates a GetOIDCIDPClientBadRequest with default headers values
func NewGetOIDCIDPClientBadRequest() *GetOIDCIDPClientBadRequest {
	return &GetOIDCIDPClientBadRequest{}
}

/*
GetOIDCIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOIDCIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o Id c Id p client bad request response has a 2xx status code
func (o *GetOIDCIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o Id c Id p client bad request response has a 3xx status code
func (o *GetOIDCIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o Id c Id p client bad request response has a 4xx status code
func (o *GetOIDCIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o Id c Id p client bad request response has a 5xx status code
func (o *GetOIDCIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get o Id c Id p client bad request response a status code equal to that given
func (o *GetOIDCIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get o Id c Id p client bad request response
func (o *GetOIDCIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetOIDCIDPClientBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientBadRequest %s", 400, payload)
}

func (o *GetOIDCIDPClientBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientBadRequest %s", 400, payload)
}

func (o *GetOIDCIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOIDCIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOIDCIDPClientUnauthorized creates a GetOIDCIDPClientUnauthorized with default headers values
func NewGetOIDCIDPClientUnauthorized() *GetOIDCIDPClientUnauthorized {
	return &GetOIDCIDPClientUnauthorized{}
}

/*
GetOIDCIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOIDCIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o Id c Id p client unauthorized response has a 2xx status code
func (o *GetOIDCIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o Id c Id p client unauthorized response has a 3xx status code
func (o *GetOIDCIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o Id c Id p client unauthorized response has a 4xx status code
func (o *GetOIDCIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o Id c Id p client unauthorized response has a 5xx status code
func (o *GetOIDCIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get o Id c Id p client unauthorized response a status code equal to that given
func (o *GetOIDCIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get o Id c Id p client unauthorized response
func (o *GetOIDCIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetOIDCIDPClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientUnauthorized %s", 401, payload)
}

func (o *GetOIDCIDPClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientUnauthorized %s", 401, payload)
}

func (o *GetOIDCIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOIDCIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOIDCIDPClientForbidden creates a GetOIDCIDPClientForbidden with default headers values
func NewGetOIDCIDPClientForbidden() *GetOIDCIDPClientForbidden {
	return &GetOIDCIDPClientForbidden{}
}

/*
GetOIDCIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOIDCIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o Id c Id p client forbidden response has a 2xx status code
func (o *GetOIDCIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o Id c Id p client forbidden response has a 3xx status code
func (o *GetOIDCIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o Id c Id p client forbidden response has a 4xx status code
func (o *GetOIDCIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o Id c Id p client forbidden response has a 5xx status code
func (o *GetOIDCIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get o Id c Id p client forbidden response a status code equal to that given
func (o *GetOIDCIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get o Id c Id p client forbidden response
func (o *GetOIDCIDPClientForbidden) Code() int {
	return 403
}

func (o *GetOIDCIDPClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientForbidden %s", 403, payload)
}

func (o *GetOIDCIDPClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientForbidden %s", 403, payload)
}

func (o *GetOIDCIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOIDCIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOIDCIDPClientNotFound creates a GetOIDCIDPClientNotFound with default headers values
func NewGetOIDCIDPClientNotFound() *GetOIDCIDPClientNotFound {
	return &GetOIDCIDPClientNotFound{}
}

/*
GetOIDCIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetOIDCIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o Id c Id p client not found response has a 2xx status code
func (o *GetOIDCIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o Id c Id p client not found response has a 3xx status code
func (o *GetOIDCIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o Id c Id p client not found response has a 4xx status code
func (o *GetOIDCIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o Id c Id p client not found response has a 5xx status code
func (o *GetOIDCIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get o Id c Id p client not found response a status code equal to that given
func (o *GetOIDCIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get o Id c Id p client not found response
func (o *GetOIDCIDPClientNotFound) Code() int {
	return 404
}

func (o *GetOIDCIDPClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientNotFound %s", 404, payload)
}

func (o *GetOIDCIDPClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientNotFound %s", 404, payload)
}

func (o *GetOIDCIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOIDCIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOIDCIDPClientTooManyRequests creates a GetOIDCIDPClientTooManyRequests with default headers values
func NewGetOIDCIDPClientTooManyRequests() *GetOIDCIDPClientTooManyRequests {
	return &GetOIDCIDPClientTooManyRequests{}
}

/*
GetOIDCIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetOIDCIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o Id c Id p client too many requests response has a 2xx status code
func (o *GetOIDCIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o Id c Id p client too many requests response has a 3xx status code
func (o *GetOIDCIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o Id c Id p client too many requests response has a 4xx status code
func (o *GetOIDCIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o Id c Id p client too many requests response has a 5xx status code
func (o *GetOIDCIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get o Id c Id p client too many requests response a status code equal to that given
func (o *GetOIDCIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get o Id c Id p client too many requests response
func (o *GetOIDCIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetOIDCIDPClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetOIDCIDPClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/oidc/{iid}/client][%d] getOIdCIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetOIDCIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOIDCIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
