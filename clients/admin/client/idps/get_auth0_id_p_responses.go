// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAuth0IDPReader is a Reader for the GetAuth0IDP structure.
type GetAuth0IDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuth0IDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuth0IDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAuth0IDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuth0IDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuth0IDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuth0IDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuth0IDPOK creates a GetAuth0IDPOK with default headers values
func NewGetAuth0IDPOK() *GetAuth0IDPOK {
	return &GetAuth0IDPOK{}
}

/* GetAuth0IDPOK describes a response with status code 200, with default header values.

Auth0IDP
*/
type GetAuth0IDPOK struct {
	Payload *models.Auth0IDP
}

func (o *GetAuth0IDPOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPOK  %+v", 200, o.Payload)
}
func (o *GetAuth0IDPOK) GetPayload() *models.Auth0IDP {
	return o.Payload
}

func (o *GetAuth0IDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Auth0IDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPUnauthorized creates a GetAuth0IDPUnauthorized with default headers values
func NewGetAuth0IDPUnauthorized() *GetAuth0IDPUnauthorized {
	return &GetAuth0IDPUnauthorized{}
}

/* GetAuth0IDPUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetAuth0IDPUnauthorized struct {
	Payload *models.Error
}

func (o *GetAuth0IDPUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPUnauthorized  %+v", 401, o.Payload)
}
func (o *GetAuth0IDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPForbidden creates a GetAuth0IDPForbidden with default headers values
func NewGetAuth0IDPForbidden() *GetAuth0IDPForbidden {
	return &GetAuth0IDPForbidden{}
}

/* GetAuth0IDPForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetAuth0IDPForbidden struct {
	Payload *models.Error
}

func (o *GetAuth0IDPForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPForbidden  %+v", 403, o.Payload)
}
func (o *GetAuth0IDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPNotFound creates a GetAuth0IDPNotFound with default headers values
func NewGetAuth0IDPNotFound() *GetAuth0IDPNotFound {
	return &GetAuth0IDPNotFound{}
}

/* GetAuth0IDPNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetAuth0IDPNotFound struct {
	Payload *models.Error
}

func (o *GetAuth0IDPNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPNotFound  %+v", 404, o.Payload)
}
func (o *GetAuth0IDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPTooManyRequests creates a GetAuth0IDPTooManyRequests with default headers values
func NewGetAuth0IDPTooManyRequests() *GetAuth0IDPTooManyRequests {
	return &GetAuth0IDPTooManyRequests{}
}

/* GetAuth0IDPTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetAuth0IDPTooManyRequests struct {
	Payload *models.Error
}

func (o *GetAuth0IDPTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetAuth0IDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
