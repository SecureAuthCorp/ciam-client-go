// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAuth0IDPReader is a Reader for the GetAuth0IDP structure.
type GetAuth0IDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuth0IDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuth0IDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAuth0IDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuth0IDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuth0IDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuth0IDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/auth0/{iid}] getAuth0IDP", response, response.Code())
	}
}

// NewGetAuth0IDPOK creates a GetAuth0IDPOK with default headers values
func NewGetAuth0IDPOK() *GetAuth0IDPOK {
	return &GetAuth0IDPOK{}
}

/*
GetAuth0IDPOK describes a response with status code 200, with default header values.

Auth0IDP
*/
type GetAuth0IDPOK struct {
	Payload *models.Auth0IDP
}

// IsSuccess returns true when this get auth0 Id p o k response has a 2xx status code
func (o *GetAuth0IDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get auth0 Id p o k response has a 3xx status code
func (o *GetAuth0IDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth0 Id p o k response has a 4xx status code
func (o *GetAuth0IDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth0 Id p o k response has a 5xx status code
func (o *GetAuth0IDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth0 Id p o k response a status code equal to that given
func (o *GetAuth0IDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get auth0 Id p o k response
func (o *GetAuth0IDPOK) Code() int {
	return 200
}

func (o *GetAuth0IDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPOK %s", 200, payload)
}

func (o *GetAuth0IDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPOK %s", 200, payload)
}

func (o *GetAuth0IDPOK) GetPayload() *models.Auth0IDP {
	return o.Payload
}

func (o *GetAuth0IDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Auth0IDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPUnauthorized creates a GetAuth0IDPUnauthorized with default headers values
func NewGetAuth0IDPUnauthorized() *GetAuth0IDPUnauthorized {
	return &GetAuth0IDPUnauthorized{}
}

/*
GetAuth0IDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAuth0IDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get auth0 Id p unauthorized response has a 2xx status code
func (o *GetAuth0IDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth0 Id p unauthorized response has a 3xx status code
func (o *GetAuth0IDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth0 Id p unauthorized response has a 4xx status code
func (o *GetAuth0IDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth0 Id p unauthorized response has a 5xx status code
func (o *GetAuth0IDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth0 Id p unauthorized response a status code equal to that given
func (o *GetAuth0IDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get auth0 Id p unauthorized response
func (o *GetAuth0IDPUnauthorized) Code() int {
	return 401
}

func (o *GetAuth0IDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPUnauthorized %s", 401, payload)
}

func (o *GetAuth0IDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPUnauthorized %s", 401, payload)
}

func (o *GetAuth0IDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPForbidden creates a GetAuth0IDPForbidden with default headers values
func NewGetAuth0IDPForbidden() *GetAuth0IDPForbidden {
	return &GetAuth0IDPForbidden{}
}

/*
GetAuth0IDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAuth0IDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get auth0 Id p forbidden response has a 2xx status code
func (o *GetAuth0IDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth0 Id p forbidden response has a 3xx status code
func (o *GetAuth0IDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth0 Id p forbidden response has a 4xx status code
func (o *GetAuth0IDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth0 Id p forbidden response has a 5xx status code
func (o *GetAuth0IDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth0 Id p forbidden response a status code equal to that given
func (o *GetAuth0IDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get auth0 Id p forbidden response
func (o *GetAuth0IDPForbidden) Code() int {
	return 403
}

func (o *GetAuth0IDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPForbidden %s", 403, payload)
}

func (o *GetAuth0IDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPForbidden %s", 403, payload)
}

func (o *GetAuth0IDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPNotFound creates a GetAuth0IDPNotFound with default headers values
func NewGetAuth0IDPNotFound() *GetAuth0IDPNotFound {
	return &GetAuth0IDPNotFound{}
}

/*
GetAuth0IDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAuth0IDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get auth0 Id p not found response has a 2xx status code
func (o *GetAuth0IDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth0 Id p not found response has a 3xx status code
func (o *GetAuth0IDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth0 Id p not found response has a 4xx status code
func (o *GetAuth0IDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth0 Id p not found response has a 5xx status code
func (o *GetAuth0IDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth0 Id p not found response a status code equal to that given
func (o *GetAuth0IDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get auth0 Id p not found response
func (o *GetAuth0IDPNotFound) Code() int {
	return 404
}

func (o *GetAuth0IDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPNotFound %s", 404, payload)
}

func (o *GetAuth0IDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPNotFound %s", 404, payload)
}

func (o *GetAuth0IDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuth0IDPTooManyRequests creates a GetAuth0IDPTooManyRequests with default headers values
func NewGetAuth0IDPTooManyRequests() *GetAuth0IDPTooManyRequests {
	return &GetAuth0IDPTooManyRequests{}
}

/*
GetAuth0IDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetAuth0IDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get auth0 Id p too many requests response has a 2xx status code
func (o *GetAuth0IDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth0 Id p too many requests response has a 3xx status code
func (o *GetAuth0IDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth0 Id p too many requests response has a 4xx status code
func (o *GetAuth0IDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth0 Id p too many requests response has a 5xx status code
func (o *GetAuth0IDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth0 Id p too many requests response a status code equal to that given
func (o *GetAuth0IDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get auth0 Id p too many requests response
func (o *GetAuth0IDPTooManyRequests) Code() int {
	return 429
}

func (o *GetAuth0IDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPTooManyRequests %s", 429, payload)
}

func (o *GetAuth0IDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/auth0/{iid}][%d] getAuth0IdPTooManyRequests %s", 429, payload)
}

func (o *GetAuth0IDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuth0IDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
