// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateXIDPReader is a Reader for the CreateXIDP structure.
type CreateXIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateXIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateXIDPCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateXIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateXIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateXIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateXIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateXIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateXIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/idps/x] createXIDP", response, response.Code())
	}
}

// NewCreateXIDPCreated creates a CreateXIDPCreated with default headers values
func NewCreateXIDPCreated() *CreateXIDPCreated {
	return &CreateXIDPCreated{}
}

/*
CreateXIDPCreated describes a response with status code 201, with default header values.

XIDP
*/
type CreateXIDPCreated struct {
	Payload *models.XIDP
}

// IsSuccess returns true when this create x Id p created response has a 2xx status code
func (o *CreateXIDPCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create x Id p created response has a 3xx status code
func (o *CreateXIDPCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p created response has a 4xx status code
func (o *CreateXIDPCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create x Id p created response has a 5xx status code
func (o *CreateXIDPCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p created response a status code equal to that given
func (o *CreateXIDPCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create x Id p created response
func (o *CreateXIDPCreated) Code() int {
	return 201
}

func (o *CreateXIDPCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPCreated %s", 201, payload)
}

func (o *CreateXIDPCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPCreated %s", 201, payload)
}

func (o *CreateXIDPCreated) GetPayload() *models.XIDP {
	return o.Payload
}

func (o *CreateXIDPCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.XIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateXIDPBadRequest creates a CreateXIDPBadRequest with default headers values
func NewCreateXIDPBadRequest() *CreateXIDPBadRequest {
	return &CreateXIDPBadRequest{}
}

/*
CreateXIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateXIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create x Id p bad request response has a 2xx status code
func (o *CreateXIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create x Id p bad request response has a 3xx status code
func (o *CreateXIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p bad request response has a 4xx status code
func (o *CreateXIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create x Id p bad request response has a 5xx status code
func (o *CreateXIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p bad request response a status code equal to that given
func (o *CreateXIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create x Id p bad request response
func (o *CreateXIDPBadRequest) Code() int {
	return 400
}

func (o *CreateXIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPBadRequest %s", 400, payload)
}

func (o *CreateXIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPBadRequest %s", 400, payload)
}

func (o *CreateXIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateXIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateXIDPUnauthorized creates a CreateXIDPUnauthorized with default headers values
func NewCreateXIDPUnauthorized() *CreateXIDPUnauthorized {
	return &CreateXIDPUnauthorized{}
}

/*
CreateXIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateXIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create x Id p unauthorized response has a 2xx status code
func (o *CreateXIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create x Id p unauthorized response has a 3xx status code
func (o *CreateXIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p unauthorized response has a 4xx status code
func (o *CreateXIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create x Id p unauthorized response has a 5xx status code
func (o *CreateXIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p unauthorized response a status code equal to that given
func (o *CreateXIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create x Id p unauthorized response
func (o *CreateXIDPUnauthorized) Code() int {
	return 401
}

func (o *CreateXIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPUnauthorized %s", 401, payload)
}

func (o *CreateXIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPUnauthorized %s", 401, payload)
}

func (o *CreateXIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateXIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateXIDPForbidden creates a CreateXIDPForbidden with default headers values
func NewCreateXIDPForbidden() *CreateXIDPForbidden {
	return &CreateXIDPForbidden{}
}

/*
CreateXIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateXIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create x Id p forbidden response has a 2xx status code
func (o *CreateXIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create x Id p forbidden response has a 3xx status code
func (o *CreateXIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p forbidden response has a 4xx status code
func (o *CreateXIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create x Id p forbidden response has a 5xx status code
func (o *CreateXIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p forbidden response a status code equal to that given
func (o *CreateXIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create x Id p forbidden response
func (o *CreateXIDPForbidden) Code() int {
	return 403
}

func (o *CreateXIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPForbidden %s", 403, payload)
}

func (o *CreateXIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPForbidden %s", 403, payload)
}

func (o *CreateXIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateXIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateXIDPNotFound creates a CreateXIDPNotFound with default headers values
func NewCreateXIDPNotFound() *CreateXIDPNotFound {
	return &CreateXIDPNotFound{}
}

/*
CreateXIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateXIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create x Id p not found response has a 2xx status code
func (o *CreateXIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create x Id p not found response has a 3xx status code
func (o *CreateXIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p not found response has a 4xx status code
func (o *CreateXIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create x Id p not found response has a 5xx status code
func (o *CreateXIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p not found response a status code equal to that given
func (o *CreateXIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create x Id p not found response
func (o *CreateXIDPNotFound) Code() int {
	return 404
}

func (o *CreateXIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPNotFound %s", 404, payload)
}

func (o *CreateXIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPNotFound %s", 404, payload)
}

func (o *CreateXIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateXIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateXIDPUnprocessableEntity creates a CreateXIDPUnprocessableEntity with default headers values
func NewCreateXIDPUnprocessableEntity() *CreateXIDPUnprocessableEntity {
	return &CreateXIDPUnprocessableEntity{}
}

/*
CreateXIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateXIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create x Id p unprocessable entity response has a 2xx status code
func (o *CreateXIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create x Id p unprocessable entity response has a 3xx status code
func (o *CreateXIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p unprocessable entity response has a 4xx status code
func (o *CreateXIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create x Id p unprocessable entity response has a 5xx status code
func (o *CreateXIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p unprocessable entity response a status code equal to that given
func (o *CreateXIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create x Id p unprocessable entity response
func (o *CreateXIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateXIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateXIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateXIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateXIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateXIDPTooManyRequests creates a CreateXIDPTooManyRequests with default headers values
func NewCreateXIDPTooManyRequests() *CreateXIDPTooManyRequests {
	return &CreateXIDPTooManyRequests{}
}

/*
CreateXIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateXIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create x Id p too many requests response has a 2xx status code
func (o *CreateXIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create x Id p too many requests response has a 3xx status code
func (o *CreateXIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create x Id p too many requests response has a 4xx status code
func (o *CreateXIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create x Id p too many requests response has a 5xx status code
func (o *CreateXIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create x Id p too many requests response a status code equal to that given
func (o *CreateXIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create x Id p too many requests response
func (o *CreateXIDPTooManyRequests) Code() int {
	return 429
}

func (o *CreateXIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPTooManyRequests %s", 429, payload)
}

func (o *CreateXIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/x][%d] createXIdPTooManyRequests %s", 429, payload)
}

func (o *CreateXIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateXIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
