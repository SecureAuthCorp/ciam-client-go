// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetSAMLV2IDPClientReader is a Reader for the GetSAMLV2IDPClient structure.
type GetSAMLV2IDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSAMLV2IDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSAMLV2IDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSAMLV2IDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetSAMLV2IDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSAMLV2IDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSAMLV2IDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetSAMLV2IDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/saml_v2/{iid}/client] getSAMLV2IDPClient", response, response.Code())
	}
}

// NewGetSAMLV2IDPClientOK creates a GetSAMLV2IDPClientOK with default headers values
func NewGetSAMLV2IDPClientOK() *GetSAMLV2IDPClientOK {
	return &GetSAMLV2IDPClientOK{}
}

/*
GetSAMLV2IDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetSAMLV2IDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get s a m l v2 Id p client o k response has a 2xx status code
func (o *GetSAMLV2IDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get s a m l v2 Id p client o k response has a 3xx status code
func (o *GetSAMLV2IDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l v2 Id p client o k response has a 4xx status code
func (o *GetSAMLV2IDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get s a m l v2 Id p client o k response has a 5xx status code
func (o *GetSAMLV2IDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l v2 Id p client o k response a status code equal to that given
func (o *GetSAMLV2IDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get s a m l v2 Id p client o k response
func (o *GetSAMLV2IDPClientOK) Code() int {
	return 200
}

func (o *GetSAMLV2IDPClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientOK %s", 200, payload)
}

func (o *GetSAMLV2IDPClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientOK %s", 200, payload)
}

func (o *GetSAMLV2IDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetSAMLV2IDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLV2IDPClientBadRequest creates a GetSAMLV2IDPClientBadRequest with default headers values
func NewGetSAMLV2IDPClientBadRequest() *GetSAMLV2IDPClientBadRequest {
	return &GetSAMLV2IDPClientBadRequest{}
}

/*
GetSAMLV2IDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetSAMLV2IDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l v2 Id p client bad request response has a 2xx status code
func (o *GetSAMLV2IDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l v2 Id p client bad request response has a 3xx status code
func (o *GetSAMLV2IDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l v2 Id p client bad request response has a 4xx status code
func (o *GetSAMLV2IDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l v2 Id p client bad request response has a 5xx status code
func (o *GetSAMLV2IDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l v2 Id p client bad request response a status code equal to that given
func (o *GetSAMLV2IDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get s a m l v2 Id p client bad request response
func (o *GetSAMLV2IDPClientBadRequest) Code() int {
	return 400
}

func (o *GetSAMLV2IDPClientBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientBadRequest %s", 400, payload)
}

func (o *GetSAMLV2IDPClientBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientBadRequest %s", 400, payload)
}

func (o *GetSAMLV2IDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLV2IDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLV2IDPClientUnauthorized creates a GetSAMLV2IDPClientUnauthorized with default headers values
func NewGetSAMLV2IDPClientUnauthorized() *GetSAMLV2IDPClientUnauthorized {
	return &GetSAMLV2IDPClientUnauthorized{}
}

/*
GetSAMLV2IDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSAMLV2IDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l v2 Id p client unauthorized response has a 2xx status code
func (o *GetSAMLV2IDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l v2 Id p client unauthorized response has a 3xx status code
func (o *GetSAMLV2IDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l v2 Id p client unauthorized response has a 4xx status code
func (o *GetSAMLV2IDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l v2 Id p client unauthorized response has a 5xx status code
func (o *GetSAMLV2IDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l v2 Id p client unauthorized response a status code equal to that given
func (o *GetSAMLV2IDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get s a m l v2 Id p client unauthorized response
func (o *GetSAMLV2IDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetSAMLV2IDPClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientUnauthorized %s", 401, payload)
}

func (o *GetSAMLV2IDPClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientUnauthorized %s", 401, payload)
}

func (o *GetSAMLV2IDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLV2IDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLV2IDPClientForbidden creates a GetSAMLV2IDPClientForbidden with default headers values
func NewGetSAMLV2IDPClientForbidden() *GetSAMLV2IDPClientForbidden {
	return &GetSAMLV2IDPClientForbidden{}
}

/*
GetSAMLV2IDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSAMLV2IDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l v2 Id p client forbidden response has a 2xx status code
func (o *GetSAMLV2IDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l v2 Id p client forbidden response has a 3xx status code
func (o *GetSAMLV2IDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l v2 Id p client forbidden response has a 4xx status code
func (o *GetSAMLV2IDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l v2 Id p client forbidden response has a 5xx status code
func (o *GetSAMLV2IDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l v2 Id p client forbidden response a status code equal to that given
func (o *GetSAMLV2IDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get s a m l v2 Id p client forbidden response
func (o *GetSAMLV2IDPClientForbidden) Code() int {
	return 403
}

func (o *GetSAMLV2IDPClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientForbidden %s", 403, payload)
}

func (o *GetSAMLV2IDPClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientForbidden %s", 403, payload)
}

func (o *GetSAMLV2IDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLV2IDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLV2IDPClientNotFound creates a GetSAMLV2IDPClientNotFound with default headers values
func NewGetSAMLV2IDPClientNotFound() *GetSAMLV2IDPClientNotFound {
	return &GetSAMLV2IDPClientNotFound{}
}

/*
GetSAMLV2IDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetSAMLV2IDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l v2 Id p client not found response has a 2xx status code
func (o *GetSAMLV2IDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l v2 Id p client not found response has a 3xx status code
func (o *GetSAMLV2IDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l v2 Id p client not found response has a 4xx status code
func (o *GetSAMLV2IDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l v2 Id p client not found response has a 5xx status code
func (o *GetSAMLV2IDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l v2 Id p client not found response a status code equal to that given
func (o *GetSAMLV2IDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get s a m l v2 Id p client not found response
func (o *GetSAMLV2IDPClientNotFound) Code() int {
	return 404
}

func (o *GetSAMLV2IDPClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientNotFound %s", 404, payload)
}

func (o *GetSAMLV2IDPClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientNotFound %s", 404, payload)
}

func (o *GetSAMLV2IDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLV2IDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSAMLV2IDPClientTooManyRequests creates a GetSAMLV2IDPClientTooManyRequests with default headers values
func NewGetSAMLV2IDPClientTooManyRequests() *GetSAMLV2IDPClientTooManyRequests {
	return &GetSAMLV2IDPClientTooManyRequests{}
}

/*
GetSAMLV2IDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetSAMLV2IDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get s a m l v2 Id p client too many requests response has a 2xx status code
func (o *GetSAMLV2IDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get s a m l v2 Id p client too many requests response has a 3xx status code
func (o *GetSAMLV2IDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get s a m l v2 Id p client too many requests response has a 4xx status code
func (o *GetSAMLV2IDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get s a m l v2 Id p client too many requests response has a 5xx status code
func (o *GetSAMLV2IDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get s a m l v2 Id p client too many requests response a status code equal to that given
func (o *GetSAMLV2IDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get s a m l v2 Id p client too many requests response
func (o *GetSAMLV2IDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetSAMLV2IDPClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientTooManyRequests %s", 429, payload)
}

func (o *GetSAMLV2IDPClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/saml_v2/{iid}/client][%d] getSAMLV2IdPClientTooManyRequests %s", 429, payload)
}

func (o *GetSAMLV2IDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetSAMLV2IDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
