// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateStaticIDPReader is a Reader for the UpdateStaticIDP structure.
type UpdateStaticIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStaticIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateStaticIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateStaticIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateStaticIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateStaticIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateStaticIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateStaticIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateStaticIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/static/{iid}] updateStaticIDP", response, response.Code())
	}
}

// NewUpdateStaticIDPOK creates a UpdateStaticIDPOK with default headers values
func NewUpdateStaticIDPOK() *UpdateStaticIDPOK {
	return &UpdateStaticIDPOK{}
}

/*
UpdateStaticIDPOK describes a response with status code 200, with default header values.

StaticIDP
*/
type UpdateStaticIDPOK struct {
	Payload *models.StaticIDP
}

// IsSuccess returns true when this update static Id p o k response has a 2xx status code
func (o *UpdateStaticIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update static Id p o k response has a 3xx status code
func (o *UpdateStaticIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p o k response has a 4xx status code
func (o *UpdateStaticIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update static Id p o k response has a 5xx status code
func (o *UpdateStaticIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p o k response a status code equal to that given
func (o *UpdateStaticIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update static Id p o k response
func (o *UpdateStaticIDPOK) Code() int {
	return 200
}

func (o *UpdateStaticIDPOK) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateStaticIDPOK) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPOK  %+v", 200, o.Payload)
}

func (o *UpdateStaticIDPOK) GetPayload() *models.StaticIDP {
	return o.Payload
}

func (o *UpdateStaticIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StaticIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStaticIDPBadRequest creates a UpdateStaticIDPBadRequest with default headers values
func NewUpdateStaticIDPBadRequest() *UpdateStaticIDPBadRequest {
	return &UpdateStaticIDPBadRequest{}
}

/*
UpdateStaticIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateStaticIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update static Id p bad request response has a 2xx status code
func (o *UpdateStaticIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update static Id p bad request response has a 3xx status code
func (o *UpdateStaticIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p bad request response has a 4xx status code
func (o *UpdateStaticIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update static Id p bad request response has a 5xx status code
func (o *UpdateStaticIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p bad request response a status code equal to that given
func (o *UpdateStaticIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update static Id p bad request response
func (o *UpdateStaticIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateStaticIDPBadRequest) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateStaticIDPBadRequest) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateStaticIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStaticIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStaticIDPUnauthorized creates a UpdateStaticIDPUnauthorized with default headers values
func NewUpdateStaticIDPUnauthorized() *UpdateStaticIDPUnauthorized {
	return &UpdateStaticIDPUnauthorized{}
}

/*
UpdateStaticIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateStaticIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update static Id p unauthorized response has a 2xx status code
func (o *UpdateStaticIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update static Id p unauthorized response has a 3xx status code
func (o *UpdateStaticIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p unauthorized response has a 4xx status code
func (o *UpdateStaticIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update static Id p unauthorized response has a 5xx status code
func (o *UpdateStaticIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p unauthorized response a status code equal to that given
func (o *UpdateStaticIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update static Id p unauthorized response
func (o *UpdateStaticIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateStaticIDPUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateStaticIDPUnauthorized) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPUnauthorized  %+v", 401, o.Payload)
}

func (o *UpdateStaticIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStaticIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStaticIDPForbidden creates a UpdateStaticIDPForbidden with default headers values
func NewUpdateStaticIDPForbidden() *UpdateStaticIDPForbidden {
	return &UpdateStaticIDPForbidden{}
}

/*
UpdateStaticIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateStaticIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update static Id p forbidden response has a 2xx status code
func (o *UpdateStaticIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update static Id p forbidden response has a 3xx status code
func (o *UpdateStaticIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p forbidden response has a 4xx status code
func (o *UpdateStaticIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update static Id p forbidden response has a 5xx status code
func (o *UpdateStaticIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p forbidden response a status code equal to that given
func (o *UpdateStaticIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update static Id p forbidden response
func (o *UpdateStaticIDPForbidden) Code() int {
	return 403
}

func (o *UpdateStaticIDPForbidden) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateStaticIDPForbidden) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPForbidden  %+v", 403, o.Payload)
}

func (o *UpdateStaticIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStaticIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStaticIDPNotFound creates a UpdateStaticIDPNotFound with default headers values
func NewUpdateStaticIDPNotFound() *UpdateStaticIDPNotFound {
	return &UpdateStaticIDPNotFound{}
}

/*
UpdateStaticIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateStaticIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update static Id p not found response has a 2xx status code
func (o *UpdateStaticIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update static Id p not found response has a 3xx status code
func (o *UpdateStaticIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p not found response has a 4xx status code
func (o *UpdateStaticIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update static Id p not found response has a 5xx status code
func (o *UpdateStaticIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p not found response a status code equal to that given
func (o *UpdateStaticIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update static Id p not found response
func (o *UpdateStaticIDPNotFound) Code() int {
	return 404
}

func (o *UpdateStaticIDPNotFound) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStaticIDPNotFound) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStaticIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStaticIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStaticIDPUnprocessableEntity creates a UpdateStaticIDPUnprocessableEntity with default headers values
func NewUpdateStaticIDPUnprocessableEntity() *UpdateStaticIDPUnprocessableEntity {
	return &UpdateStaticIDPUnprocessableEntity{}
}

/*
UpdateStaticIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateStaticIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update static Id p unprocessable entity response has a 2xx status code
func (o *UpdateStaticIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update static Id p unprocessable entity response has a 3xx status code
func (o *UpdateStaticIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p unprocessable entity response has a 4xx status code
func (o *UpdateStaticIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update static Id p unprocessable entity response has a 5xx status code
func (o *UpdateStaticIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p unprocessable entity response a status code equal to that given
func (o *UpdateStaticIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update static Id p unprocessable entity response
func (o *UpdateStaticIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateStaticIDPUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateStaticIDPUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateStaticIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStaticIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStaticIDPTooManyRequests creates a UpdateStaticIDPTooManyRequests with default headers values
func NewUpdateStaticIDPTooManyRequests() *UpdateStaticIDPTooManyRequests {
	return &UpdateStaticIDPTooManyRequests{}
}

/*
UpdateStaticIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateStaticIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update static Id p too many requests response has a 2xx status code
func (o *UpdateStaticIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update static Id p too many requests response has a 3xx status code
func (o *UpdateStaticIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update static Id p too many requests response has a 4xx status code
func (o *UpdateStaticIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update static Id p too many requests response has a 5xx status code
func (o *UpdateStaticIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update static Id p too many requests response a status code equal to that given
func (o *UpdateStaticIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update static Id p too many requests response
func (o *UpdateStaticIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateStaticIDPTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateStaticIDPTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/idps/static/{iid}][%d] updateStaticIdPTooManyRequests  %+v", 429, o.Payload)
}

func (o *UpdateStaticIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateStaticIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
