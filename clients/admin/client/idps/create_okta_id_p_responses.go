// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateOktaIDPReader is a Reader for the CreateOktaIDP structure.
type CreateOktaIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOktaIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateOktaIDPCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateOktaIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateOktaIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateOktaIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOktaIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateOktaIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateOktaIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/idps/okta] createOktaIDP", response, response.Code())
	}
}

// NewCreateOktaIDPCreated creates a CreateOktaIDPCreated with default headers values
func NewCreateOktaIDPCreated() *CreateOktaIDPCreated {
	return &CreateOktaIDPCreated{}
}

/*
CreateOktaIDPCreated describes a response with status code 201, with default header values.

OktaIDP
*/
type CreateOktaIDPCreated struct {
	Payload *models.OktaIDP
}

// IsSuccess returns true when this create okta Id p created response has a 2xx status code
func (o *CreateOktaIDPCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create okta Id p created response has a 3xx status code
func (o *CreateOktaIDPCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p created response has a 4xx status code
func (o *CreateOktaIDPCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create okta Id p created response has a 5xx status code
func (o *CreateOktaIDPCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p created response a status code equal to that given
func (o *CreateOktaIDPCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create okta Id p created response
func (o *CreateOktaIDPCreated) Code() int {
	return 201
}

func (o *CreateOktaIDPCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPCreated %s", 201, payload)
}

func (o *CreateOktaIDPCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPCreated %s", 201, payload)
}

func (o *CreateOktaIDPCreated) GetPayload() *models.OktaIDP {
	return o.Payload
}

func (o *CreateOktaIDPCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OktaIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOktaIDPBadRequest creates a CreateOktaIDPBadRequest with default headers values
func NewCreateOktaIDPBadRequest() *CreateOktaIDPBadRequest {
	return &CreateOktaIDPBadRequest{}
}

/*
CreateOktaIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateOktaIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create okta Id p bad request response has a 2xx status code
func (o *CreateOktaIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create okta Id p bad request response has a 3xx status code
func (o *CreateOktaIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p bad request response has a 4xx status code
func (o *CreateOktaIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create okta Id p bad request response has a 5xx status code
func (o *CreateOktaIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p bad request response a status code equal to that given
func (o *CreateOktaIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create okta Id p bad request response
func (o *CreateOktaIDPBadRequest) Code() int {
	return 400
}

func (o *CreateOktaIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPBadRequest %s", 400, payload)
}

func (o *CreateOktaIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPBadRequest %s", 400, payload)
}

func (o *CreateOktaIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOktaIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOktaIDPUnauthorized creates a CreateOktaIDPUnauthorized with default headers values
func NewCreateOktaIDPUnauthorized() *CreateOktaIDPUnauthorized {
	return &CreateOktaIDPUnauthorized{}
}

/*
CreateOktaIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateOktaIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create okta Id p unauthorized response has a 2xx status code
func (o *CreateOktaIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create okta Id p unauthorized response has a 3xx status code
func (o *CreateOktaIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p unauthorized response has a 4xx status code
func (o *CreateOktaIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create okta Id p unauthorized response has a 5xx status code
func (o *CreateOktaIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p unauthorized response a status code equal to that given
func (o *CreateOktaIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create okta Id p unauthorized response
func (o *CreateOktaIDPUnauthorized) Code() int {
	return 401
}

func (o *CreateOktaIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPUnauthorized %s", 401, payload)
}

func (o *CreateOktaIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPUnauthorized %s", 401, payload)
}

func (o *CreateOktaIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOktaIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOktaIDPForbidden creates a CreateOktaIDPForbidden with default headers values
func NewCreateOktaIDPForbidden() *CreateOktaIDPForbidden {
	return &CreateOktaIDPForbidden{}
}

/*
CreateOktaIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateOktaIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create okta Id p forbidden response has a 2xx status code
func (o *CreateOktaIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create okta Id p forbidden response has a 3xx status code
func (o *CreateOktaIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p forbidden response has a 4xx status code
func (o *CreateOktaIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create okta Id p forbidden response has a 5xx status code
func (o *CreateOktaIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p forbidden response a status code equal to that given
func (o *CreateOktaIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create okta Id p forbidden response
func (o *CreateOktaIDPForbidden) Code() int {
	return 403
}

func (o *CreateOktaIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPForbidden %s", 403, payload)
}

func (o *CreateOktaIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPForbidden %s", 403, payload)
}

func (o *CreateOktaIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOktaIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOktaIDPNotFound creates a CreateOktaIDPNotFound with default headers values
func NewCreateOktaIDPNotFound() *CreateOktaIDPNotFound {
	return &CreateOktaIDPNotFound{}
}

/*
CreateOktaIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateOktaIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create okta Id p not found response has a 2xx status code
func (o *CreateOktaIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create okta Id p not found response has a 3xx status code
func (o *CreateOktaIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p not found response has a 4xx status code
func (o *CreateOktaIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create okta Id p not found response has a 5xx status code
func (o *CreateOktaIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p not found response a status code equal to that given
func (o *CreateOktaIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create okta Id p not found response
func (o *CreateOktaIDPNotFound) Code() int {
	return 404
}

func (o *CreateOktaIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPNotFound %s", 404, payload)
}

func (o *CreateOktaIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPNotFound %s", 404, payload)
}

func (o *CreateOktaIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOktaIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOktaIDPUnprocessableEntity creates a CreateOktaIDPUnprocessableEntity with default headers values
func NewCreateOktaIDPUnprocessableEntity() *CreateOktaIDPUnprocessableEntity {
	return &CreateOktaIDPUnprocessableEntity{}
}

/*
CreateOktaIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateOktaIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create okta Id p unprocessable entity response has a 2xx status code
func (o *CreateOktaIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create okta Id p unprocessable entity response has a 3xx status code
func (o *CreateOktaIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p unprocessable entity response has a 4xx status code
func (o *CreateOktaIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create okta Id p unprocessable entity response has a 5xx status code
func (o *CreateOktaIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p unprocessable entity response a status code equal to that given
func (o *CreateOktaIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create okta Id p unprocessable entity response
func (o *CreateOktaIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateOktaIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateOktaIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPUnprocessableEntity %s", 422, payload)
}

func (o *CreateOktaIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOktaIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOktaIDPTooManyRequests creates a CreateOktaIDPTooManyRequests with default headers values
func NewCreateOktaIDPTooManyRequests() *CreateOktaIDPTooManyRequests {
	return &CreateOktaIDPTooManyRequests{}
}

/*
CreateOktaIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateOktaIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create okta Id p too many requests response has a 2xx status code
func (o *CreateOktaIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create okta Id p too many requests response has a 3xx status code
func (o *CreateOktaIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create okta Id p too many requests response has a 4xx status code
func (o *CreateOktaIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create okta Id p too many requests response has a 5xx status code
func (o *CreateOktaIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create okta Id p too many requests response a status code equal to that given
func (o *CreateOktaIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create okta Id p too many requests response
func (o *CreateOktaIDPTooManyRequests) Code() int {
	return 429
}

func (o *CreateOktaIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPTooManyRequests %s", 429, payload)
}

func (o *CreateOktaIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/idps/okta][%d] createOktaIdPTooManyRequests %s", 429, payload)
}

func (o *CreateOktaIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateOktaIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
