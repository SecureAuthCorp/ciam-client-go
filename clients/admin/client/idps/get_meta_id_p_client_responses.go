// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetMetaIDPClientReader is a Reader for the GetMetaIDPClient structure.
type GetMetaIDPClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetaIDPClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetaIDPClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMetaIDPClientBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetMetaIDPClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMetaIDPClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetaIDPClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetMetaIDPClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/idps/meta/{iid}/client] getMetaIDPClient", response, response.Code())
	}
}

// NewGetMetaIDPClientOK creates a GetMetaIDPClientOK with default headers values
func NewGetMetaIDPClientOK() *GetMetaIDPClientOK {
	return &GetMetaIDPClientOK{}
}

/*
GetMetaIDPClientOK describes a response with status code 200, with default header values.

Client
*/
type GetMetaIDPClientOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this get meta Id p client o k response has a 2xx status code
func (o *GetMetaIDPClientOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get meta Id p client o k response has a 3xx status code
func (o *GetMetaIDPClientOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p client o k response has a 4xx status code
func (o *GetMetaIDPClientOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get meta Id p client o k response has a 5xx status code
func (o *GetMetaIDPClientOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p client o k response a status code equal to that given
func (o *GetMetaIDPClientOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get meta Id p client o k response
func (o *GetMetaIDPClientOK) Code() int {
	return 200
}

func (o *GetMetaIDPClientOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientOK %s", 200, payload)
}

func (o *GetMetaIDPClientOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientOK %s", 200, payload)
}

func (o *GetMetaIDPClientOK) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *GetMetaIDPClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPClientBadRequest creates a GetMetaIDPClientBadRequest with default headers values
func NewGetMetaIDPClientBadRequest() *GetMetaIDPClientBadRequest {
	return &GetMetaIDPClientBadRequest{}
}

/*
GetMetaIDPClientBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetMetaIDPClientBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p client bad request response has a 2xx status code
func (o *GetMetaIDPClientBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p client bad request response has a 3xx status code
func (o *GetMetaIDPClientBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p client bad request response has a 4xx status code
func (o *GetMetaIDPClientBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p client bad request response has a 5xx status code
func (o *GetMetaIDPClientBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p client bad request response a status code equal to that given
func (o *GetMetaIDPClientBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get meta Id p client bad request response
func (o *GetMetaIDPClientBadRequest) Code() int {
	return 400
}

func (o *GetMetaIDPClientBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientBadRequest %s", 400, payload)
}

func (o *GetMetaIDPClientBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientBadRequest %s", 400, payload)
}

func (o *GetMetaIDPClientBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPClientBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPClientUnauthorized creates a GetMetaIDPClientUnauthorized with default headers values
func NewGetMetaIDPClientUnauthorized() *GetMetaIDPClientUnauthorized {
	return &GetMetaIDPClientUnauthorized{}
}

/*
GetMetaIDPClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMetaIDPClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p client unauthorized response has a 2xx status code
func (o *GetMetaIDPClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p client unauthorized response has a 3xx status code
func (o *GetMetaIDPClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p client unauthorized response has a 4xx status code
func (o *GetMetaIDPClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p client unauthorized response has a 5xx status code
func (o *GetMetaIDPClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p client unauthorized response a status code equal to that given
func (o *GetMetaIDPClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get meta Id p client unauthorized response
func (o *GetMetaIDPClientUnauthorized) Code() int {
	return 401
}

func (o *GetMetaIDPClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientUnauthorized %s", 401, payload)
}

func (o *GetMetaIDPClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientUnauthorized %s", 401, payload)
}

func (o *GetMetaIDPClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPClientForbidden creates a GetMetaIDPClientForbidden with default headers values
func NewGetMetaIDPClientForbidden() *GetMetaIDPClientForbidden {
	return &GetMetaIDPClientForbidden{}
}

/*
GetMetaIDPClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMetaIDPClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p client forbidden response has a 2xx status code
func (o *GetMetaIDPClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p client forbidden response has a 3xx status code
func (o *GetMetaIDPClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p client forbidden response has a 4xx status code
func (o *GetMetaIDPClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p client forbidden response has a 5xx status code
func (o *GetMetaIDPClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p client forbidden response a status code equal to that given
func (o *GetMetaIDPClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get meta Id p client forbidden response
func (o *GetMetaIDPClientForbidden) Code() int {
	return 403
}

func (o *GetMetaIDPClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientForbidden %s", 403, payload)
}

func (o *GetMetaIDPClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientForbidden %s", 403, payload)
}

func (o *GetMetaIDPClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPClientNotFound creates a GetMetaIDPClientNotFound with default headers values
func NewGetMetaIDPClientNotFound() *GetMetaIDPClientNotFound {
	return &GetMetaIDPClientNotFound{}
}

/*
GetMetaIDPClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetMetaIDPClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p client not found response has a 2xx status code
func (o *GetMetaIDPClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p client not found response has a 3xx status code
func (o *GetMetaIDPClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p client not found response has a 4xx status code
func (o *GetMetaIDPClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p client not found response has a 5xx status code
func (o *GetMetaIDPClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p client not found response a status code equal to that given
func (o *GetMetaIDPClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get meta Id p client not found response
func (o *GetMetaIDPClientNotFound) Code() int {
	return 404
}

func (o *GetMetaIDPClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientNotFound %s", 404, payload)
}

func (o *GetMetaIDPClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientNotFound %s", 404, payload)
}

func (o *GetMetaIDPClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetaIDPClientTooManyRequests creates a GetMetaIDPClientTooManyRequests with default headers values
func NewGetMetaIDPClientTooManyRequests() *GetMetaIDPClientTooManyRequests {
	return &GetMetaIDPClientTooManyRequests{}
}

/*
GetMetaIDPClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetMetaIDPClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get meta Id p client too many requests response has a 2xx status code
func (o *GetMetaIDPClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get meta Id p client too many requests response has a 3xx status code
func (o *GetMetaIDPClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get meta Id p client too many requests response has a 4xx status code
func (o *GetMetaIDPClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get meta Id p client too many requests response has a 5xx status code
func (o *GetMetaIDPClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get meta Id p client too many requests response a status code equal to that given
func (o *GetMetaIDPClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get meta Id p client too many requests response
func (o *GetMetaIDPClientTooManyRequests) Code() int {
	return 429
}

func (o *GetMetaIDPClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetMetaIDPClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/idps/meta/{iid}/client][%d] getMetaIdPClientTooManyRequests %s", 429, payload)
}

func (o *GetMetaIDPClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetMetaIDPClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
