// Code generated by go-swagger; DO NOT EDIT.

package idps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// UpdateExternalIDPReader is a Reader for the UpdateExternalIDP structure.
type UpdateExternalIDPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateExternalIDPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateExternalIDPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateExternalIDPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateExternalIDPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateExternalIDPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateExternalIDPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateExternalIDPUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewUpdateExternalIDPTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/idps/external/{iid}] updateExternalIDP", response, response.Code())
	}
}

// NewUpdateExternalIDPOK creates a UpdateExternalIDPOK with default headers values
func NewUpdateExternalIDPOK() *UpdateExternalIDPOK {
	return &UpdateExternalIDPOK{}
}

/*
UpdateExternalIDPOK describes a response with status code 200, with default header values.

ExternalIDP
*/
type UpdateExternalIDPOK struct {
	Payload *models.ExternalIDP
}

// IsSuccess returns true when this update external Id p o k response has a 2xx status code
func (o *UpdateExternalIDPOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update external Id p o k response has a 3xx status code
func (o *UpdateExternalIDPOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p o k response has a 4xx status code
func (o *UpdateExternalIDPOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update external Id p o k response has a 5xx status code
func (o *UpdateExternalIDPOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p o k response a status code equal to that given
func (o *UpdateExternalIDPOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update external Id p o k response
func (o *UpdateExternalIDPOK) Code() int {
	return 200
}

func (o *UpdateExternalIDPOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPOK %s", 200, payload)
}

func (o *UpdateExternalIDPOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPOK %s", 200, payload)
}

func (o *UpdateExternalIDPOK) GetPayload() *models.ExternalIDP {
	return o.Payload
}

func (o *UpdateExternalIDPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalIDP)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExternalIDPBadRequest creates a UpdateExternalIDPBadRequest with default headers values
func NewUpdateExternalIDPBadRequest() *UpdateExternalIDPBadRequest {
	return &UpdateExternalIDPBadRequest{}
}

/*
UpdateExternalIDPBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type UpdateExternalIDPBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this update external Id p bad request response has a 2xx status code
func (o *UpdateExternalIDPBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update external Id p bad request response has a 3xx status code
func (o *UpdateExternalIDPBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p bad request response has a 4xx status code
func (o *UpdateExternalIDPBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update external Id p bad request response has a 5xx status code
func (o *UpdateExternalIDPBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p bad request response a status code equal to that given
func (o *UpdateExternalIDPBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update external Id p bad request response
func (o *UpdateExternalIDPBadRequest) Code() int {
	return 400
}

func (o *UpdateExternalIDPBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPBadRequest %s", 400, payload)
}

func (o *UpdateExternalIDPBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPBadRequest %s", 400, payload)
}

func (o *UpdateExternalIDPBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateExternalIDPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExternalIDPUnauthorized creates a UpdateExternalIDPUnauthorized with default headers values
func NewUpdateExternalIDPUnauthorized() *UpdateExternalIDPUnauthorized {
	return &UpdateExternalIDPUnauthorized{}
}

/*
UpdateExternalIDPUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateExternalIDPUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this update external Id p unauthorized response has a 2xx status code
func (o *UpdateExternalIDPUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update external Id p unauthorized response has a 3xx status code
func (o *UpdateExternalIDPUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p unauthorized response has a 4xx status code
func (o *UpdateExternalIDPUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update external Id p unauthorized response has a 5xx status code
func (o *UpdateExternalIDPUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p unauthorized response a status code equal to that given
func (o *UpdateExternalIDPUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update external Id p unauthorized response
func (o *UpdateExternalIDPUnauthorized) Code() int {
	return 401
}

func (o *UpdateExternalIDPUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPUnauthorized %s", 401, payload)
}

func (o *UpdateExternalIDPUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPUnauthorized %s", 401, payload)
}

func (o *UpdateExternalIDPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateExternalIDPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExternalIDPForbidden creates a UpdateExternalIDPForbidden with default headers values
func NewUpdateExternalIDPForbidden() *UpdateExternalIDPForbidden {
	return &UpdateExternalIDPForbidden{}
}

/*
UpdateExternalIDPForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateExternalIDPForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this update external Id p forbidden response has a 2xx status code
func (o *UpdateExternalIDPForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update external Id p forbidden response has a 3xx status code
func (o *UpdateExternalIDPForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p forbidden response has a 4xx status code
func (o *UpdateExternalIDPForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update external Id p forbidden response has a 5xx status code
func (o *UpdateExternalIDPForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p forbidden response a status code equal to that given
func (o *UpdateExternalIDPForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update external Id p forbidden response
func (o *UpdateExternalIDPForbidden) Code() int {
	return 403
}

func (o *UpdateExternalIDPForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPForbidden %s", 403, payload)
}

func (o *UpdateExternalIDPForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPForbidden %s", 403, payload)
}

func (o *UpdateExternalIDPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateExternalIDPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExternalIDPNotFound creates a UpdateExternalIDPNotFound with default headers values
func NewUpdateExternalIDPNotFound() *UpdateExternalIDPNotFound {
	return &UpdateExternalIDPNotFound{}
}

/*
UpdateExternalIDPNotFound describes a response with status code 404, with default header values.

Not found
*/
type UpdateExternalIDPNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this update external Id p not found response has a 2xx status code
func (o *UpdateExternalIDPNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update external Id p not found response has a 3xx status code
func (o *UpdateExternalIDPNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p not found response has a 4xx status code
func (o *UpdateExternalIDPNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update external Id p not found response has a 5xx status code
func (o *UpdateExternalIDPNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p not found response a status code equal to that given
func (o *UpdateExternalIDPNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update external Id p not found response
func (o *UpdateExternalIDPNotFound) Code() int {
	return 404
}

func (o *UpdateExternalIDPNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPNotFound %s", 404, payload)
}

func (o *UpdateExternalIDPNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPNotFound %s", 404, payload)
}

func (o *UpdateExternalIDPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateExternalIDPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExternalIDPUnprocessableEntity creates a UpdateExternalIDPUnprocessableEntity with default headers values
func NewUpdateExternalIDPUnprocessableEntity() *UpdateExternalIDPUnprocessableEntity {
	return &UpdateExternalIDPUnprocessableEntity{}
}

/*
UpdateExternalIDPUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type UpdateExternalIDPUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this update external Id p unprocessable entity response has a 2xx status code
func (o *UpdateExternalIDPUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update external Id p unprocessable entity response has a 3xx status code
func (o *UpdateExternalIDPUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p unprocessable entity response has a 4xx status code
func (o *UpdateExternalIDPUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update external Id p unprocessable entity response has a 5xx status code
func (o *UpdateExternalIDPUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p unprocessable entity response a status code equal to that given
func (o *UpdateExternalIDPUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update external Id p unprocessable entity response
func (o *UpdateExternalIDPUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateExternalIDPUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateExternalIDPUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPUnprocessableEntity %s", 422, payload)
}

func (o *UpdateExternalIDPUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateExternalIDPUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateExternalIDPTooManyRequests creates a UpdateExternalIDPTooManyRequests with default headers values
func NewUpdateExternalIDPTooManyRequests() *UpdateExternalIDPTooManyRequests {
	return &UpdateExternalIDPTooManyRequests{}
}

/*
UpdateExternalIDPTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type UpdateExternalIDPTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this update external Id p too many requests response has a 2xx status code
func (o *UpdateExternalIDPTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update external Id p too many requests response has a 3xx status code
func (o *UpdateExternalIDPTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update external Id p too many requests response has a 4xx status code
func (o *UpdateExternalIDPTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this update external Id p too many requests response has a 5xx status code
func (o *UpdateExternalIDPTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this update external Id p too many requests response a status code equal to that given
func (o *UpdateExternalIDPTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the update external Id p too many requests response
func (o *UpdateExternalIDPTooManyRequests) Code() int {
	return 429
}

func (o *UpdateExternalIDPTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateExternalIDPTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/idps/external/{iid}][%d] updateExternalIdPTooManyRequests %s", 429, payload)
}

func (o *UpdateExternalIDPTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *UpdateExternalIDPTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
