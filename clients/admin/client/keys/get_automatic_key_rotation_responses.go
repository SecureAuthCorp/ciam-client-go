// Code generated by go-swagger; DO NOT EDIT.

package keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAutomaticKeyRotationReader is a Reader for the GetAutomaticKeyRotation structure.
type GetAutomaticKeyRotationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAutomaticKeyRotationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAutomaticKeyRotationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAutomaticKeyRotationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAutomaticKeyRotationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAutomaticKeyRotationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAutomaticKeyRotationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/keys/automatic-key-rotation] getAutomaticKeyRotation", response, response.Code())
	}
}

// NewGetAutomaticKeyRotationOK creates a GetAutomaticKeyRotationOK with default headers values
func NewGetAutomaticKeyRotationOK() *GetAutomaticKeyRotationOK {
	return &GetAutomaticKeyRotationOK{}
}

/*
GetAutomaticKeyRotationOK describes a response with status code 200, with default header values.

Automation key rotation
*/
type GetAutomaticKeyRotationOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.AutomaticKeyRotation
}

// IsSuccess returns true when this get automatic key rotation o k response has a 2xx status code
func (o *GetAutomaticKeyRotationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get automatic key rotation o k response has a 3xx status code
func (o *GetAutomaticKeyRotationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automatic key rotation o k response has a 4xx status code
func (o *GetAutomaticKeyRotationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get automatic key rotation o k response has a 5xx status code
func (o *GetAutomaticKeyRotationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get automatic key rotation o k response a status code equal to that given
func (o *GetAutomaticKeyRotationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get automatic key rotation o k response
func (o *GetAutomaticKeyRotationOK) Code() int {
	return 200
}

func (o *GetAutomaticKeyRotationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationOK %s", 200, payload)
}

func (o *GetAutomaticKeyRotationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationOK %s", 200, payload)
}

func (o *GetAutomaticKeyRotationOK) GetPayload() *models.AutomaticKeyRotation {
	return o.Payload
}

func (o *GetAutomaticKeyRotationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.AutomaticKeyRotation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAutomaticKeyRotationUnauthorized creates a GetAutomaticKeyRotationUnauthorized with default headers values
func NewGetAutomaticKeyRotationUnauthorized() *GetAutomaticKeyRotationUnauthorized {
	return &GetAutomaticKeyRotationUnauthorized{}
}

/*
GetAutomaticKeyRotationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAutomaticKeyRotationUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get automatic key rotation unauthorized response has a 2xx status code
func (o *GetAutomaticKeyRotationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automatic key rotation unauthorized response has a 3xx status code
func (o *GetAutomaticKeyRotationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automatic key rotation unauthorized response has a 4xx status code
func (o *GetAutomaticKeyRotationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automatic key rotation unauthorized response has a 5xx status code
func (o *GetAutomaticKeyRotationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get automatic key rotation unauthorized response a status code equal to that given
func (o *GetAutomaticKeyRotationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get automatic key rotation unauthorized response
func (o *GetAutomaticKeyRotationUnauthorized) Code() int {
	return 401
}

func (o *GetAutomaticKeyRotationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationUnauthorized %s", 401, payload)
}

func (o *GetAutomaticKeyRotationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationUnauthorized %s", 401, payload)
}

func (o *GetAutomaticKeyRotationUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAutomaticKeyRotationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAutomaticKeyRotationForbidden creates a GetAutomaticKeyRotationForbidden with default headers values
func NewGetAutomaticKeyRotationForbidden() *GetAutomaticKeyRotationForbidden {
	return &GetAutomaticKeyRotationForbidden{}
}

/*
GetAutomaticKeyRotationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAutomaticKeyRotationForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get automatic key rotation forbidden response has a 2xx status code
func (o *GetAutomaticKeyRotationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automatic key rotation forbidden response has a 3xx status code
func (o *GetAutomaticKeyRotationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automatic key rotation forbidden response has a 4xx status code
func (o *GetAutomaticKeyRotationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automatic key rotation forbidden response has a 5xx status code
func (o *GetAutomaticKeyRotationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get automatic key rotation forbidden response a status code equal to that given
func (o *GetAutomaticKeyRotationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get automatic key rotation forbidden response
func (o *GetAutomaticKeyRotationForbidden) Code() int {
	return 403
}

func (o *GetAutomaticKeyRotationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationForbidden %s", 403, payload)
}

func (o *GetAutomaticKeyRotationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationForbidden %s", 403, payload)
}

func (o *GetAutomaticKeyRotationForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAutomaticKeyRotationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAutomaticKeyRotationNotFound creates a GetAutomaticKeyRotationNotFound with default headers values
func NewGetAutomaticKeyRotationNotFound() *GetAutomaticKeyRotationNotFound {
	return &GetAutomaticKeyRotationNotFound{}
}

/*
GetAutomaticKeyRotationNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAutomaticKeyRotationNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get automatic key rotation not found response has a 2xx status code
func (o *GetAutomaticKeyRotationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automatic key rotation not found response has a 3xx status code
func (o *GetAutomaticKeyRotationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automatic key rotation not found response has a 4xx status code
func (o *GetAutomaticKeyRotationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automatic key rotation not found response has a 5xx status code
func (o *GetAutomaticKeyRotationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get automatic key rotation not found response a status code equal to that given
func (o *GetAutomaticKeyRotationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get automatic key rotation not found response
func (o *GetAutomaticKeyRotationNotFound) Code() int {
	return 404
}

func (o *GetAutomaticKeyRotationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationNotFound %s", 404, payload)
}

func (o *GetAutomaticKeyRotationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationNotFound %s", 404, payload)
}

func (o *GetAutomaticKeyRotationNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAutomaticKeyRotationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAutomaticKeyRotationTooManyRequests creates a GetAutomaticKeyRotationTooManyRequests with default headers values
func NewGetAutomaticKeyRotationTooManyRequests() *GetAutomaticKeyRotationTooManyRequests {
	return &GetAutomaticKeyRotationTooManyRequests{}
}

/*
GetAutomaticKeyRotationTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetAutomaticKeyRotationTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get automatic key rotation too many requests response has a 2xx status code
func (o *GetAutomaticKeyRotationTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automatic key rotation too many requests response has a 3xx status code
func (o *GetAutomaticKeyRotationTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automatic key rotation too many requests response has a 4xx status code
func (o *GetAutomaticKeyRotationTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automatic key rotation too many requests response has a 5xx status code
func (o *GetAutomaticKeyRotationTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get automatic key rotation too many requests response a status code equal to that given
func (o *GetAutomaticKeyRotationTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get automatic key rotation too many requests response
func (o *GetAutomaticKeyRotationTooManyRequests) Code() int {
	return 429
}

func (o *GetAutomaticKeyRotationTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationTooManyRequests %s", 429, payload)
}

func (o *GetAutomaticKeyRotationTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/keys/automatic-key-rotation][%d] getAutomaticKeyRotationTooManyRequests %s", 429, payload)
}

func (o *GetAutomaticKeyRotationTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAutomaticKeyRotationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
