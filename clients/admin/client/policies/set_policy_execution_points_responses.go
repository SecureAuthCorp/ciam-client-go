// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// SetPolicyExecutionPointsReader is a Reader for the SetPolicyExecutionPoints structure.
type SetPolicyExecutionPointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetPolicyExecutionPointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetPolicyExecutionPointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetPolicyExecutionPointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetPolicyExecutionPointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetPolicyExecutionPointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetPolicyExecutionPointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSetPolicyExecutionPointsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetPolicyExecutionPointsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSetPolicyExecutionPointsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/policy-execution-points] setPolicyExecutionPoints", response, response.Code())
	}
}

// NewSetPolicyExecutionPointsOK creates a SetPolicyExecutionPointsOK with default headers values
func NewSetPolicyExecutionPointsOK() *SetPolicyExecutionPointsOK {
	return &SetPolicyExecutionPointsOK{}
}

/*
SetPolicyExecutionPointsOK describes a response with status code 200, with default header values.

Policy execution points
*/
type SetPolicyExecutionPointsOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.PolicyExecutionPoints
}

// IsSuccess returns true when this set policy execution points o k response has a 2xx status code
func (o *SetPolicyExecutionPointsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set policy execution points o k response has a 3xx status code
func (o *SetPolicyExecutionPointsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points o k response has a 4xx status code
func (o *SetPolicyExecutionPointsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set policy execution points o k response has a 5xx status code
func (o *SetPolicyExecutionPointsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points o k response a status code equal to that given
func (o *SetPolicyExecutionPointsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set policy execution points o k response
func (o *SetPolicyExecutionPointsOK) Code() int {
	return 200
}

func (o *SetPolicyExecutionPointsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsOK %s", 200, payload)
}

func (o *SetPolicyExecutionPointsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsOK %s", 200, payload)
}

func (o *SetPolicyExecutionPointsOK) GetPayload() *models.PolicyExecutionPoints {
	return o.Payload
}

func (o *SetPolicyExecutionPointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.PolicyExecutionPoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsBadRequest creates a SetPolicyExecutionPointsBadRequest with default headers values
func NewSetPolicyExecutionPointsBadRequest() *SetPolicyExecutionPointsBadRequest {
	return &SetPolicyExecutionPointsBadRequest{}
}

/*
SetPolicyExecutionPointsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SetPolicyExecutionPointsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points bad request response has a 2xx status code
func (o *SetPolicyExecutionPointsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points bad request response has a 3xx status code
func (o *SetPolicyExecutionPointsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points bad request response has a 4xx status code
func (o *SetPolicyExecutionPointsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points bad request response has a 5xx status code
func (o *SetPolicyExecutionPointsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points bad request response a status code equal to that given
func (o *SetPolicyExecutionPointsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set policy execution points bad request response
func (o *SetPolicyExecutionPointsBadRequest) Code() int {
	return 400
}

func (o *SetPolicyExecutionPointsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsBadRequest %s", 400, payload)
}

func (o *SetPolicyExecutionPointsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsBadRequest %s", 400, payload)
}

func (o *SetPolicyExecutionPointsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsUnauthorized creates a SetPolicyExecutionPointsUnauthorized with default headers values
func NewSetPolicyExecutionPointsUnauthorized() *SetPolicyExecutionPointsUnauthorized {
	return &SetPolicyExecutionPointsUnauthorized{}
}

/*
SetPolicyExecutionPointsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetPolicyExecutionPointsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points unauthorized response has a 2xx status code
func (o *SetPolicyExecutionPointsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points unauthorized response has a 3xx status code
func (o *SetPolicyExecutionPointsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points unauthorized response has a 4xx status code
func (o *SetPolicyExecutionPointsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points unauthorized response has a 5xx status code
func (o *SetPolicyExecutionPointsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points unauthorized response a status code equal to that given
func (o *SetPolicyExecutionPointsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set policy execution points unauthorized response
func (o *SetPolicyExecutionPointsUnauthorized) Code() int {
	return 401
}

func (o *SetPolicyExecutionPointsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsUnauthorized %s", 401, payload)
}

func (o *SetPolicyExecutionPointsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsUnauthorized %s", 401, payload)
}

func (o *SetPolicyExecutionPointsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsForbidden creates a SetPolicyExecutionPointsForbidden with default headers values
func NewSetPolicyExecutionPointsForbidden() *SetPolicyExecutionPointsForbidden {
	return &SetPolicyExecutionPointsForbidden{}
}

/*
SetPolicyExecutionPointsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetPolicyExecutionPointsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points forbidden response has a 2xx status code
func (o *SetPolicyExecutionPointsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points forbidden response has a 3xx status code
func (o *SetPolicyExecutionPointsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points forbidden response has a 4xx status code
func (o *SetPolicyExecutionPointsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points forbidden response has a 5xx status code
func (o *SetPolicyExecutionPointsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points forbidden response a status code equal to that given
func (o *SetPolicyExecutionPointsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set policy execution points forbidden response
func (o *SetPolicyExecutionPointsForbidden) Code() int {
	return 403
}

func (o *SetPolicyExecutionPointsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsForbidden %s", 403, payload)
}

func (o *SetPolicyExecutionPointsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsForbidden %s", 403, payload)
}

func (o *SetPolicyExecutionPointsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsNotFound creates a SetPolicyExecutionPointsNotFound with default headers values
func NewSetPolicyExecutionPointsNotFound() *SetPolicyExecutionPointsNotFound {
	return &SetPolicyExecutionPointsNotFound{}
}

/*
SetPolicyExecutionPointsNotFound describes a response with status code 404, with default header values.

Not found
*/
type SetPolicyExecutionPointsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points not found response has a 2xx status code
func (o *SetPolicyExecutionPointsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points not found response has a 3xx status code
func (o *SetPolicyExecutionPointsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points not found response has a 4xx status code
func (o *SetPolicyExecutionPointsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points not found response has a 5xx status code
func (o *SetPolicyExecutionPointsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points not found response a status code equal to that given
func (o *SetPolicyExecutionPointsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set policy execution points not found response
func (o *SetPolicyExecutionPointsNotFound) Code() int {
	return 404
}

func (o *SetPolicyExecutionPointsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsNotFound %s", 404, payload)
}

func (o *SetPolicyExecutionPointsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsNotFound %s", 404, payload)
}

func (o *SetPolicyExecutionPointsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsConflict creates a SetPolicyExecutionPointsConflict with default headers values
func NewSetPolicyExecutionPointsConflict() *SetPolicyExecutionPointsConflict {
	return &SetPolicyExecutionPointsConflict{}
}

/*
SetPolicyExecutionPointsConflict describes a response with status code 409, with default header values.

Conflict
*/
type SetPolicyExecutionPointsConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points conflict response has a 2xx status code
func (o *SetPolicyExecutionPointsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points conflict response has a 3xx status code
func (o *SetPolicyExecutionPointsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points conflict response has a 4xx status code
func (o *SetPolicyExecutionPointsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points conflict response has a 5xx status code
func (o *SetPolicyExecutionPointsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points conflict response a status code equal to that given
func (o *SetPolicyExecutionPointsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the set policy execution points conflict response
func (o *SetPolicyExecutionPointsConflict) Code() int {
	return 409
}

func (o *SetPolicyExecutionPointsConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsConflict %s", 409, payload)
}

func (o *SetPolicyExecutionPointsConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsConflict %s", 409, payload)
}

func (o *SetPolicyExecutionPointsConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsUnprocessableEntity creates a SetPolicyExecutionPointsUnprocessableEntity with default headers values
func NewSetPolicyExecutionPointsUnprocessableEntity() *SetPolicyExecutionPointsUnprocessableEntity {
	return &SetPolicyExecutionPointsUnprocessableEntity{}
}

/*
SetPolicyExecutionPointsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SetPolicyExecutionPointsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points unprocessable entity response has a 2xx status code
func (o *SetPolicyExecutionPointsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points unprocessable entity response has a 3xx status code
func (o *SetPolicyExecutionPointsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points unprocessable entity response has a 4xx status code
func (o *SetPolicyExecutionPointsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points unprocessable entity response has a 5xx status code
func (o *SetPolicyExecutionPointsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points unprocessable entity response a status code equal to that given
func (o *SetPolicyExecutionPointsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set policy execution points unprocessable entity response
func (o *SetPolicyExecutionPointsUnprocessableEntity) Code() int {
	return 422
}

func (o *SetPolicyExecutionPointsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsUnprocessableEntity %s", 422, payload)
}

func (o *SetPolicyExecutionPointsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsUnprocessableEntity %s", 422, payload)
}

func (o *SetPolicyExecutionPointsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPolicyExecutionPointsTooManyRequests creates a SetPolicyExecutionPointsTooManyRequests with default headers values
func NewSetPolicyExecutionPointsTooManyRequests() *SetPolicyExecutionPointsTooManyRequests {
	return &SetPolicyExecutionPointsTooManyRequests{}
}

/*
SetPolicyExecutionPointsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SetPolicyExecutionPointsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this set policy execution points too many requests response has a 2xx status code
func (o *SetPolicyExecutionPointsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set policy execution points too many requests response has a 3xx status code
func (o *SetPolicyExecutionPointsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set policy execution points too many requests response has a 4xx status code
func (o *SetPolicyExecutionPointsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this set policy execution points too many requests response has a 5xx status code
func (o *SetPolicyExecutionPointsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this set policy execution points too many requests response a status code equal to that given
func (o *SetPolicyExecutionPointsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the set policy execution points too many requests response
func (o *SetPolicyExecutionPointsTooManyRequests) Code() int {
	return 429
}

func (o *SetPolicyExecutionPointsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsTooManyRequests %s", 429, payload)
}

func (o *SetPolicyExecutionPointsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /servers/{wid}/policy-execution-points][%d] setPolicyExecutionPointsTooManyRequests %s", 429, payload)
}

func (o *SetPolicyExecutionPointsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetPolicyExecutionPointsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
