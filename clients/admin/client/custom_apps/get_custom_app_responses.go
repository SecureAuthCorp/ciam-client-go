// Code generated by go-swagger; DO NOT EDIT.

package custom_apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetCustomAppReader is a Reader for the GetCustomApp structure.
type GetCustomAppReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomAppReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomAppOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCustomAppUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCustomAppForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomAppNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetCustomAppTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/custom-apps/{customAppID}] getCustomApp", response, response.Code())
	}
}

// NewGetCustomAppOK creates a GetCustomAppOK with default headers values
func NewGetCustomAppOK() *GetCustomAppOK {
	return &GetCustomAppOK{}
}

/*
GetCustomAppOK describes a response with status code 200, with default header values.

CustomApp response
*/
type GetCustomAppOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.CustomAppResponse
}

// IsSuccess returns true when this get custom app o k response has a 2xx status code
func (o *GetCustomAppOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get custom app o k response has a 3xx status code
func (o *GetCustomAppOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom app o k response has a 4xx status code
func (o *GetCustomAppOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get custom app o k response has a 5xx status code
func (o *GetCustomAppOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom app o k response a status code equal to that given
func (o *GetCustomAppOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get custom app o k response
func (o *GetCustomAppOK) Code() int {
	return 200
}

func (o *GetCustomAppOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppOK %s", 200, payload)
}

func (o *GetCustomAppOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppOK %s", 200, payload)
}

func (o *GetCustomAppOK) GetPayload() *models.CustomAppResponse {
	return o.Payload
}

func (o *GetCustomAppOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.CustomAppResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomAppUnauthorized creates a GetCustomAppUnauthorized with default headers values
func NewGetCustomAppUnauthorized() *GetCustomAppUnauthorized {
	return &GetCustomAppUnauthorized{}
}

/*
GetCustomAppUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCustomAppUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom app unauthorized response has a 2xx status code
func (o *GetCustomAppUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom app unauthorized response has a 3xx status code
func (o *GetCustomAppUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom app unauthorized response has a 4xx status code
func (o *GetCustomAppUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom app unauthorized response has a 5xx status code
func (o *GetCustomAppUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom app unauthorized response a status code equal to that given
func (o *GetCustomAppUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get custom app unauthorized response
func (o *GetCustomAppUnauthorized) Code() int {
	return 401
}

func (o *GetCustomAppUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppUnauthorized %s", 401, payload)
}

func (o *GetCustomAppUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppUnauthorized %s", 401, payload)
}

func (o *GetCustomAppUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomAppUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomAppForbidden creates a GetCustomAppForbidden with default headers values
func NewGetCustomAppForbidden() *GetCustomAppForbidden {
	return &GetCustomAppForbidden{}
}

/*
GetCustomAppForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCustomAppForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom app forbidden response has a 2xx status code
func (o *GetCustomAppForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom app forbidden response has a 3xx status code
func (o *GetCustomAppForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom app forbidden response has a 4xx status code
func (o *GetCustomAppForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom app forbidden response has a 5xx status code
func (o *GetCustomAppForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom app forbidden response a status code equal to that given
func (o *GetCustomAppForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get custom app forbidden response
func (o *GetCustomAppForbidden) Code() int {
	return 403
}

func (o *GetCustomAppForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppForbidden %s", 403, payload)
}

func (o *GetCustomAppForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppForbidden %s", 403, payload)
}

func (o *GetCustomAppForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomAppForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomAppNotFound creates a GetCustomAppNotFound with default headers values
func NewGetCustomAppNotFound() *GetCustomAppNotFound {
	return &GetCustomAppNotFound{}
}

/*
GetCustomAppNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetCustomAppNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom app not found response has a 2xx status code
func (o *GetCustomAppNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom app not found response has a 3xx status code
func (o *GetCustomAppNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom app not found response has a 4xx status code
func (o *GetCustomAppNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom app not found response has a 5xx status code
func (o *GetCustomAppNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom app not found response a status code equal to that given
func (o *GetCustomAppNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get custom app not found response
func (o *GetCustomAppNotFound) Code() int {
	return 404
}

func (o *GetCustomAppNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppNotFound %s", 404, payload)
}

func (o *GetCustomAppNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppNotFound %s", 404, payload)
}

func (o *GetCustomAppNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomAppNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomAppTooManyRequests creates a GetCustomAppTooManyRequests with default headers values
func NewGetCustomAppTooManyRequests() *GetCustomAppTooManyRequests {
	return &GetCustomAppTooManyRequests{}
}

/*
GetCustomAppTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetCustomAppTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get custom app too many requests response has a 2xx status code
func (o *GetCustomAppTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom app too many requests response has a 3xx status code
func (o *GetCustomAppTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom app too many requests response has a 4xx status code
func (o *GetCustomAppTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom app too many requests response has a 5xx status code
func (o *GetCustomAppTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom app too many requests response a status code equal to that given
func (o *GetCustomAppTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get custom app too many requests response
func (o *GetCustomAppTooManyRequests) Code() int {
	return 429
}

func (o *GetCustomAppTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppTooManyRequests %s", 429, payload)
}

func (o *GetCustomAppTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/custom-apps/{customAppID}][%d] getCustomAppTooManyRequests %s", 429, payload)
}

func (o *GetCustomAppTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetCustomAppTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
