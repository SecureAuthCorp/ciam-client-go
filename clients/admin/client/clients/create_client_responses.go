// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateClientReader is a Reader for the CreateClient structure.
type CreateClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateClientCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateClientUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClientForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateClientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateClientConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateClientUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateClientTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /clients] createClient", response, response.Code())
	}
}

// NewCreateClientCreated creates a CreateClientCreated with default headers values
func NewCreateClientCreated() *CreateClientCreated {
	return &CreateClientCreated{}
}

/*
CreateClientCreated describes a response with status code 201, with default header values.

Client
*/
type CreateClientCreated struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ClientAdminResponse
}

// IsSuccess returns true when this create client created response has a 2xx status code
func (o *CreateClientCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create client created response has a 3xx status code
func (o *CreateClientCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client created response has a 4xx status code
func (o *CreateClientCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create client created response has a 5xx status code
func (o *CreateClientCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create client created response a status code equal to that given
func (o *CreateClientCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create client created response
func (o *CreateClientCreated) Code() int {
	return 201
}

func (o *CreateClientCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientCreated %s", 201, payload)
}

func (o *CreateClientCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientCreated %s", 201, payload)
}

func (o *CreateClientCreated) GetPayload() *models.ClientAdminResponse {
	return o.Payload
}

func (o *CreateClientCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ClientAdminResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientUnauthorized creates a CreateClientUnauthorized with default headers values
func NewCreateClientUnauthorized() *CreateClientUnauthorized {
	return &CreateClientUnauthorized{}
}

/*
CreateClientUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateClientUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create client unauthorized response has a 2xx status code
func (o *CreateClientUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client unauthorized response has a 3xx status code
func (o *CreateClientUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client unauthorized response has a 4xx status code
func (o *CreateClientUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client unauthorized response has a 5xx status code
func (o *CreateClientUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create client unauthorized response a status code equal to that given
func (o *CreateClientUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create client unauthorized response
func (o *CreateClientUnauthorized) Code() int {
	return 401
}

func (o *CreateClientUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientUnauthorized %s", 401, payload)
}

func (o *CreateClientUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientUnauthorized %s", 401, payload)
}

func (o *CreateClientUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientForbidden creates a CreateClientForbidden with default headers values
func NewCreateClientForbidden() *CreateClientForbidden {
	return &CreateClientForbidden{}
}

/*
CreateClientForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateClientForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create client forbidden response has a 2xx status code
func (o *CreateClientForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client forbidden response has a 3xx status code
func (o *CreateClientForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client forbidden response has a 4xx status code
func (o *CreateClientForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client forbidden response has a 5xx status code
func (o *CreateClientForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create client forbidden response a status code equal to that given
func (o *CreateClientForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create client forbidden response
func (o *CreateClientForbidden) Code() int {
	return 403
}

func (o *CreateClientForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientForbidden %s", 403, payload)
}

func (o *CreateClientForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientForbidden %s", 403, payload)
}

func (o *CreateClientForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientNotFound creates a CreateClientNotFound with default headers values
func NewCreateClientNotFound() *CreateClientNotFound {
	return &CreateClientNotFound{}
}

/*
CreateClientNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateClientNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create client not found response has a 2xx status code
func (o *CreateClientNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client not found response has a 3xx status code
func (o *CreateClientNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client not found response has a 4xx status code
func (o *CreateClientNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client not found response has a 5xx status code
func (o *CreateClientNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create client not found response a status code equal to that given
func (o *CreateClientNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create client not found response
func (o *CreateClientNotFound) Code() int {
	return 404
}

func (o *CreateClientNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientNotFound %s", 404, payload)
}

func (o *CreateClientNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientNotFound %s", 404, payload)
}

func (o *CreateClientNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientConflict creates a CreateClientConflict with default headers values
func NewCreateClientConflict() *CreateClientConflict {
	return &CreateClientConflict{}
}

/*
CreateClientConflict describes a response with status code 409, with default header values.

Conflict
*/
type CreateClientConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this create client conflict response has a 2xx status code
func (o *CreateClientConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client conflict response has a 3xx status code
func (o *CreateClientConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client conflict response has a 4xx status code
func (o *CreateClientConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client conflict response has a 5xx status code
func (o *CreateClientConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this create client conflict response a status code equal to that given
func (o *CreateClientConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the create client conflict response
func (o *CreateClientConflict) Code() int {
	return 409
}

func (o *CreateClientConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientConflict %s", 409, payload)
}

func (o *CreateClientConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientConflict %s", 409, payload)
}

func (o *CreateClientConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientUnprocessableEntity creates a CreateClientUnprocessableEntity with default headers values
func NewCreateClientUnprocessableEntity() *CreateClientUnprocessableEntity {
	return &CreateClientUnprocessableEntity{}
}

/*
CreateClientUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateClientUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create client unprocessable entity response has a 2xx status code
func (o *CreateClientUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client unprocessable entity response has a 3xx status code
func (o *CreateClientUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client unprocessable entity response has a 4xx status code
func (o *CreateClientUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client unprocessable entity response has a 5xx status code
func (o *CreateClientUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create client unprocessable entity response a status code equal to that given
func (o *CreateClientUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create client unprocessable entity response
func (o *CreateClientUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateClientUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientUnprocessableEntity %s", 422, payload)
}

func (o *CreateClientUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientUnprocessableEntity %s", 422, payload)
}

func (o *CreateClientUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClientTooManyRequests creates a CreateClientTooManyRequests with default headers values
func NewCreateClientTooManyRequests() *CreateClientTooManyRequests {
	return &CreateClientTooManyRequests{}
}

/*
CreateClientTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateClientTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create client too many requests response has a 2xx status code
func (o *CreateClientTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create client too many requests response has a 3xx status code
func (o *CreateClientTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create client too many requests response has a 4xx status code
func (o *CreateClientTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create client too many requests response has a 5xx status code
func (o *CreateClientTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create client too many requests response a status code equal to that given
func (o *CreateClientTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create client too many requests response
func (o *CreateClientTooManyRequests) Code() int {
	return 429
}

func (o *CreateClientTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientTooManyRequests %s", 429, payload)
}

func (o *CreateClientTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients][%d] createClientTooManyRequests %s", 429, payload)
}

func (o *CreateClientTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateClientTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
