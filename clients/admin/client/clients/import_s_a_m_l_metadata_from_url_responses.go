// Code generated by go-swagger; DO NOT EDIT.

package clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ImportSAMLMetadataFromURLReader is a Reader for the ImportSAMLMetadataFromURL structure.
type ImportSAMLMetadataFromURLReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImportSAMLMetadataFromURLReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewImportSAMLMetadataFromURLNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewImportSAMLMetadataFromURLBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewImportSAMLMetadataFromURLUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewImportSAMLMetadataFromURLForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewImportSAMLMetadataFromURLNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewImportSAMLMetadataFromURLConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewImportSAMLMetadataFromURLUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewImportSAMLMetadataFromURLTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /clients/{cid}/saml/metadata/import/url] importSAMLMetadataFromURL", response, response.Code())
	}
}

// NewImportSAMLMetadataFromURLNoContent creates a ImportSAMLMetadataFromURLNoContent with default headers values
func NewImportSAMLMetadataFromURLNoContent() *ImportSAMLMetadataFromURLNoContent {
	return &ImportSAMLMetadataFromURLNoContent{}
}

/*
ImportSAMLMetadataFromURLNoContent describes a response with status code 204, with default header values.

	metadata has been successfully imported
*/
type ImportSAMLMetadataFromURLNoContent struct {
}

// IsSuccess returns true when this import s a m l metadata from Url no content response has a 2xx status code
func (o *ImportSAMLMetadataFromURLNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this import s a m l metadata from Url no content response has a 3xx status code
func (o *ImportSAMLMetadataFromURLNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url no content response has a 4xx status code
func (o *ImportSAMLMetadataFromURLNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this import s a m l metadata from Url no content response has a 5xx status code
func (o *ImportSAMLMetadataFromURLNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url no content response a status code equal to that given
func (o *ImportSAMLMetadataFromURLNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the import s a m l metadata from Url no content response
func (o *ImportSAMLMetadataFromURLNoContent) Code() int {
	return 204
}

func (o *ImportSAMLMetadataFromURLNoContent) Error() string {
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlNoContent", 204)
}

func (o *ImportSAMLMetadataFromURLNoContent) String() string {
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlNoContent", 204)
}

func (o *ImportSAMLMetadataFromURLNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewImportSAMLMetadataFromURLBadRequest creates a ImportSAMLMetadataFromURLBadRequest with default headers values
func NewImportSAMLMetadataFromURLBadRequest() *ImportSAMLMetadataFromURLBadRequest {
	return &ImportSAMLMetadataFromURLBadRequest{}
}

/*
ImportSAMLMetadataFromURLBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ImportSAMLMetadataFromURLBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url bad request response has a 2xx status code
func (o *ImportSAMLMetadataFromURLBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url bad request response has a 3xx status code
func (o *ImportSAMLMetadataFromURLBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url bad request response has a 4xx status code
func (o *ImportSAMLMetadataFromURLBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url bad request response has a 5xx status code
func (o *ImportSAMLMetadataFromURLBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url bad request response a status code equal to that given
func (o *ImportSAMLMetadataFromURLBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the import s a m l metadata from Url bad request response
func (o *ImportSAMLMetadataFromURLBadRequest) Code() int {
	return 400
}

func (o *ImportSAMLMetadataFromURLBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlBadRequest %s", 400, payload)
}

func (o *ImportSAMLMetadataFromURLBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlBadRequest %s", 400, payload)
}

func (o *ImportSAMLMetadataFromURLBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSAMLMetadataFromURLUnauthorized creates a ImportSAMLMetadataFromURLUnauthorized with default headers values
func NewImportSAMLMetadataFromURLUnauthorized() *ImportSAMLMetadataFromURLUnauthorized {
	return &ImportSAMLMetadataFromURLUnauthorized{}
}

/*
ImportSAMLMetadataFromURLUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ImportSAMLMetadataFromURLUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url unauthorized response has a 2xx status code
func (o *ImportSAMLMetadataFromURLUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url unauthorized response has a 3xx status code
func (o *ImportSAMLMetadataFromURLUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url unauthorized response has a 4xx status code
func (o *ImportSAMLMetadataFromURLUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url unauthorized response has a 5xx status code
func (o *ImportSAMLMetadataFromURLUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url unauthorized response a status code equal to that given
func (o *ImportSAMLMetadataFromURLUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the import s a m l metadata from Url unauthorized response
func (o *ImportSAMLMetadataFromURLUnauthorized) Code() int {
	return 401
}

func (o *ImportSAMLMetadataFromURLUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlUnauthorized %s", 401, payload)
}

func (o *ImportSAMLMetadataFromURLUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlUnauthorized %s", 401, payload)
}

func (o *ImportSAMLMetadataFromURLUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSAMLMetadataFromURLForbidden creates a ImportSAMLMetadataFromURLForbidden with default headers values
func NewImportSAMLMetadataFromURLForbidden() *ImportSAMLMetadataFromURLForbidden {
	return &ImportSAMLMetadataFromURLForbidden{}
}

/*
ImportSAMLMetadataFromURLForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ImportSAMLMetadataFromURLForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url forbidden response has a 2xx status code
func (o *ImportSAMLMetadataFromURLForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url forbidden response has a 3xx status code
func (o *ImportSAMLMetadataFromURLForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url forbidden response has a 4xx status code
func (o *ImportSAMLMetadataFromURLForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url forbidden response has a 5xx status code
func (o *ImportSAMLMetadataFromURLForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url forbidden response a status code equal to that given
func (o *ImportSAMLMetadataFromURLForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the import s a m l metadata from Url forbidden response
func (o *ImportSAMLMetadataFromURLForbidden) Code() int {
	return 403
}

func (o *ImportSAMLMetadataFromURLForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlForbidden %s", 403, payload)
}

func (o *ImportSAMLMetadataFromURLForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlForbidden %s", 403, payload)
}

func (o *ImportSAMLMetadataFromURLForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSAMLMetadataFromURLNotFound creates a ImportSAMLMetadataFromURLNotFound with default headers values
func NewImportSAMLMetadataFromURLNotFound() *ImportSAMLMetadataFromURLNotFound {
	return &ImportSAMLMetadataFromURLNotFound{}
}

/*
ImportSAMLMetadataFromURLNotFound describes a response with status code 404, with default header values.

Not found
*/
type ImportSAMLMetadataFromURLNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url not found response has a 2xx status code
func (o *ImportSAMLMetadataFromURLNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url not found response has a 3xx status code
func (o *ImportSAMLMetadataFromURLNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url not found response has a 4xx status code
func (o *ImportSAMLMetadataFromURLNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url not found response has a 5xx status code
func (o *ImportSAMLMetadataFromURLNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url not found response a status code equal to that given
func (o *ImportSAMLMetadataFromURLNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the import s a m l metadata from Url not found response
func (o *ImportSAMLMetadataFromURLNotFound) Code() int {
	return 404
}

func (o *ImportSAMLMetadataFromURLNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlNotFound %s", 404, payload)
}

func (o *ImportSAMLMetadataFromURLNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlNotFound %s", 404, payload)
}

func (o *ImportSAMLMetadataFromURLNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSAMLMetadataFromURLConflict creates a ImportSAMLMetadataFromURLConflict with default headers values
func NewImportSAMLMetadataFromURLConflict() *ImportSAMLMetadataFromURLConflict {
	return &ImportSAMLMetadataFromURLConflict{}
}

/*
ImportSAMLMetadataFromURLConflict describes a response with status code 409, with default header values.

Conflict
*/
type ImportSAMLMetadataFromURLConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url conflict response has a 2xx status code
func (o *ImportSAMLMetadataFromURLConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url conflict response has a 3xx status code
func (o *ImportSAMLMetadataFromURLConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url conflict response has a 4xx status code
func (o *ImportSAMLMetadataFromURLConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url conflict response has a 5xx status code
func (o *ImportSAMLMetadataFromURLConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url conflict response a status code equal to that given
func (o *ImportSAMLMetadataFromURLConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the import s a m l metadata from Url conflict response
func (o *ImportSAMLMetadataFromURLConflict) Code() int {
	return 409
}

func (o *ImportSAMLMetadataFromURLConflict) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlConflict %s", 409, payload)
}

func (o *ImportSAMLMetadataFromURLConflict) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlConflict %s", 409, payload)
}

func (o *ImportSAMLMetadataFromURLConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSAMLMetadataFromURLUnprocessableEntity creates a ImportSAMLMetadataFromURLUnprocessableEntity with default headers values
func NewImportSAMLMetadataFromURLUnprocessableEntity() *ImportSAMLMetadataFromURLUnprocessableEntity {
	return &ImportSAMLMetadataFromURLUnprocessableEntity{}
}

/*
ImportSAMLMetadataFromURLUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ImportSAMLMetadataFromURLUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url unprocessable entity response has a 2xx status code
func (o *ImportSAMLMetadataFromURLUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url unprocessable entity response has a 3xx status code
func (o *ImportSAMLMetadataFromURLUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url unprocessable entity response has a 4xx status code
func (o *ImportSAMLMetadataFromURLUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url unprocessable entity response has a 5xx status code
func (o *ImportSAMLMetadataFromURLUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url unprocessable entity response a status code equal to that given
func (o *ImportSAMLMetadataFromURLUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the import s a m l metadata from Url unprocessable entity response
func (o *ImportSAMLMetadataFromURLUnprocessableEntity) Code() int {
	return 422
}

func (o *ImportSAMLMetadataFromURLUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlUnprocessableEntity %s", 422, payload)
}

func (o *ImportSAMLMetadataFromURLUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlUnprocessableEntity %s", 422, payload)
}

func (o *ImportSAMLMetadataFromURLUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImportSAMLMetadataFromURLTooManyRequests creates a ImportSAMLMetadataFromURLTooManyRequests with default headers values
func NewImportSAMLMetadataFromURLTooManyRequests() *ImportSAMLMetadataFromURLTooManyRequests {
	return &ImportSAMLMetadataFromURLTooManyRequests{}
}

/*
ImportSAMLMetadataFromURLTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ImportSAMLMetadataFromURLTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this import s a m l metadata from Url too many requests response has a 2xx status code
func (o *ImportSAMLMetadataFromURLTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this import s a m l metadata from Url too many requests response has a 3xx status code
func (o *ImportSAMLMetadataFromURLTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this import s a m l metadata from Url too many requests response has a 4xx status code
func (o *ImportSAMLMetadataFromURLTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this import s a m l metadata from Url too many requests response has a 5xx status code
func (o *ImportSAMLMetadataFromURLTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this import s a m l metadata from Url too many requests response a status code equal to that given
func (o *ImportSAMLMetadataFromURLTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the import s a m l metadata from Url too many requests response
func (o *ImportSAMLMetadataFromURLTooManyRequests) Code() int {
	return 429
}

func (o *ImportSAMLMetadataFromURLTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlTooManyRequests %s", 429, payload)
}

func (o *ImportSAMLMetadataFromURLTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /clients/{cid}/saml/metadata/import/url][%d] importSAMLMetadataFromUrlTooManyRequests %s", 429, payload)
}

func (o *ImportSAMLMetadataFromURLTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ImportSAMLMetadataFromURLTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
