// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetWorkspaceEnvironmentParams creates a new GetWorkspaceEnvironmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetWorkspaceEnvironmentParams() *GetWorkspaceEnvironmentParams {
	return &GetWorkspaceEnvironmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetWorkspaceEnvironmentParamsWithTimeout creates a new GetWorkspaceEnvironmentParams object
// with the ability to set a timeout on a request.
func NewGetWorkspaceEnvironmentParamsWithTimeout(timeout time.Duration) *GetWorkspaceEnvironmentParams {
	return &GetWorkspaceEnvironmentParams{
		timeout: timeout,
	}
}

// NewGetWorkspaceEnvironmentParamsWithContext creates a new GetWorkspaceEnvironmentParams object
// with the ability to set a context for a request.
func NewGetWorkspaceEnvironmentParamsWithContext(ctx context.Context) *GetWorkspaceEnvironmentParams {
	return &GetWorkspaceEnvironmentParams{
		Context: ctx,
	}
}

// NewGetWorkspaceEnvironmentParamsWithHTTPClient creates a new GetWorkspaceEnvironmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetWorkspaceEnvironmentParamsWithHTTPClient(client *http.Client) *GetWorkspaceEnvironmentParams {
	return &GetWorkspaceEnvironmentParams{
		HTTPClient: client,
	}
}

/*
GetWorkspaceEnvironmentParams contains all the parameters to send to the API endpoint

	for the get workspace environment operation.

	Typically these are written to a http.Request.
*/
type GetWorkspaceEnvironmentParams struct {

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	/* Wid.

	   Workspace id

	   Default: "default"
	*/
	Wid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get workspace environment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWorkspaceEnvironmentParams) WithDefaults() *GetWorkspaceEnvironmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get workspace environment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetWorkspaceEnvironmentParams) SetDefaults() {
	var (
		widDefault = string("default")
	)

	val := GetWorkspaceEnvironmentParams{
		Wid: widDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) WithTimeout(timeout time.Duration) *GetWorkspaceEnvironmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) WithContext(ctx context.Context) *GetWorkspaceEnvironmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) WithHTTPClient(client *http.Client) *GetWorkspaceEnvironmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) WithIfMatch(ifMatch *string) *GetWorkspaceEnvironmentParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithWid adds the wid to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) WithWid(wid string) *GetWorkspaceEnvironmentParams {
	o.SetWid(wid)
	return o
}

// SetWid adds the wid to the get workspace environment params
func (o *GetWorkspaceEnvironmentParams) SetWid(wid string) {
	o.Wid = wid
}

// WriteToRequest writes these params to a swagger request
func (o *GetWorkspaceEnvironmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	// path param wid
	if err := r.SetPathParam("wid", o.Wid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
