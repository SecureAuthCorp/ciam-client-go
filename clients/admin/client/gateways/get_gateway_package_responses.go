// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetGatewayPackageReader is a Reader for the GetGatewayPackage structure.
type GetGatewayPackageReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *GetGatewayPackageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGatewayPackageOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGatewayPackageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGatewayPackageUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGatewayPackageForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGatewayPackageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGatewayPackageTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGatewayPackageOK creates a GetGatewayPackageOK with default headers values
func NewGetGatewayPackageOK(writer io.Writer) *GetGatewayPackageOK {
	return &GetGatewayPackageOK{

		Payload: writer,
	}
}

/*
GetGatewayPackageOK describes a response with status code 200, with default header values.

Gateway package
*/
type GetGatewayPackageOK struct {
	Payload io.Writer
}

// IsSuccess returns true when this get gateway package o k response has a 2xx status code
func (o *GetGatewayPackageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get gateway package o k response has a 3xx status code
func (o *GetGatewayPackageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway package o k response has a 4xx status code
func (o *GetGatewayPackageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get gateway package o k response has a 5xx status code
func (o *GetGatewayPackageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway package o k response a status code equal to that given
func (o *GetGatewayPackageOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetGatewayPackageOK) Error() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageOK  %+v", 200, o.Payload)
}

func (o *GetGatewayPackageOK) String() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageOK  %+v", 200, o.Payload)
}

func (o *GetGatewayPackageOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *GetGatewayPackageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayPackageBadRequest creates a GetGatewayPackageBadRequest with default headers values
func NewGetGatewayPackageBadRequest() *GetGatewayPackageBadRequest {
	return &GetGatewayPackageBadRequest{}
}

/*
GetGatewayPackageBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type GetGatewayPackageBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway package bad request response has a 2xx status code
func (o *GetGatewayPackageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway package bad request response has a 3xx status code
func (o *GetGatewayPackageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway package bad request response has a 4xx status code
func (o *GetGatewayPackageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway package bad request response has a 5xx status code
func (o *GetGatewayPackageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway package bad request response a status code equal to that given
func (o *GetGatewayPackageBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetGatewayPackageBadRequest) Error() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageBadRequest  %+v", 400, o.Payload)
}

func (o *GetGatewayPackageBadRequest) String() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageBadRequest  %+v", 400, o.Payload)
}

func (o *GetGatewayPackageBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayPackageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayPackageUnauthorized creates a GetGatewayPackageUnauthorized with default headers values
func NewGetGatewayPackageUnauthorized() *GetGatewayPackageUnauthorized {
	return &GetGatewayPackageUnauthorized{}
}

/*
GetGatewayPackageUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type GetGatewayPackageUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway package unauthorized response has a 2xx status code
func (o *GetGatewayPackageUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway package unauthorized response has a 3xx status code
func (o *GetGatewayPackageUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway package unauthorized response has a 4xx status code
func (o *GetGatewayPackageUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway package unauthorized response has a 5xx status code
func (o *GetGatewayPackageUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway package unauthorized response a status code equal to that given
func (o *GetGatewayPackageUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetGatewayPackageUnauthorized) Error() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGatewayPackageUnauthorized) String() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageUnauthorized  %+v", 401, o.Payload)
}

func (o *GetGatewayPackageUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayPackageUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayPackageForbidden creates a GetGatewayPackageForbidden with default headers values
func NewGetGatewayPackageForbidden() *GetGatewayPackageForbidden {
	return &GetGatewayPackageForbidden{}
}

/*
GetGatewayPackageForbidden describes a response with status code 403, with default header values.

HttpError
*/
type GetGatewayPackageForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway package forbidden response has a 2xx status code
func (o *GetGatewayPackageForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway package forbidden response has a 3xx status code
func (o *GetGatewayPackageForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway package forbidden response has a 4xx status code
func (o *GetGatewayPackageForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway package forbidden response has a 5xx status code
func (o *GetGatewayPackageForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway package forbidden response a status code equal to that given
func (o *GetGatewayPackageForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *GetGatewayPackageForbidden) Error() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageForbidden  %+v", 403, o.Payload)
}

func (o *GetGatewayPackageForbidden) String() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageForbidden  %+v", 403, o.Payload)
}

func (o *GetGatewayPackageForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayPackageForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayPackageNotFound creates a GetGatewayPackageNotFound with default headers values
func NewGetGatewayPackageNotFound() *GetGatewayPackageNotFound {
	return &GetGatewayPackageNotFound{}
}

/*
GetGatewayPackageNotFound describes a response with status code 404, with default header values.

HttpError
*/
type GetGatewayPackageNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway package not found response has a 2xx status code
func (o *GetGatewayPackageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway package not found response has a 3xx status code
func (o *GetGatewayPackageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway package not found response has a 4xx status code
func (o *GetGatewayPackageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway package not found response has a 5xx status code
func (o *GetGatewayPackageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway package not found response a status code equal to that given
func (o *GetGatewayPackageNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetGatewayPackageNotFound) Error() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageNotFound  %+v", 404, o.Payload)
}

func (o *GetGatewayPackageNotFound) String() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageNotFound  %+v", 404, o.Payload)
}

func (o *GetGatewayPackageNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayPackageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayPackageTooManyRequests creates a GetGatewayPackageTooManyRequests with default headers values
func NewGetGatewayPackageTooManyRequests() *GetGatewayPackageTooManyRequests {
	return &GetGatewayPackageTooManyRequests{}
}

/*
GetGatewayPackageTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type GetGatewayPackageTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get gateway package too many requests response has a 2xx status code
func (o *GetGatewayPackageTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get gateway package too many requests response has a 3xx status code
func (o *GetGatewayPackageTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get gateway package too many requests response has a 4xx status code
func (o *GetGatewayPackageTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get gateway package too many requests response has a 5xx status code
func (o *GetGatewayPackageTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get gateway package too many requests response a status code equal to that given
func (o *GetGatewayPackageTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GetGatewayPackageTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGatewayPackageTooManyRequests) String() string {
	return fmt.Sprintf("[GET /gateways/{gw}/package][%d] getGatewayPackageTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetGatewayPackageTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetGatewayPackageTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
