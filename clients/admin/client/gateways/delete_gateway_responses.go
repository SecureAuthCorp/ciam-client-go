// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteGatewayReader is a Reader for the DeleteGateway structure.
type DeleteGatewayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGatewayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteGatewayNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteGatewayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteGatewayForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGatewayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteGatewayTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /gateways/{gw}] deleteGateway", response, response.Code())
	}
}

// NewDeleteGatewayNoContent creates a DeleteGatewayNoContent with default headers values
func NewDeleteGatewayNoContent() *DeleteGatewayNoContent {
	return &DeleteGatewayNoContent{}
}

/*
DeleteGatewayNoContent describes a response with status code 204, with default header values.

	Gateway has been deleted
*/
type DeleteGatewayNoContent struct {
}

// IsSuccess returns true when this delete gateway no content response has a 2xx status code
func (o *DeleteGatewayNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete gateway no content response has a 3xx status code
func (o *DeleteGatewayNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gateway no content response has a 4xx status code
func (o *DeleteGatewayNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete gateway no content response has a 5xx status code
func (o *DeleteGatewayNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gateway no content response a status code equal to that given
func (o *DeleteGatewayNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete gateway no content response
func (o *DeleteGatewayNoContent) Code() int {
	return 204
}

func (o *DeleteGatewayNoContent) Error() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayNoContent ", 204)
}

func (o *DeleteGatewayNoContent) String() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayNoContent ", 204)
}

func (o *DeleteGatewayNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteGatewayUnauthorized creates a DeleteGatewayUnauthorized with default headers values
func NewDeleteGatewayUnauthorized() *DeleteGatewayUnauthorized {
	return &DeleteGatewayUnauthorized{}
}

/*
DeleteGatewayUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteGatewayUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete gateway unauthorized response has a 2xx status code
func (o *DeleteGatewayUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gateway unauthorized response has a 3xx status code
func (o *DeleteGatewayUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gateway unauthorized response has a 4xx status code
func (o *DeleteGatewayUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete gateway unauthorized response has a 5xx status code
func (o *DeleteGatewayUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gateway unauthorized response a status code equal to that given
func (o *DeleteGatewayUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete gateway unauthorized response
func (o *DeleteGatewayUnauthorized) Code() int {
	return 401
}

func (o *DeleteGatewayUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGatewayUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteGatewayUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGatewayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGatewayForbidden creates a DeleteGatewayForbidden with default headers values
func NewDeleteGatewayForbidden() *DeleteGatewayForbidden {
	return &DeleteGatewayForbidden{}
}

/*
DeleteGatewayForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteGatewayForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete gateway forbidden response has a 2xx status code
func (o *DeleteGatewayForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gateway forbidden response has a 3xx status code
func (o *DeleteGatewayForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gateway forbidden response has a 4xx status code
func (o *DeleteGatewayForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete gateway forbidden response has a 5xx status code
func (o *DeleteGatewayForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gateway forbidden response a status code equal to that given
func (o *DeleteGatewayForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete gateway forbidden response
func (o *DeleteGatewayForbidden) Code() int {
	return 403
}

func (o *DeleteGatewayForbidden) Error() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGatewayForbidden) String() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayForbidden  %+v", 403, o.Payload)
}

func (o *DeleteGatewayForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGatewayForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGatewayNotFound creates a DeleteGatewayNotFound with default headers values
func NewDeleteGatewayNotFound() *DeleteGatewayNotFound {
	return &DeleteGatewayNotFound{}
}

/*
DeleteGatewayNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteGatewayNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete gateway not found response has a 2xx status code
func (o *DeleteGatewayNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gateway not found response has a 3xx status code
func (o *DeleteGatewayNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gateway not found response has a 4xx status code
func (o *DeleteGatewayNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete gateway not found response has a 5xx status code
func (o *DeleteGatewayNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gateway not found response a status code equal to that given
func (o *DeleteGatewayNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete gateway not found response
func (o *DeleteGatewayNotFound) Code() int {
	return 404
}

func (o *DeleteGatewayNotFound) Error() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGatewayNotFound) String() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayNotFound  %+v", 404, o.Payload)
}

func (o *DeleteGatewayNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGatewayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGatewayTooManyRequests creates a DeleteGatewayTooManyRequests with default headers values
func NewDeleteGatewayTooManyRequests() *DeleteGatewayTooManyRequests {
	return &DeleteGatewayTooManyRequests{}
}

/*
DeleteGatewayTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteGatewayTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete gateway too many requests response has a 2xx status code
func (o *DeleteGatewayTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete gateway too many requests response has a 3xx status code
func (o *DeleteGatewayTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete gateway too many requests response has a 4xx status code
func (o *DeleteGatewayTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete gateway too many requests response has a 5xx status code
func (o *DeleteGatewayTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete gateway too many requests response a status code equal to that given
func (o *DeleteGatewayTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete gateway too many requests response
func (o *DeleteGatewayTooManyRequests) Code() int {
	return 429
}

func (o *DeleteGatewayTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteGatewayTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /gateways/{gw}][%d] deleteGatewayTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteGatewayTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteGatewayTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
