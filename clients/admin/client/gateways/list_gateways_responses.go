// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListGatewaysReader is a Reader for the ListGateways structure.
type ListGatewaysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListGatewaysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListGatewaysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListGatewaysUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListGatewaysForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListGatewaysTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/gateways] listGateways", response, response.Code())
	}
}

// NewListGatewaysOK creates a ListGatewaysOK with default headers values
func NewListGatewaysOK() *ListGatewaysOK {
	return &ListGatewaysOK{}
}

/*
ListGatewaysOK describes a response with status code 200, with default header values.

Gateways
*/
type ListGatewaysOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.Gateways
}

// IsSuccess returns true when this list gateways o k response has a 2xx status code
func (o *ListGatewaysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list gateways o k response has a 3xx status code
func (o *ListGatewaysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list gateways o k response has a 4xx status code
func (o *ListGatewaysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list gateways o k response has a 5xx status code
func (o *ListGatewaysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list gateways o k response a status code equal to that given
func (o *ListGatewaysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list gateways o k response
func (o *ListGatewaysOK) Code() int {
	return 200
}

func (o *ListGatewaysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysOK %s", 200, payload)
}

func (o *ListGatewaysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysOK %s", 200, payload)
}

func (o *ListGatewaysOK) GetPayload() *models.Gateways {
	return o.Payload
}

func (o *ListGatewaysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.Gateways)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGatewaysUnauthorized creates a ListGatewaysUnauthorized with default headers values
func NewListGatewaysUnauthorized() *ListGatewaysUnauthorized {
	return &ListGatewaysUnauthorized{}
}

/*
ListGatewaysUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListGatewaysUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list gateways unauthorized response has a 2xx status code
func (o *ListGatewaysUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list gateways unauthorized response has a 3xx status code
func (o *ListGatewaysUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list gateways unauthorized response has a 4xx status code
func (o *ListGatewaysUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list gateways unauthorized response has a 5xx status code
func (o *ListGatewaysUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list gateways unauthorized response a status code equal to that given
func (o *ListGatewaysUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list gateways unauthorized response
func (o *ListGatewaysUnauthorized) Code() int {
	return 401
}

func (o *ListGatewaysUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysUnauthorized %s", 401, payload)
}

func (o *ListGatewaysUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysUnauthorized %s", 401, payload)
}

func (o *ListGatewaysUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListGatewaysUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGatewaysForbidden creates a ListGatewaysForbidden with default headers values
func NewListGatewaysForbidden() *ListGatewaysForbidden {
	return &ListGatewaysForbidden{}
}

/*
ListGatewaysForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListGatewaysForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list gateways forbidden response has a 2xx status code
func (o *ListGatewaysForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list gateways forbidden response has a 3xx status code
func (o *ListGatewaysForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list gateways forbidden response has a 4xx status code
func (o *ListGatewaysForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list gateways forbidden response has a 5xx status code
func (o *ListGatewaysForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list gateways forbidden response a status code equal to that given
func (o *ListGatewaysForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list gateways forbidden response
func (o *ListGatewaysForbidden) Code() int {
	return 403
}

func (o *ListGatewaysForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysForbidden %s", 403, payload)
}

func (o *ListGatewaysForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysForbidden %s", 403, payload)
}

func (o *ListGatewaysForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListGatewaysForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListGatewaysTooManyRequests creates a ListGatewaysTooManyRequests with default headers values
func NewListGatewaysTooManyRequests() *ListGatewaysTooManyRequests {
	return &ListGatewaysTooManyRequests{}
}

/*
ListGatewaysTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListGatewaysTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list gateways too many requests response has a 2xx status code
func (o *ListGatewaysTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list gateways too many requests response has a 3xx status code
func (o *ListGatewaysTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list gateways too many requests response has a 4xx status code
func (o *ListGatewaysTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list gateways too many requests response has a 5xx status code
func (o *ListGatewaysTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list gateways too many requests response a status code equal to that given
func (o *ListGatewaysTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list gateways too many requests response
func (o *ListGatewaysTooManyRequests) Code() int {
	return 429
}

func (o *ListGatewaysTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysTooManyRequests %s", 429, payload)
}

func (o *ListGatewaysTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/gateways][%d] listGatewaysTooManyRequests %s", 429, payload)
}

func (o *ListGatewaysTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListGatewaysTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
