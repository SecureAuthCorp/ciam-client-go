// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListUserOrganizationsReader is a Reader for the ListUserOrganizations structure.
type ListUserOrganizationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserOrganizationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserOrganizationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserOrganizationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserOrganizationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserOrganizationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserOrganizationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /user/organizations] listUserOrganizations", response, response.Code())
	}
}

// NewListUserOrganizationsOK creates a ListUserOrganizationsOK with default headers values
func NewListUserOrganizationsOK() *ListUserOrganizationsOK {
	return &ListUserOrganizationsOK{}
}

/*
ListUserOrganizationsOK describes a response with status code 200, with default header values.

User orgs
*/
type ListUserOrganizationsOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.UserOrganizationsResponse
}

// IsSuccess returns true when this list user organizations o k response has a 2xx status code
func (o *ListUserOrganizationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user organizations o k response has a 3xx status code
func (o *ListUserOrganizationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user organizations o k response has a 4xx status code
func (o *ListUserOrganizationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user organizations o k response has a 5xx status code
func (o *ListUserOrganizationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user organizations o k response a status code equal to that given
func (o *ListUserOrganizationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user organizations o k response
func (o *ListUserOrganizationsOK) Code() int {
	return 200
}

func (o *ListUserOrganizationsOK) Error() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsOK  %+v", 200, o.Payload)
}

func (o *ListUserOrganizationsOK) String() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsOK  %+v", 200, o.Payload)
}

func (o *ListUserOrganizationsOK) GetPayload() *models.UserOrganizationsResponse {
	return o.Payload
}

func (o *ListUserOrganizationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.UserOrganizationsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserOrganizationsUnauthorized creates a ListUserOrganizationsUnauthorized with default headers values
func NewListUserOrganizationsUnauthorized() *ListUserOrganizationsUnauthorized {
	return &ListUserOrganizationsUnauthorized{}
}

/*
ListUserOrganizationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserOrganizationsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user organizations unauthorized response has a 2xx status code
func (o *ListUserOrganizationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user organizations unauthorized response has a 3xx status code
func (o *ListUserOrganizationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user organizations unauthorized response has a 4xx status code
func (o *ListUserOrganizationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user organizations unauthorized response has a 5xx status code
func (o *ListUserOrganizationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user organizations unauthorized response a status code equal to that given
func (o *ListUserOrganizationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user organizations unauthorized response
func (o *ListUserOrganizationsUnauthorized) Code() int {
	return 401
}

func (o *ListUserOrganizationsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserOrganizationsUnauthorized) String() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserOrganizationsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserOrganizationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserOrganizationsForbidden creates a ListUserOrganizationsForbidden with default headers values
func NewListUserOrganizationsForbidden() *ListUserOrganizationsForbidden {
	return &ListUserOrganizationsForbidden{}
}

/*
ListUserOrganizationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserOrganizationsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user organizations forbidden response has a 2xx status code
func (o *ListUserOrganizationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user organizations forbidden response has a 3xx status code
func (o *ListUserOrganizationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user organizations forbidden response has a 4xx status code
func (o *ListUserOrganizationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user organizations forbidden response has a 5xx status code
func (o *ListUserOrganizationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user organizations forbidden response a status code equal to that given
func (o *ListUserOrganizationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user organizations forbidden response
func (o *ListUserOrganizationsForbidden) Code() int {
	return 403
}

func (o *ListUserOrganizationsForbidden) Error() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *ListUserOrganizationsForbidden) String() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsForbidden  %+v", 403, o.Payload)
}

func (o *ListUserOrganizationsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserOrganizationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserOrganizationsNotFound creates a ListUserOrganizationsNotFound with default headers values
func NewListUserOrganizationsNotFound() *ListUserOrganizationsNotFound {
	return &ListUserOrganizationsNotFound{}
}

/*
ListUserOrganizationsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUserOrganizationsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user organizations not found response has a 2xx status code
func (o *ListUserOrganizationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user organizations not found response has a 3xx status code
func (o *ListUserOrganizationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user organizations not found response has a 4xx status code
func (o *ListUserOrganizationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user organizations not found response has a 5xx status code
func (o *ListUserOrganizationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user organizations not found response a status code equal to that given
func (o *ListUserOrganizationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user organizations not found response
func (o *ListUserOrganizationsNotFound) Code() int {
	return 404
}

func (o *ListUserOrganizationsNotFound) Error() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *ListUserOrganizationsNotFound) String() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsNotFound  %+v", 404, o.Payload)
}

func (o *ListUserOrganizationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserOrganizationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserOrganizationsTooManyRequests creates a ListUserOrganizationsTooManyRequests with default headers values
func NewListUserOrganizationsTooManyRequests() *ListUserOrganizationsTooManyRequests {
	return &ListUserOrganizationsTooManyRequests{}
}

/*
ListUserOrganizationsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUserOrganizationsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user organizations too many requests response has a 2xx status code
func (o *ListUserOrganizationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user organizations too many requests response has a 3xx status code
func (o *ListUserOrganizationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user organizations too many requests response has a 4xx status code
func (o *ListUserOrganizationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user organizations too many requests response has a 5xx status code
func (o *ListUserOrganizationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user organizations too many requests response a status code equal to that given
func (o *ListUserOrganizationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list user organizations too many requests response
func (o *ListUserOrganizationsTooManyRequests) Code() int {
	return 429
}

func (o *ListUserOrganizationsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserOrganizationsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /user/organizations][%d] listUserOrganizationsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserOrganizationsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserOrganizationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
