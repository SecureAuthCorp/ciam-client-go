// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListScriptsReader is a Reader for the ListScripts structure.
type ListScriptsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListScriptsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListScriptsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListScriptsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListScriptsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListScriptsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListScriptsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListScriptsOK creates a ListScriptsOK with default headers values
func NewListScriptsOK() *ListScriptsOK {
	return &ListScriptsOK{}
}

/*
ListScriptsOK describes a response with status code 200, with default header values.

Scripts
*/
type ListScriptsOK struct {
	Payload *models.Scripts
}

// IsSuccess returns true when this list scripts o k response has a 2xx status code
func (o *ListScriptsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list scripts o k response has a 3xx status code
func (o *ListScriptsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scripts o k response has a 4xx status code
func (o *ListScriptsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list scripts o k response has a 5xx status code
func (o *ListScriptsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list scripts o k response a status code equal to that given
func (o *ListScriptsOK) IsCode(code int) bool {
	return code == 200
}

func (o *ListScriptsOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsOK  %+v", 200, o.Payload)
}

func (o *ListScriptsOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsOK  %+v", 200, o.Payload)
}

func (o *ListScriptsOK) GetPayload() *models.Scripts {
	return o.Payload
}

func (o *ListScriptsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Scripts)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScriptsBadRequest creates a ListScriptsBadRequest with default headers values
func NewListScriptsBadRequest() *ListScriptsBadRequest {
	return &ListScriptsBadRequest{}
}

/*
ListScriptsBadRequest describes a response with status code 400, with default header values.

HttpError
*/
type ListScriptsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list scripts bad request response has a 2xx status code
func (o *ListScriptsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scripts bad request response has a 3xx status code
func (o *ListScriptsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scripts bad request response has a 4xx status code
func (o *ListScriptsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scripts bad request response has a 5xx status code
func (o *ListScriptsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list scripts bad request response a status code equal to that given
func (o *ListScriptsBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ListScriptsBadRequest) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsBadRequest  %+v", 400, o.Payload)
}

func (o *ListScriptsBadRequest) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsBadRequest  %+v", 400, o.Payload)
}

func (o *ListScriptsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListScriptsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScriptsUnauthorized creates a ListScriptsUnauthorized with default headers values
func NewListScriptsUnauthorized() *ListScriptsUnauthorized {
	return &ListScriptsUnauthorized{}
}

/*
ListScriptsUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type ListScriptsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list scripts unauthorized response has a 2xx status code
func (o *ListScriptsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scripts unauthorized response has a 3xx status code
func (o *ListScriptsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scripts unauthorized response has a 4xx status code
func (o *ListScriptsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scripts unauthorized response has a 5xx status code
func (o *ListScriptsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list scripts unauthorized response a status code equal to that given
func (o *ListScriptsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *ListScriptsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListScriptsUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListScriptsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListScriptsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScriptsForbidden creates a ListScriptsForbidden with default headers values
func NewListScriptsForbidden() *ListScriptsForbidden {
	return &ListScriptsForbidden{}
}

/*
ListScriptsForbidden describes a response with status code 403, with default header values.

HttpError
*/
type ListScriptsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list scripts forbidden response has a 2xx status code
func (o *ListScriptsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scripts forbidden response has a 3xx status code
func (o *ListScriptsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scripts forbidden response has a 4xx status code
func (o *ListScriptsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scripts forbidden response has a 5xx status code
func (o *ListScriptsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list scripts forbidden response a status code equal to that given
func (o *ListScriptsForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *ListScriptsForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsForbidden  %+v", 403, o.Payload)
}

func (o *ListScriptsForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsForbidden  %+v", 403, o.Payload)
}

func (o *ListScriptsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListScriptsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListScriptsTooManyRequests creates a ListScriptsTooManyRequests with default headers values
func NewListScriptsTooManyRequests() *ListScriptsTooManyRequests {
	return &ListScriptsTooManyRequests{}
}

/*
ListScriptsTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type ListScriptsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list scripts too many requests response has a 2xx status code
func (o *ListScriptsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list scripts too many requests response has a 3xx status code
func (o *ListScriptsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list scripts too many requests response has a 4xx status code
func (o *ListScriptsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list scripts too many requests response has a 5xx status code
func (o *ListScriptsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list scripts too many requests response a status code equal to that given
func (o *ListScriptsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *ListScriptsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListScriptsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/scripts][%d] listScriptsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListScriptsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListScriptsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
