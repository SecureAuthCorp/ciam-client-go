// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// SetScriptExecutionPointsReader is a Reader for the SetScriptExecutionPoints structure.
type SetScriptExecutionPointsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetScriptExecutionPointsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetScriptExecutionPointsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetScriptExecutionPointsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSetScriptExecutionPointsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetScriptExecutionPointsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetScriptExecutionPointsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewSetScriptExecutionPointsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetScriptExecutionPointsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSetScriptExecutionPointsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /servers/{wid}/script-execution-points] setScriptExecutionPoints", response, response.Code())
	}
}

// NewSetScriptExecutionPointsOK creates a SetScriptExecutionPointsOK with default headers values
func NewSetScriptExecutionPointsOK() *SetScriptExecutionPointsOK {
	return &SetScriptExecutionPointsOK{}
}

/*
SetScriptExecutionPointsOK describes a response with status code 200, with default header values.

Script execution points
*/
type SetScriptExecutionPointsOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.ScriptExecutionPoints
}

// IsSuccess returns true when this set script execution points o k response has a 2xx status code
func (o *SetScriptExecutionPointsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set script execution points o k response has a 3xx status code
func (o *SetScriptExecutionPointsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points o k response has a 4xx status code
func (o *SetScriptExecutionPointsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set script execution points o k response has a 5xx status code
func (o *SetScriptExecutionPointsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points o k response a status code equal to that given
func (o *SetScriptExecutionPointsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set script execution points o k response
func (o *SetScriptExecutionPointsOK) Code() int {
	return 200
}

func (o *SetScriptExecutionPointsOK) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsOK  %+v", 200, o.Payload)
}

func (o *SetScriptExecutionPointsOK) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsOK  %+v", 200, o.Payload)
}

func (o *SetScriptExecutionPointsOK) GetPayload() *models.ScriptExecutionPoints {
	return o.Payload
}

func (o *SetScriptExecutionPointsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.ScriptExecutionPoints)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsBadRequest creates a SetScriptExecutionPointsBadRequest with default headers values
func NewSetScriptExecutionPointsBadRequest() *SetScriptExecutionPointsBadRequest {
	return &SetScriptExecutionPointsBadRequest{}
}

/*
SetScriptExecutionPointsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SetScriptExecutionPointsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points bad request response has a 2xx status code
func (o *SetScriptExecutionPointsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points bad request response has a 3xx status code
func (o *SetScriptExecutionPointsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points bad request response has a 4xx status code
func (o *SetScriptExecutionPointsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points bad request response has a 5xx status code
func (o *SetScriptExecutionPointsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points bad request response a status code equal to that given
func (o *SetScriptExecutionPointsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set script execution points bad request response
func (o *SetScriptExecutionPointsBadRequest) Code() int {
	return 400
}

func (o *SetScriptExecutionPointsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsBadRequest  %+v", 400, o.Payload)
}

func (o *SetScriptExecutionPointsBadRequest) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsBadRequest  %+v", 400, o.Payload)
}

func (o *SetScriptExecutionPointsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsUnauthorized creates a SetScriptExecutionPointsUnauthorized with default headers values
func NewSetScriptExecutionPointsUnauthorized() *SetScriptExecutionPointsUnauthorized {
	return &SetScriptExecutionPointsUnauthorized{}
}

/*
SetScriptExecutionPointsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetScriptExecutionPointsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points unauthorized response has a 2xx status code
func (o *SetScriptExecutionPointsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points unauthorized response has a 3xx status code
func (o *SetScriptExecutionPointsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points unauthorized response has a 4xx status code
func (o *SetScriptExecutionPointsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points unauthorized response has a 5xx status code
func (o *SetScriptExecutionPointsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points unauthorized response a status code equal to that given
func (o *SetScriptExecutionPointsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set script execution points unauthorized response
func (o *SetScriptExecutionPointsUnauthorized) Code() int {
	return 401
}

func (o *SetScriptExecutionPointsUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsUnauthorized  %+v", 401, o.Payload)
}

func (o *SetScriptExecutionPointsUnauthorized) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsUnauthorized  %+v", 401, o.Payload)
}

func (o *SetScriptExecutionPointsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsForbidden creates a SetScriptExecutionPointsForbidden with default headers values
func NewSetScriptExecutionPointsForbidden() *SetScriptExecutionPointsForbidden {
	return &SetScriptExecutionPointsForbidden{}
}

/*
SetScriptExecutionPointsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetScriptExecutionPointsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points forbidden response has a 2xx status code
func (o *SetScriptExecutionPointsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points forbidden response has a 3xx status code
func (o *SetScriptExecutionPointsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points forbidden response has a 4xx status code
func (o *SetScriptExecutionPointsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points forbidden response has a 5xx status code
func (o *SetScriptExecutionPointsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points forbidden response a status code equal to that given
func (o *SetScriptExecutionPointsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set script execution points forbidden response
func (o *SetScriptExecutionPointsForbidden) Code() int {
	return 403
}

func (o *SetScriptExecutionPointsForbidden) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsForbidden  %+v", 403, o.Payload)
}

func (o *SetScriptExecutionPointsForbidden) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsForbidden  %+v", 403, o.Payload)
}

func (o *SetScriptExecutionPointsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsNotFound creates a SetScriptExecutionPointsNotFound with default headers values
func NewSetScriptExecutionPointsNotFound() *SetScriptExecutionPointsNotFound {
	return &SetScriptExecutionPointsNotFound{}
}

/*
SetScriptExecutionPointsNotFound describes a response with status code 404, with default header values.

Not found
*/
type SetScriptExecutionPointsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points not found response has a 2xx status code
func (o *SetScriptExecutionPointsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points not found response has a 3xx status code
func (o *SetScriptExecutionPointsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points not found response has a 4xx status code
func (o *SetScriptExecutionPointsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points not found response has a 5xx status code
func (o *SetScriptExecutionPointsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points not found response a status code equal to that given
func (o *SetScriptExecutionPointsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set script execution points not found response
func (o *SetScriptExecutionPointsNotFound) Code() int {
	return 404
}

func (o *SetScriptExecutionPointsNotFound) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsNotFound  %+v", 404, o.Payload)
}

func (o *SetScriptExecutionPointsNotFound) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsNotFound  %+v", 404, o.Payload)
}

func (o *SetScriptExecutionPointsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsConflict creates a SetScriptExecutionPointsConflict with default headers values
func NewSetScriptExecutionPointsConflict() *SetScriptExecutionPointsConflict {
	return &SetScriptExecutionPointsConflict{}
}

/*
SetScriptExecutionPointsConflict describes a response with status code 409, with default header values.

Conflict
*/
type SetScriptExecutionPointsConflict struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points conflict response has a 2xx status code
func (o *SetScriptExecutionPointsConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points conflict response has a 3xx status code
func (o *SetScriptExecutionPointsConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points conflict response has a 4xx status code
func (o *SetScriptExecutionPointsConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points conflict response has a 5xx status code
func (o *SetScriptExecutionPointsConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points conflict response a status code equal to that given
func (o *SetScriptExecutionPointsConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the set script execution points conflict response
func (o *SetScriptExecutionPointsConflict) Code() int {
	return 409
}

func (o *SetScriptExecutionPointsConflict) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsConflict  %+v", 409, o.Payload)
}

func (o *SetScriptExecutionPointsConflict) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsConflict  %+v", 409, o.Payload)
}

func (o *SetScriptExecutionPointsConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsUnprocessableEntity creates a SetScriptExecutionPointsUnprocessableEntity with default headers values
func NewSetScriptExecutionPointsUnprocessableEntity() *SetScriptExecutionPointsUnprocessableEntity {
	return &SetScriptExecutionPointsUnprocessableEntity{}
}

/*
SetScriptExecutionPointsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type SetScriptExecutionPointsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points unprocessable entity response has a 2xx status code
func (o *SetScriptExecutionPointsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points unprocessable entity response has a 3xx status code
func (o *SetScriptExecutionPointsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points unprocessable entity response has a 4xx status code
func (o *SetScriptExecutionPointsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points unprocessable entity response has a 5xx status code
func (o *SetScriptExecutionPointsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points unprocessable entity response a status code equal to that given
func (o *SetScriptExecutionPointsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set script execution points unprocessable entity response
func (o *SetScriptExecutionPointsUnprocessableEntity) Code() int {
	return 422
}

func (o *SetScriptExecutionPointsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SetScriptExecutionPointsUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *SetScriptExecutionPointsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetScriptExecutionPointsTooManyRequests creates a SetScriptExecutionPointsTooManyRequests with default headers values
func NewSetScriptExecutionPointsTooManyRequests() *SetScriptExecutionPointsTooManyRequests {
	return &SetScriptExecutionPointsTooManyRequests{}
}

/*
SetScriptExecutionPointsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SetScriptExecutionPointsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this set script execution points too many requests response has a 2xx status code
func (o *SetScriptExecutionPointsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set script execution points too many requests response has a 3xx status code
func (o *SetScriptExecutionPointsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set script execution points too many requests response has a 4xx status code
func (o *SetScriptExecutionPointsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this set script execution points too many requests response has a 5xx status code
func (o *SetScriptExecutionPointsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this set script execution points too many requests response a status code equal to that given
func (o *SetScriptExecutionPointsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the set script execution points too many requests response
func (o *SetScriptExecutionPointsTooManyRequests) Code() int {
	return 429
}

func (o *SetScriptExecutionPointsTooManyRequests) Error() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetScriptExecutionPointsTooManyRequests) String() string {
	return fmt.Sprintf("[PUT /servers/{wid}/script-execution-points][%d] setScriptExecutionPointsTooManyRequests  %+v", 429, o.Payload)
}

func (o *SetScriptExecutionPointsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetScriptExecutionPointsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
