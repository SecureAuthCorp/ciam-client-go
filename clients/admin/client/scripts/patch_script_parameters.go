// Code generated by go-swagger; DO NOT EDIT.

package scripts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// NewPatchScriptParams creates a new PatchScriptParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPatchScriptParams() *PatchScriptParams {
	return &PatchScriptParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPatchScriptParamsWithTimeout creates a new PatchScriptParams object
// with the ability to set a timeout on a request.
func NewPatchScriptParamsWithTimeout(timeout time.Duration) *PatchScriptParams {
	return &PatchScriptParams{
		timeout: timeout,
	}
}

// NewPatchScriptParamsWithContext creates a new PatchScriptParams object
// with the ability to set a context for a request.
func NewPatchScriptParamsWithContext(ctx context.Context) *PatchScriptParams {
	return &PatchScriptParams{
		Context: ctx,
	}
}

// NewPatchScriptParamsWithHTTPClient creates a new PatchScriptParams object
// with the ability to set a custom HTTPClient for a request.
func NewPatchScriptParamsWithHTTPClient(client *http.Client) *PatchScriptParams {
	return &PatchScriptParams{
		HTTPClient: client,
	}
}

/*
PatchScriptParams contains all the parameters to send to the API endpoint

	for the patch script operation.

	Typically these are written to a http.Request.
*/
type PatchScriptParams struct {

	/* Patch.

	   Patch spec in RFC6902 JSON format
	*/
	Patch models.Rfc6902PatchOperations

	/* Script.

	   ID of the script to be updated
	*/
	Script string

	/* Wid.

	   ID of your authorization server (workspace)

	   Default: "default"
	*/
	Wid string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the patch script params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchScriptParams) WithDefaults() *PatchScriptParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the patch script params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PatchScriptParams) SetDefaults() {
	var (
		widDefault = string("default")
	)

	val := PatchScriptParams{
		Wid: widDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the patch script params
func (o *PatchScriptParams) WithTimeout(timeout time.Duration) *PatchScriptParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch script params
func (o *PatchScriptParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch script params
func (o *PatchScriptParams) WithContext(ctx context.Context) *PatchScriptParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch script params
func (o *PatchScriptParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch script params
func (o *PatchScriptParams) WithHTTPClient(client *http.Client) *PatchScriptParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch script params
func (o *PatchScriptParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPatch adds the patch to the patch script params
func (o *PatchScriptParams) WithPatch(patch models.Rfc6902PatchOperations) *PatchScriptParams {
	o.SetPatch(patch)
	return o
}

// SetPatch adds the patch to the patch script params
func (o *PatchScriptParams) SetPatch(patch models.Rfc6902PatchOperations) {
	o.Patch = patch
}

// WithScript adds the script to the patch script params
func (o *PatchScriptParams) WithScript(script string) *PatchScriptParams {
	o.SetScript(script)
	return o
}

// SetScript adds the script to the patch script params
func (o *PatchScriptParams) SetScript(script string) {
	o.Script = script
}

// WithWid adds the wid to the patch script params
func (o *PatchScriptParams) WithWid(wid string) *PatchScriptParams {
	o.SetWid(wid)
	return o
}

// SetWid adds the wid to the patch script params
func (o *PatchScriptParams) SetWid(wid string) {
	o.Wid = wid
}

// WriteToRequest writes these params to a swagger request
func (o *PatchScriptParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Patch != nil {
		if err := r.SetBodyParam(o.Patch); err != nil {
			return err
		}
	}

	// path param script
	if err := r.SetPathParam("script", o.Script); err != nil {
		return err
	}

	// path param wid
	if err := r.SetPathParam("wid", o.Wid); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
