// Code generated by go-swagger; DO NOT EDIT.

package images

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// SearchImagesReader is a Reader for the SearchImages structure.
type SearchImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchImagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSearchImagesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /images] searchImages", response, response.Code())
	}
}

// NewSearchImagesOK creates a SearchImagesOK with default headers values
func NewSearchImagesOK() *SearchImagesOK {
	return &SearchImagesOK{}
}

/*
SearchImagesOK describes a response with status code 200, with default header values.

Images response
*/
type SearchImagesOK struct {
	Payload *models.Images
}

// IsSuccess returns true when this search images o k response has a 2xx status code
func (o *SearchImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search images o k response has a 3xx status code
func (o *SearchImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search images o k response has a 4xx status code
func (o *SearchImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search images o k response has a 5xx status code
func (o *SearchImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search images o k response a status code equal to that given
func (o *SearchImagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search images o k response
func (o *SearchImagesOK) Code() int {
	return 200
}

func (o *SearchImagesOK) Error() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesOK  %+v", 200, o.Payload)
}

func (o *SearchImagesOK) String() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesOK  %+v", 200, o.Payload)
}

func (o *SearchImagesOK) GetPayload() *models.Images {
	return o.Payload
}

func (o *SearchImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Images)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesBadRequest creates a SearchImagesBadRequest with default headers values
func NewSearchImagesBadRequest() *SearchImagesBadRequest {
	return &SearchImagesBadRequest{}
}

/*
SearchImagesBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type SearchImagesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this search images bad request response has a 2xx status code
func (o *SearchImagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search images bad request response has a 3xx status code
func (o *SearchImagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search images bad request response has a 4xx status code
func (o *SearchImagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search images bad request response has a 5xx status code
func (o *SearchImagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search images bad request response a status code equal to that given
func (o *SearchImagesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search images bad request response
func (o *SearchImagesBadRequest) Code() int {
	return 400
}

func (o *SearchImagesBadRequest) Error() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchImagesBadRequest) String() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesBadRequest  %+v", 400, o.Payload)
}

func (o *SearchImagesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchImagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesUnauthorized creates a SearchImagesUnauthorized with default headers values
func NewSearchImagesUnauthorized() *SearchImagesUnauthorized {
	return &SearchImagesUnauthorized{}
}

/*
SearchImagesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SearchImagesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this search images unauthorized response has a 2xx status code
func (o *SearchImagesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search images unauthorized response has a 3xx status code
func (o *SearchImagesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search images unauthorized response has a 4xx status code
func (o *SearchImagesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search images unauthorized response has a 5xx status code
func (o *SearchImagesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search images unauthorized response a status code equal to that given
func (o *SearchImagesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the search images unauthorized response
func (o *SearchImagesUnauthorized) Code() int {
	return 401
}

func (o *SearchImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchImagesUnauthorized) String() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *SearchImagesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesForbidden creates a SearchImagesForbidden with default headers values
func NewSearchImagesForbidden() *SearchImagesForbidden {
	return &SearchImagesForbidden{}
}

/*
SearchImagesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SearchImagesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this search images forbidden response has a 2xx status code
func (o *SearchImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search images forbidden response has a 3xx status code
func (o *SearchImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search images forbidden response has a 4xx status code
func (o *SearchImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this search images forbidden response has a 5xx status code
func (o *SearchImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this search images forbidden response a status code equal to that given
func (o *SearchImagesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the search images forbidden response
func (o *SearchImagesForbidden) Code() int {
	return 403
}

func (o *SearchImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesForbidden  %+v", 403, o.Payload)
}

func (o *SearchImagesForbidden) String() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesForbidden  %+v", 403, o.Payload)
}

func (o *SearchImagesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesNotFound creates a SearchImagesNotFound with default headers values
func NewSearchImagesNotFound() *SearchImagesNotFound {
	return &SearchImagesNotFound{}
}

/*
SearchImagesNotFound describes a response with status code 404, with default header values.

Not found
*/
type SearchImagesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this search images not found response has a 2xx status code
func (o *SearchImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search images not found response has a 3xx status code
func (o *SearchImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search images not found response has a 4xx status code
func (o *SearchImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search images not found response has a 5xx status code
func (o *SearchImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search images not found response a status code equal to that given
func (o *SearchImagesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the search images not found response
func (o *SearchImagesNotFound) Code() int {
	return 404
}

func (o *SearchImagesNotFound) Error() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesNotFound  %+v", 404, o.Payload)
}

func (o *SearchImagesNotFound) String() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesNotFound  %+v", 404, o.Payload)
}

func (o *SearchImagesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchImagesTooManyRequests creates a SearchImagesTooManyRequests with default headers values
func NewSearchImagesTooManyRequests() *SearchImagesTooManyRequests {
	return &SearchImagesTooManyRequests{}
}

/*
SearchImagesTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type SearchImagesTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this search images too many requests response has a 2xx status code
func (o *SearchImagesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search images too many requests response has a 3xx status code
func (o *SearchImagesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search images too many requests response has a 4xx status code
func (o *SearchImagesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this search images too many requests response has a 5xx status code
func (o *SearchImagesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this search images too many requests response a status code equal to that given
func (o *SearchImagesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the search images too many requests response
func (o *SearchImagesTooManyRequests) Code() int {
	return 429
}

func (o *SearchImagesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *SearchImagesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /images][%d] searchImagesTooManyRequests  %+v", 429, o.Payload)
}

func (o *SearchImagesTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *SearchImagesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
