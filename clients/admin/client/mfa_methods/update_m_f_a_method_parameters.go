// Code generated by go-swagger; DO NOT EDIT.

package mfa_methods

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// NewUpdateMFAMethodParams creates a new UpdateMFAMethodParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateMFAMethodParams() *UpdateMFAMethodParams {
	return &UpdateMFAMethodParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateMFAMethodParamsWithTimeout creates a new UpdateMFAMethodParams object
// with the ability to set a timeout on a request.
func NewUpdateMFAMethodParamsWithTimeout(timeout time.Duration) *UpdateMFAMethodParams {
	return &UpdateMFAMethodParams{
		timeout: timeout,
	}
}

// NewUpdateMFAMethodParamsWithContext creates a new UpdateMFAMethodParams object
// with the ability to set a context for a request.
func NewUpdateMFAMethodParamsWithContext(ctx context.Context) *UpdateMFAMethodParams {
	return &UpdateMFAMethodParams{
		Context: ctx,
	}
}

// NewUpdateMFAMethodParamsWithHTTPClient creates a new UpdateMFAMethodParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateMFAMethodParamsWithHTTPClient(client *http.Client) *UpdateMFAMethodParams {
	return &UpdateMFAMethodParams{
		HTTPClient: client,
	}
}

/*
UpdateMFAMethodParams contains all the parameters to send to the API endpoint

	for the update m f a method operation.

	Typically these are written to a http.Request.
*/
type UpdateMFAMethodParams struct {

	// MFAMethod.
	MFAMethod *models.MFAMethod

	// MfaID.
	MfaID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update m f a method params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateMFAMethodParams) WithDefaults() *UpdateMFAMethodParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update m f a method params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateMFAMethodParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update m f a method params
func (o *UpdateMFAMethodParams) WithTimeout(timeout time.Duration) *UpdateMFAMethodParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update m f a method params
func (o *UpdateMFAMethodParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update m f a method params
func (o *UpdateMFAMethodParams) WithContext(ctx context.Context) *UpdateMFAMethodParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update m f a method params
func (o *UpdateMFAMethodParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update m f a method params
func (o *UpdateMFAMethodParams) WithHTTPClient(client *http.Client) *UpdateMFAMethodParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update m f a method params
func (o *UpdateMFAMethodParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMFAMethod adds the mFAMethod to the update m f a method params
func (o *UpdateMFAMethodParams) WithMFAMethod(mFAMethod *models.MFAMethod) *UpdateMFAMethodParams {
	o.SetMFAMethod(mFAMethod)
	return o
}

// SetMFAMethod adds the mFAMethod to the update m f a method params
func (o *UpdateMFAMethodParams) SetMFAMethod(mFAMethod *models.MFAMethod) {
	o.MFAMethod = mFAMethod
}

// WithMfaID adds the mfaID to the update m f a method params
func (o *UpdateMFAMethodParams) WithMfaID(mfaID string) *UpdateMFAMethodParams {
	o.SetMfaID(mfaID)
	return o
}

// SetMfaID adds the mfaId to the update m f a method params
func (o *UpdateMFAMethodParams) SetMfaID(mfaID string) {
	o.MfaID = mfaID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateMFAMethodParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.MFAMethod != nil {
		if err := r.SetBodyParam(o.MFAMethod); err != nil {
			return err
		}
	}

	// path param mfaID
	if err := r.SetPathParam("mfaID", o.MfaID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
