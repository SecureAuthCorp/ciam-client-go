// Code generated by go-swagger; DO NOT EDIT.

package vanity_domains

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteVanityDomainReader is a Reader for the DeleteVanityDomain structure.
type DeleteVanityDomainReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVanityDomainReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteVanityDomainNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteVanityDomainUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteVanityDomainForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVanityDomainNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteVanityDomainTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteVanityDomainNoContent creates a DeleteVanityDomainNoContent with default headers values
func NewDeleteVanityDomainNoContent() *DeleteVanityDomainNoContent {
	return &DeleteVanityDomainNoContent{}
}

/*
DeleteVanityDomainNoContent describes a response with status code 204, with default header values.

	Vanity domain has been deleted
*/
type DeleteVanityDomainNoContent struct {
}

// IsSuccess returns true when this delete vanity domain no content response has a 2xx status code
func (o *DeleteVanityDomainNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete vanity domain no content response has a 3xx status code
func (o *DeleteVanityDomainNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vanity domain no content response has a 4xx status code
func (o *DeleteVanityDomainNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete vanity domain no content response has a 5xx status code
func (o *DeleteVanityDomainNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vanity domain no content response a status code equal to that given
func (o *DeleteVanityDomainNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *DeleteVanityDomainNoContent) Error() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainNoContent ", 204)
}

func (o *DeleteVanityDomainNoContent) String() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainNoContent ", 204)
}

func (o *DeleteVanityDomainNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVanityDomainUnauthorized creates a DeleteVanityDomainUnauthorized with default headers values
func NewDeleteVanityDomainUnauthorized() *DeleteVanityDomainUnauthorized {
	return &DeleteVanityDomainUnauthorized{}
}

/*
DeleteVanityDomainUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type DeleteVanityDomainUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete vanity domain unauthorized response has a 2xx status code
func (o *DeleteVanityDomainUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vanity domain unauthorized response has a 3xx status code
func (o *DeleteVanityDomainUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vanity domain unauthorized response has a 4xx status code
func (o *DeleteVanityDomainUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vanity domain unauthorized response has a 5xx status code
func (o *DeleteVanityDomainUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vanity domain unauthorized response a status code equal to that given
func (o *DeleteVanityDomainUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DeleteVanityDomainUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteVanityDomainUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteVanityDomainUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVanityDomainUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVanityDomainForbidden creates a DeleteVanityDomainForbidden with default headers values
func NewDeleteVanityDomainForbidden() *DeleteVanityDomainForbidden {
	return &DeleteVanityDomainForbidden{}
}

/*
DeleteVanityDomainForbidden describes a response with status code 403, with default header values.

HttpError
*/
type DeleteVanityDomainForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete vanity domain forbidden response has a 2xx status code
func (o *DeleteVanityDomainForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vanity domain forbidden response has a 3xx status code
func (o *DeleteVanityDomainForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vanity domain forbidden response has a 4xx status code
func (o *DeleteVanityDomainForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vanity domain forbidden response has a 5xx status code
func (o *DeleteVanityDomainForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vanity domain forbidden response a status code equal to that given
func (o *DeleteVanityDomainForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeleteVanityDomainForbidden) Error() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteVanityDomainForbidden) String() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainForbidden  %+v", 403, o.Payload)
}

func (o *DeleteVanityDomainForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVanityDomainForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVanityDomainNotFound creates a DeleteVanityDomainNotFound with default headers values
func NewDeleteVanityDomainNotFound() *DeleteVanityDomainNotFound {
	return &DeleteVanityDomainNotFound{}
}

/*
DeleteVanityDomainNotFound describes a response with status code 404, with default header values.

HttpError
*/
type DeleteVanityDomainNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete vanity domain not found response has a 2xx status code
func (o *DeleteVanityDomainNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vanity domain not found response has a 3xx status code
func (o *DeleteVanityDomainNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vanity domain not found response has a 4xx status code
func (o *DeleteVanityDomainNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vanity domain not found response has a 5xx status code
func (o *DeleteVanityDomainNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vanity domain not found response a status code equal to that given
func (o *DeleteVanityDomainNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DeleteVanityDomainNotFound) Error() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVanityDomainNotFound) String() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainNotFound  %+v", 404, o.Payload)
}

func (o *DeleteVanityDomainNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVanityDomainNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVanityDomainTooManyRequests creates a DeleteVanityDomainTooManyRequests with default headers values
func NewDeleteVanityDomainTooManyRequests() *DeleteVanityDomainTooManyRequests {
	return &DeleteVanityDomainTooManyRequests{}
}

/*
DeleteVanityDomainTooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type DeleteVanityDomainTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete vanity domain too many requests response has a 2xx status code
func (o *DeleteVanityDomainTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete vanity domain too many requests response has a 3xx status code
func (o *DeleteVanityDomainTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete vanity domain too many requests response has a 4xx status code
func (o *DeleteVanityDomainTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete vanity domain too many requests response has a 5xx status code
func (o *DeleteVanityDomainTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete vanity domain too many requests response a status code equal to that given
func (o *DeleteVanityDomainTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DeleteVanityDomainTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteVanityDomainTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /vanity-domains][%d] deleteVanityDomainTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteVanityDomainTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteVanityDomainTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
