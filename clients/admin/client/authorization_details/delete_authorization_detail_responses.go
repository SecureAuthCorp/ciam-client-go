// Code generated by go-swagger; DO NOT EDIT.

package authorization_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteAuthorizationDetailReader is a Reader for the DeleteAuthorizationDetail structure.
type DeleteAuthorizationDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAuthorizationDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteAuthorizationDetailNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteAuthorizationDetailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteAuthorizationDetailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAuthorizationDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteAuthorizationDetailTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /authorization-details/{authorizationDetailID}] deleteAuthorizationDetail", response, response.Code())
	}
}

// NewDeleteAuthorizationDetailNoContent creates a DeleteAuthorizationDetailNoContent with default headers values
func NewDeleteAuthorizationDetailNoContent() *DeleteAuthorizationDetailNoContent {
	return &DeleteAuthorizationDetailNoContent{}
}

/*
DeleteAuthorizationDetailNoContent describes a response with status code 204, with default header values.

	Authorization Detail has been deleted
*/
type DeleteAuthorizationDetailNoContent struct {
}

// IsSuccess returns true when this delete authorization detail no content response has a 2xx status code
func (o *DeleteAuthorizationDetailNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete authorization detail no content response has a 3xx status code
func (o *DeleteAuthorizationDetailNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization detail no content response has a 4xx status code
func (o *DeleteAuthorizationDetailNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete authorization detail no content response has a 5xx status code
func (o *DeleteAuthorizationDetailNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization detail no content response a status code equal to that given
func (o *DeleteAuthorizationDetailNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete authorization detail no content response
func (o *DeleteAuthorizationDetailNoContent) Code() int {
	return 204
}

func (o *DeleteAuthorizationDetailNoContent) Error() string {
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailNoContent", 204)
}

func (o *DeleteAuthorizationDetailNoContent) String() string {
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailNoContent", 204)
}

func (o *DeleteAuthorizationDetailNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAuthorizationDetailUnauthorized creates a DeleteAuthorizationDetailUnauthorized with default headers values
func NewDeleteAuthorizationDetailUnauthorized() *DeleteAuthorizationDetailUnauthorized {
	return &DeleteAuthorizationDetailUnauthorized{}
}

/*
DeleteAuthorizationDetailUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAuthorizationDetailUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization detail unauthorized response has a 2xx status code
func (o *DeleteAuthorizationDetailUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization detail unauthorized response has a 3xx status code
func (o *DeleteAuthorizationDetailUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization detail unauthorized response has a 4xx status code
func (o *DeleteAuthorizationDetailUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization detail unauthorized response has a 5xx status code
func (o *DeleteAuthorizationDetailUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization detail unauthorized response a status code equal to that given
func (o *DeleteAuthorizationDetailUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete authorization detail unauthorized response
func (o *DeleteAuthorizationDetailUnauthorized) Code() int {
	return 401
}

func (o *DeleteAuthorizationDetailUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailUnauthorized %s", 401, payload)
}

func (o *DeleteAuthorizationDetailUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailUnauthorized %s", 401, payload)
}

func (o *DeleteAuthorizationDetailUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationDetailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDetailForbidden creates a DeleteAuthorizationDetailForbidden with default headers values
func NewDeleteAuthorizationDetailForbidden() *DeleteAuthorizationDetailForbidden {
	return &DeleteAuthorizationDetailForbidden{}
}

/*
DeleteAuthorizationDetailForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteAuthorizationDetailForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization detail forbidden response has a 2xx status code
func (o *DeleteAuthorizationDetailForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization detail forbidden response has a 3xx status code
func (o *DeleteAuthorizationDetailForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization detail forbidden response has a 4xx status code
func (o *DeleteAuthorizationDetailForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization detail forbidden response has a 5xx status code
func (o *DeleteAuthorizationDetailForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization detail forbidden response a status code equal to that given
func (o *DeleteAuthorizationDetailForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete authorization detail forbidden response
func (o *DeleteAuthorizationDetailForbidden) Code() int {
	return 403
}

func (o *DeleteAuthorizationDetailForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailForbidden %s", 403, payload)
}

func (o *DeleteAuthorizationDetailForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailForbidden %s", 403, payload)
}

func (o *DeleteAuthorizationDetailForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationDetailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDetailNotFound creates a DeleteAuthorizationDetailNotFound with default headers values
func NewDeleteAuthorizationDetailNotFound() *DeleteAuthorizationDetailNotFound {
	return &DeleteAuthorizationDetailNotFound{}
}

/*
DeleteAuthorizationDetailNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteAuthorizationDetailNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization detail not found response has a 2xx status code
func (o *DeleteAuthorizationDetailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization detail not found response has a 3xx status code
func (o *DeleteAuthorizationDetailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization detail not found response has a 4xx status code
func (o *DeleteAuthorizationDetailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization detail not found response has a 5xx status code
func (o *DeleteAuthorizationDetailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization detail not found response a status code equal to that given
func (o *DeleteAuthorizationDetailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete authorization detail not found response
func (o *DeleteAuthorizationDetailNotFound) Code() int {
	return 404
}

func (o *DeleteAuthorizationDetailNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailNotFound %s", 404, payload)
}

func (o *DeleteAuthorizationDetailNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailNotFound %s", 404, payload)
}

func (o *DeleteAuthorizationDetailNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAuthorizationDetailTooManyRequests creates a DeleteAuthorizationDetailTooManyRequests with default headers values
func NewDeleteAuthorizationDetailTooManyRequests() *DeleteAuthorizationDetailTooManyRequests {
	return &DeleteAuthorizationDetailTooManyRequests{}
}

/*
DeleteAuthorizationDetailTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteAuthorizationDetailTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete authorization detail too many requests response has a 2xx status code
func (o *DeleteAuthorizationDetailTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete authorization detail too many requests response has a 3xx status code
func (o *DeleteAuthorizationDetailTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete authorization detail too many requests response has a 4xx status code
func (o *DeleteAuthorizationDetailTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete authorization detail too many requests response has a 5xx status code
func (o *DeleteAuthorizationDetailTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete authorization detail too many requests response a status code equal to that given
func (o *DeleteAuthorizationDetailTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete authorization detail too many requests response
func (o *DeleteAuthorizationDetailTooManyRequests) Code() int {
	return 429
}

func (o *DeleteAuthorizationDetailTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailTooManyRequests %s", 429, payload)
}

func (o *DeleteAuthorizationDetailTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /authorization-details/{authorizationDetailID}][%d] deleteAuthorizationDetailTooManyRequests %s", 429, payload)
}

func (o *DeleteAuthorizationDetailTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteAuthorizationDetailTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
