// Code generated by go-swagger; DO NOT EDIT.

package authorization_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// NewCreateAuthorizationDetailParams creates a new CreateAuthorizationDetailParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateAuthorizationDetailParams() *CreateAuthorizationDetailParams {
	return &CreateAuthorizationDetailParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateAuthorizationDetailParamsWithTimeout creates a new CreateAuthorizationDetailParams object
// with the ability to set a timeout on a request.
func NewCreateAuthorizationDetailParamsWithTimeout(timeout time.Duration) *CreateAuthorizationDetailParams {
	return &CreateAuthorizationDetailParams{
		timeout: timeout,
	}
}

// NewCreateAuthorizationDetailParamsWithContext creates a new CreateAuthorizationDetailParams object
// with the ability to set a context for a request.
func NewCreateAuthorizationDetailParamsWithContext(ctx context.Context) *CreateAuthorizationDetailParams {
	return &CreateAuthorizationDetailParams{
		Context: ctx,
	}
}

// NewCreateAuthorizationDetailParamsWithHTTPClient creates a new CreateAuthorizationDetailParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateAuthorizationDetailParamsWithHTTPClient(client *http.Client) *CreateAuthorizationDetailParams {
	return &CreateAuthorizationDetailParams{
		HTTPClient: client,
	}
}

/*
CreateAuthorizationDetailParams contains all the parameters to send to the API endpoint

	for the create authorization detail operation.

	Typically these are written to a http.Request.
*/
type CreateAuthorizationDetailParams struct {

	// AuthorizationDetailWithService.
	AuthorizationDetailWithService *models.AuthorizationDetailWithServiceID

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create authorization detail params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateAuthorizationDetailParams) WithDefaults() *CreateAuthorizationDetailParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create authorization detail params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateAuthorizationDetailParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create authorization detail params
func (o *CreateAuthorizationDetailParams) WithTimeout(timeout time.Duration) *CreateAuthorizationDetailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create authorization detail params
func (o *CreateAuthorizationDetailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create authorization detail params
func (o *CreateAuthorizationDetailParams) WithContext(ctx context.Context) *CreateAuthorizationDetailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create authorization detail params
func (o *CreateAuthorizationDetailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create authorization detail params
func (o *CreateAuthorizationDetailParams) WithHTTPClient(client *http.Client) *CreateAuthorizationDetailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create authorization detail params
func (o *CreateAuthorizationDetailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorizationDetailWithService adds the authorizationDetailWithService to the create authorization detail params
func (o *CreateAuthorizationDetailParams) WithAuthorizationDetailWithService(authorizationDetailWithService *models.AuthorizationDetailWithServiceID) *CreateAuthorizationDetailParams {
	o.SetAuthorizationDetailWithService(authorizationDetailWithService)
	return o
}

// SetAuthorizationDetailWithService adds the authorizationDetailWithService to the create authorization detail params
func (o *CreateAuthorizationDetailParams) SetAuthorizationDetailWithService(authorizationDetailWithService *models.AuthorizationDetailWithServiceID) {
	o.AuthorizationDetailWithService = authorizationDetailWithService
}

// WithIfMatch adds the ifMatch to the create authorization detail params
func (o *CreateAuthorizationDetailParams) WithIfMatch(ifMatch *string) *CreateAuthorizationDetailParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the create authorization detail params
func (o *CreateAuthorizationDetailParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WriteToRequest writes these params to a swagger request
func (o *CreateAuthorizationDetailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.AuthorizationDetailWithService != nil {
		if err := r.SetBodyParam(o.AuthorizationDetailWithService); err != nil {
			return err
		}
	}

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
