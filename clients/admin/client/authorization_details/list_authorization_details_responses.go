// Code generated by go-swagger; DO NOT EDIT.

package authorization_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListAuthorizationDetailsReader is a Reader for the ListAuthorizationDetails structure.
type ListAuthorizationDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAuthorizationDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAuthorizationDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListAuthorizationDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListAuthorizationDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListAuthorizationDetailsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/authorization-details] listAuthorizationDetails", response, response.Code())
	}
}

// NewListAuthorizationDetailsOK creates a ListAuthorizationDetailsOK with default headers values
func NewListAuthorizationDetailsOK() *ListAuthorizationDetailsOK {
	return &ListAuthorizationDetailsOK{}
}

/*
ListAuthorizationDetailsOK describes a response with status code 200, with default header values.

AuthorizationDetailsWithServices
*/
type ListAuthorizationDetailsOK struct {
	Payload *models.AuthorizationDetailsWithServices
}

// IsSuccess returns true when this list authorization details o k response has a 2xx status code
func (o *ListAuthorizationDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list authorization details o k response has a 3xx status code
func (o *ListAuthorizationDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authorization details o k response has a 4xx status code
func (o *ListAuthorizationDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list authorization details o k response has a 5xx status code
func (o *ListAuthorizationDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list authorization details o k response a status code equal to that given
func (o *ListAuthorizationDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list authorization details o k response
func (o *ListAuthorizationDetailsOK) Code() int {
	return 200
}

func (o *ListAuthorizationDetailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsOK %s", 200, payload)
}

func (o *ListAuthorizationDetailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsOK %s", 200, payload)
}

func (o *ListAuthorizationDetailsOK) GetPayload() *models.AuthorizationDetailsWithServices {
	return o.Payload
}

func (o *ListAuthorizationDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorizationDetailsWithServices)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthorizationDetailsUnauthorized creates a ListAuthorizationDetailsUnauthorized with default headers values
func NewListAuthorizationDetailsUnauthorized() *ListAuthorizationDetailsUnauthorized {
	return &ListAuthorizationDetailsUnauthorized{}
}

/*
ListAuthorizationDetailsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListAuthorizationDetailsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list authorization details unauthorized response has a 2xx status code
func (o *ListAuthorizationDetailsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list authorization details unauthorized response has a 3xx status code
func (o *ListAuthorizationDetailsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authorization details unauthorized response has a 4xx status code
func (o *ListAuthorizationDetailsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list authorization details unauthorized response has a 5xx status code
func (o *ListAuthorizationDetailsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list authorization details unauthorized response a status code equal to that given
func (o *ListAuthorizationDetailsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list authorization details unauthorized response
func (o *ListAuthorizationDetailsUnauthorized) Code() int {
	return 401
}

func (o *ListAuthorizationDetailsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsUnauthorized %s", 401, payload)
}

func (o *ListAuthorizationDetailsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsUnauthorized %s", 401, payload)
}

func (o *ListAuthorizationDetailsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAuthorizationDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthorizationDetailsForbidden creates a ListAuthorizationDetailsForbidden with default headers values
func NewListAuthorizationDetailsForbidden() *ListAuthorizationDetailsForbidden {
	return &ListAuthorizationDetailsForbidden{}
}

/*
ListAuthorizationDetailsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListAuthorizationDetailsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list authorization details forbidden response has a 2xx status code
func (o *ListAuthorizationDetailsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list authorization details forbidden response has a 3xx status code
func (o *ListAuthorizationDetailsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authorization details forbidden response has a 4xx status code
func (o *ListAuthorizationDetailsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list authorization details forbidden response has a 5xx status code
func (o *ListAuthorizationDetailsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list authorization details forbidden response a status code equal to that given
func (o *ListAuthorizationDetailsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list authorization details forbidden response
func (o *ListAuthorizationDetailsForbidden) Code() int {
	return 403
}

func (o *ListAuthorizationDetailsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsForbidden %s", 403, payload)
}

func (o *ListAuthorizationDetailsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsForbidden %s", 403, payload)
}

func (o *ListAuthorizationDetailsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAuthorizationDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAuthorizationDetailsTooManyRequests creates a ListAuthorizationDetailsTooManyRequests with default headers values
func NewListAuthorizationDetailsTooManyRequests() *ListAuthorizationDetailsTooManyRequests {
	return &ListAuthorizationDetailsTooManyRequests{}
}

/*
ListAuthorizationDetailsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListAuthorizationDetailsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list authorization details too many requests response has a 2xx status code
func (o *ListAuthorizationDetailsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list authorization details too many requests response has a 3xx status code
func (o *ListAuthorizationDetailsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list authorization details too many requests response has a 4xx status code
func (o *ListAuthorizationDetailsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list authorization details too many requests response has a 5xx status code
func (o *ListAuthorizationDetailsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list authorization details too many requests response a status code equal to that given
func (o *ListAuthorizationDetailsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list authorization details too many requests response
func (o *ListAuthorizationDetailsTooManyRequests) Code() int {
	return 429
}

func (o *ListAuthorizationDetailsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsTooManyRequests %s", 429, payload)
}

func (o *ListAuthorizationDetailsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/authorization-details][%d] listAuthorizationDetailsTooManyRequests %s", 429, payload)
}

func (o *ListAuthorizationDetailsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListAuthorizationDetailsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
