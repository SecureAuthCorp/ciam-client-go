// Code generated by go-swagger; DO NOT EDIT.

package authorization_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// GetAuthorizationDetailReader is a Reader for the GetAuthorizationDetail structure.
type GetAuthorizationDetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorizationDetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorizationDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAuthorizationDetailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAuthorizationDetailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAuthorizationDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAuthorizationDetailTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /authorization-details/{authorizationDetailID}] getAuthorizationDetail", response, response.Code())
	}
}

// NewGetAuthorizationDetailOK creates a GetAuthorizationDetailOK with default headers values
func NewGetAuthorizationDetailOK() *GetAuthorizationDetailOK {
	return &GetAuthorizationDetailOK{}
}

/*
GetAuthorizationDetailOK describes a response with status code 200, with default header values.

AuthorizationDetailWithService
*/
type GetAuthorizationDetailOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.AuthorizationDetailWithService
}

// IsSuccess returns true when this get authorization detail o k response has a 2xx status code
func (o *GetAuthorizationDetailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get authorization detail o k response has a 3xx status code
func (o *GetAuthorizationDetailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization detail o k response has a 4xx status code
func (o *GetAuthorizationDetailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get authorization detail o k response has a 5xx status code
func (o *GetAuthorizationDetailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization detail o k response a status code equal to that given
func (o *GetAuthorizationDetailOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get authorization detail o k response
func (o *GetAuthorizationDetailOK) Code() int {
	return 200
}

func (o *GetAuthorizationDetailOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailOK %s", 200, payload)
}

func (o *GetAuthorizationDetailOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailOK %s", 200, payload)
}

func (o *GetAuthorizationDetailOK) GetPayload() *models.AuthorizationDetailWithService {
	return o.Payload
}

func (o *GetAuthorizationDetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.AuthorizationDetailWithService)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDetailUnauthorized creates a GetAuthorizationDetailUnauthorized with default headers values
func NewGetAuthorizationDetailUnauthorized() *GetAuthorizationDetailUnauthorized {
	return &GetAuthorizationDetailUnauthorized{}
}

/*
GetAuthorizationDetailUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAuthorizationDetailUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get authorization detail unauthorized response has a 2xx status code
func (o *GetAuthorizationDetailUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization detail unauthorized response has a 3xx status code
func (o *GetAuthorizationDetailUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization detail unauthorized response has a 4xx status code
func (o *GetAuthorizationDetailUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization detail unauthorized response has a 5xx status code
func (o *GetAuthorizationDetailUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization detail unauthorized response a status code equal to that given
func (o *GetAuthorizationDetailUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get authorization detail unauthorized response
func (o *GetAuthorizationDetailUnauthorized) Code() int {
	return 401
}

func (o *GetAuthorizationDetailUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailUnauthorized %s", 401, payload)
}

func (o *GetAuthorizationDetailUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailUnauthorized %s", 401, payload)
}

func (o *GetAuthorizationDetailUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuthorizationDetailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDetailForbidden creates a GetAuthorizationDetailForbidden with default headers values
func NewGetAuthorizationDetailForbidden() *GetAuthorizationDetailForbidden {
	return &GetAuthorizationDetailForbidden{}
}

/*
GetAuthorizationDetailForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAuthorizationDetailForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get authorization detail forbidden response has a 2xx status code
func (o *GetAuthorizationDetailForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization detail forbidden response has a 3xx status code
func (o *GetAuthorizationDetailForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization detail forbidden response has a 4xx status code
func (o *GetAuthorizationDetailForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization detail forbidden response has a 5xx status code
func (o *GetAuthorizationDetailForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization detail forbidden response a status code equal to that given
func (o *GetAuthorizationDetailForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get authorization detail forbidden response
func (o *GetAuthorizationDetailForbidden) Code() int {
	return 403
}

func (o *GetAuthorizationDetailForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailForbidden %s", 403, payload)
}

func (o *GetAuthorizationDetailForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailForbidden %s", 403, payload)
}

func (o *GetAuthorizationDetailForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuthorizationDetailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDetailNotFound creates a GetAuthorizationDetailNotFound with default headers values
func NewGetAuthorizationDetailNotFound() *GetAuthorizationDetailNotFound {
	return &GetAuthorizationDetailNotFound{}
}

/*
GetAuthorizationDetailNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetAuthorizationDetailNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get authorization detail not found response has a 2xx status code
func (o *GetAuthorizationDetailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization detail not found response has a 3xx status code
func (o *GetAuthorizationDetailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization detail not found response has a 4xx status code
func (o *GetAuthorizationDetailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization detail not found response has a 5xx status code
func (o *GetAuthorizationDetailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization detail not found response a status code equal to that given
func (o *GetAuthorizationDetailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get authorization detail not found response
func (o *GetAuthorizationDetailNotFound) Code() int {
	return 404
}

func (o *GetAuthorizationDetailNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailNotFound %s", 404, payload)
}

func (o *GetAuthorizationDetailNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailNotFound %s", 404, payload)
}

func (o *GetAuthorizationDetailNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuthorizationDetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorizationDetailTooManyRequests creates a GetAuthorizationDetailTooManyRequests with default headers values
func NewGetAuthorizationDetailTooManyRequests() *GetAuthorizationDetailTooManyRequests {
	return &GetAuthorizationDetailTooManyRequests{}
}

/*
GetAuthorizationDetailTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetAuthorizationDetailTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get authorization detail too many requests response has a 2xx status code
func (o *GetAuthorizationDetailTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get authorization detail too many requests response has a 3xx status code
func (o *GetAuthorizationDetailTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get authorization detail too many requests response has a 4xx status code
func (o *GetAuthorizationDetailTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get authorization detail too many requests response has a 5xx status code
func (o *GetAuthorizationDetailTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get authorization detail too many requests response a status code equal to that given
func (o *GetAuthorizationDetailTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get authorization detail too many requests response
func (o *GetAuthorizationDetailTooManyRequests) Code() int {
	return 429
}

func (o *GetAuthorizationDetailTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailTooManyRequests %s", 429, payload)
}

func (o *GetAuthorizationDetailTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorization-details/{authorizationDetailID}][%d] getAuthorizationDetailTooManyRequests %s", 429, payload)
}

func (o *GetAuthorizationDetailTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAuthorizationDetailTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
