// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListServerWebhooksReader is a Reader for the ListServerWebhooks structure.
type ListServerWebhooksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServerWebhooksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServerWebhooksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListServerWebhooksUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListServerWebhooksForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListServerWebhooksTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/webhooks] listServerWebhooks", response, response.Code())
	}
}

// NewListServerWebhooksOK creates a ListServerWebhooksOK with default headers values
func NewListServerWebhooksOK() *ListServerWebhooksOK {
	return &ListServerWebhooksOK{}
}

/*
ListServerWebhooksOK describes a response with status code 200, with default header values.

Webhooks response
*/
type ListServerWebhooksOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.WebhooksResponse
}

// IsSuccess returns true when this list server webhooks o k response has a 2xx status code
func (o *ListServerWebhooksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list server webhooks o k response has a 3xx status code
func (o *ListServerWebhooksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server webhooks o k response has a 4xx status code
func (o *ListServerWebhooksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list server webhooks o k response has a 5xx status code
func (o *ListServerWebhooksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list server webhooks o k response a status code equal to that given
func (o *ListServerWebhooksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list server webhooks o k response
func (o *ListServerWebhooksOK) Code() int {
	return 200
}

func (o *ListServerWebhooksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksOK %s", 200, payload)
}

func (o *ListServerWebhooksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksOK %s", 200, payload)
}

func (o *ListServerWebhooksOK) GetPayload() *models.WebhooksResponse {
	return o.Payload
}

func (o *ListServerWebhooksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.WebhooksResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerWebhooksUnauthorized creates a ListServerWebhooksUnauthorized with default headers values
func NewListServerWebhooksUnauthorized() *ListServerWebhooksUnauthorized {
	return &ListServerWebhooksUnauthorized{}
}

/*
ListServerWebhooksUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListServerWebhooksUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list server webhooks unauthorized response has a 2xx status code
func (o *ListServerWebhooksUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server webhooks unauthorized response has a 3xx status code
func (o *ListServerWebhooksUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server webhooks unauthorized response has a 4xx status code
func (o *ListServerWebhooksUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server webhooks unauthorized response has a 5xx status code
func (o *ListServerWebhooksUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list server webhooks unauthorized response a status code equal to that given
func (o *ListServerWebhooksUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list server webhooks unauthorized response
func (o *ListServerWebhooksUnauthorized) Code() int {
	return 401
}

func (o *ListServerWebhooksUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksUnauthorized %s", 401, payload)
}

func (o *ListServerWebhooksUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksUnauthorized %s", 401, payload)
}

func (o *ListServerWebhooksUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListServerWebhooksUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerWebhooksForbidden creates a ListServerWebhooksForbidden with default headers values
func NewListServerWebhooksForbidden() *ListServerWebhooksForbidden {
	return &ListServerWebhooksForbidden{}
}

/*
ListServerWebhooksForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListServerWebhooksForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list server webhooks forbidden response has a 2xx status code
func (o *ListServerWebhooksForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server webhooks forbidden response has a 3xx status code
func (o *ListServerWebhooksForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server webhooks forbidden response has a 4xx status code
func (o *ListServerWebhooksForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server webhooks forbidden response has a 5xx status code
func (o *ListServerWebhooksForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list server webhooks forbidden response a status code equal to that given
func (o *ListServerWebhooksForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list server webhooks forbidden response
func (o *ListServerWebhooksForbidden) Code() int {
	return 403
}

func (o *ListServerWebhooksForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksForbidden %s", 403, payload)
}

func (o *ListServerWebhooksForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksForbidden %s", 403, payload)
}

func (o *ListServerWebhooksForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListServerWebhooksForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerWebhooksTooManyRequests creates a ListServerWebhooksTooManyRequests with default headers values
func NewListServerWebhooksTooManyRequests() *ListServerWebhooksTooManyRequests {
	return &ListServerWebhooksTooManyRequests{}
}

/*
ListServerWebhooksTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListServerWebhooksTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list server webhooks too many requests response has a 2xx status code
func (o *ListServerWebhooksTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server webhooks too many requests response has a 3xx status code
func (o *ListServerWebhooksTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server webhooks too many requests response has a 4xx status code
func (o *ListServerWebhooksTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server webhooks too many requests response has a 5xx status code
func (o *ListServerWebhooksTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list server webhooks too many requests response a status code equal to that given
func (o *ListServerWebhooksTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list server webhooks too many requests response
func (o *ListServerWebhooksTooManyRequests) Code() int {
	return 429
}

func (o *ListServerWebhooksTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksTooManyRequests %s", 429, payload)
}

func (o *ListServerWebhooksTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/webhooks][%d] listServerWebhooksTooManyRequests %s", 429, payload)
}

func (o *ListServerWebhooksTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListServerWebhooksTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
