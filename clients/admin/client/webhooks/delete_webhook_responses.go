// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// DeleteWebhookReader is a Reader for the DeleteWebhook structure.
type DeleteWebhookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWebhookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteWebhookNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteWebhookUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteWebhookForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWebhookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteWebhookTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /servers/{wid}/webhooks/{webhookID}] deleteWebhook", response, response.Code())
	}
}

// NewDeleteWebhookNoContent creates a DeleteWebhookNoContent with default headers values
func NewDeleteWebhookNoContent() *DeleteWebhookNoContent {
	return &DeleteWebhookNoContent{}
}

/*
DeleteWebhookNoContent describes a response with status code 204, with default header values.

	Webhook has been deleted
*/
type DeleteWebhookNoContent struct {
}

// IsSuccess returns true when this delete webhook no content response has a 2xx status code
func (o *DeleteWebhookNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete webhook no content response has a 3xx status code
func (o *DeleteWebhookNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webhook no content response has a 4xx status code
func (o *DeleteWebhookNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete webhook no content response has a 5xx status code
func (o *DeleteWebhookNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webhook no content response a status code equal to that given
func (o *DeleteWebhookNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete webhook no content response
func (o *DeleteWebhookNoContent) Code() int {
	return 204
}

func (o *DeleteWebhookNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookNoContent ", 204)
}

func (o *DeleteWebhookNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookNoContent ", 204)
}

func (o *DeleteWebhookNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWebhookUnauthorized creates a DeleteWebhookUnauthorized with default headers values
func NewDeleteWebhookUnauthorized() *DeleteWebhookUnauthorized {
	return &DeleteWebhookUnauthorized{}
}

/*
DeleteWebhookUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteWebhookUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete webhook unauthorized response has a 2xx status code
func (o *DeleteWebhookUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webhook unauthorized response has a 3xx status code
func (o *DeleteWebhookUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webhook unauthorized response has a 4xx status code
func (o *DeleteWebhookUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webhook unauthorized response has a 5xx status code
func (o *DeleteWebhookUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webhook unauthorized response a status code equal to that given
func (o *DeleteWebhookUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete webhook unauthorized response
func (o *DeleteWebhookUnauthorized) Code() int {
	return 401
}

func (o *DeleteWebhookUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebhookUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteWebhookUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebhookUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebhookForbidden creates a DeleteWebhookForbidden with default headers values
func NewDeleteWebhookForbidden() *DeleteWebhookForbidden {
	return &DeleteWebhookForbidden{}
}

/*
DeleteWebhookForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteWebhookForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete webhook forbidden response has a 2xx status code
func (o *DeleteWebhookForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webhook forbidden response has a 3xx status code
func (o *DeleteWebhookForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webhook forbidden response has a 4xx status code
func (o *DeleteWebhookForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webhook forbidden response has a 5xx status code
func (o *DeleteWebhookForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webhook forbidden response a status code equal to that given
func (o *DeleteWebhookForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete webhook forbidden response
func (o *DeleteWebhookForbidden) Code() int {
	return 403
}

func (o *DeleteWebhookForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebhookForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookForbidden  %+v", 403, o.Payload)
}

func (o *DeleteWebhookForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebhookForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebhookNotFound creates a DeleteWebhookNotFound with default headers values
func NewDeleteWebhookNotFound() *DeleteWebhookNotFound {
	return &DeleteWebhookNotFound{}
}

/*
DeleteWebhookNotFound describes a response with status code 404, with default header values.

Not found
*/
type DeleteWebhookNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete webhook not found response has a 2xx status code
func (o *DeleteWebhookNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webhook not found response has a 3xx status code
func (o *DeleteWebhookNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webhook not found response has a 4xx status code
func (o *DeleteWebhookNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webhook not found response has a 5xx status code
func (o *DeleteWebhookNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webhook not found response a status code equal to that given
func (o *DeleteWebhookNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete webhook not found response
func (o *DeleteWebhookNotFound) Code() int {
	return 404
}

func (o *DeleteWebhookNotFound) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebhookNotFound) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookNotFound  %+v", 404, o.Payload)
}

func (o *DeleteWebhookNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebhookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWebhookTooManyRequests creates a DeleteWebhookTooManyRequests with default headers values
func NewDeleteWebhookTooManyRequests() *DeleteWebhookTooManyRequests {
	return &DeleteWebhookTooManyRequests{}
}

/*
DeleteWebhookTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type DeleteWebhookTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this delete webhook too many requests response has a 2xx status code
func (o *DeleteWebhookTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete webhook too many requests response has a 3xx status code
func (o *DeleteWebhookTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete webhook too many requests response has a 4xx status code
func (o *DeleteWebhookTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete webhook too many requests response has a 5xx status code
func (o *DeleteWebhookTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this delete webhook too many requests response a status code equal to that given
func (o *DeleteWebhookTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the delete webhook too many requests response
func (o *DeleteWebhookTooManyRequests) Code() int {
	return 429
}

func (o *DeleteWebhookTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebhookTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/webhooks/{webhookID}][%d] deleteWebhookTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteWebhookTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteWebhookTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
