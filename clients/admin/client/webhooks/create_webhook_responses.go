// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// CreateWebhookReader is a Reader for the CreateWebhook structure.
type CreateWebhookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWebhookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateWebhookCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWebhookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateWebhookUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateWebhookForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateWebhookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateWebhookUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateWebhookTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/webhooks] createWebhook", response, response.Code())
	}
}

// NewCreateWebhookCreated creates a CreateWebhookCreated with default headers values
func NewCreateWebhookCreated() *CreateWebhookCreated {
	return &CreateWebhookCreated{}
}

/*
CreateWebhookCreated describes a response with status code 201, with default header values.

Webhook on create response
*/
type CreateWebhookCreated struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.WebhookOnCreateResponse
}

// IsSuccess returns true when this create webhook created response has a 2xx status code
func (o *CreateWebhookCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create webhook created response has a 3xx status code
func (o *CreateWebhookCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook created response has a 4xx status code
func (o *CreateWebhookCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create webhook created response has a 5xx status code
func (o *CreateWebhookCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook created response a status code equal to that given
func (o *CreateWebhookCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create webhook created response
func (o *CreateWebhookCreated) Code() int {
	return 201
}

func (o *CreateWebhookCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookCreated %s", 201, payload)
}

func (o *CreateWebhookCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookCreated %s", 201, payload)
}

func (o *CreateWebhookCreated) GetPayload() *models.WebhookOnCreateResponse {
	return o.Payload
}

func (o *CreateWebhookCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.WebhookOnCreateResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWebhookBadRequest creates a CreateWebhookBadRequest with default headers values
func NewCreateWebhookBadRequest() *CreateWebhookBadRequest {
	return &CreateWebhookBadRequest{}
}

/*
CreateWebhookBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateWebhookBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this create webhook bad request response has a 2xx status code
func (o *CreateWebhookBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create webhook bad request response has a 3xx status code
func (o *CreateWebhookBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook bad request response has a 4xx status code
func (o *CreateWebhookBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create webhook bad request response has a 5xx status code
func (o *CreateWebhookBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook bad request response a status code equal to that given
func (o *CreateWebhookBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create webhook bad request response
func (o *CreateWebhookBadRequest) Code() int {
	return 400
}

func (o *CreateWebhookBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookBadRequest %s", 400, payload)
}

func (o *CreateWebhookBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookBadRequest %s", 400, payload)
}

func (o *CreateWebhookBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWebhookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWebhookUnauthorized creates a CreateWebhookUnauthorized with default headers values
func NewCreateWebhookUnauthorized() *CreateWebhookUnauthorized {
	return &CreateWebhookUnauthorized{}
}

/*
CreateWebhookUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateWebhookUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this create webhook unauthorized response has a 2xx status code
func (o *CreateWebhookUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create webhook unauthorized response has a 3xx status code
func (o *CreateWebhookUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook unauthorized response has a 4xx status code
func (o *CreateWebhookUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create webhook unauthorized response has a 5xx status code
func (o *CreateWebhookUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook unauthorized response a status code equal to that given
func (o *CreateWebhookUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create webhook unauthorized response
func (o *CreateWebhookUnauthorized) Code() int {
	return 401
}

func (o *CreateWebhookUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookUnauthorized %s", 401, payload)
}

func (o *CreateWebhookUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookUnauthorized %s", 401, payload)
}

func (o *CreateWebhookUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWebhookUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWebhookForbidden creates a CreateWebhookForbidden with default headers values
func NewCreateWebhookForbidden() *CreateWebhookForbidden {
	return &CreateWebhookForbidden{}
}

/*
CreateWebhookForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateWebhookForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this create webhook forbidden response has a 2xx status code
func (o *CreateWebhookForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create webhook forbidden response has a 3xx status code
func (o *CreateWebhookForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook forbidden response has a 4xx status code
func (o *CreateWebhookForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create webhook forbidden response has a 5xx status code
func (o *CreateWebhookForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook forbidden response a status code equal to that given
func (o *CreateWebhookForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create webhook forbidden response
func (o *CreateWebhookForbidden) Code() int {
	return 403
}

func (o *CreateWebhookForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookForbidden %s", 403, payload)
}

func (o *CreateWebhookForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookForbidden %s", 403, payload)
}

func (o *CreateWebhookForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWebhookForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWebhookNotFound creates a CreateWebhookNotFound with default headers values
func NewCreateWebhookNotFound() *CreateWebhookNotFound {
	return &CreateWebhookNotFound{}
}

/*
CreateWebhookNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateWebhookNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this create webhook not found response has a 2xx status code
func (o *CreateWebhookNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create webhook not found response has a 3xx status code
func (o *CreateWebhookNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook not found response has a 4xx status code
func (o *CreateWebhookNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create webhook not found response has a 5xx status code
func (o *CreateWebhookNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook not found response a status code equal to that given
func (o *CreateWebhookNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create webhook not found response
func (o *CreateWebhookNotFound) Code() int {
	return 404
}

func (o *CreateWebhookNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookNotFound %s", 404, payload)
}

func (o *CreateWebhookNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookNotFound %s", 404, payload)
}

func (o *CreateWebhookNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWebhookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWebhookUnprocessableEntity creates a CreateWebhookUnprocessableEntity with default headers values
func NewCreateWebhookUnprocessableEntity() *CreateWebhookUnprocessableEntity {
	return &CreateWebhookUnprocessableEntity{}
}

/*
CreateWebhookUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type CreateWebhookUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this create webhook unprocessable entity response has a 2xx status code
func (o *CreateWebhookUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create webhook unprocessable entity response has a 3xx status code
func (o *CreateWebhookUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook unprocessable entity response has a 4xx status code
func (o *CreateWebhookUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create webhook unprocessable entity response has a 5xx status code
func (o *CreateWebhookUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook unprocessable entity response a status code equal to that given
func (o *CreateWebhookUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create webhook unprocessable entity response
func (o *CreateWebhookUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateWebhookUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookUnprocessableEntity %s", 422, payload)
}

func (o *CreateWebhookUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookUnprocessableEntity %s", 422, payload)
}

func (o *CreateWebhookUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWebhookUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWebhookTooManyRequests creates a CreateWebhookTooManyRequests with default headers values
func NewCreateWebhookTooManyRequests() *CreateWebhookTooManyRequests {
	return &CreateWebhookTooManyRequests{}
}

/*
CreateWebhookTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type CreateWebhookTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this create webhook too many requests response has a 2xx status code
func (o *CreateWebhookTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create webhook too many requests response has a 3xx status code
func (o *CreateWebhookTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create webhook too many requests response has a 4xx status code
func (o *CreateWebhookTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create webhook too many requests response has a 5xx status code
func (o *CreateWebhookTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create webhook too many requests response a status code equal to that given
func (o *CreateWebhookTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create webhook too many requests response
func (o *CreateWebhookTooManyRequests) Code() int {
	return 429
}

func (o *CreateWebhookTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookTooManyRequests %s", 429, payload)
}

func (o *CreateWebhookTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /servers/{wid}/webhooks][%d] createWebhookTooManyRequests %s", 429, payload)
}

func (o *CreateWebhookTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateWebhookTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
