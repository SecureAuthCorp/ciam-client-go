// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new system API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for system API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BindSystemAPI(params *BindSystemAPIParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BindSystemAPINoContent, error)

	ListSystemAPIBindings(params *ListSystemAPIBindingsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ListSystemAPIBindingsOK, error)

	ListSystemAPIs(params *ListSystemAPIsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ListSystemAPIsOK, error)

	ListSystemServices(params *ListSystemServicesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ListSystemServicesOK, error)

	UnbindSystemAPI(params *UnbindSystemAPIParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UnbindSystemAPINoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
BindSystemAPI binds system api

Bind policy to a system api.
*/
func (a *Client) BindSystemAPI(params *BindSystemAPIParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BindSystemAPINoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBindSystemAPIParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "bindSystemAPI",
		Method:             "POST",
		PathPattern:        "/system/apis/bind",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &BindSystemAPIReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BindSystemAPINoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for bindSystemAPI: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ListSystemAPIBindings lists system api bindings

List policy to system api bindings.
*/
func (a *Client) ListSystemAPIBindings(params *ListSystemAPIBindingsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ListSystemAPIBindingsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListSystemAPIBindingsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "listSystemAPIBindings",
		Method:             "GET",
		PathPattern:        "/system/apis/{wid}/bindings",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListSystemAPIBindingsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListSystemAPIBindingsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listSystemAPIBindings: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ListSystemAPIs lists system a p is

List APIs of the system tenant and system authorization server.
*/
func (a *Client) ListSystemAPIs(params *ListSystemAPIsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ListSystemAPIsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListSystemAPIsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "listSystemAPIs",
		Method:             "GET",
		PathPattern:        "/system/apis",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListSystemAPIsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListSystemAPIsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listSystemAPIs: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ListSystemServices lists system services

List services of the system tenant and system authorization server.
*/
func (a *Client) ListSystemServices(params *ListSystemServicesParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ListSystemServicesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListSystemServicesParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "listSystemServices",
		Method:             "GET",
		PathPattern:        "/system/services",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &ListSystemServicesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListSystemServicesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listSystemServices: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
UnbindSystemAPI unbinds system api

Unbind policy from a system api.
*/
func (a *Client) UnbindSystemAPI(params *UnbindSystemAPIParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*UnbindSystemAPINoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUnbindSystemAPIParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "unbindSystemAPI",
		Method:             "DELETE",
		PathPattern:        "/system/apis/unbind",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &UnbindSystemAPIReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UnbindSystemAPINoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for unbindSystemAPI: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
