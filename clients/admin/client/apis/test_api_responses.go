// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// TestAPIReader is a Reader for the TestAPI structure.
type TestAPIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TestAPIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTestAPIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewTestAPIUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewTestAPIForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTestAPINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewTestAPIUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewTestAPITooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewTestAPIOK creates a TestAPIOK with default headers values
func NewTestAPIOK() *TestAPIOK {
	return &TestAPIOK{}
}

/* TestAPIOK describes a response with status code 200, with default header values.

API test result
*/
type TestAPIOK struct {
	Payload *models.TestAPIResult
}

func (o *TestAPIOK) Error() string {
	return fmt.Sprintf("[POST /apis/test][%d] testApiOK  %+v", 200, o.Payload)
}
func (o *TestAPIOK) GetPayload() *models.TestAPIResult {
	return o.Payload
}

func (o *TestAPIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestAPIResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestAPIUnauthorized creates a TestAPIUnauthorized with default headers values
func NewTestAPIUnauthorized() *TestAPIUnauthorized {
	return &TestAPIUnauthorized{}
}

/* TestAPIUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type TestAPIUnauthorized struct {
	Payload *models.Error
}

func (o *TestAPIUnauthorized) Error() string {
	return fmt.Sprintf("[POST /apis/test][%d] testApiUnauthorized  %+v", 401, o.Payload)
}
func (o *TestAPIUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *TestAPIUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestAPIForbidden creates a TestAPIForbidden with default headers values
func NewTestAPIForbidden() *TestAPIForbidden {
	return &TestAPIForbidden{}
}

/* TestAPIForbidden describes a response with status code 403, with default header values.

HttpError
*/
type TestAPIForbidden struct {
	Payload *models.Error
}

func (o *TestAPIForbidden) Error() string {
	return fmt.Sprintf("[POST /apis/test][%d] testApiForbidden  %+v", 403, o.Payload)
}
func (o *TestAPIForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *TestAPIForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestAPINotFound creates a TestAPINotFound with default headers values
func NewTestAPINotFound() *TestAPINotFound {
	return &TestAPINotFound{}
}

/* TestAPINotFound describes a response with status code 404, with default header values.

HttpError
*/
type TestAPINotFound struct {
	Payload *models.Error
}

func (o *TestAPINotFound) Error() string {
	return fmt.Sprintf("[POST /apis/test][%d] testApiNotFound  %+v", 404, o.Payload)
}
func (o *TestAPINotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *TestAPINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestAPIUnprocessableEntity creates a TestAPIUnprocessableEntity with default headers values
func NewTestAPIUnprocessableEntity() *TestAPIUnprocessableEntity {
	return &TestAPIUnprocessableEntity{}
}

/* TestAPIUnprocessableEntity describes a response with status code 422, with default header values.

HttpError
*/
type TestAPIUnprocessableEntity struct {
	Payload *models.Error
}

func (o *TestAPIUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /apis/test][%d] testApiUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *TestAPIUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *TestAPIUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTestAPITooManyRequests creates a TestAPITooManyRequests with default headers values
func NewTestAPITooManyRequests() *TestAPITooManyRequests {
	return &TestAPITooManyRequests{}
}

/* TestAPITooManyRequests describes a response with status code 429, with default header values.

HttpError
*/
type TestAPITooManyRequests struct {
	Payload *models.Error
}

func (o *TestAPITooManyRequests) Error() string {
	return fmt.Sprintf("[POST /apis/test][%d] testApiTooManyRequests  %+v", 429, o.Payload)
}
func (o *TestAPITooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *TestAPITooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
