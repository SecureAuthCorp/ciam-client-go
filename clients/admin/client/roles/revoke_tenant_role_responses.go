// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// RevokeTenantRoleReader is a Reader for the RevokeTenantRole structure.
type RevokeTenantRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeTenantRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRevokeTenantRoleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRevokeTenantRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeTenantRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeTenantRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewRevokeTenantRoleUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeTenantRoleTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /tenant/roles/revoke] revokeTenantRole", response, response.Code())
	}
}

// NewRevokeTenantRoleNoContent creates a RevokeTenantRoleNoContent with default headers values
func NewRevokeTenantRoleNoContent() *RevokeTenantRoleNoContent {
	return &RevokeTenantRoleNoContent{}
}

/*
RevokeTenantRoleNoContent describes a response with status code 204, with default header values.

Role revoked
*/
type RevokeTenantRoleNoContent struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string
}

// IsSuccess returns true when this revoke tenant role no content response has a 2xx status code
func (o *RevokeTenantRoleNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke tenant role no content response has a 3xx status code
func (o *RevokeTenantRoleNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke tenant role no content response has a 4xx status code
func (o *RevokeTenantRoleNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke tenant role no content response has a 5xx status code
func (o *RevokeTenantRoleNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke tenant role no content response a status code equal to that given
func (o *RevokeTenantRoleNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the revoke tenant role no content response
func (o *RevokeTenantRoleNoContent) Code() int {
	return 204
}

func (o *RevokeTenantRoleNoContent) Error() string {
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleNoContent", 204)
}

func (o *RevokeTenantRoleNoContent) String() string {
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleNoContent", 204)
}

func (o *RevokeTenantRoleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	return nil
}

// NewRevokeTenantRoleUnauthorized creates a RevokeTenantRoleUnauthorized with default headers values
func NewRevokeTenantRoleUnauthorized() *RevokeTenantRoleUnauthorized {
	return &RevokeTenantRoleUnauthorized{}
}

/*
RevokeTenantRoleUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeTenantRoleUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke tenant role unauthorized response has a 2xx status code
func (o *RevokeTenantRoleUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke tenant role unauthorized response has a 3xx status code
func (o *RevokeTenantRoleUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke tenant role unauthorized response has a 4xx status code
func (o *RevokeTenantRoleUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke tenant role unauthorized response has a 5xx status code
func (o *RevokeTenantRoleUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke tenant role unauthorized response a status code equal to that given
func (o *RevokeTenantRoleUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke tenant role unauthorized response
func (o *RevokeTenantRoleUnauthorized) Code() int {
	return 401
}

func (o *RevokeTenantRoleUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleUnauthorized %s", 401, payload)
}

func (o *RevokeTenantRoleUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleUnauthorized %s", 401, payload)
}

func (o *RevokeTenantRoleUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeTenantRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeTenantRoleForbidden creates a RevokeTenantRoleForbidden with default headers values
func NewRevokeTenantRoleForbidden() *RevokeTenantRoleForbidden {
	return &RevokeTenantRoleForbidden{}
}

/*
RevokeTenantRoleForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeTenantRoleForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke tenant role forbidden response has a 2xx status code
func (o *RevokeTenantRoleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke tenant role forbidden response has a 3xx status code
func (o *RevokeTenantRoleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke tenant role forbidden response has a 4xx status code
func (o *RevokeTenantRoleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke tenant role forbidden response has a 5xx status code
func (o *RevokeTenantRoleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke tenant role forbidden response a status code equal to that given
func (o *RevokeTenantRoleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke tenant role forbidden response
func (o *RevokeTenantRoleForbidden) Code() int {
	return 403
}

func (o *RevokeTenantRoleForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleForbidden %s", 403, payload)
}

func (o *RevokeTenantRoleForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleForbidden %s", 403, payload)
}

func (o *RevokeTenantRoleForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeTenantRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeTenantRoleNotFound creates a RevokeTenantRoleNotFound with default headers values
func NewRevokeTenantRoleNotFound() *RevokeTenantRoleNotFound {
	return &RevokeTenantRoleNotFound{}
}

/*
RevokeTenantRoleNotFound describes a response with status code 404, with default header values.

Not found
*/
type RevokeTenantRoleNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke tenant role not found response has a 2xx status code
func (o *RevokeTenantRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke tenant role not found response has a 3xx status code
func (o *RevokeTenantRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke tenant role not found response has a 4xx status code
func (o *RevokeTenantRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke tenant role not found response has a 5xx status code
func (o *RevokeTenantRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke tenant role not found response a status code equal to that given
func (o *RevokeTenantRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke tenant role not found response
func (o *RevokeTenantRoleNotFound) Code() int {
	return 404
}

func (o *RevokeTenantRoleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleNotFound %s", 404, payload)
}

func (o *RevokeTenantRoleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleNotFound %s", 404, payload)
}

func (o *RevokeTenantRoleNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeTenantRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeTenantRoleUnprocessableEntity creates a RevokeTenantRoleUnprocessableEntity with default headers values
func NewRevokeTenantRoleUnprocessableEntity() *RevokeTenantRoleUnprocessableEntity {
	return &RevokeTenantRoleUnprocessableEntity{}
}

/*
RevokeTenantRoleUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type RevokeTenantRoleUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke tenant role unprocessable entity response has a 2xx status code
func (o *RevokeTenantRoleUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke tenant role unprocessable entity response has a 3xx status code
func (o *RevokeTenantRoleUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke tenant role unprocessable entity response has a 4xx status code
func (o *RevokeTenantRoleUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke tenant role unprocessable entity response has a 5xx status code
func (o *RevokeTenantRoleUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke tenant role unprocessable entity response a status code equal to that given
func (o *RevokeTenantRoleUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the revoke tenant role unprocessable entity response
func (o *RevokeTenantRoleUnprocessableEntity) Code() int {
	return 422
}

func (o *RevokeTenantRoleUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleUnprocessableEntity %s", 422, payload)
}

func (o *RevokeTenantRoleUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleUnprocessableEntity %s", 422, payload)
}

func (o *RevokeTenantRoleUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeTenantRoleUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeTenantRoleTooManyRequests creates a RevokeTenantRoleTooManyRequests with default headers values
func NewRevokeTenantRoleTooManyRequests() *RevokeTenantRoleTooManyRequests {
	return &RevokeTenantRoleTooManyRequests{}
}

/*
RevokeTenantRoleTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RevokeTenantRoleTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke tenant role too many requests response has a 2xx status code
func (o *RevokeTenantRoleTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke tenant role too many requests response has a 3xx status code
func (o *RevokeTenantRoleTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke tenant role too many requests response has a 4xx status code
func (o *RevokeTenantRoleTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke tenant role too many requests response has a 5xx status code
func (o *RevokeTenantRoleTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke tenant role too many requests response a status code equal to that given
func (o *RevokeTenantRoleTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke tenant role too many requests response
func (o *RevokeTenantRoleTooManyRequests) Code() int {
	return 429
}

func (o *RevokeTenantRoleTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleTooManyRequests %s", 429, payload)
}

func (o *RevokeTenantRoleTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /tenant/roles/revoke][%d] revokeTenantRoleTooManyRequests %s", 429, payload)
}

func (o *RevokeTenantRoleTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeTenantRoleTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
