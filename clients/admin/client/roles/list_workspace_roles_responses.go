// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListWorkspaceRolesReader is a Reader for the ListWorkspaceRoles structure.
type ListWorkspaceRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListWorkspaceRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListWorkspaceRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListWorkspaceRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListWorkspaceRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListWorkspaceRolesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListWorkspaceRolesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/roles] listWorkspaceRoles", response, response.Code())
	}
}

// NewListWorkspaceRolesOK creates a ListWorkspaceRolesOK with default headers values
func NewListWorkspaceRolesOK() *ListWorkspaceRolesOK {
	return &ListWorkspaceRolesOK{}
}

/*
ListWorkspaceRolesOK describes a response with status code 200, with default header values.

WorkspaceRoles
*/
type ListWorkspaceRolesOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.WorkspaceRolesResponse
}

// IsSuccess returns true when this list workspace roles o k response has a 2xx status code
func (o *ListWorkspaceRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list workspace roles o k response has a 3xx status code
func (o *ListWorkspaceRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace roles o k response has a 4xx status code
func (o *ListWorkspaceRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list workspace roles o k response has a 5xx status code
func (o *ListWorkspaceRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace roles o k response a status code equal to that given
func (o *ListWorkspaceRolesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list workspace roles o k response
func (o *ListWorkspaceRolesOK) Code() int {
	return 200
}

func (o *ListWorkspaceRolesOK) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesOK  %+v", 200, o.Payload)
}

func (o *ListWorkspaceRolesOK) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesOK  %+v", 200, o.Payload)
}

func (o *ListWorkspaceRolesOK) GetPayload() *models.WorkspaceRolesResponse {
	return o.Payload
}

func (o *ListWorkspaceRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.WorkspaceRolesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceRolesUnauthorized creates a ListWorkspaceRolesUnauthorized with default headers values
func NewListWorkspaceRolesUnauthorized() *ListWorkspaceRolesUnauthorized {
	return &ListWorkspaceRolesUnauthorized{}
}

/*
ListWorkspaceRolesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListWorkspaceRolesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace roles unauthorized response has a 2xx status code
func (o *ListWorkspaceRolesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace roles unauthorized response has a 3xx status code
func (o *ListWorkspaceRolesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace roles unauthorized response has a 4xx status code
func (o *ListWorkspaceRolesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace roles unauthorized response has a 5xx status code
func (o *ListWorkspaceRolesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace roles unauthorized response a status code equal to that given
func (o *ListWorkspaceRolesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list workspace roles unauthorized response
func (o *ListWorkspaceRolesUnauthorized) Code() int {
	return 401
}

func (o *ListWorkspaceRolesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListWorkspaceRolesUnauthorized) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListWorkspaceRolesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceRolesForbidden creates a ListWorkspaceRolesForbidden with default headers values
func NewListWorkspaceRolesForbidden() *ListWorkspaceRolesForbidden {
	return &ListWorkspaceRolesForbidden{}
}

/*
ListWorkspaceRolesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListWorkspaceRolesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace roles forbidden response has a 2xx status code
func (o *ListWorkspaceRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace roles forbidden response has a 3xx status code
func (o *ListWorkspaceRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace roles forbidden response has a 4xx status code
func (o *ListWorkspaceRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace roles forbidden response has a 5xx status code
func (o *ListWorkspaceRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace roles forbidden response a status code equal to that given
func (o *ListWorkspaceRolesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list workspace roles forbidden response
func (o *ListWorkspaceRolesForbidden) Code() int {
	return 403
}

func (o *ListWorkspaceRolesForbidden) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesForbidden  %+v", 403, o.Payload)
}

func (o *ListWorkspaceRolesForbidden) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesForbidden  %+v", 403, o.Payload)
}

func (o *ListWorkspaceRolesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceRolesNotFound creates a ListWorkspaceRolesNotFound with default headers values
func NewListWorkspaceRolesNotFound() *ListWorkspaceRolesNotFound {
	return &ListWorkspaceRolesNotFound{}
}

/*
ListWorkspaceRolesNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListWorkspaceRolesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace roles not found response has a 2xx status code
func (o *ListWorkspaceRolesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace roles not found response has a 3xx status code
func (o *ListWorkspaceRolesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace roles not found response has a 4xx status code
func (o *ListWorkspaceRolesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace roles not found response has a 5xx status code
func (o *ListWorkspaceRolesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace roles not found response a status code equal to that given
func (o *ListWorkspaceRolesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list workspace roles not found response
func (o *ListWorkspaceRolesNotFound) Code() int {
	return 404
}

func (o *ListWorkspaceRolesNotFound) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesNotFound  %+v", 404, o.Payload)
}

func (o *ListWorkspaceRolesNotFound) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesNotFound  %+v", 404, o.Payload)
}

func (o *ListWorkspaceRolesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceRolesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListWorkspaceRolesTooManyRequests creates a ListWorkspaceRolesTooManyRequests with default headers values
func NewListWorkspaceRolesTooManyRequests() *ListWorkspaceRolesTooManyRequests {
	return &ListWorkspaceRolesTooManyRequests{}
}

/*
ListWorkspaceRolesTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListWorkspaceRolesTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list workspace roles too many requests response has a 2xx status code
func (o *ListWorkspaceRolesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list workspace roles too many requests response has a 3xx status code
func (o *ListWorkspaceRolesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list workspace roles too many requests response has a 4xx status code
func (o *ListWorkspaceRolesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list workspace roles too many requests response has a 5xx status code
func (o *ListWorkspaceRolesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list workspace roles too many requests response a status code equal to that given
func (o *ListWorkspaceRolesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list workspace roles too many requests response
func (o *ListWorkspaceRolesTooManyRequests) Code() int {
	return 429
}

func (o *ListWorkspaceRolesTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListWorkspaceRolesTooManyRequests) String() string {
	return fmt.Sprintf("[GET /servers/{wid}/roles][%d] listWorkspaceRolesTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListWorkspaceRolesTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListWorkspaceRolesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
