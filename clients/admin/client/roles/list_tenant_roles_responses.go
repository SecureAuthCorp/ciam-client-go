// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// ListTenantRolesReader is a Reader for the ListTenantRoles structure.
type ListTenantRolesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTenantRolesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTenantRolesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListTenantRolesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListTenantRolesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListTenantRolesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListTenantRolesTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /tenant/roles] listTenantRoles", response, response.Code())
	}
}

// NewListTenantRolesOK creates a ListTenantRolesOK with default headers values
func NewListTenantRolesOK() *ListTenantRolesOK {
	return &ListTenantRolesOK{}
}

/*
ListTenantRolesOK describes a response with status code 200, with default header values.

TenantRoles
*/
type ListTenantRolesOK struct {

	/* The ETag HTTP header is an identifier for a specific version of a resource

	in:header

	     Format: etag
	*/
	Etag string

	Payload *models.TenantRolesResponse
}

// IsSuccess returns true when this list tenant roles o k response has a 2xx status code
func (o *ListTenantRolesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list tenant roles o k response has a 3xx status code
func (o *ListTenantRolesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tenant roles o k response has a 4xx status code
func (o *ListTenantRolesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list tenant roles o k response has a 5xx status code
func (o *ListTenantRolesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list tenant roles o k response a status code equal to that given
func (o *ListTenantRolesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list tenant roles o k response
func (o *ListTenantRolesOK) Code() int {
	return 200
}

func (o *ListTenantRolesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesOK %s", 200, payload)
}

func (o *ListTenantRolesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesOK %s", 200, payload)
}

func (o *ListTenantRolesOK) GetPayload() *models.TenantRolesResponse {
	return o.Payload
}

func (o *ListTenantRolesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header etag
	hdrEtag := response.GetHeader("etag")

	if hdrEtag != "" {
		o.Etag = hdrEtag
	}

	o.Payload = new(models.TenantRolesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTenantRolesUnauthorized creates a ListTenantRolesUnauthorized with default headers values
func NewListTenantRolesUnauthorized() *ListTenantRolesUnauthorized {
	return &ListTenantRolesUnauthorized{}
}

/*
ListTenantRolesUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListTenantRolesUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list tenant roles unauthorized response has a 2xx status code
func (o *ListTenantRolesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tenant roles unauthorized response has a 3xx status code
func (o *ListTenantRolesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tenant roles unauthorized response has a 4xx status code
func (o *ListTenantRolesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list tenant roles unauthorized response has a 5xx status code
func (o *ListTenantRolesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list tenant roles unauthorized response a status code equal to that given
func (o *ListTenantRolesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list tenant roles unauthorized response
func (o *ListTenantRolesUnauthorized) Code() int {
	return 401
}

func (o *ListTenantRolesUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesUnauthorized %s", 401, payload)
}

func (o *ListTenantRolesUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesUnauthorized %s", 401, payload)
}

func (o *ListTenantRolesUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListTenantRolesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTenantRolesForbidden creates a ListTenantRolesForbidden with default headers values
func NewListTenantRolesForbidden() *ListTenantRolesForbidden {
	return &ListTenantRolesForbidden{}
}

/*
ListTenantRolesForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListTenantRolesForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list tenant roles forbidden response has a 2xx status code
func (o *ListTenantRolesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tenant roles forbidden response has a 3xx status code
func (o *ListTenantRolesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tenant roles forbidden response has a 4xx status code
func (o *ListTenantRolesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list tenant roles forbidden response has a 5xx status code
func (o *ListTenantRolesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list tenant roles forbidden response a status code equal to that given
func (o *ListTenantRolesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list tenant roles forbidden response
func (o *ListTenantRolesForbidden) Code() int {
	return 403
}

func (o *ListTenantRolesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesForbidden %s", 403, payload)
}

func (o *ListTenantRolesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesForbidden %s", 403, payload)
}

func (o *ListTenantRolesForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListTenantRolesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTenantRolesNotFound creates a ListTenantRolesNotFound with default headers values
func NewListTenantRolesNotFound() *ListTenantRolesNotFound {
	return &ListTenantRolesNotFound{}
}

/*
ListTenantRolesNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListTenantRolesNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list tenant roles not found response has a 2xx status code
func (o *ListTenantRolesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tenant roles not found response has a 3xx status code
func (o *ListTenantRolesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tenant roles not found response has a 4xx status code
func (o *ListTenantRolesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list tenant roles not found response has a 5xx status code
func (o *ListTenantRolesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list tenant roles not found response a status code equal to that given
func (o *ListTenantRolesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list tenant roles not found response
func (o *ListTenantRolesNotFound) Code() int {
	return 404
}

func (o *ListTenantRolesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesNotFound %s", 404, payload)
}

func (o *ListTenantRolesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesNotFound %s", 404, payload)
}

func (o *ListTenantRolesNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListTenantRolesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTenantRolesTooManyRequests creates a ListTenantRolesTooManyRequests with default headers values
func NewListTenantRolesTooManyRequests() *ListTenantRolesTooManyRequests {
	return &ListTenantRolesTooManyRequests{}
}

/*
ListTenantRolesTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListTenantRolesTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list tenant roles too many requests response has a 2xx status code
func (o *ListTenantRolesTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list tenant roles too many requests response has a 3xx status code
func (o *ListTenantRolesTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list tenant roles too many requests response has a 4xx status code
func (o *ListTenantRolesTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list tenant roles too many requests response has a 5xx status code
func (o *ListTenantRolesTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list tenant roles too many requests response a status code equal to that given
func (o *ListTenantRolesTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list tenant roles too many requests response
func (o *ListTenantRolesTooManyRequests) Code() int {
	return 429
}

func (o *ListTenantRolesTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesTooManyRequests %s", 429, payload)
}

func (o *ListTenantRolesTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /tenant/roles][%d] listTenantRolesTooManyRequests %s", 429, payload)
}

func (o *ListTenantRolesTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListTenantRolesTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
