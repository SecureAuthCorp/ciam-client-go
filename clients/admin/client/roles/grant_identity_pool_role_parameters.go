// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/admin/models"
)

// NewGrantIdentityPoolRoleParams creates a new GrantIdentityPoolRoleParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGrantIdentityPoolRoleParams() *GrantIdentityPoolRoleParams {
	return &GrantIdentityPoolRoleParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGrantIdentityPoolRoleParamsWithTimeout creates a new GrantIdentityPoolRoleParams object
// with the ability to set a timeout on a request.
func NewGrantIdentityPoolRoleParamsWithTimeout(timeout time.Duration) *GrantIdentityPoolRoleParams {
	return &GrantIdentityPoolRoleParams{
		timeout: timeout,
	}
}

// NewGrantIdentityPoolRoleParamsWithContext creates a new GrantIdentityPoolRoleParams object
// with the ability to set a context for a request.
func NewGrantIdentityPoolRoleParamsWithContext(ctx context.Context) *GrantIdentityPoolRoleParams {
	return &GrantIdentityPoolRoleParams{
		Context: ctx,
	}
}

// NewGrantIdentityPoolRoleParamsWithHTTPClient creates a new GrantIdentityPoolRoleParams object
// with the ability to set a custom HTTPClient for a request.
func NewGrantIdentityPoolRoleParamsWithHTTPClient(client *http.Client) *GrantIdentityPoolRoleParams {
	return &GrantIdentityPoolRoleParams{
		HTTPClient: client,
	}
}

/*
GrantIdentityPoolRoleParams contains all the parameters to send to the API endpoint

	for the grant identity pool role operation.

	Typically these are written to a http.Request.
*/
type GrantIdentityPoolRoleParams struct {

	// Request.
	Request *models.GrantIdentityPoolRoleRequest

	/* IfMatch.

	   A server will only return requested resources if the resource matches one of the listed ETag value

	   Format: etag
	*/
	IfMatch *string

	/* IPID.

	   Identity pool id

	   Default: "default"
	*/
	IPID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the grant identity pool role params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GrantIdentityPoolRoleParams) WithDefaults() *GrantIdentityPoolRoleParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the grant identity pool role params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GrantIdentityPoolRoleParams) SetDefaults() {
	var (
		iPIDDefault = string("default")
	)

	val := GrantIdentityPoolRoleParams{
		IPID: iPIDDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) WithTimeout(timeout time.Duration) *GrantIdentityPoolRoleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) WithContext(ctx context.Context) *GrantIdentityPoolRoleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) WithHTTPClient(client *http.Client) *GrantIdentityPoolRoleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequest adds the request to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) WithRequest(request *models.GrantIdentityPoolRoleRequest) *GrantIdentityPoolRoleParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) SetRequest(request *models.GrantIdentityPoolRoleRequest) {
	o.Request = request
}

// WithIfMatch adds the ifMatch to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) WithIfMatch(ifMatch *string) *GrantIdentityPoolRoleParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithIPID adds the iPID to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) WithIPID(iPID string) *GrantIdentityPoolRoleParams {
	o.SetIPID(iPID)
	return o
}

// SetIPID adds the ipId to the grant identity pool role params
func (o *GrantIdentityPoolRoleParams) SetIPID(iPID string) {
	o.IPID = iPID
}

// WriteToRequest writes these params to a swagger request
func (o *GrantIdentityPoolRoleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Request != nil {
		if err := r.SetBodyParam(o.Request); err != nil {
			return err
		}
	}

	if o.IfMatch != nil {

		// header param if-match
		if err := r.SetHeaderParam("if-match", *o.IfMatch); err != nil {
			return err
		}
	}

	// path param ipID
	if err := r.SetPathParam("ipID", o.IPID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
