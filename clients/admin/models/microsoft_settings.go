// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MicrosoftSettings Microsoft IDP specific settings
//
// swagger:model MicrosoftSettings
type MicrosoftSettings struct {

	// OAuth client application identifier
	// Example: client
	ClientID string `json:"client_id,omitempty" yaml:"client_id,omitempty"`

	// If enabled, users' data is collected from the Microsoft Graph API
	//
	// You can only get user's data if you are entitled to call the Microsoft Graph API.
	GetUser bool `json:"get_user,omitempty" yaml:"get_user,omitempty"`

	// An array of user attributes fetched from the Microsoft Graph API
	GraphUserAttributes []string `json:"graph_user_attributes" yaml:"graph_user_attributes"`

	// An array of additional scopes your client requests
	// Example: ["email","profile","openid"]
	Scopes []string `json:"scopes" yaml:"scopes"`

	// Whether to send the identifier as a `login_hint` parameter to the IDP
	SendLoginHint bool `json:"send_login_hint,omitempty" yaml:"send_login_hint,omitempty"`
}

// Validate validates this microsoft settings
func (m *MicrosoftSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this microsoft settings based on context it is used
func (m *MicrosoftSettings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MicrosoftSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MicrosoftSettings) UnmarshalBinary(b []byte) error {
	var res MicrosoftSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
