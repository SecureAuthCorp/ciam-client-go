// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ServiceWithAudience service with audience
//
// swagger:model ServiceWithAudience
type ServiceWithAudience struct {

	// audience
	Audience string `json:"audience,omitempty"`

	// server id
	// Example: default
	AuthorizationServerID string `json:"authorization_server_id,omitempty"`

	// custom service audience
	// Example: https://api.example.com
	CustomAudience string `json:"custom_audience,omitempty"`

	// service description
	// Example: Service description
	Description string `json:"description,omitempty"`

	// gateway id
	GatewayID string `json:"gateway_id,omitempty"`

	// unique service id
	// Example: 1
	ID string `json:"id,omitempty"`

	// service name
	// Example: Sample service
	Name string `json:"name,omitempty"`

	// Is service a system service
	// Example: false
	System bool `json:"system,omitempty"`

	// tenant id
	// Example: default
	TenantID string `json:"tenant_id,omitempty"`

	// true if service has openapi 3 specification
	WithSpecification bool `json:"with_specification,omitempty"`
}

// Validate validates this service with audience
func (m *ServiceWithAudience) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this service with audience based on context it is used
func (m *ServiceWithAudience) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceWithAudience) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceWithAudience) UnmarshalBinary(b []byte) error {
	var res ServiceWithAudience
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
