// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ArculixAuth arculix auth
//
// swagger:model ArculixAuth
type ArculixAuth struct {

	// The Arculix client ID.
	// Required: true
	ClientID string `json:"client_id" yaml:"client_id"`

	// The Arculix client secret.
	// Required: true
	ClientSecret string `json:"client_secret" yaml:"client_secret"`
}

// Validate validates this arculix auth
func (m *ArculixAuth) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ArculixAuth) validateClientID(formats strfmt.Registry) error {

	if err := validate.RequiredString("client_id", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *ArculixAuth) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.RequiredString("client_secret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this arculix auth based on context it is used
func (m *ArculixAuth) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ArculixAuth) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArculixAuth) UnmarshalBinary(b []byte) error {
	var res ArculixAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
