// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DCRCreatedEventPayload d c r created event payload
//
// swagger:model DCRCreatedEventPayload
type DCRCreatedEventPayload struct {

	// The visitor's city
	City string `json:"city,omitempty" yaml:"city,omitempty"`

	// client details
	ClientDetails *DCRDetails `json:"client_details,omitempty" yaml:"client_details,omitempty"`

	// The visitor's country
	CountryCode string `json:"country_code,omitempty" yaml:"country_code,omitempty"`

	// Arculix DBFP `jwt` cookie.
	Dbfp string `json:"dbfp,omitempty" yaml:"dbfp,omitempty"`

	// The visitor's latitude
	Latitude string `json:"latitude,omitempty" yaml:"latitude,omitempty"`

	// The visitor's longitude
	Longitude string `json:"longitude,omitempty" yaml:"longitude,omitempty"`

	// Requester IP address obtained from system network socket information.
	RemoteAddr string `json:"remote_addr,omitempty" yaml:"remote_addr,omitempty"`

	// Requester IP address obtained from True-Client-IP header.
	TrueClientIP string `json:"true_client_ip,omitempty" yaml:"true_client_ip,omitempty"`

	// A characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.
	UserAgent string `json:"user_agent,omitempty" yaml:"user_agent,omitempty"`

	// Requester IP address obtained from X-Forwarded-For header.
	XForwardedFor string `json:"x_forwarded_for,omitempty" yaml:"x_forwarded_for,omitempty"`

	// Requester IP address obtained from X-Real-IP header.
	XRealIP string `json:"x_real_ip,omitempty" yaml:"x_real_ip,omitempty"`
}

// Validate validates this d c r created event payload
func (m *DCRCreatedEventPayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DCRCreatedEventPayload) validateClientDetails(formats strfmt.Registry) error {
	if swag.IsZero(m.ClientDetails) { // not required
		return nil
	}

	if m.ClientDetails != nil {
		if err := m.ClientDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("client_details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("client_details")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this d c r created event payload based on the context it is used
func (m *DCRCreatedEventPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateClientDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DCRCreatedEventPayload) contextValidateClientDetails(ctx context.Context, formats strfmt.Registry) error {

	if m.ClientDetails != nil {

		if swag.IsZero(m.ClientDetails) { // not required
			return nil
		}

		if err := m.ClientDetails.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("client_details")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("client_details")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DCRCreatedEventPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DCRCreatedEventPayload) UnmarshalBinary(b []byte) error {
	var res DCRCreatedEventPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
