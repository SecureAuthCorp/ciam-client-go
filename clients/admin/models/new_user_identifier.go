// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewUserIdentifier NewUserIdentifier new user identifier
//
// swagger:model NewUserIdentifier
type NewUserIdentifier struct {

	// identifier
	// Required: true
	Identifier string `json:"identifier"`

	// identifier metadata
	Metadata map[string]interface{} `json:"metadata,omitempty"`

	// type
	// Example: email
	// Required: true
	// Enum: [email mobile uid external federated]
	Type string `json:"type"`
}

// Validate validates this new user identifier
func (m *NewUserIdentifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIdentifier(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewUserIdentifier) validateIdentifier(formats strfmt.Registry) error {

	if err := validate.RequiredString("identifier", "body", m.Identifier); err != nil {
		return err
	}

	return nil
}

var newUserIdentifierTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["email","mobile","uid","external","federated"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		newUserIdentifierTypeTypePropEnum = append(newUserIdentifierTypeTypePropEnum, v)
	}
}

const (

	// NewUserIdentifierTypeEmail captures enum value "email"
	NewUserIdentifierTypeEmail string = "email"

	// NewUserIdentifierTypeMobile captures enum value "mobile"
	NewUserIdentifierTypeMobile string = "mobile"

	// NewUserIdentifierTypeUID captures enum value "uid"
	NewUserIdentifierTypeUID string = "uid"

	// NewUserIdentifierTypeExternal captures enum value "external"
	NewUserIdentifierTypeExternal string = "external"

	// NewUserIdentifierTypeFederated captures enum value "federated"
	NewUserIdentifierTypeFederated string = "federated"
)

// prop value enum
func (m *NewUserIdentifier) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, newUserIdentifierTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *NewUserIdentifier) validateType(formats strfmt.Registry) error {

	if err := validate.RequiredString("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this new user identifier based on context it is used
func (m *NewUserIdentifier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NewUserIdentifier) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewUserIdentifier) UnmarshalBinary(b []byte) error {
	var res NewUserIdentifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
