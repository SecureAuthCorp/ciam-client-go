// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PolicyPayload policy payload
//
// swagger:model PolicyPayload
type PolicyPayload struct {

	// String representation of the policy execution point type
	ExecutionPointType string `json:"execution_point_type,omitempty" yaml:"execution_point_type,omitempty"`

	// Unique key, derived from execution point, of protected resource where the policy is assigned.
	//
	// Example key for policy in default tenant, default server protecting scope email for machine access.
	// default/default/scope/email/machine
	Key string `json:"key,omitempty" yaml:"key,omitempty"`

	// Policy id
	PolicyID string `json:"policy_id,omitempty" yaml:"policy_id,omitempty"`

	// Define a type of your policy
	//
	// ACP is provided with the following policy types: user, developer, machine, dcr, api.
	Type string `json:"type,omitempty" yaml:"type,omitempty"`
}

// Validate validates this policy payload
func (m *PolicyPayload) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this policy payload based on context it is used
func (m *PolicyPayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PolicyPayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PolicyPayload) UnmarshalBinary(b []byte) error {
	var res PolicyPayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
