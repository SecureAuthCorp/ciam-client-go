// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DefaultBruteForceLimit default brute force limit
//
// swagger:model DefaultBruteForceLimit
type DefaultBruteForceLimit struct {

	// duration until retry permitted in minutes
	// Format: duration
	BlockDuration strfmt.Duration `json:"block_duration,omitempty" yaml:"block_duration,omitempty"`

	// number of attempts before blocked
	MaxAttempts int64 `json:"max_attempts,omitempty" yaml:"max_attempts,omitempty"`
}

// Validate validates this default brute force limit
func (m *DefaultBruteForceLimit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBlockDuration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DefaultBruteForceLimit) validateBlockDuration(formats strfmt.Registry) error {
	if swag.IsZero(m.BlockDuration) { // not required
		return nil
	}

	if err := validate.FormatOf("block_duration", "body", "duration", m.BlockDuration.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this default brute force limit based on context it is used
func (m *DefaultBruteForceLimit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DefaultBruteForceLimit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DefaultBruteForceLimit) UnmarshalBinary(b []byte) error {
	var res DefaultBruteForceLimit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
