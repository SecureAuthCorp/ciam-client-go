// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VanityDomain vanity domain
//
// swagger:model VanityDomain
type VanityDomain struct {

	// base path to use with a configured vanity domain
	// Example: /prefix
	BasePath string `json:"base_path,omitempty"`

	// domain cerificate
	Cert string `json:"cert,omitempty"`

	// vanity domain
	// Example: example.com
	// Required: true
	Domain string `json:"domain"`

	// domain private key
	Key string `json:"key,omitempty"`

	// Unique identifier of an authorization server (workspace)
	// Example: default
	ServerID string `json:"server_id,omitempty"`

	// ID of a tenant
	// Example: default
	TenantID string `json:"tenant_id,omitempty"`
}

// Validate validates this vanity domain
func (m *VanityDomain) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDomain(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VanityDomain) validateDomain(formats strfmt.Registry) error {

	if err := validate.RequiredString("domain", "body", m.Domain); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vanity domain based on context it is used
func (m *VanityDomain) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VanityDomain) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VanityDomain) UnmarshalBinary(b []byte) error {
	var res VanityDomain
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
