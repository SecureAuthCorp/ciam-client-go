// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// WorkspacePermissionsResponse workspace permissions response
//
// swagger:model WorkspacePermissionsResponse
type WorkspacePermissionsResponse struct {

	// create identity pool
	CreateIdentityPool bool `json:"create_identity_pool,omitempty"`

	// delete organization
	DeleteOrganization bool `json:"delete_organization,omitempty"`

	// delete workspace
	DeleteWorkspace bool `json:"delete_workspace,omitempty"`

	// discover workspace
	DiscoverWorkspace bool `json:"discover_workspace,omitempty"`

	// get organization
	GetOrganization bool `json:"get_organization,omitempty"`

	// get workspace
	GetWorkspace bool `json:"get_workspace,omitempty"`

	// list identity pools
	ListIdentityPools bool `json:"list_identity_pools,omitempty"`

	// manage admin role
	ManageAdminRole bool `json:"manage_admin_role,omitempty"`

	// manage apis
	ManageApis bool `json:"manage_apis,omitempty"`

	// manage auditor role
	ManageAuditorRole bool `json:"manage_auditor_role,omitempty"`

	// manage claims
	ManageClaims bool `json:"manage_claims,omitempty"`

	// manage clients
	ManageClients bool `json:"manage_clients,omitempty"`

	// manage custom apps
	ManageCustomApps bool `json:"manage_custom_apps,omitempty"`

	// manage gateways
	ManageGateways bool `json:"manage_gateways,omitempty"`

	// manage idps
	ManageIdps bool `json:"manage_idps,omitempty"`

	// manage manager role
	ManageManagerRole bool `json:"manage_manager_role,omitempty"`

	// manage member role
	ManageMemberRole bool `json:"manage_member_role,omitempty"`

	// manage policies
	ManagePolicies bool `json:"manage_policies,omitempty"`

	// manage scripts
	ManageScripts bool `json:"manage_scripts,omitempty"`

	// manage secrets
	ManageSecrets bool `json:"manage_secrets,omitempty"`

	// manage services
	ManageServices bool `json:"manage_services,omitempty"`

	// manage user manager role
	ManageUserManagerRole bool `json:"manage_user_manager_role,omitempty"`

	// manage webhooks
	ManageWebhooks bool `json:"manage_webhooks,omitempty"`

	// read analytics
	ReadAnalytics bool `json:"read_analytics,omitempty"`

	// read apis
	ReadApis bool `json:"read_apis,omitempty"`

	// read audit events
	ReadAuditEvents bool `json:"read_audit_events,omitempty"`

	// read claims
	ReadClaims bool `json:"read_claims,omitempty"`

	// read clients
	ReadClients bool `json:"read_clients,omitempty"`

	// read custom apps
	ReadCustomApps bool `json:"read_custom_apps,omitempty"`

	// read gateways
	ReadGateways bool `json:"read_gateways,omitempty"`

	// read idps
	ReadIdps bool `json:"read_idps,omitempty"`

	// read policies
	ReadPolicies bool `json:"read_policies,omitempty"`

	// read roles
	ReadRoles bool `json:"read_roles,omitempty"`

	// read scripts
	ReadScripts bool `json:"read_scripts,omitempty"`

	// read secrets
	ReadSecrets bool `json:"read_secrets,omitempty"`

	// read services
	ReadServices bool `json:"read_services,omitempty"`

	// read webhooks
	ReadWebhooks bool `json:"read_webhooks,omitempty"`

	// update organization
	UpdateOrganization bool `json:"update_organization,omitempty"`

	// update workspace
	UpdateWorkspace bool `json:"update_workspace,omitempty"`

	// update workspace metadata
	UpdateWorkspaceMetadata bool `json:"update_workspace_metadata,omitempty"`
}

// Validate validates this workspace permissions response
func (m *WorkspacePermissionsResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this workspace permissions response based on context it is used
func (m *WorkspacePermissionsResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WorkspacePermissionsResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WorkspacePermissionsResponse) UnmarshalBinary(b []byte) error {
	var res WorkspacePermissionsResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
