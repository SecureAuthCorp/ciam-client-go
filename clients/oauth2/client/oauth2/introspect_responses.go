// Code generated by go-swagger; DO NOT EDIT.

package oauth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/oauth2/models"
)

// IntrospectReader is a Reader for the Introspect structure.
type IntrospectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IntrospectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIntrospectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewIntrospectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIntrospectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewIntrospectTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewIntrospectOK creates a IntrospectOK with default headers values
func NewIntrospectOK() *IntrospectOK {
	return &IntrospectOK{}
}

/*
IntrospectOK describes a response with status code 200, with default header values.

Token introspection response
*/
type IntrospectOK struct {
	Payload *models.IntrospectResponse
}

// IsSuccess returns true when this introspect o k response has a 2xx status code
func (o *IntrospectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this introspect o k response has a 3xx status code
func (o *IntrospectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this introspect o k response has a 4xx status code
func (o *IntrospectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this introspect o k response has a 5xx status code
func (o *IntrospectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this introspect o k response a status code equal to that given
func (o *IntrospectOK) IsCode(code int) bool {
	return code == 200
}

func (o *IntrospectOK) Error() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectOK  %+v", 200, o.Payload)
}

func (o *IntrospectOK) String() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectOK  %+v", 200, o.Payload)
}

func (o *IntrospectOK) GetPayload() *models.IntrospectResponse {
	return o.Payload
}

func (o *IntrospectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IntrospectResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntrospectUnauthorized creates a IntrospectUnauthorized with default headers values
func NewIntrospectUnauthorized() *IntrospectUnauthorized {
	return &IntrospectUnauthorized{}
}

/*
IntrospectUnauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type IntrospectUnauthorized struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this introspect unauthorized response has a 2xx status code
func (o *IntrospectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this introspect unauthorized response has a 3xx status code
func (o *IntrospectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this introspect unauthorized response has a 4xx status code
func (o *IntrospectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this introspect unauthorized response has a 5xx status code
func (o *IntrospectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this introspect unauthorized response a status code equal to that given
func (o *IntrospectUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *IntrospectUnauthorized) Error() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectUnauthorized  %+v", 401, o.Payload)
}

func (o *IntrospectUnauthorized) String() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectUnauthorized  %+v", 401, o.Payload)
}

func (o *IntrospectUnauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *IntrospectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntrospectNotFound creates a IntrospectNotFound with default headers values
func NewIntrospectNotFound() *IntrospectNotFound {
	return &IntrospectNotFound{}
}

/*
IntrospectNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type IntrospectNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this introspect not found response has a 2xx status code
func (o *IntrospectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this introspect not found response has a 3xx status code
func (o *IntrospectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this introspect not found response has a 4xx status code
func (o *IntrospectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this introspect not found response has a 5xx status code
func (o *IntrospectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this introspect not found response a status code equal to that given
func (o *IntrospectNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *IntrospectNotFound) Error() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectNotFound  %+v", 404, o.Payload)
}

func (o *IntrospectNotFound) String() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectNotFound  %+v", 404, o.Payload)
}

func (o *IntrospectNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *IntrospectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIntrospectTooManyRequests creates a IntrospectTooManyRequests with default headers values
func NewIntrospectTooManyRequests() *IntrospectTooManyRequests {
	return &IntrospectTooManyRequests{}
}

/*
IntrospectTooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type IntrospectTooManyRequests struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this introspect too many requests response has a 2xx status code
func (o *IntrospectTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this introspect too many requests response has a 3xx status code
func (o *IntrospectTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this introspect too many requests response has a 4xx status code
func (o *IntrospectTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this introspect too many requests response has a 5xx status code
func (o *IntrospectTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this introspect too many requests response a status code equal to that given
func (o *IntrospectTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *IntrospectTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectTooManyRequests  %+v", 429, o.Payload)
}

func (o *IntrospectTooManyRequests) String() string {
	return fmt.Sprintf("[POST /oauth2/introspect][%d] introspectTooManyRequests  %+v", 429, o.Payload)
}

func (o *IntrospectTooManyRequests) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *IntrospectTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
