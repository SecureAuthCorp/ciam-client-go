// Code generated by go-swagger; DO NOT EDIT.

package oauth2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewRpInitiatedLogoutPostParams creates a new RpInitiatedLogoutPostParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewRpInitiatedLogoutPostParams() *RpInitiatedLogoutPostParams {
	return &RpInitiatedLogoutPostParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewRpInitiatedLogoutPostParamsWithTimeout creates a new RpInitiatedLogoutPostParams object
// with the ability to set a timeout on a request.
func NewRpInitiatedLogoutPostParamsWithTimeout(timeout time.Duration) *RpInitiatedLogoutPostParams {
	return &RpInitiatedLogoutPostParams{
		timeout: timeout,
	}
}

// NewRpInitiatedLogoutPostParamsWithContext creates a new RpInitiatedLogoutPostParams object
// with the ability to set a context for a request.
func NewRpInitiatedLogoutPostParamsWithContext(ctx context.Context) *RpInitiatedLogoutPostParams {
	return &RpInitiatedLogoutPostParams{
		Context: ctx,
	}
}

// NewRpInitiatedLogoutPostParamsWithHTTPClient creates a new RpInitiatedLogoutPostParams object
// with the ability to set a custom HTTPClient for a request.
func NewRpInitiatedLogoutPostParamsWithHTTPClient(client *http.Client) *RpInitiatedLogoutPostParams {
	return &RpInitiatedLogoutPostParams{
		HTTPClient: client,
	}
}

/*
RpInitiatedLogoutPostParams contains all the parameters to send to the API endpoint

	for the rp initiated logout post operation.

	Typically these are written to a http.Request.
*/
type RpInitiatedLogoutPostParams struct {

	// ClientID.
	ClientID *string

	// IDTokenHint.
	IDTokenHint *string

	// LogoutHint.
	LogoutHint *string

	// PostLogoutRedirectURI.
	PostLogoutRedirectURI *string

	// State.
	State *string

	// UILocales.
	UILocales []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the rp initiated logout post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RpInitiatedLogoutPostParams) WithDefaults() *RpInitiatedLogoutPostParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the rp initiated logout post params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *RpInitiatedLogoutPostParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithTimeout(timeout time.Duration) *RpInitiatedLogoutPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithContext(ctx context.Context) *RpInitiatedLogoutPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithHTTPClient(client *http.Client) *RpInitiatedLogoutPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClientID adds the clientID to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithClientID(clientID *string) *RpInitiatedLogoutPostParams {
	o.SetClientID(clientID)
	return o
}

// SetClientID adds the clientId to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetClientID(clientID *string) {
	o.ClientID = clientID
}

// WithIDTokenHint adds the iDTokenHint to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithIDTokenHint(iDTokenHint *string) *RpInitiatedLogoutPostParams {
	o.SetIDTokenHint(iDTokenHint)
	return o
}

// SetIDTokenHint adds the idTokenHint to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetIDTokenHint(iDTokenHint *string) {
	o.IDTokenHint = iDTokenHint
}

// WithLogoutHint adds the logoutHint to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithLogoutHint(logoutHint *string) *RpInitiatedLogoutPostParams {
	o.SetLogoutHint(logoutHint)
	return o
}

// SetLogoutHint adds the logoutHint to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetLogoutHint(logoutHint *string) {
	o.LogoutHint = logoutHint
}

// WithPostLogoutRedirectURI adds the postLogoutRedirectURI to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithPostLogoutRedirectURI(postLogoutRedirectURI *string) *RpInitiatedLogoutPostParams {
	o.SetPostLogoutRedirectURI(postLogoutRedirectURI)
	return o
}

// SetPostLogoutRedirectURI adds the postLogoutRedirectUri to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetPostLogoutRedirectURI(postLogoutRedirectURI *string) {
	o.PostLogoutRedirectURI = postLogoutRedirectURI
}

// WithState adds the state to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithState(state *string) *RpInitiatedLogoutPostParams {
	o.SetState(state)
	return o
}

// SetState adds the state to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetState(state *string) {
	o.State = state
}

// WithUILocales adds the uILocales to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) WithUILocales(uILocales []string) *RpInitiatedLogoutPostParams {
	o.SetUILocales(uILocales)
	return o
}

// SetUILocales adds the uiLocales to the rp initiated logout post params
func (o *RpInitiatedLogoutPostParams) SetUILocales(uILocales []string) {
	o.UILocales = uILocales
}

// WriteToRequest writes these params to a swagger request
func (o *RpInitiatedLogoutPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ClientID != nil {

		// form param client_id
		var frClientID string
		if o.ClientID != nil {
			frClientID = *o.ClientID
		}
		fClientID := frClientID
		if fClientID != "" {
			if err := r.SetFormParam("client_id", fClientID); err != nil {
				return err
			}
		}
	}

	if o.IDTokenHint != nil {

		// form param id_token_hint
		var frIDTokenHint string
		if o.IDTokenHint != nil {
			frIDTokenHint = *o.IDTokenHint
		}
		fIDTokenHint := frIDTokenHint
		if fIDTokenHint != "" {
			if err := r.SetFormParam("id_token_hint", fIDTokenHint); err != nil {
				return err
			}
		}
	}

	if o.LogoutHint != nil {

		// form param logout_hint
		var frLogoutHint string
		if o.LogoutHint != nil {
			frLogoutHint = *o.LogoutHint
		}
		fLogoutHint := frLogoutHint
		if fLogoutHint != "" {
			if err := r.SetFormParam("logout_hint", fLogoutHint); err != nil {
				return err
			}
		}
	}

	if o.PostLogoutRedirectURI != nil {

		// form param post_logout_redirect_uri
		var frPostLogoutRedirectURI string
		if o.PostLogoutRedirectURI != nil {
			frPostLogoutRedirectURI = *o.PostLogoutRedirectURI
		}
		fPostLogoutRedirectURI := frPostLogoutRedirectURI
		if fPostLogoutRedirectURI != "" {
			if err := r.SetFormParam("post_logout_redirect_uri", fPostLogoutRedirectURI); err != nil {
				return err
			}
		}
	}

	if o.State != nil {

		// form param state
		var frState string
		if o.State != nil {
			frState = *o.State
		}
		fState := frState
		if fState != "" {
			if err := r.SetFormParam("state", fState); err != nil {
				return err
			}
		}
	}

	if o.UILocales != nil {

		// binding items for ui_locales
		joinedUILocales := o.bindParamUILocales(reg)

		// form array param ui_locales
		if err := r.SetFormParam("ui_locales", joinedUILocales...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamRpInitiatedLogoutPost binds the parameter ui_locales
func (o *RpInitiatedLogoutPostParams) bindParamUILocales(formats strfmt.Registry) []string {
	uILocalesIR := o.UILocales

	var uILocalesIC []string
	for _, uILocalesIIR := range uILocalesIR { // explode []string

		uILocalesIIV := uILocalesIIR // string as string
		uILocalesIC = append(uILocalesIC, uILocalesIIV)
	}

	// items.CollectionFormat: ""
	uILocalesIS := swag.JoinByFormat(uILocalesIC, "")

	return uILocalesIS
}
