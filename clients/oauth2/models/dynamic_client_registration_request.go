// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DynamicClientRegistrationRequest dynamic client registration request
//
// swagger:model DynamicClientRegistrationRequest
type DynamicClientRegistrationRequest struct {

	// The client application type.
	//
	// Client applications can be either of a `web` or `native` types.
	//
	// Web applications include clients like server web applications or service apps.
	//
	// Native applications include single-page applications (SPAs) and mobile or desktop
	// applications.
	//
	// Apply security measures according to the type of your application.
	// Example: web
	ApplicationType string `json:"application_type,omitempty" yaml:"application_type,omitempty"`

	// An array of dynamically calculated application types that can be used for filtering
	// Example: ["single_page","server_web","mobile_desktop","service","legacy","dcr"]
	// Read Only: true
	ApplicationTypes []string `json:"application_types" yaml:"application_types"`

	// Identity of the intended recipients (the audience).
	//
	// Typically, the audience is a single resource server or a list of resource servers.
	//
	// It is considered a good practice to limit the audience of the token for security purposes.
	Audience []string `json:"audience" yaml:"audience"`

	// Authorization details types
	//
	// Indicates what authorization details types the client can use.
	AuthorizationDetailsTypes []AuthorizationDetailType `json:"authorization_details_types" yaml:"authorization_details_types"`

	// Algorithm used for encrypting authorization responses.
	//
	// If both signing and encryption are requested, the response is first signed, and then encrypted.
	// As a result, a Nested JWT is obtained, as defined in JWT [RFC7519].
	//
	// If omitted, no encryption is applied by default.
	// Example: RSA-OAEP-256
	// Enum: [RSA-OAEP RSA-OAEP-256]
	AuthorizationEncryptedResponseAlg string `json:"authorization_encrypted_response_alg,omitempty" yaml:"authorization_encrypted_response_alg,omitempty"`

	// Algorithm used for encrypting authorization responses.
	//
	// With `authorization_encrypted_response_alg` specified, the default value is `A128CBC-HS256`.
	// When `authorization_encrypted_response_enc` is included, `authorization_encrypted_response_alg`
	// MUST also be provided in a request.
	// Example: A128CBC-HS256
	// Enum: [A256GCM A128CBC-HS256]
	AuthorizationEncryptedResponseEnc string `json:"authorization_encrypted_response_enc,omitempty" yaml:"authorization_encrypted_response_enc,omitempty"`

	// Algorithm used for signing authorization responses.
	//
	// With this parameter specified, the response is signed using JWS and according to the configured algorithm.
	//
	// `none` isn't allowed.
	// Example: RS256
	AuthorizationSignedResponseAlg string `json:"authorization_signed_response_alg,omitempty" yaml:"authorization_signed_response_alg,omitempty"`

	// OPTIONAL. The JWS alg algorithm value used by the client application to sign authentication requests.
	//
	// When omitted, the client application doesn't send signed authentication requests.
	BackchannelAuthenticationRequestSigningAlg string `json:"backchannel_authentication_request_signing_alg,omitempty" yaml:"backchannel_authentication_request_signing_alg,omitempty"`

	// REQUIRED for requests when the client application uses CIBA as an authorization grant type, and the token
	// delivery mode is set to `ping` or `push`.
	//
	// This parameter is the endpoint where an OP (OpenID Provider) posts a notification after end-user authentication.
	//
	// Input: an HTTPS URL.
	BackchannelClientNotificationEndpoint string `json:"backchannel_client_notification_endpoint,omitempty" yaml:"backchannel_client_notification_endpoint,omitempty"`

	// REQUIRED for requests when the client application uses CIBA as an authorization grant type.
	//
	// Input: `poll`, `ping`, or `push`.
	BackchannelTokenDeliveryMode string `json:"backchannel_token_delivery_mode,omitempty" yaml:"backchannel_token_delivery_mode,omitempty"`

	// OPTIONAL. A boolean value indicating the `user_code` parameter support by the client application.
	//
	// If omitted, the default value is `false`.
	//
	// This applies only when the `backchannel_user_code_parameter_supported` OP parameter is `true`.
	BackchannelUserCodeParameter bool `json:"backchannel_user_code_parameter,omitempty" yaml:"backchannel_user_code_parameter,omitempty"`

	// The client identifier time of issue.
	//
	// The value is the number of seconds between 1970-01-01T00:00:00Z (UTC) and the date/time of issue.
	ClientIDIssuedAt int64 `json:"client_id_issued_at,omitempty" yaml:"client_id_issued_at,omitempty"`

	// Human-readable name of a client application.
	// Example: My app
	ClientName string `json:"client_name,omitempty" yaml:"client_name,omitempty"`

	// The client secret expiration time.
	//
	// If the client secret does not expire, `client_secret_expires_at` = `0`.
	ClientSecretExpiresAt int64 `json:"client_secret_expires_at,omitempty" yaml:"client_secret_expires_at,omitempty"`

	// URI of a client application.
	ClientURI string `json:"client_uri,omitempty" yaml:"client_uri,omitempty"`

	// Date when the client application was created.
	// Example: 2022-04-07T19:17:31.323187Z
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// Description of the client application.
	Description string `json:"description,omitempty" yaml:"description,omitempty"`

	// Boolean value specifying whether the client always uses DPoP for token requests
	// If true, the authorization server will reject token requests from this client that do not contain the DPoP header.
	DpopBoundAccessTokens bool `json:"dpop_bound_access_tokens,omitempty" yaml:"dpop_bound_access_tokens,omitempty"`

	// An array of allowed OAuth client grant types.
	//
	// The `grantTypes` array stores OAuth flows that are allowed for a given client application.
	//
	// [Read more](https://cloudentity.com/developers/basics/oauth-grant-types/grant-types-overview/) about grant types.
	// Example: ["password","refresh_token","client_credentials","implicit","authorization_code"]
	GrantTypes []string `json:"grant_types" yaml:"grant_types"`

	// JWE alg algorithm for encrypting the ID token issued to this client application.
	// Enum: [RSA-OAEP RSA-OAEP-256]
	IDTokenEncryptedResponseAlg string `json:"id_token_encrypted_response_alg,omitempty" yaml:"id_token_encrypted_response_alg,omitempty"`

	// JWE enc algorithm for encrypting the ID token issued to this client application.
	// Enum: [A256GCM A128CBC-HS256]
	IDTokenEncryptedResponseEnc string `json:"id_token_encrypted_response_enc,omitempty" yaml:"id_token_encrypted_response_enc,omitempty"`

	// Algorithm for signing ID tokens issued for a client application.
	//
	// The default value depends on authorization server configuration.
	// Example: ES256
	// Enum: [RS256 ES256 PS256]
	IDTokenSignedResponseAlg string `json:"id_token_signed_response_alg,omitempty" yaml:"id_token_signed_response_alg,omitempty"`

	// An introspection endpoint authentication method configured for the client application (read-only).
	//
	// If empty, the `token_endpoint_auth_method` is used.
	//
	// Cloudentity supports the following client authentication methods:
	// `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
	// `self_signed_tls_client_auth`, `tls_client_auth`, `none`.
	//
	// [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
	// Example: client_secret_basic
	// Enum: [client_secret_basic client_secret_post client_secret_jwt private_key_jwt self_signed_tls_client_auth tls_client_auth none]
	IntrospectionEndpointAuthMethod string `json:"introspection_endpoint_auth_method,omitempty" yaml:"introspection_endpoint_auth_method,omitempty"`

	// jwks
	Jwks *ClientJWKs `json:"jwks,omitempty" yaml:"jwks,omitempty"`

	// A URL of JSON Web Key Set with the public keys used by a client application to authenticate to Cloudentity.
	JwksURI string `json:"jwks_uri,omitempty" yaml:"jwks_uri,omitempty"`

	// Logo URI.
	LogoURI string `json:"logo_uri,omitempty" yaml:"logo_uri,omitempty"`

	// External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
	// Data Recipient Brand.
	//
	// The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
	// required for authorization, and represents the audience(s) the JWT is intended for.
	// Example: 5647fe90-f6bc-11eb-9a03-0242ac130003
	OrganisationID string `json:"organisation_id,omitempty" yaml:"organisation_id,omitempty"`

	// Policy URL to read about how the profile data is used.
	PolicyURI string `json:"policy_uri,omitempty" yaml:"policy_uri,omitempty"`

	// Array of URLs to which a relying party may request that the user be redirected after a logout has been performed.
	PostLogoutRedirectUris []string `json:"post_logout_redirect_uris" yaml:"post_logout_redirect_uris"`

	// privacy
	Privacy *ClientPrivacy `json:"privacy,omitempty" yaml:"privacy,omitempty"`

	// redirect uris
	RedirectUris RedirectURIs `json:"redirect_uris,omitempty" yaml:"redirect_uris,omitempty"`

	// Optional JWE alg algorithm the client is declaring that it may use for encrypting Request Objects
	// Example: RSA-OAEP
	// Enum: [RSA-OAEP RSA-OAEP-256]
	RequestObjectEncryptionAlg string `json:"request_object_encryption_alg,omitempty" yaml:"request_object_encryption_alg,omitempty"`

	// Optional JWE enc algorithm the client is declaring that it may use for encrypting Request Objects
	// When `request_object_encryption_enc` is included, `request_object_encryption_alg` MUST also be provided.
	// Example: A256GCM
	// Enum: [A256GCM A128CBC-HS256]
	RequestObjectEncryptionEnc string `json:"request_object_encryption_enc,omitempty" yaml:"request_object_encryption_enc,omitempty"`

	// Request object signing algorithm for the token endpoint
	//
	// Cloudentity supports signing tokens with the RS256, ES256, and PS256 algorithms. If you do not want
	// to use a signing algorithm, set the value of this parameter to `none`.
	// Example: none
	// Enum: [any none RS256 ES256 PS256]
	RequestObjectSigningAlg string `json:"request_object_signing_alg,omitempty" yaml:"request_object_signing_alg,omitempty"`

	// Array of absolute URIs that points to the Request Object that holds authorization request parameters.
	RequestUris []string `json:"request_uris" yaml:"request_uris"`

	// Boolean parameter indicating whether the only means of initiating an authorization request the client is allowed to use is PAR.
	RequirePushedAuthorizationRequests bool `json:"require_pushed_authorization_requests,omitempty" yaml:"require_pushed_authorization_requests,omitempty"`

	// response types
	ResponseTypes ResponseTypes `json:"response_types,omitempty" yaml:"response_types,omitempty"`

	// A revocation endpoint authentication method configured for the client application (read-only).
	// If empty, the `token_endpoint_auth_method` is used.
	//
	// Cloudentity supports the following client authentication methods:
	// `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
	// `self_signed_tls_client_auth`, `tls_client_auth`, `none`.
	//
	// [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
	// Example: client_secret_basic
	// Enum: [client_secret_basic client_secret_post client_secret_jwt private_key_jwt self_signed_tls_client_auth tls_client_auth none]
	RevocationEndpointAuthMethod string `json:"revocation_endpoint_auth_method,omitempty" yaml:"revocation_endpoint_auth_method,omitempty"`

	// Space-separated list of scopes for compatibility with the OAuth specification.
	// Example: email offline_access openid
	Scope string `json:"scope,omitempty" yaml:"scope,omitempty"`

	// An array of string represented scopes assigned to a client application
	// Example: ["email","offline_access","openid"]
	Scopes []string `json:"scopes" yaml:"scopes"`

	// OPTIONAL. [A URL using the HTTPS scheme](https://openid.net/specs/openid-connect-registration-1_0.html#SectorIdentifierValidation).
	// It must reference a JSON file with the array of `redirect_uri` values.
	//
	// Pass this parameter when you use multiple domains in your `redirect_uris` or need a mechanism to allow changes in
	// domain without affecting consumer consent.
	//
	// [Read more](https://openid.net/specs/openid-connect-core-1_0.html)
	SectorIdentifierURI string `json:"sector_identifier_uri,omitempty" yaml:"sector_identifier_uri,omitempty"`

	// A unique identifier string (e.g., a Universally Unique Identifier
	// (UUID)) assigned by the client developer or software publisher.
	//
	// The `software_id` MUST remain the same across
	// multiple updates or versions of the same software package. The
	// value of this field is not intended to be human-readable and is
	// usually opaque to the client and authorization server.
	SoftwareID string `json:"software_id,omitempty" yaml:"software_id,omitempty"`

	// A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
	// asserts metadata values about the client software.  In some cases,
	// a software statement is issued directly by the client
	// developer.  In other cases, a software statement is issued by
	// a third-party organization for use by the client developer.
	//
	// In both cases, the trust relationship the authorization server has
	// with the issuer of the software statement is intended to be used
	// as an input to the evaluation of whether the registration request
	// is accepted.
	//
	// A software statement can be presented to an
	// authorization server as part of the client registration request.
	SoftwareStatement string `json:"software_statement,omitempty" yaml:"software_statement,omitempty"`

	// A version identifier string for the client software identified by
	// `software_id`. The value of the `software_version` MUST be changed
	// with any update of the client software identified by the same
	// `software_id`.
	SoftwareVersion string `json:"software_version,omitempty" yaml:"software_version,omitempty"`

	// Subject identifier type
	//
	// Stores information if the subject identifier is of the `public` or the `pairwise` type.
	//
	// Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
	// and are intended to be consumed by client applications. There are two types
	// of subject identifiers: `public` and `pairwise`.
	//
	// For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.
	//
	// For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
	// Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
	// activity without their permission.
	// Example: public
	// Enum: [public pairwise]
	SubjectType string `json:"subject_type,omitempty" yaml:"subject_type,omitempty"`

	// A string containing the value of an expected dNSName SAN entry in the certificate.
	TLSClientAuthSanDNS string `json:"tls_client_auth_san_dns,omitempty" yaml:"tls_client_auth_san_dns,omitempty"`

	// A string containing the value of an expected rfc822Name SAN entry in the certificate.
	TLSClientAuthSanEmail string `json:"tls_client_auth_san_email,omitempty" yaml:"tls_client_auth_san_email,omitempty"`

	// A string representation of an IP address in either dotted decimal notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined in [RFC5952]) that is expected to be present as an iPAddress SAN entry in the certificate.
	TLSClientAuthSanIP string `json:"tls_client_auth_san_ip,omitempty" yaml:"tls_client_auth_san_ip,omitempty"`

	// A string containing the value of an expected uniformResourceIdentifier SAN entry in the certificate.
	TLSClientAuthSanURI string `json:"tls_client_auth_san_uri,omitempty" yaml:"tls_client_auth_san_uri,omitempty"`

	// An [RFC4514] string representation of the expected subject distinguished name of the certificate.
	TLSClientAuthSubjectDn string `json:"tls_client_auth_subject_dn,omitempty" yaml:"tls_client_auth_subject_dn,omitempty"`

	// Boolean value indicating server support for mutual TLS client certificate-bound access tokens. If omitted, the default value is "false".
	TLSClientCertificateBoundAccessTokens bool `json:"tls_client_certificate_bound_access_tokens,omitempty" yaml:"tls_client_certificate_bound_access_tokens,omitempty"`

	// Token endpoint authentication method configured for a client application
	//
	// Cloudentity supports the following client authentication methods:
	// `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
	// `self_signed_tls_client_auth`, `tls_client_auth`, `none`.
	//
	// To learn more, go to the Authorization Basics > Client Authentication section of this guide.
	// Example: client_secret_basic
	// Enum: [client_secret_basic client_secret_post client_secret_jwt private_key_jwt self_signed_tls_client_auth tls_client_auth none]
	TokenEndpointAuthMethod string `json:"token_endpoint_auth_method,omitempty" yaml:"token_endpoint_auth_method,omitempty"`

	// Signing algorithm for the token endpoint
	//
	// This field is optional. If empty, a client can use any algorithm supported by the server (see `token_endpoint_auth_signing_alg_values_supported` in the well-known endpoing).
	//
	// If provided, depending on the server configuration, client can use of one: HS256, RS256, ES256, PS256 algorithms.
	//
	// If your token endpoint authentication is set to the `private_key_jwt` method, the
	// `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.
	//
	// If your token endpoint authentication is set to the `client_secret_jwt` method,
	// the `token_endpoint_auth_signing_alg` parameter must be HS256.
	// Example: ES256
	// Enum: [RS256 ES256 PS256 HS256 ]
	TokenEndpointAuthSigningAlg string `json:"token_endpoint_auth_signing_alg,omitempty" yaml:"token_endpoint_auth_signing_alg,omitempty"`

	// token exchange
	TokenExchange *ClientTokenExchangeConfiguration `json:"token_exchange,omitempty" yaml:"token_exchange,omitempty"`

	// Terms of Service URL.
	TosURI string `json:"tos_uri,omitempty" yaml:"tos_uri,omitempty"`

	// Date when the client application was updated.
	// Example: 2022-05-08T01:11:51.1262916Z
	// Format: date-time
	UpdatedAt strfmt.DateTime `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`

	// JWS alg algorithm REQUIRED for signing UserInfo Responses.
	//
	// If specified, the response is a JWT serialized and signed with JWS.
	//
	// If omitted, then by default, UserInfo Response returns the Claims
	// as an UTF-8 encoded JSON object using the application/json content-type.
	// Example: none
	// Enum: [none RS256 ES256]
	UserinfoSignedResponseAlg string `json:"userinfo_signed_response_alg,omitempty" yaml:"userinfo_signed_response_alg,omitempty"`
}

// Validate validates this dynamic client registration request
func (m *DynamicClientRegistrationRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateApplicationTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAuthorizationDetailsTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAuthorizationEncryptedResponseAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAuthorizationEncryptedResponseEnc(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGrantTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIDTokenEncryptedResponseAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIDTokenEncryptedResponseEnc(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIDTokenSignedResponseAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIntrospectionEndpointAuthMethod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateJwks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrivacy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRedirectUris(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestObjectEncryptionAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestObjectEncryptionEnc(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestObjectSigningAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResponseTypes(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRevocationEndpointAuthMethod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubjectType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTokenEndpointAuthMethod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTokenEndpointAuthSigningAlg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTokenExchange(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserinfoSignedResponseAlg(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dynamicClientRegistrationRequestApplicationTypesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["single_page","server_web","mobile_desktop","service","legacy","dcr"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestApplicationTypesItemsEnum = append(dynamicClientRegistrationRequestApplicationTypesItemsEnum, v)
	}
}

func (m *DynamicClientRegistrationRequest) validateApplicationTypesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestApplicationTypesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateApplicationTypes(formats strfmt.Registry) error {
	if swag.IsZero(m.ApplicationTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.ApplicationTypes); i++ {

		// value enum
		if err := m.validateApplicationTypesItemsEnum("application_types"+"."+strconv.Itoa(i), "body", m.ApplicationTypes[i]); err != nil {
			return err
		}

	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateAuthorizationDetailsTypes(formats strfmt.Registry) error {
	if swag.IsZero(m.AuthorizationDetailsTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.AuthorizationDetailsTypes); i++ {

		if err := m.AuthorizationDetailsTypes[i].Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("authorization_details_types" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("authorization_details_types" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

var dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RSA-OAEP","RSA-OAEP-256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseAlgPropEnum = append(dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestAuthorizationEncryptedResponseAlgRSADashOAEP captures enum value "RSA-OAEP"
	DynamicClientRegistrationRequestAuthorizationEncryptedResponseAlgRSADashOAEP string = "RSA-OAEP"

	// DynamicClientRegistrationRequestAuthorizationEncryptedResponseAlgRSADashOAEPDash256 captures enum value "RSA-OAEP-256"
	DynamicClientRegistrationRequestAuthorizationEncryptedResponseAlgRSADashOAEPDash256 string = "RSA-OAEP-256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateAuthorizationEncryptedResponseAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateAuthorizationEncryptedResponseAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.AuthorizationEncryptedResponseAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateAuthorizationEncryptedResponseAlgEnum("authorization_encrypted_response_alg", "body", m.AuthorizationEncryptedResponseAlg); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseEncPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["A256GCM","A128CBC-HS256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseEncPropEnum = append(dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseEncPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestAuthorizationEncryptedResponseEncA256GCM captures enum value "A256GCM"
	DynamicClientRegistrationRequestAuthorizationEncryptedResponseEncA256GCM string = "A256GCM"

	// DynamicClientRegistrationRequestAuthorizationEncryptedResponseEncA128CBCDashHS256 captures enum value "A128CBC-HS256"
	DynamicClientRegistrationRequestAuthorizationEncryptedResponseEncA128CBCDashHS256 string = "A128CBC-HS256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateAuthorizationEncryptedResponseEncEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeAuthorizationEncryptedResponseEncPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateAuthorizationEncryptedResponseEnc(formats strfmt.Registry) error {
	if swag.IsZero(m.AuthorizationEncryptedResponseEnc) { // not required
		return nil
	}

	// value enum
	if err := m.validateAuthorizationEncryptedResponseEncEnum("authorization_encrypted_response_enc", "body", m.AuthorizationEncryptedResponseEnc); err != nil {
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateCreatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("created_at", "body", "date-time", m.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestGrantTypesItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["authorization_code","implicit","client_credentials","refresh_token","password","urn:ietf:params:oauth:grant-type:jwt-bearer","urn:openid:params:grant-type:ciba","urn:ietf:params:oauth:grant-type:token-exchange","urn:ietf:params:oauth:grant-type:device_code"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestGrantTypesItemsEnum = append(dynamicClientRegistrationRequestGrantTypesItemsEnum, v)
	}
}

func (m *DynamicClientRegistrationRequest) validateGrantTypesItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestGrantTypesItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateGrantTypes(formats strfmt.Registry) error {
	if swag.IsZero(m.GrantTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.GrantTypes); i++ {

		// value enum
		if err := m.validateGrantTypesItemsEnum("grant_types"+"."+strconv.Itoa(i), "body", m.GrantTypes[i]); err != nil {
			return err
		}

	}

	return nil
}

var dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RSA-OAEP","RSA-OAEP-256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseAlgPropEnum = append(dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestIDTokenEncryptedResponseAlgRSADashOAEP captures enum value "RSA-OAEP"
	DynamicClientRegistrationRequestIDTokenEncryptedResponseAlgRSADashOAEP string = "RSA-OAEP"

	// DynamicClientRegistrationRequestIDTokenEncryptedResponseAlgRSADashOAEPDash256 captures enum value "RSA-OAEP-256"
	DynamicClientRegistrationRequestIDTokenEncryptedResponseAlgRSADashOAEPDash256 string = "RSA-OAEP-256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateIDTokenEncryptedResponseAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateIDTokenEncryptedResponseAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.IDTokenEncryptedResponseAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateIDTokenEncryptedResponseAlgEnum("id_token_encrypted_response_alg", "body", m.IDTokenEncryptedResponseAlg); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseEncPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["A256GCM","A128CBC-HS256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseEncPropEnum = append(dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseEncPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestIDTokenEncryptedResponseEncA256GCM captures enum value "A256GCM"
	DynamicClientRegistrationRequestIDTokenEncryptedResponseEncA256GCM string = "A256GCM"

	// DynamicClientRegistrationRequestIDTokenEncryptedResponseEncA128CBCDashHS256 captures enum value "A128CBC-HS256"
	DynamicClientRegistrationRequestIDTokenEncryptedResponseEncA128CBCDashHS256 string = "A128CBC-HS256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateIDTokenEncryptedResponseEncEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeIDTokenEncryptedResponseEncPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateIDTokenEncryptedResponseEnc(formats strfmt.Registry) error {
	if swag.IsZero(m.IDTokenEncryptedResponseEnc) { // not required
		return nil
	}

	// value enum
	if err := m.validateIDTokenEncryptedResponseEncEnum("id_token_encrypted_response_enc", "body", m.IDTokenEncryptedResponseEnc); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeIDTokenSignedResponseAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RS256","ES256","PS256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeIDTokenSignedResponseAlgPropEnum = append(dynamicClientRegistrationRequestTypeIDTokenSignedResponseAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestIDTokenSignedResponseAlgRS256 captures enum value "RS256"
	DynamicClientRegistrationRequestIDTokenSignedResponseAlgRS256 string = "RS256"

	// DynamicClientRegistrationRequestIDTokenSignedResponseAlgES256 captures enum value "ES256"
	DynamicClientRegistrationRequestIDTokenSignedResponseAlgES256 string = "ES256"

	// DynamicClientRegistrationRequestIDTokenSignedResponseAlgPS256 captures enum value "PS256"
	DynamicClientRegistrationRequestIDTokenSignedResponseAlgPS256 string = "PS256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateIDTokenSignedResponseAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeIDTokenSignedResponseAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateIDTokenSignedResponseAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.IDTokenSignedResponseAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateIDTokenSignedResponseAlgEnum("id_token_signed_response_alg", "body", m.IDTokenSignedResponseAlg); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeIntrospectionEndpointAuthMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["client_secret_basic","client_secret_post","client_secret_jwt","private_key_jwt","self_signed_tls_client_auth","tls_client_auth","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeIntrospectionEndpointAuthMethodPropEnum = append(dynamicClientRegistrationRequestTypeIntrospectionEndpointAuthMethodPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodClientSecretBasic captures enum value "client_secret_basic"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodClientSecretBasic string = "client_secret_basic"

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodClientSecretPost captures enum value "client_secret_post"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodClientSecretPost string = "client_secret_post"

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodClientSecretJwt captures enum value "client_secret_jwt"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodClientSecretJwt string = "client_secret_jwt"

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodPrivateKeyJwt captures enum value "private_key_jwt"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodPrivateKeyJwt string = "private_key_jwt"

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodSelfSignedTLSClientAuth captures enum value "self_signed_tls_client_auth"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodSelfSignedTLSClientAuth string = "self_signed_tls_client_auth"

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodTLSClientAuth captures enum value "tls_client_auth"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodTLSClientAuth string = "tls_client_auth"

	// DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodNone captures enum value "none"
	DynamicClientRegistrationRequestIntrospectionEndpointAuthMethodNone string = "none"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateIntrospectionEndpointAuthMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeIntrospectionEndpointAuthMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateIntrospectionEndpointAuthMethod(formats strfmt.Registry) error {
	if swag.IsZero(m.IntrospectionEndpointAuthMethod) { // not required
		return nil
	}

	// value enum
	if err := m.validateIntrospectionEndpointAuthMethodEnum("introspection_endpoint_auth_method", "body", m.IntrospectionEndpointAuthMethod); err != nil {
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateJwks(formats strfmt.Registry) error {
	if swag.IsZero(m.Jwks) { // not required
		return nil
	}

	if m.Jwks != nil {
		if err := m.Jwks.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("jwks")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("jwks")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validatePrivacy(formats strfmt.Registry) error {
	if swag.IsZero(m.Privacy) { // not required
		return nil
	}

	if m.Privacy != nil {
		if err := m.Privacy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("privacy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("privacy")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateRedirectUris(formats strfmt.Registry) error {
	if swag.IsZero(m.RedirectUris) { // not required
		return nil
	}

	if err := m.RedirectUris.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("redirect_uris")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("redirect_uris")
		}
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeRequestObjectEncryptionAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RSA-OAEP","RSA-OAEP-256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeRequestObjectEncryptionAlgPropEnum = append(dynamicClientRegistrationRequestTypeRequestObjectEncryptionAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestRequestObjectEncryptionAlgRSADashOAEP captures enum value "RSA-OAEP"
	DynamicClientRegistrationRequestRequestObjectEncryptionAlgRSADashOAEP string = "RSA-OAEP"

	// DynamicClientRegistrationRequestRequestObjectEncryptionAlgRSADashOAEPDash256 captures enum value "RSA-OAEP-256"
	DynamicClientRegistrationRequestRequestObjectEncryptionAlgRSADashOAEPDash256 string = "RSA-OAEP-256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateRequestObjectEncryptionAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeRequestObjectEncryptionAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateRequestObjectEncryptionAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.RequestObjectEncryptionAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateRequestObjectEncryptionAlgEnum("request_object_encryption_alg", "body", m.RequestObjectEncryptionAlg); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeRequestObjectEncryptionEncPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["A256GCM","A128CBC-HS256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeRequestObjectEncryptionEncPropEnum = append(dynamicClientRegistrationRequestTypeRequestObjectEncryptionEncPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestRequestObjectEncryptionEncA256GCM captures enum value "A256GCM"
	DynamicClientRegistrationRequestRequestObjectEncryptionEncA256GCM string = "A256GCM"

	// DynamicClientRegistrationRequestRequestObjectEncryptionEncA128CBCDashHS256 captures enum value "A128CBC-HS256"
	DynamicClientRegistrationRequestRequestObjectEncryptionEncA128CBCDashHS256 string = "A128CBC-HS256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateRequestObjectEncryptionEncEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeRequestObjectEncryptionEncPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateRequestObjectEncryptionEnc(formats strfmt.Registry) error {
	if swag.IsZero(m.RequestObjectEncryptionEnc) { // not required
		return nil
	}

	// value enum
	if err := m.validateRequestObjectEncryptionEncEnum("request_object_encryption_enc", "body", m.RequestObjectEncryptionEnc); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeRequestObjectSigningAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["any","none","RS256","ES256","PS256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeRequestObjectSigningAlgPropEnum = append(dynamicClientRegistrationRequestTypeRequestObjectSigningAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestRequestObjectSigningAlgAny captures enum value "any"
	DynamicClientRegistrationRequestRequestObjectSigningAlgAny string = "any"

	// DynamicClientRegistrationRequestRequestObjectSigningAlgNone captures enum value "none"
	DynamicClientRegistrationRequestRequestObjectSigningAlgNone string = "none"

	// DynamicClientRegistrationRequestRequestObjectSigningAlgRS256 captures enum value "RS256"
	DynamicClientRegistrationRequestRequestObjectSigningAlgRS256 string = "RS256"

	// DynamicClientRegistrationRequestRequestObjectSigningAlgES256 captures enum value "ES256"
	DynamicClientRegistrationRequestRequestObjectSigningAlgES256 string = "ES256"

	// DynamicClientRegistrationRequestRequestObjectSigningAlgPS256 captures enum value "PS256"
	DynamicClientRegistrationRequestRequestObjectSigningAlgPS256 string = "PS256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateRequestObjectSigningAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeRequestObjectSigningAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateRequestObjectSigningAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.RequestObjectSigningAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateRequestObjectSigningAlgEnum("request_object_signing_alg", "body", m.RequestObjectSigningAlg); err != nil {
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateResponseTypes(formats strfmt.Registry) error {
	if swag.IsZero(m.ResponseTypes) { // not required
		return nil
	}

	if err := m.ResponseTypes.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("response_types")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("response_types")
		}
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeRevocationEndpointAuthMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["client_secret_basic","client_secret_post","client_secret_jwt","private_key_jwt","self_signed_tls_client_auth","tls_client_auth","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeRevocationEndpointAuthMethodPropEnum = append(dynamicClientRegistrationRequestTypeRevocationEndpointAuthMethodPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodClientSecretBasic captures enum value "client_secret_basic"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodClientSecretBasic string = "client_secret_basic"

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodClientSecretPost captures enum value "client_secret_post"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodClientSecretPost string = "client_secret_post"

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodClientSecretJwt captures enum value "client_secret_jwt"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodClientSecretJwt string = "client_secret_jwt"

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodPrivateKeyJwt captures enum value "private_key_jwt"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodPrivateKeyJwt string = "private_key_jwt"

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodSelfSignedTLSClientAuth captures enum value "self_signed_tls_client_auth"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodSelfSignedTLSClientAuth string = "self_signed_tls_client_auth"

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodTLSClientAuth captures enum value "tls_client_auth"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodTLSClientAuth string = "tls_client_auth"

	// DynamicClientRegistrationRequestRevocationEndpointAuthMethodNone captures enum value "none"
	DynamicClientRegistrationRequestRevocationEndpointAuthMethodNone string = "none"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateRevocationEndpointAuthMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeRevocationEndpointAuthMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateRevocationEndpointAuthMethod(formats strfmt.Registry) error {
	if swag.IsZero(m.RevocationEndpointAuthMethod) { // not required
		return nil
	}

	// value enum
	if err := m.validateRevocationEndpointAuthMethodEnum("revocation_endpoint_auth_method", "body", m.RevocationEndpointAuthMethod); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeSubjectTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["public","pairwise"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeSubjectTypePropEnum = append(dynamicClientRegistrationRequestTypeSubjectTypePropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestSubjectTypePublic captures enum value "public"
	DynamicClientRegistrationRequestSubjectTypePublic string = "public"

	// DynamicClientRegistrationRequestSubjectTypePairwise captures enum value "pairwise"
	DynamicClientRegistrationRequestSubjectTypePairwise string = "pairwise"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateSubjectTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeSubjectTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateSubjectType(formats strfmt.Registry) error {
	if swag.IsZero(m.SubjectType) { // not required
		return nil
	}

	// value enum
	if err := m.validateSubjectTypeEnum("subject_type", "body", m.SubjectType); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeTokenEndpointAuthMethodPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["client_secret_basic","client_secret_post","client_secret_jwt","private_key_jwt","self_signed_tls_client_auth","tls_client_auth","none"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeTokenEndpointAuthMethodPropEnum = append(dynamicClientRegistrationRequestTypeTokenEndpointAuthMethodPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodClientSecretBasic captures enum value "client_secret_basic"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodClientSecretBasic string = "client_secret_basic"

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodClientSecretPost captures enum value "client_secret_post"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodClientSecretPost string = "client_secret_post"

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodClientSecretJwt captures enum value "client_secret_jwt"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodClientSecretJwt string = "client_secret_jwt"

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodPrivateKeyJwt captures enum value "private_key_jwt"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodPrivateKeyJwt string = "private_key_jwt"

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodSelfSignedTLSClientAuth captures enum value "self_signed_tls_client_auth"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodSelfSignedTLSClientAuth string = "self_signed_tls_client_auth"

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodTLSClientAuth captures enum value "tls_client_auth"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodTLSClientAuth string = "tls_client_auth"

	// DynamicClientRegistrationRequestTokenEndpointAuthMethodNone captures enum value "none"
	DynamicClientRegistrationRequestTokenEndpointAuthMethodNone string = "none"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateTokenEndpointAuthMethodEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeTokenEndpointAuthMethodPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateTokenEndpointAuthMethod(formats strfmt.Registry) error {
	if swag.IsZero(m.TokenEndpointAuthMethod) { // not required
		return nil
	}

	// value enum
	if err := m.validateTokenEndpointAuthMethodEnum("token_endpoint_auth_method", "body", m.TokenEndpointAuthMethod); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeTokenEndpointAuthSigningAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RS256","ES256","PS256","HS256",""]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeTokenEndpointAuthSigningAlgPropEnum = append(dynamicClientRegistrationRequestTypeTokenEndpointAuthSigningAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgRS256 captures enum value "RS256"
	DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgRS256 string = "RS256"

	// DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgES256 captures enum value "ES256"
	DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgES256 string = "ES256"

	// DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgPS256 captures enum value "PS256"
	DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgPS256 string = "PS256"

	// DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgHS256 captures enum value "HS256"
	DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgHS256 string = "HS256"

	// DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgEmpty captures enum value ""
	DynamicClientRegistrationRequestTokenEndpointAuthSigningAlgEmpty string = ""
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateTokenEndpointAuthSigningAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeTokenEndpointAuthSigningAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateTokenEndpointAuthSigningAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.TokenEndpointAuthSigningAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateTokenEndpointAuthSigningAlgEnum("token_endpoint_auth_signing_alg", "body", m.TokenEndpointAuthSigningAlg); err != nil {
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateTokenExchange(formats strfmt.Registry) error {
	if swag.IsZero(m.TokenExchange) { // not required
		return nil
	}

	if m.TokenExchange != nil {
		if err := m.TokenExchange.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("token_exchange")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("token_exchange")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) validateUpdatedAt(formats strfmt.Registry) error {
	if swag.IsZero(m.UpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("updated_at", "body", "date-time", m.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

var dynamicClientRegistrationRequestTypeUserinfoSignedResponseAlgPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["none","RS256","ES256"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dynamicClientRegistrationRequestTypeUserinfoSignedResponseAlgPropEnum = append(dynamicClientRegistrationRequestTypeUserinfoSignedResponseAlgPropEnum, v)
	}
}

const (

	// DynamicClientRegistrationRequestUserinfoSignedResponseAlgNone captures enum value "none"
	DynamicClientRegistrationRequestUserinfoSignedResponseAlgNone string = "none"

	// DynamicClientRegistrationRequestUserinfoSignedResponseAlgRS256 captures enum value "RS256"
	DynamicClientRegistrationRequestUserinfoSignedResponseAlgRS256 string = "RS256"

	// DynamicClientRegistrationRequestUserinfoSignedResponseAlgES256 captures enum value "ES256"
	DynamicClientRegistrationRequestUserinfoSignedResponseAlgES256 string = "ES256"
)

// prop value enum
func (m *DynamicClientRegistrationRequest) validateUserinfoSignedResponseAlgEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dynamicClientRegistrationRequestTypeUserinfoSignedResponseAlgPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) validateUserinfoSignedResponseAlg(formats strfmt.Registry) error {
	if swag.IsZero(m.UserinfoSignedResponseAlg) { // not required
		return nil
	}

	// value enum
	if err := m.validateUserinfoSignedResponseAlgEnum("userinfo_signed_response_alg", "body", m.UserinfoSignedResponseAlg); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this dynamic client registration request based on the context it is used
func (m *DynamicClientRegistrationRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateApplicationTypes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateAuthorizationDetailsTypes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateJwks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidatePrivacy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateRedirectUris(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateResponseTypes(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateTokenExchange(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidateApplicationTypes(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "application_types", "body", []string(m.ApplicationTypes)); err != nil {
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidateAuthorizationDetailsTypes(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AuthorizationDetailsTypes); i++ {

		if swag.IsZero(m.AuthorizationDetailsTypes[i]) { // not required
			return nil
		}

		if err := m.AuthorizationDetailsTypes[i].ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("authorization_details_types" + "." + strconv.Itoa(i))
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("authorization_details_types" + "." + strconv.Itoa(i))
			}
			return err
		}

	}

	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidateJwks(ctx context.Context, formats strfmt.Registry) error {

	if m.Jwks != nil {

		if swag.IsZero(m.Jwks) { // not required
			return nil
		}

		if err := m.Jwks.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("jwks")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("jwks")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidatePrivacy(ctx context.Context, formats strfmt.Registry) error {

	if m.Privacy != nil {

		if swag.IsZero(m.Privacy) { // not required
			return nil
		}

		if err := m.Privacy.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("privacy")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("privacy")
			}
			return err
		}
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidateRedirectUris(ctx context.Context, formats strfmt.Registry) error {

	if err := m.RedirectUris.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("redirect_uris")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("redirect_uris")
		}
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidateResponseTypes(ctx context.Context, formats strfmt.Registry) error {

	if err := m.ResponseTypes.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("response_types")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("response_types")
		}
		return err
	}

	return nil
}

func (m *DynamicClientRegistrationRequest) contextValidateTokenExchange(ctx context.Context, formats strfmt.Registry) error {

	if m.TokenExchange != nil {

		if swag.IsZero(m.TokenExchange) { // not required
			return nil
		}

		if err := m.TokenExchange.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("token_exchange")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("token_exchange")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DynamicClientRegistrationRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DynamicClientRegistrationRequest) UnmarshalBinary(b []byte) error {
	var res DynamicClientRegistrationRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
