// Code generated by go-swagger; DO NOT EDIT.

package domestic_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/acp-client-go/clients/openbankingUK/payments/models"
)

// CreateDomesticPaymentConsentsReader is a Reader for the CreateDomesticPaymentConsents structure.
type CreateDomesticPaymentConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDomesticPaymentConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDomesticPaymentConsentsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDomesticPaymentConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDomesticPaymentConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDomesticPaymentConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateDomesticPaymentConsentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateDomesticPaymentConsentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateDomesticPaymentConsentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateDomesticPaymentConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDomesticPaymentConsentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /domestic-payment-consents] CreateDomesticPaymentConsents", response, response.Code())
	}
}

// NewCreateDomesticPaymentConsentsCreated creates a CreateDomesticPaymentConsentsCreated with default headers values
func NewCreateDomesticPaymentConsentsCreated() *CreateDomesticPaymentConsentsCreated {
	return &CreateDomesticPaymentConsentsCreated{}
}

/*
CreateDomesticPaymentConsentsCreated describes a response with status code 201, with default header values.

Domestic Payment Consents Created
*/
type CreateDomesticPaymentConsentsCreated struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWriteDomesticConsentResponse5
}

// IsSuccess returns true when this create domestic payment consents created response has a 2xx status code
func (o *CreateDomesticPaymentConsentsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create domestic payment consents created response has a 3xx status code
func (o *CreateDomesticPaymentConsentsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents created response has a 4xx status code
func (o *CreateDomesticPaymentConsentsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create domestic payment consents created response has a 5xx status code
func (o *CreateDomesticPaymentConsentsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents created response a status code equal to that given
func (o *CreateDomesticPaymentConsentsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create domestic payment consents created response
func (o *CreateDomesticPaymentConsentsCreated) Code() int {
	return 201
}

func (o *CreateDomesticPaymentConsentsCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsCreated %s", 201, payload)
}

func (o *CreateDomesticPaymentConsentsCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsCreated %s", 201, payload)
}

func (o *CreateDomesticPaymentConsentsCreated) GetPayload() *models.OBWriteDomesticConsentResponse5 {
	return o.Payload
}

func (o *CreateDomesticPaymentConsentsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWriteDomesticConsentResponse5)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticPaymentConsentsBadRequest creates a CreateDomesticPaymentConsentsBadRequest with default headers values
func NewCreateDomesticPaymentConsentsBadRequest() *CreateDomesticPaymentConsentsBadRequest {
	return &CreateDomesticPaymentConsentsBadRequest{}
}

/*
CreateDomesticPaymentConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateDomesticPaymentConsentsBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

// IsSuccess returns true when this create domestic payment consents bad request response has a 2xx status code
func (o *CreateDomesticPaymentConsentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents bad request response has a 3xx status code
func (o *CreateDomesticPaymentConsentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents bad request response has a 4xx status code
func (o *CreateDomesticPaymentConsentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents bad request response has a 5xx status code
func (o *CreateDomesticPaymentConsentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents bad request response a status code equal to that given
func (o *CreateDomesticPaymentConsentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create domestic payment consents bad request response
func (o *CreateDomesticPaymentConsentsBadRequest) Code() int {
	return 400
}

func (o *CreateDomesticPaymentConsentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsBadRequest %s", 400, payload)
}

func (o *CreateDomesticPaymentConsentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsBadRequest %s", 400, payload)
}

func (o *CreateDomesticPaymentConsentsBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticPaymentConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticPaymentConsentsUnauthorized creates a CreateDomesticPaymentConsentsUnauthorized with default headers values
func NewCreateDomesticPaymentConsentsUnauthorized() *CreateDomesticPaymentConsentsUnauthorized {
	return &CreateDomesticPaymentConsentsUnauthorized{}
}

/*
CreateDomesticPaymentConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateDomesticPaymentConsentsUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic payment consents unauthorized response has a 2xx status code
func (o *CreateDomesticPaymentConsentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents unauthorized response has a 3xx status code
func (o *CreateDomesticPaymentConsentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents unauthorized response has a 4xx status code
func (o *CreateDomesticPaymentConsentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents unauthorized response has a 5xx status code
func (o *CreateDomesticPaymentConsentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents unauthorized response a status code equal to that given
func (o *CreateDomesticPaymentConsentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create domestic payment consents unauthorized response
func (o *CreateDomesticPaymentConsentsUnauthorized) Code() int {
	return 401
}

func (o *CreateDomesticPaymentConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsUnauthorized", 401)
}

func (o *CreateDomesticPaymentConsentsUnauthorized) String() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsUnauthorized", 401)
}

func (o *CreateDomesticPaymentConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticPaymentConsentsForbidden creates a CreateDomesticPaymentConsentsForbidden with default headers values
func NewCreateDomesticPaymentConsentsForbidden() *CreateDomesticPaymentConsentsForbidden {
	return &CreateDomesticPaymentConsentsForbidden{}
}

/*
CreateDomesticPaymentConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateDomesticPaymentConsentsForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

// IsSuccess returns true when this create domestic payment consents forbidden response has a 2xx status code
func (o *CreateDomesticPaymentConsentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents forbidden response has a 3xx status code
func (o *CreateDomesticPaymentConsentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents forbidden response has a 4xx status code
func (o *CreateDomesticPaymentConsentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents forbidden response has a 5xx status code
func (o *CreateDomesticPaymentConsentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents forbidden response a status code equal to that given
func (o *CreateDomesticPaymentConsentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create domestic payment consents forbidden response
func (o *CreateDomesticPaymentConsentsForbidden) Code() int {
	return 403
}

func (o *CreateDomesticPaymentConsentsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsForbidden %s", 403, payload)
}

func (o *CreateDomesticPaymentConsentsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsForbidden %s", 403, payload)
}

func (o *CreateDomesticPaymentConsentsForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticPaymentConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticPaymentConsentsMethodNotAllowed creates a CreateDomesticPaymentConsentsMethodNotAllowed with default headers values
func NewCreateDomesticPaymentConsentsMethodNotAllowed() *CreateDomesticPaymentConsentsMethodNotAllowed {
	return &CreateDomesticPaymentConsentsMethodNotAllowed{}
}

/*
CreateDomesticPaymentConsentsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateDomesticPaymentConsentsMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic payment consents method not allowed response has a 2xx status code
func (o *CreateDomesticPaymentConsentsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents method not allowed response has a 3xx status code
func (o *CreateDomesticPaymentConsentsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents method not allowed response has a 4xx status code
func (o *CreateDomesticPaymentConsentsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents method not allowed response has a 5xx status code
func (o *CreateDomesticPaymentConsentsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents method not allowed response a status code equal to that given
func (o *CreateDomesticPaymentConsentsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create domestic payment consents method not allowed response
func (o *CreateDomesticPaymentConsentsMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateDomesticPaymentConsentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsMethodNotAllowed", 405)
}

func (o *CreateDomesticPaymentConsentsMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsMethodNotAllowed", 405)
}

func (o *CreateDomesticPaymentConsentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticPaymentConsentsNotAcceptable creates a CreateDomesticPaymentConsentsNotAcceptable with default headers values
func NewCreateDomesticPaymentConsentsNotAcceptable() *CreateDomesticPaymentConsentsNotAcceptable {
	return &CreateDomesticPaymentConsentsNotAcceptable{}
}

/*
CreateDomesticPaymentConsentsNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type CreateDomesticPaymentConsentsNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic payment consents not acceptable response has a 2xx status code
func (o *CreateDomesticPaymentConsentsNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents not acceptable response has a 3xx status code
func (o *CreateDomesticPaymentConsentsNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents not acceptable response has a 4xx status code
func (o *CreateDomesticPaymentConsentsNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents not acceptable response has a 5xx status code
func (o *CreateDomesticPaymentConsentsNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents not acceptable response a status code equal to that given
func (o *CreateDomesticPaymentConsentsNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create domestic payment consents not acceptable response
func (o *CreateDomesticPaymentConsentsNotAcceptable) Code() int {
	return 406
}

func (o *CreateDomesticPaymentConsentsNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsNotAcceptable", 406)
}

func (o *CreateDomesticPaymentConsentsNotAcceptable) String() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsNotAcceptable", 406)
}

func (o *CreateDomesticPaymentConsentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticPaymentConsentsUnsupportedMediaType creates a CreateDomesticPaymentConsentsUnsupportedMediaType with default headers values
func NewCreateDomesticPaymentConsentsUnsupportedMediaType() *CreateDomesticPaymentConsentsUnsupportedMediaType {
	return &CreateDomesticPaymentConsentsUnsupportedMediaType{}
}

/*
CreateDomesticPaymentConsentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type
*/
type CreateDomesticPaymentConsentsUnsupportedMediaType struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic payment consents unsupported media type response has a 2xx status code
func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents unsupported media type response has a 3xx status code
func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents unsupported media type response has a 4xx status code
func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents unsupported media type response has a 5xx status code
func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents unsupported media type response a status code equal to that given
func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create domestic payment consents unsupported media type response
func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsUnsupportedMediaType", 415)
}

func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsUnsupportedMediaType", 415)
}

func (o *CreateDomesticPaymentConsentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticPaymentConsentsTooManyRequests creates a CreateDomesticPaymentConsentsTooManyRequests with default headers values
func NewCreateDomesticPaymentConsentsTooManyRequests() *CreateDomesticPaymentConsentsTooManyRequests {
	return &CreateDomesticPaymentConsentsTooManyRequests{}
}

/*
CreateDomesticPaymentConsentsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CreateDomesticPaymentConsentsTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic payment consents too many requests response has a 2xx status code
func (o *CreateDomesticPaymentConsentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents too many requests response has a 3xx status code
func (o *CreateDomesticPaymentConsentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents too many requests response has a 4xx status code
func (o *CreateDomesticPaymentConsentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic payment consents too many requests response has a 5xx status code
func (o *CreateDomesticPaymentConsentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic payment consents too many requests response a status code equal to that given
func (o *CreateDomesticPaymentConsentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create domestic payment consents too many requests response
func (o *CreateDomesticPaymentConsentsTooManyRequests) Code() int {
	return 429
}

func (o *CreateDomesticPaymentConsentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsTooManyRequests", 429)
}

func (o *CreateDomesticPaymentConsentsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsTooManyRequests", 429)
}

func (o *CreateDomesticPaymentConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticPaymentConsentsInternalServerError creates a CreateDomesticPaymentConsentsInternalServerError with default headers values
func NewCreateDomesticPaymentConsentsInternalServerError() *CreateDomesticPaymentConsentsInternalServerError {
	return &CreateDomesticPaymentConsentsInternalServerError{}
}

/*
CreateDomesticPaymentConsentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateDomesticPaymentConsentsInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

// IsSuccess returns true when this create domestic payment consents internal server error response has a 2xx status code
func (o *CreateDomesticPaymentConsentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic payment consents internal server error response has a 3xx status code
func (o *CreateDomesticPaymentConsentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic payment consents internal server error response has a 4xx status code
func (o *CreateDomesticPaymentConsentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create domestic payment consents internal server error response has a 5xx status code
func (o *CreateDomesticPaymentConsentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create domestic payment consents internal server error response a status code equal to that given
func (o *CreateDomesticPaymentConsentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create domestic payment consents internal server error response
func (o *CreateDomesticPaymentConsentsInternalServerError) Code() int {
	return 500
}

func (o *CreateDomesticPaymentConsentsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsInternalServerError %s", 500, payload)
}

func (o *CreateDomesticPaymentConsentsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-payment-consents][%d] createDomesticPaymentConsentsInternalServerError %s", 500, payload)
}

func (o *CreateDomesticPaymentConsentsInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticPaymentConsentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
