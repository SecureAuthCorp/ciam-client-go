// Code generated by go-swagger; DO NOT EDIT.

package domestic_scheduled_payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cloudentity/acp-client-go/clients/openbankingUK/payments/models"
)

// CreateDomesticScheduledPaymentConsentsReader is a Reader for the CreateDomesticScheduledPaymentConsents structure.
type CreateDomesticScheduledPaymentConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDomesticScheduledPaymentConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateDomesticScheduledPaymentConsentsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDomesticScheduledPaymentConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDomesticScheduledPaymentConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDomesticScheduledPaymentConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateDomesticScheduledPaymentConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateDomesticScheduledPaymentConsentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateDomesticScheduledPaymentConsentsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateDomesticScheduledPaymentConsentsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateDomesticScheduledPaymentConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDomesticScheduledPaymentConsentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /domestic-scheduled-payment-consents] CreateDomesticScheduledPaymentConsents", response, response.Code())
	}
}

// NewCreateDomesticScheduledPaymentConsentsCreated creates a CreateDomesticScheduledPaymentConsentsCreated with default headers values
func NewCreateDomesticScheduledPaymentConsentsCreated() *CreateDomesticScheduledPaymentConsentsCreated {
	return &CreateDomesticScheduledPaymentConsentsCreated{}
}

/*
CreateDomesticScheduledPaymentConsentsCreated describes a response with status code 201, with default header values.

Domestic Scheduled Payment Consents Created
*/
type CreateDomesticScheduledPaymentConsentsCreated struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBWriteDomesticScheduledConsentResponse5
}

// IsSuccess returns true when this create domestic scheduled payment consents created response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create domestic scheduled payment consents created response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents created response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create domestic scheduled payment consents created response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents created response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create domestic scheduled payment consents created response
func (o *CreateDomesticScheduledPaymentConsentsCreated) Code() int {
	return 201
}

func (o *CreateDomesticScheduledPaymentConsentsCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsCreated %s", 201, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsCreated %s", 201, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsCreated) GetPayload() *models.OBWriteDomesticScheduledConsentResponse5 {
	return o.Payload
}

func (o *CreateDomesticScheduledPaymentConsentsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBWriteDomesticScheduledConsentResponse5)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsBadRequest creates a CreateDomesticScheduledPaymentConsentsBadRequest with default headers values
func NewCreateDomesticScheduledPaymentConsentsBadRequest() *CreateDomesticScheduledPaymentConsentsBadRequest {
	return &CreateDomesticScheduledPaymentConsentsBadRequest{}
}

/*
CreateDomesticScheduledPaymentConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type CreateDomesticScheduledPaymentConsentsBadRequest struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

// IsSuccess returns true when this create domestic scheduled payment consents bad request response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents bad request response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents bad request response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents bad request response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents bad request response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create domestic scheduled payment consents bad request response
func (o *CreateDomesticScheduledPaymentConsentsBadRequest) Code() int {
	return 400
}

func (o *CreateDomesticScheduledPaymentConsentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsBadRequest %s", 400, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsBadRequest %s", 400, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsBadRequest) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticScheduledPaymentConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsUnauthorized creates a CreateDomesticScheduledPaymentConsentsUnauthorized with default headers values
func NewCreateDomesticScheduledPaymentConsentsUnauthorized() *CreateDomesticScheduledPaymentConsentsUnauthorized {
	return &CreateDomesticScheduledPaymentConsentsUnauthorized{}
}

/*
CreateDomesticScheduledPaymentConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateDomesticScheduledPaymentConsentsUnauthorized struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic scheduled payment consents unauthorized response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents unauthorized response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents unauthorized response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents unauthorized response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents unauthorized response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create domestic scheduled payment consents unauthorized response
func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) Code() int {
	return 401
}

func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsUnauthorized", 401)
}

func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) String() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsUnauthorized", 401)
}

func (o *CreateDomesticScheduledPaymentConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsForbidden creates a CreateDomesticScheduledPaymentConsentsForbidden with default headers values
func NewCreateDomesticScheduledPaymentConsentsForbidden() *CreateDomesticScheduledPaymentConsentsForbidden {
	return &CreateDomesticScheduledPaymentConsentsForbidden{}
}

/*
CreateDomesticScheduledPaymentConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateDomesticScheduledPaymentConsentsForbidden struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

// IsSuccess returns true when this create domestic scheduled payment consents forbidden response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents forbidden response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents forbidden response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents forbidden response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents forbidden response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create domestic scheduled payment consents forbidden response
func (o *CreateDomesticScheduledPaymentConsentsForbidden) Code() int {
	return 403
}

func (o *CreateDomesticScheduledPaymentConsentsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsForbidden %s", 403, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsForbidden %s", 403, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsForbidden) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticScheduledPaymentConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsNotFound creates a CreateDomesticScheduledPaymentConsentsNotFound with default headers values
func NewCreateDomesticScheduledPaymentConsentsNotFound() *CreateDomesticScheduledPaymentConsentsNotFound {
	return &CreateDomesticScheduledPaymentConsentsNotFound{}
}

/*
CreateDomesticScheduledPaymentConsentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type CreateDomesticScheduledPaymentConsentsNotFound struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic scheduled payment consents not found response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents not found response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents not found response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents not found response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents not found response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create domestic scheduled payment consents not found response
func (o *CreateDomesticScheduledPaymentConsentsNotFound) Code() int {
	return 404
}

func (o *CreateDomesticScheduledPaymentConsentsNotFound) Error() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsNotFound", 404)
}

func (o *CreateDomesticScheduledPaymentConsentsNotFound) String() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsNotFound", 404)
}

func (o *CreateDomesticScheduledPaymentConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsMethodNotAllowed creates a CreateDomesticScheduledPaymentConsentsMethodNotAllowed with default headers values
func NewCreateDomesticScheduledPaymentConsentsMethodNotAllowed() *CreateDomesticScheduledPaymentConsentsMethodNotAllowed {
	return &CreateDomesticScheduledPaymentConsentsMethodNotAllowed{}
}

/*
CreateDomesticScheduledPaymentConsentsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateDomesticScheduledPaymentConsentsMethodNotAllowed struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic scheduled payment consents method not allowed response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents method not allowed response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents method not allowed response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents method not allowed response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents method not allowed response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create domestic scheduled payment consents method not allowed response
func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsMethodNotAllowed", 405)
}

func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsMethodNotAllowed", 405)
}

func (o *CreateDomesticScheduledPaymentConsentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsNotAcceptable creates a CreateDomesticScheduledPaymentConsentsNotAcceptable with default headers values
func NewCreateDomesticScheduledPaymentConsentsNotAcceptable() *CreateDomesticScheduledPaymentConsentsNotAcceptable {
	return &CreateDomesticScheduledPaymentConsentsNotAcceptable{}
}

/*
CreateDomesticScheduledPaymentConsentsNotAcceptable describes a response with status code 406, with default header values.

Not Acceptable
*/
type CreateDomesticScheduledPaymentConsentsNotAcceptable struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic scheduled payment consents not acceptable response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents not acceptable response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents not acceptable response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents not acceptable response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents not acceptable response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create domestic scheduled payment consents not acceptable response
func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) Code() int {
	return 406
}

func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsNotAcceptable", 406)
}

func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) String() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsNotAcceptable", 406)
}

func (o *CreateDomesticScheduledPaymentConsentsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsUnsupportedMediaType creates a CreateDomesticScheduledPaymentConsentsUnsupportedMediaType with default headers values
func NewCreateDomesticScheduledPaymentConsentsUnsupportedMediaType() *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType {
	return &CreateDomesticScheduledPaymentConsentsUnsupportedMediaType{}
}

/*
CreateDomesticScheduledPaymentConsentsUnsupportedMediaType describes a response with status code 415, with default header values.

Unsupported Media Type
*/
type CreateDomesticScheduledPaymentConsentsUnsupportedMediaType struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic scheduled payment consents unsupported media type response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents unsupported media type response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents unsupported media type response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents unsupported media type response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents unsupported media type response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create domestic scheduled payment consents unsupported media type response
func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsUnsupportedMediaType", 415)
}

func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsUnsupportedMediaType", 415)
}

func (o *CreateDomesticScheduledPaymentConsentsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsTooManyRequests creates a CreateDomesticScheduledPaymentConsentsTooManyRequests with default headers values
func NewCreateDomesticScheduledPaymentConsentsTooManyRequests() *CreateDomesticScheduledPaymentConsentsTooManyRequests {
	return &CreateDomesticScheduledPaymentConsentsTooManyRequests{}
}

/*
CreateDomesticScheduledPaymentConsentsTooManyRequests describes a response with status code 429, with default header values.

Too Many Requests
*/
type CreateDomesticScheduledPaymentConsentsTooManyRequests struct {

	/* Number in seconds to wait
	 */
	RetryAfter int64

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string
}

// IsSuccess returns true when this create domestic scheduled payment consents too many requests response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents too many requests response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents too many requests response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create domestic scheduled payment consents too many requests response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create domestic scheduled payment consents too many requests response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create domestic scheduled payment consents too many requests response
func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) Code() int {
	return 429
}

func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsTooManyRequests", 429)
}

func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsTooManyRequests", 429)
}

func (o *CreateDomesticScheduledPaymentConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Retry-After
	hdrRetryAfter := response.GetHeader("Retry-After")

	if hdrRetryAfter != "" {
		valretryAfter, err := swag.ConvertInt64(hdrRetryAfter)
		if err != nil {
			return errors.InvalidType("Retry-After", "header", "int64", hdrRetryAfter)
		}
		o.RetryAfter = valretryAfter
	}

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	return nil
}

// NewCreateDomesticScheduledPaymentConsentsInternalServerError creates a CreateDomesticScheduledPaymentConsentsInternalServerError with default headers values
func NewCreateDomesticScheduledPaymentConsentsInternalServerError() *CreateDomesticScheduledPaymentConsentsInternalServerError {
	return &CreateDomesticScheduledPaymentConsentsInternalServerError{}
}

/*
CreateDomesticScheduledPaymentConsentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateDomesticScheduledPaymentConsentsInternalServerError struct {

	/* An RFC4122 UID used as a correlation id.
	 */
	XFapiInteractionID string

	/* Header containing a detached JWS signature of the body of the payload.

	 */
	XJwsSignature string

	Payload *models.OBErrorResponse1
}

// IsSuccess returns true when this create domestic scheduled payment consents internal server error response has a 2xx status code
func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create domestic scheduled payment consents internal server error response has a 3xx status code
func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create domestic scheduled payment consents internal server error response has a 4xx status code
func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create domestic scheduled payment consents internal server error response has a 5xx status code
func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create domestic scheduled payment consents internal server error response a status code equal to that given
func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create domestic scheduled payment consents internal server error response
func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) Code() int {
	return 500
}

func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsInternalServerError %s", 500, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /domestic-scheduled-payment-consents][%d] createDomesticScheduledPaymentConsentsInternalServerError %s", 500, payload)
}

func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) GetPayload() *models.OBErrorResponse1 {
	return o.Payload
}

func (o *CreateDomesticScheduledPaymentConsentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header x-fapi-interaction-id
	hdrXFapiInteractionID := response.GetHeader("x-fapi-interaction-id")

	if hdrXFapiInteractionID != "" {
		o.XFapiInteractionID = hdrXFapiInteractionID
	}

	// hydrates response header x-jws-signature
	hdrXJwsSignature := response.GetHeader("x-jws-signature")

	if hdrXJwsSignature != "" {
		o.XJwsSignature = hdrXJwsSignature
	}

	o.Payload = new(models.OBErrorResponse1)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
