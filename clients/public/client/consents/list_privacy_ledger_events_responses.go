// Code generated by go-swagger; DO NOT EDIT.

package consents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/public/models"
)

// ListPrivacyLedgerEventsReader is a Reader for the ListPrivacyLedgerEvents structure.
type ListPrivacyLedgerEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPrivacyLedgerEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPrivacyLedgerEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPrivacyLedgerEventsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPrivacyLedgerEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPrivacyLedgerEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListPrivacyLedgerEventsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /privacy/events] listPrivacyLedgerEvents", response, response.Code())
	}
}

// NewListPrivacyLedgerEventsOK creates a ListPrivacyLedgerEventsOK with default headers values
func NewListPrivacyLedgerEventsOK() *ListPrivacyLedgerEventsOK {
	return &ListPrivacyLedgerEventsOK{}
}

/*
ListPrivacyLedgerEventsOK describes a response with status code 200, with default header values.

Privacy ledger events
*/
type ListPrivacyLedgerEventsOK struct {
	Payload *models.PrivacyLedgerEvents
}

// IsSuccess returns true when this list privacy ledger events o k response has a 2xx status code
func (o *ListPrivacyLedgerEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list privacy ledger events o k response has a 3xx status code
func (o *ListPrivacyLedgerEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events o k response has a 4xx status code
func (o *ListPrivacyLedgerEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list privacy ledger events o k response has a 5xx status code
func (o *ListPrivacyLedgerEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events o k response a status code equal to that given
func (o *ListPrivacyLedgerEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list privacy ledger events o k response
func (o *ListPrivacyLedgerEventsOK) Code() int {
	return 200
}

func (o *ListPrivacyLedgerEventsOK) Error() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsOK  %+v", 200, o.Payload)
}

func (o *ListPrivacyLedgerEventsOK) String() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsOK  %+v", 200, o.Payload)
}

func (o *ListPrivacyLedgerEventsOK) GetPayload() *models.PrivacyLedgerEvents {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PrivacyLedgerEvents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsUnauthorized creates a ListPrivacyLedgerEventsUnauthorized with default headers values
func NewListPrivacyLedgerEventsUnauthorized() *ListPrivacyLedgerEventsUnauthorized {
	return &ListPrivacyLedgerEventsUnauthorized{}
}

/*
ListPrivacyLedgerEventsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListPrivacyLedgerEventsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events unauthorized response has a 2xx status code
func (o *ListPrivacyLedgerEventsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events unauthorized response has a 3xx status code
func (o *ListPrivacyLedgerEventsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events unauthorized response has a 4xx status code
func (o *ListPrivacyLedgerEventsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events unauthorized response has a 5xx status code
func (o *ListPrivacyLedgerEventsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events unauthorized response a status code equal to that given
func (o *ListPrivacyLedgerEventsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list privacy ledger events unauthorized response
func (o *ListPrivacyLedgerEventsUnauthorized) Code() int {
	return 401
}

func (o *ListPrivacyLedgerEventsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPrivacyLedgerEventsUnauthorized) String() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListPrivacyLedgerEventsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsForbidden creates a ListPrivacyLedgerEventsForbidden with default headers values
func NewListPrivacyLedgerEventsForbidden() *ListPrivacyLedgerEventsForbidden {
	return &ListPrivacyLedgerEventsForbidden{}
}

/*
ListPrivacyLedgerEventsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListPrivacyLedgerEventsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events forbidden response has a 2xx status code
func (o *ListPrivacyLedgerEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events forbidden response has a 3xx status code
func (o *ListPrivacyLedgerEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events forbidden response has a 4xx status code
func (o *ListPrivacyLedgerEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events forbidden response has a 5xx status code
func (o *ListPrivacyLedgerEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events forbidden response a status code equal to that given
func (o *ListPrivacyLedgerEventsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list privacy ledger events forbidden response
func (o *ListPrivacyLedgerEventsForbidden) Code() int {
	return 403
}

func (o *ListPrivacyLedgerEventsForbidden) Error() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsForbidden  %+v", 403, o.Payload)
}

func (o *ListPrivacyLedgerEventsForbidden) String() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsForbidden  %+v", 403, o.Payload)
}

func (o *ListPrivacyLedgerEventsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsNotFound creates a ListPrivacyLedgerEventsNotFound with default headers values
func NewListPrivacyLedgerEventsNotFound() *ListPrivacyLedgerEventsNotFound {
	return &ListPrivacyLedgerEventsNotFound{}
}

/*
ListPrivacyLedgerEventsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListPrivacyLedgerEventsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events not found response has a 2xx status code
func (o *ListPrivacyLedgerEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events not found response has a 3xx status code
func (o *ListPrivacyLedgerEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events not found response has a 4xx status code
func (o *ListPrivacyLedgerEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events not found response has a 5xx status code
func (o *ListPrivacyLedgerEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events not found response a status code equal to that given
func (o *ListPrivacyLedgerEventsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list privacy ledger events not found response
func (o *ListPrivacyLedgerEventsNotFound) Code() int {
	return 404
}

func (o *ListPrivacyLedgerEventsNotFound) Error() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsNotFound  %+v", 404, o.Payload)
}

func (o *ListPrivacyLedgerEventsNotFound) String() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsNotFound  %+v", 404, o.Payload)
}

func (o *ListPrivacyLedgerEventsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPrivacyLedgerEventsTooManyRequests creates a ListPrivacyLedgerEventsTooManyRequests with default headers values
func NewListPrivacyLedgerEventsTooManyRequests() *ListPrivacyLedgerEventsTooManyRequests {
	return &ListPrivacyLedgerEventsTooManyRequests{}
}

/*
ListPrivacyLedgerEventsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListPrivacyLedgerEventsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list privacy ledger events too many requests response has a 2xx status code
func (o *ListPrivacyLedgerEventsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list privacy ledger events too many requests response has a 3xx status code
func (o *ListPrivacyLedgerEventsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list privacy ledger events too many requests response has a 4xx status code
func (o *ListPrivacyLedgerEventsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list privacy ledger events too many requests response has a 5xx status code
func (o *ListPrivacyLedgerEventsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list privacy ledger events too many requests response a status code equal to that given
func (o *ListPrivacyLedgerEventsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list privacy ledger events too many requests response
func (o *ListPrivacyLedgerEventsTooManyRequests) Code() int {
	return 429
}

func (o *ListPrivacyLedgerEventsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListPrivacyLedgerEventsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /privacy/events][%d] listPrivacyLedgerEventsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListPrivacyLedgerEventsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListPrivacyLedgerEventsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
