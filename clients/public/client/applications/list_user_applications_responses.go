// Code generated by go-swagger; DO NOT EDIT.

package applications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/public/models"
)

// ListUserApplicationsReader is a Reader for the ListUserApplications structure.
type ListUserApplicationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserApplicationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserApplicationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserApplicationsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserApplicationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserApplicationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserApplicationsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /applications] ListUserApplications", response, response.Code())
	}
}

// NewListUserApplicationsOK creates a ListUserApplicationsOK with default headers values
func NewListUserApplicationsOK() *ListUserApplicationsOK {
	return &ListUserApplicationsOK{}
}

/*
ListUserApplicationsOK describes a response with status code 200, with default header values.

User applications.
*/
type ListUserApplicationsOK struct {
	Payload *models.ListUserApplications
}

// IsSuccess returns true when this list user applications o k response has a 2xx status code
func (o *ListUserApplicationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user applications o k response has a 3xx status code
func (o *ListUserApplicationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user applications o k response has a 4xx status code
func (o *ListUserApplicationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user applications o k response has a 5xx status code
func (o *ListUserApplicationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user applications o k response a status code equal to that given
func (o *ListUserApplicationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user applications o k response
func (o *ListUserApplicationsOK) Code() int {
	return 200
}

func (o *ListUserApplicationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsOK %s", 200, payload)
}

func (o *ListUserApplicationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsOK %s", 200, payload)
}

func (o *ListUserApplicationsOK) GetPayload() *models.ListUserApplications {
	return o.Payload
}

func (o *ListUserApplicationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListUserApplications)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserApplicationsUnauthorized creates a ListUserApplicationsUnauthorized with default headers values
func NewListUserApplicationsUnauthorized() *ListUserApplicationsUnauthorized {
	return &ListUserApplicationsUnauthorized{}
}

/*
ListUserApplicationsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserApplicationsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user applications unauthorized response has a 2xx status code
func (o *ListUserApplicationsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user applications unauthorized response has a 3xx status code
func (o *ListUserApplicationsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user applications unauthorized response has a 4xx status code
func (o *ListUserApplicationsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user applications unauthorized response has a 5xx status code
func (o *ListUserApplicationsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user applications unauthorized response a status code equal to that given
func (o *ListUserApplicationsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user applications unauthorized response
func (o *ListUserApplicationsUnauthorized) Code() int {
	return 401
}

func (o *ListUserApplicationsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsUnauthorized %s", 401, payload)
}

func (o *ListUserApplicationsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsUnauthorized %s", 401, payload)
}

func (o *ListUserApplicationsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserApplicationsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserApplicationsForbidden creates a ListUserApplicationsForbidden with default headers values
func NewListUserApplicationsForbidden() *ListUserApplicationsForbidden {
	return &ListUserApplicationsForbidden{}
}

/*
ListUserApplicationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserApplicationsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user applications forbidden response has a 2xx status code
func (o *ListUserApplicationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user applications forbidden response has a 3xx status code
func (o *ListUserApplicationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user applications forbidden response has a 4xx status code
func (o *ListUserApplicationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user applications forbidden response has a 5xx status code
func (o *ListUserApplicationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user applications forbidden response a status code equal to that given
func (o *ListUserApplicationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user applications forbidden response
func (o *ListUserApplicationsForbidden) Code() int {
	return 403
}

func (o *ListUserApplicationsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsForbidden %s", 403, payload)
}

func (o *ListUserApplicationsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsForbidden %s", 403, payload)
}

func (o *ListUserApplicationsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserApplicationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserApplicationsNotFound creates a ListUserApplicationsNotFound with default headers values
func NewListUserApplicationsNotFound() *ListUserApplicationsNotFound {
	return &ListUserApplicationsNotFound{}
}

/*
ListUserApplicationsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUserApplicationsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user applications not found response has a 2xx status code
func (o *ListUserApplicationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user applications not found response has a 3xx status code
func (o *ListUserApplicationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user applications not found response has a 4xx status code
func (o *ListUserApplicationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user applications not found response has a 5xx status code
func (o *ListUserApplicationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user applications not found response a status code equal to that given
func (o *ListUserApplicationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user applications not found response
func (o *ListUserApplicationsNotFound) Code() int {
	return 404
}

func (o *ListUserApplicationsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsNotFound %s", 404, payload)
}

func (o *ListUserApplicationsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsNotFound %s", 404, payload)
}

func (o *ListUserApplicationsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserApplicationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserApplicationsTooManyRequests creates a ListUserApplicationsTooManyRequests with default headers values
func NewListUserApplicationsTooManyRequests() *ListUserApplicationsTooManyRequests {
	return &ListUserApplicationsTooManyRequests{}
}

/*
ListUserApplicationsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUserApplicationsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user applications too many requests response has a 2xx status code
func (o *ListUserApplicationsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user applications too many requests response has a 3xx status code
func (o *ListUserApplicationsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user applications too many requests response has a 4xx status code
func (o *ListUserApplicationsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user applications too many requests response has a 5xx status code
func (o *ListUserApplicationsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user applications too many requests response a status code equal to that given
func (o *ListUserApplicationsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list user applications too many requests response
func (o *ListUserApplicationsTooManyRequests) Code() int {
	return 429
}

func (o *ListUserApplicationsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsTooManyRequests %s", 429, payload)
}

func (o *ListUserApplicationsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /applications][%d] listUserApplicationsTooManyRequests %s", 429, payload)
}

func (o *ListUserApplicationsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserApplicationsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
