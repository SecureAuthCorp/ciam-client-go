// Code generated by go-swagger; DO NOT EDIT.

package transient_otp

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/public/models"
)

// VerifyTransientOTPReader is a Reader for the VerifyTransientOTP structure.
type VerifyTransientOTPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VerifyTransientOTPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewVerifyTransientOTPNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewVerifyTransientOTPUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewVerifyTransientOTPForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewVerifyTransientOTPNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewVerifyTransientOTPNoContent creates a VerifyTransientOTPNoContent with default headers values
func NewVerifyTransientOTPNoContent() *VerifyTransientOTPNoContent {
	return &VerifyTransientOTPNoContent{}
}

/* VerifyTransientOTPNoContent describes a response with status code 204, with default header values.

one-time password verified
*/
type VerifyTransientOTPNoContent struct {
}

func (o *VerifyTransientOTPNoContent) Error() string {
	return fmt.Sprintf("[POST /authn/otp/transient/{otpID}][%d] verifyTransientOTPNoContent ", 204)
}

func (o *VerifyTransientOTPNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVerifyTransientOTPUnauthorized creates a VerifyTransientOTPUnauthorized with default headers values
func NewVerifyTransientOTPUnauthorized() *VerifyTransientOTPUnauthorized {
	return &VerifyTransientOTPUnauthorized{}
}

/* VerifyTransientOTPUnauthorized describes a response with status code 401, with default header values.

HttpError
*/
type VerifyTransientOTPUnauthorized struct {
	Payload *models.Error
}

func (o *VerifyTransientOTPUnauthorized) Error() string {
	return fmt.Sprintf("[POST /authn/otp/transient/{otpID}][%d] verifyTransientOTPUnauthorized  %+v", 401, o.Payload)
}
func (o *VerifyTransientOTPUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyTransientOTPUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyTransientOTPForbidden creates a VerifyTransientOTPForbidden with default headers values
func NewVerifyTransientOTPForbidden() *VerifyTransientOTPForbidden {
	return &VerifyTransientOTPForbidden{}
}

/* VerifyTransientOTPForbidden describes a response with status code 403, with default header values.

HttpError
*/
type VerifyTransientOTPForbidden struct {
	Payload *models.Error
}

func (o *VerifyTransientOTPForbidden) Error() string {
	return fmt.Sprintf("[POST /authn/otp/transient/{otpID}][%d] verifyTransientOTPForbidden  %+v", 403, o.Payload)
}
func (o *VerifyTransientOTPForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyTransientOTPForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVerifyTransientOTPNotFound creates a VerifyTransientOTPNotFound with default headers values
func NewVerifyTransientOTPNotFound() *VerifyTransientOTPNotFound {
	return &VerifyTransientOTPNotFound{}
}

/* VerifyTransientOTPNotFound describes a response with status code 404, with default header values.

HttpError
*/
type VerifyTransientOTPNotFound struct {
	Payload *models.Error
}

func (o *VerifyTransientOTPNotFound) Error() string {
	return fmt.Sprintf("[POST /authn/otp/transient/{otpID}][%d] verifyTransientOTPNotFound  %+v", 404, o.Payload)
}
func (o *VerifyTransientOTPNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *VerifyTransientOTPNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
