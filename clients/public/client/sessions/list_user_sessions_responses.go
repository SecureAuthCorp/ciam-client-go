// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/public/models"
)

// ListUserSessionsReader is a Reader for the ListUserSessions structure.
type ListUserSessionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserSessionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserSessionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserSessionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserSessionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserSessionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListUserSessionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /sso/sessions] listUserSessions", response, response.Code())
	}
}

// NewListUserSessionsOK creates a ListUserSessionsOK with default headers values
func NewListUserSessionsOK() *ListUserSessionsOK {
	return &ListUserSessionsOK{}
}

/*
ListUserSessionsOK describes a response with status code 200, with default header values.

User  sessions
*/
type ListUserSessionsOK struct {
	Payload *models.ListUserSessions
}

// IsSuccess returns true when this list user sessions o k response has a 2xx status code
func (o *ListUserSessionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list user sessions o k response has a 3xx status code
func (o *ListUserSessionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user sessions o k response has a 4xx status code
func (o *ListUserSessionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list user sessions o k response has a 5xx status code
func (o *ListUserSessionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list user sessions o k response a status code equal to that given
func (o *ListUserSessionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list user sessions o k response
func (o *ListUserSessionsOK) Code() int {
	return 200
}

func (o *ListUserSessionsOK) Error() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsOK  %+v", 200, o.Payload)
}

func (o *ListUserSessionsOK) String() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsOK  %+v", 200, o.Payload)
}

func (o *ListUserSessionsOK) GetPayload() *models.ListUserSessions {
	return o.Payload
}

func (o *ListUserSessionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListUserSessions)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionsUnauthorized creates a ListUserSessionsUnauthorized with default headers values
func NewListUserSessionsUnauthorized() *ListUserSessionsUnauthorized {
	return &ListUserSessionsUnauthorized{}
}

/*
ListUserSessionsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListUserSessionsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user sessions unauthorized response has a 2xx status code
func (o *ListUserSessionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user sessions unauthorized response has a 3xx status code
func (o *ListUserSessionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user sessions unauthorized response has a 4xx status code
func (o *ListUserSessionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user sessions unauthorized response has a 5xx status code
func (o *ListUserSessionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list user sessions unauthorized response a status code equal to that given
func (o *ListUserSessionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list user sessions unauthorized response
func (o *ListUserSessionsUnauthorized) Code() int {
	return 401
}

func (o *ListUserSessionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserSessionsUnauthorized) String() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListUserSessionsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserSessionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionsForbidden creates a ListUserSessionsForbidden with default headers values
func NewListUserSessionsForbidden() *ListUserSessionsForbidden {
	return &ListUserSessionsForbidden{}
}

/*
ListUserSessionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListUserSessionsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user sessions forbidden response has a 2xx status code
func (o *ListUserSessionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user sessions forbidden response has a 3xx status code
func (o *ListUserSessionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user sessions forbidden response has a 4xx status code
func (o *ListUserSessionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user sessions forbidden response has a 5xx status code
func (o *ListUserSessionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list user sessions forbidden response a status code equal to that given
func (o *ListUserSessionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list user sessions forbidden response
func (o *ListUserSessionsForbidden) Code() int {
	return 403
}

func (o *ListUserSessionsForbidden) Error() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsForbidden  %+v", 403, o.Payload)
}

func (o *ListUserSessionsForbidden) String() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsForbidden  %+v", 403, o.Payload)
}

func (o *ListUserSessionsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserSessionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionsNotFound creates a ListUserSessionsNotFound with default headers values
func NewListUserSessionsNotFound() *ListUserSessionsNotFound {
	return &ListUserSessionsNotFound{}
}

/*
ListUserSessionsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListUserSessionsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user sessions not found response has a 2xx status code
func (o *ListUserSessionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user sessions not found response has a 3xx status code
func (o *ListUserSessionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user sessions not found response has a 4xx status code
func (o *ListUserSessionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user sessions not found response has a 5xx status code
func (o *ListUserSessionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list user sessions not found response a status code equal to that given
func (o *ListUserSessionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list user sessions not found response
func (o *ListUserSessionsNotFound) Code() int {
	return 404
}

func (o *ListUserSessionsNotFound) Error() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsNotFound  %+v", 404, o.Payload)
}

func (o *ListUserSessionsNotFound) String() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsNotFound  %+v", 404, o.Payload)
}

func (o *ListUserSessionsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserSessionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserSessionsTooManyRequests creates a ListUserSessionsTooManyRequests with default headers values
func NewListUserSessionsTooManyRequests() *ListUserSessionsTooManyRequests {
	return &ListUserSessionsTooManyRequests{}
}

/*
ListUserSessionsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListUserSessionsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list user sessions too many requests response has a 2xx status code
func (o *ListUserSessionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list user sessions too many requests response has a 3xx status code
func (o *ListUserSessionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list user sessions too many requests response has a 4xx status code
func (o *ListUserSessionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list user sessions too many requests response has a 5xx status code
func (o *ListUserSessionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list user sessions too many requests response a status code equal to that given
func (o *ListUserSessionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list user sessions too many requests response
func (o *ListUserSessionsTooManyRequests) Code() int {
	return 429
}

func (o *ListUserSessionsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserSessionsTooManyRequests) String() string {
	return fmt.Sprintf("[GET /sso/sessions][%d] listUserSessionsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListUserSessionsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListUserSessionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
