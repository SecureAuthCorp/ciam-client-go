// Code generated by go-swagger; DO NOT EDIT.

package o_p_i_n

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/opin/models"
)

// CreateInsuranceDataAccessConsentReader is a Reader for the CreateInsuranceDataAccessConsent structure.
type CreateInsuranceDataAccessConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateInsuranceDataAccessConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreateInsuranceDataAccessConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateInsuranceDataAccessConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateInsuranceDataAccessConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateInsuranceDataAccessConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateInsuranceDataAccessConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateInsuranceDataAccessConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateInsuranceDataAccessConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateInsuranceDataAccessConsentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateInsuranceDataAccessConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateInsuranceDataAccessConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-insurance/consents/v1/] CreateInsuranceDataAccessConsent", response, response.Code())
	}
}

// NewCreateInsuranceDataAccessConsentCreated creates a CreateInsuranceDataAccessConsentCreated with default headers values
func NewCreateInsuranceDataAccessConsentCreated() *CreateInsuranceDataAccessConsentCreated {
	return &CreateInsuranceDataAccessConsentCreated{}
}

/*
CreateInsuranceDataAccessConsentCreated describes a response with status code 201, with default header values.

Customer data access consent
*/
type CreateInsuranceDataAccessConsentCreated struct {
	Payload *models.BrazilInsuranceCustomerDataAccessConsentResponse
}

// IsSuccess returns true when this create insurance data access consent created response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create insurance data access consent created response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent created response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create insurance data access consent created response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent created response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create insurance data access consent created response
func (o *CreateInsuranceDataAccessConsentCreated) Code() int {
	return 201
}

func (o *CreateInsuranceDataAccessConsentCreated) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentCreated  %+v", 201, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentCreated) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentCreated  %+v", 201, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentCreated) GetPayload() *models.BrazilInsuranceCustomerDataAccessConsentResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilInsuranceCustomerDataAccessConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentBadRequest creates a CreateInsuranceDataAccessConsentBadRequest with default headers values
func NewCreateInsuranceDataAccessConsentBadRequest() *CreateInsuranceDataAccessConsentBadRequest {
	return &CreateInsuranceDataAccessConsentBadRequest{}
}

/*
CreateInsuranceDataAccessConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentBadRequest struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent bad request response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent bad request response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent bad request response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent bad request response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent bad request response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create insurance data access consent bad request response
func (o *CreateInsuranceDataAccessConsentBadRequest) Code() int {
	return 400
}

func (o *CreateInsuranceDataAccessConsentBadRequest) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentBadRequest) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentBadRequest  %+v", 400, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentUnauthorized creates a CreateInsuranceDataAccessConsentUnauthorized with default headers values
func NewCreateInsuranceDataAccessConsentUnauthorized() *CreateInsuranceDataAccessConsentUnauthorized {
	return &CreateInsuranceDataAccessConsentUnauthorized{}
}

/*
CreateInsuranceDataAccessConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent unauthorized response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent unauthorized response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent unauthorized response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent unauthorized response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent unauthorized response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create insurance data access consent unauthorized response
func (o *CreateInsuranceDataAccessConsentUnauthorized) Code() int {
	return 401
}

func (o *CreateInsuranceDataAccessConsentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentUnauthorized) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentForbidden creates a CreateInsuranceDataAccessConsentForbidden with default headers values
func NewCreateInsuranceDataAccessConsentForbidden() *CreateInsuranceDataAccessConsentForbidden {
	return &CreateInsuranceDataAccessConsentForbidden{}
}

/*
CreateInsuranceDataAccessConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentForbidden struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent forbidden response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent forbidden response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent forbidden response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent forbidden response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent forbidden response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create insurance data access consent forbidden response
func (o *CreateInsuranceDataAccessConsentForbidden) Code() int {
	return 403
}

func (o *CreateInsuranceDataAccessConsentForbidden) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentForbidden  %+v", 403, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentForbidden) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentForbidden  %+v", 403, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentMethodNotAllowed creates a CreateInsuranceDataAccessConsentMethodNotAllowed with default headers values
func NewCreateInsuranceDataAccessConsentMethodNotAllowed() *CreateInsuranceDataAccessConsentMethodNotAllowed {
	return &CreateInsuranceDataAccessConsentMethodNotAllowed{}
}

/*
CreateInsuranceDataAccessConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent method not allowed response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent method not allowed response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent method not allowed response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent method not allowed response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent method not allowed response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create insurance data access consent method not allowed response
func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentNotAcceptable creates a CreateInsuranceDataAccessConsentNotAcceptable with default headers values
func NewCreateInsuranceDataAccessConsentNotAcceptable() *CreateInsuranceDataAccessConsentNotAcceptable {
	return &CreateInsuranceDataAccessConsentNotAcceptable{}
}

/*
CreateInsuranceDataAccessConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent not acceptable response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent not acceptable response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent not acceptable response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent not acceptable response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent not acceptable response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create insurance data access consent not acceptable response
func (o *CreateInsuranceDataAccessConsentNotAcceptable) Code() int {
	return 406
}

func (o *CreateInsuranceDataAccessConsentNotAcceptable) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentNotAcceptable) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentNotAcceptable  %+v", 406, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentUnsupportedMediaType creates a CreateInsuranceDataAccessConsentUnsupportedMediaType with default headers values
func NewCreateInsuranceDataAccessConsentUnsupportedMediaType() *CreateInsuranceDataAccessConsentUnsupportedMediaType {
	return &CreateInsuranceDataAccessConsentUnsupportedMediaType{}
}

/*
CreateInsuranceDataAccessConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent unsupported media type response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent unsupported media type response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent unsupported media type response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent unsupported media type response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent unsupported media type response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create insurance data access consent unsupported media type response
func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentUnsupportedMediaType  %+v", 415, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentUnprocessableEntity creates a CreateInsuranceDataAccessConsentUnprocessableEntity with default headers values
func NewCreateInsuranceDataAccessConsentUnprocessableEntity() *CreateInsuranceDataAccessConsentUnprocessableEntity {
	return &CreateInsuranceDataAccessConsentUnprocessableEntity{}
}

/*
CreateInsuranceDataAccessConsentUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent unprocessable entity response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent unprocessable entity response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent unprocessable entity response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent unprocessable entity response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent unprocessable entity response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create insurance data access consent unprocessable entity response
func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentTooManyRequests creates a CreateInsuranceDataAccessConsentTooManyRequests with default headers values
func NewCreateInsuranceDataAccessConsentTooManyRequests() *CreateInsuranceDataAccessConsentTooManyRequests {
	return &CreateInsuranceDataAccessConsentTooManyRequests{}
}

/*
CreateInsuranceDataAccessConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent too many requests response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent too many requests response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent too many requests response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create insurance data access consent too many requests response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create insurance data access consent too many requests response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create insurance data access consent too many requests response
func (o *CreateInsuranceDataAccessConsentTooManyRequests) Code() int {
	return 429
}

func (o *CreateInsuranceDataAccessConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentTooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateInsuranceDataAccessConsentInternalServerError creates a CreateInsuranceDataAccessConsentInternalServerError with default headers values
func NewCreateInsuranceDataAccessConsentInternalServerError() *CreateInsuranceDataAccessConsentInternalServerError {
	return &CreateInsuranceDataAccessConsentInternalServerError{}
}

/*
CreateInsuranceDataAccessConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreateInsuranceDataAccessConsentInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create insurance data access consent internal server error response has a 2xx status code
func (o *CreateInsuranceDataAccessConsentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create insurance data access consent internal server error response has a 3xx status code
func (o *CreateInsuranceDataAccessConsentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create insurance data access consent internal server error response has a 4xx status code
func (o *CreateInsuranceDataAccessConsentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create insurance data access consent internal server error response has a 5xx status code
func (o *CreateInsuranceDataAccessConsentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create insurance data access consent internal server error response a status code equal to that given
func (o *CreateInsuranceDataAccessConsentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create insurance data access consent internal server error response
func (o *CreateInsuranceDataAccessConsentInternalServerError) Code() int {
	return 500
}

func (o *CreateInsuranceDataAccessConsentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentInternalServerError) String() string {
	return fmt.Sprintf("[POST /open-insurance/consents/v1/][%d] createInsuranceDataAccessConsentInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateInsuranceDataAccessConsentInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateInsuranceDataAccessConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
