// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// RevokeOBBRConsentReader is a Reader for the RevokeOBBRConsent structure.
type RevokeOBBRConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeOBBRConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRevokeOBBRConsentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeOBBRConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRevokeOBBRConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRevokeOBBRConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeOBBRConsentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewRevokeOBBRConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeOBBRConsentNoContent creates a RevokeOBBRConsentNoContent with default headers values
func NewRevokeOBBRConsentNoContent() *RevokeOBBRConsentNoContent {
	return &RevokeOBBRConsentNoContent{}
}

/*
RevokeOBBRConsentNoContent describes a response with status code 204, with default header values.

	Consent has been revoked
*/
type RevokeOBBRConsentNoContent struct {
}

// IsSuccess returns true when this revoke o b b r consent no content response has a 2xx status code
func (o *RevokeOBBRConsentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this revoke o b b r consent no content response has a 3xx status code
func (o *RevokeOBBRConsentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b b r consent no content response has a 4xx status code
func (o *RevokeOBBRConsentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this revoke o b b r consent no content response has a 5xx status code
func (o *RevokeOBBRConsentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b b r consent no content response a status code equal to that given
func (o *RevokeOBBRConsentNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the revoke o b b r consent no content response
func (o *RevokeOBBRConsentNoContent) Code() int {
	return 204
}

func (o *RevokeOBBRConsentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentNoContent ", 204)
}

func (o *RevokeOBBRConsentNoContent) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentNoContent ", 204)
}

func (o *RevokeOBBRConsentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRevokeOBBRConsentBadRequest creates a RevokeOBBRConsentBadRequest with default headers values
func NewRevokeOBBRConsentBadRequest() *RevokeOBBRConsentBadRequest {
	return &RevokeOBBRConsentBadRequest{}
}

/*
RevokeOBBRConsentBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type RevokeOBBRConsentBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b b r consent bad request response has a 2xx status code
func (o *RevokeOBBRConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b b r consent bad request response has a 3xx status code
func (o *RevokeOBBRConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b b r consent bad request response has a 4xx status code
func (o *RevokeOBBRConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b b r consent bad request response has a 5xx status code
func (o *RevokeOBBRConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b b r consent bad request response a status code equal to that given
func (o *RevokeOBBRConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the revoke o b b r consent bad request response
func (o *RevokeOBBRConsentBadRequest) Code() int {
	return 400
}

func (o *RevokeOBBRConsentBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOBBRConsentBadRequest) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeOBBRConsentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBBRConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBBRConsentUnauthorized creates a RevokeOBBRConsentUnauthorized with default headers values
func NewRevokeOBBRConsentUnauthorized() *RevokeOBBRConsentUnauthorized {
	return &RevokeOBBRConsentUnauthorized{}
}

/*
RevokeOBBRConsentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RevokeOBBRConsentUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b b r consent unauthorized response has a 2xx status code
func (o *RevokeOBBRConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b b r consent unauthorized response has a 3xx status code
func (o *RevokeOBBRConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b b r consent unauthorized response has a 4xx status code
func (o *RevokeOBBRConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b b r consent unauthorized response has a 5xx status code
func (o *RevokeOBBRConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b b r consent unauthorized response a status code equal to that given
func (o *RevokeOBBRConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the revoke o b b r consent unauthorized response
func (o *RevokeOBBRConsentUnauthorized) Code() int {
	return 401
}

func (o *RevokeOBBRConsentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOBBRConsentUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentUnauthorized  %+v", 401, o.Payload)
}

func (o *RevokeOBBRConsentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBBRConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBBRConsentForbidden creates a RevokeOBBRConsentForbidden with default headers values
func NewRevokeOBBRConsentForbidden() *RevokeOBBRConsentForbidden {
	return &RevokeOBBRConsentForbidden{}
}

/*
RevokeOBBRConsentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RevokeOBBRConsentForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b b r consent forbidden response has a 2xx status code
func (o *RevokeOBBRConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b b r consent forbidden response has a 3xx status code
func (o *RevokeOBBRConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b b r consent forbidden response has a 4xx status code
func (o *RevokeOBBRConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b b r consent forbidden response has a 5xx status code
func (o *RevokeOBBRConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b b r consent forbidden response a status code equal to that given
func (o *RevokeOBBRConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the revoke o b b r consent forbidden response
func (o *RevokeOBBRConsentForbidden) Code() int {
	return 403
}

func (o *RevokeOBBRConsentForbidden) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOBBRConsentForbidden) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentForbidden  %+v", 403, o.Payload)
}

func (o *RevokeOBBRConsentForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBBRConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBBRConsentNotFound creates a RevokeOBBRConsentNotFound with default headers values
func NewRevokeOBBRConsentNotFound() *RevokeOBBRConsentNotFound {
	return &RevokeOBBRConsentNotFound{}
}

/*
RevokeOBBRConsentNotFound describes a response with status code 404, with default header values.

Not found
*/
type RevokeOBBRConsentNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b b r consent not found response has a 2xx status code
func (o *RevokeOBBRConsentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b b r consent not found response has a 3xx status code
func (o *RevokeOBBRConsentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b b r consent not found response has a 4xx status code
func (o *RevokeOBBRConsentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b b r consent not found response has a 5xx status code
func (o *RevokeOBBRConsentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b b r consent not found response a status code equal to that given
func (o *RevokeOBBRConsentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the revoke o b b r consent not found response
func (o *RevokeOBBRConsentNotFound) Code() int {
	return 404
}

func (o *RevokeOBBRConsentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOBBRConsentNotFound) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentNotFound  %+v", 404, o.Payload)
}

func (o *RevokeOBBRConsentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBBRConsentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeOBBRConsentTooManyRequests creates a RevokeOBBRConsentTooManyRequests with default headers values
func NewRevokeOBBRConsentTooManyRequests() *RevokeOBBRConsentTooManyRequests {
	return &RevokeOBBRConsentTooManyRequests{}
}

/*
RevokeOBBRConsentTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type RevokeOBBRConsentTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this revoke o b b r consent too many requests response has a 2xx status code
func (o *RevokeOBBRConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this revoke o b b r consent too many requests response has a 3xx status code
func (o *RevokeOBBRConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this revoke o b b r consent too many requests response has a 4xx status code
func (o *RevokeOBBRConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this revoke o b b r consent too many requests response has a 5xx status code
func (o *RevokeOBBRConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this revoke o b b r consent too many requests response a status code equal to that given
func (o *RevokeOBBRConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the revoke o b b r consent too many requests response
func (o *RevokeOBBRConsentTooManyRequests) Code() int {
	return 429
}

func (o *RevokeOBBRConsentTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOBBRConsentTooManyRequests) String() string {
	return fmt.Sprintf("[DELETE /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] revokeOBBRConsentTooManyRequests  %+v", 429, o.Payload)
}

func (o *RevokeOBBRConsentTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *RevokeOBBRConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
