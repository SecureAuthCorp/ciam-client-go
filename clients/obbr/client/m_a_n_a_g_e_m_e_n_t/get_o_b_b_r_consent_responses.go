// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// GetOBBRConsentReader is a Reader for the GetOBBRConsent structure.
type GetOBBRConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOBBRConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOBBRConsentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOBBRConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetOBBRConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetOBBRConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOBBRConsentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetOBBRConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}] getOBBRConsent", response, response.Code())
	}
}

// NewGetOBBRConsentOK creates a GetOBBRConsentOK with default headers values
func NewGetOBBRConsentOK() *GetOBBRConsentOK {
	return &GetOBBRConsentOK{}
}

/*
GetOBBRConsentOK describes a response with status code 200, with default header values.

Open Banking Brazil Consent
*/
type GetOBBRConsentOK struct {
	Payload *models.BrazilConsent
}

// IsSuccess returns true when this get o b b r consent o k response has a 2xx status code
func (o *GetOBBRConsentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get o b b r consent o k response has a 3xx status code
func (o *GetOBBRConsentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b b r consent o k response has a 4xx status code
func (o *GetOBBRConsentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get o b b r consent o k response has a 5xx status code
func (o *GetOBBRConsentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b b r consent o k response a status code equal to that given
func (o *GetOBBRConsentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get o b b r consent o k response
func (o *GetOBBRConsentOK) Code() int {
	return 200
}

func (o *GetOBBRConsentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentOK %s", 200, payload)
}

func (o *GetOBBRConsentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentOK %s", 200, payload)
}

func (o *GetOBBRConsentOK) GetPayload() *models.BrazilConsent {
	return o.Payload
}

func (o *GetOBBRConsentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilConsent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBBRConsentBadRequest creates a GetOBBRConsentBadRequest with default headers values
func NewGetOBBRConsentBadRequest() *GetOBBRConsentBadRequest {
	return &GetOBBRConsentBadRequest{}
}

/*
GetOBBRConsentBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type GetOBBRConsentBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b b r consent bad request response has a 2xx status code
func (o *GetOBBRConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b b r consent bad request response has a 3xx status code
func (o *GetOBBRConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b b r consent bad request response has a 4xx status code
func (o *GetOBBRConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b b r consent bad request response has a 5xx status code
func (o *GetOBBRConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b b r consent bad request response a status code equal to that given
func (o *GetOBBRConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get o b b r consent bad request response
func (o *GetOBBRConsentBadRequest) Code() int {
	return 400
}

func (o *GetOBBRConsentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentBadRequest %s", 400, payload)
}

func (o *GetOBBRConsentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentBadRequest %s", 400, payload)
}

func (o *GetOBBRConsentBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBBRConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBBRConsentUnauthorized creates a GetOBBRConsentUnauthorized with default headers values
func NewGetOBBRConsentUnauthorized() *GetOBBRConsentUnauthorized {
	return &GetOBBRConsentUnauthorized{}
}

/*
GetOBBRConsentUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetOBBRConsentUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b b r consent unauthorized response has a 2xx status code
func (o *GetOBBRConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b b r consent unauthorized response has a 3xx status code
func (o *GetOBBRConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b b r consent unauthorized response has a 4xx status code
func (o *GetOBBRConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b b r consent unauthorized response has a 5xx status code
func (o *GetOBBRConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b b r consent unauthorized response a status code equal to that given
func (o *GetOBBRConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get o b b r consent unauthorized response
func (o *GetOBBRConsentUnauthorized) Code() int {
	return 401
}

func (o *GetOBBRConsentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentUnauthorized %s", 401, payload)
}

func (o *GetOBBRConsentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentUnauthorized %s", 401, payload)
}

func (o *GetOBBRConsentUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBBRConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBBRConsentForbidden creates a GetOBBRConsentForbidden with default headers values
func NewGetOBBRConsentForbidden() *GetOBBRConsentForbidden {
	return &GetOBBRConsentForbidden{}
}

/*
GetOBBRConsentForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetOBBRConsentForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b b r consent forbidden response has a 2xx status code
func (o *GetOBBRConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b b r consent forbidden response has a 3xx status code
func (o *GetOBBRConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b b r consent forbidden response has a 4xx status code
func (o *GetOBBRConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b b r consent forbidden response has a 5xx status code
func (o *GetOBBRConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b b r consent forbidden response a status code equal to that given
func (o *GetOBBRConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get o b b r consent forbidden response
func (o *GetOBBRConsentForbidden) Code() int {
	return 403
}

func (o *GetOBBRConsentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentForbidden %s", 403, payload)
}

func (o *GetOBBRConsentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentForbidden %s", 403, payload)
}

func (o *GetOBBRConsentForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBBRConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBBRConsentNotFound creates a GetOBBRConsentNotFound with default headers values
func NewGetOBBRConsentNotFound() *GetOBBRConsentNotFound {
	return &GetOBBRConsentNotFound{}
}

/*
GetOBBRConsentNotFound describes a response with status code 404, with default header values.

Not found
*/
type GetOBBRConsentNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b b r consent not found response has a 2xx status code
func (o *GetOBBRConsentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b b r consent not found response has a 3xx status code
func (o *GetOBBRConsentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b b r consent not found response has a 4xx status code
func (o *GetOBBRConsentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b b r consent not found response has a 5xx status code
func (o *GetOBBRConsentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b b r consent not found response a status code equal to that given
func (o *GetOBBRConsentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get o b b r consent not found response
func (o *GetOBBRConsentNotFound) Code() int {
	return 404
}

func (o *GetOBBRConsentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentNotFound %s", 404, payload)
}

func (o *GetOBBRConsentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentNotFound %s", 404, payload)
}

func (o *GetOBBRConsentNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBBRConsentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOBBRConsentTooManyRequests creates a GetOBBRConsentTooManyRequests with default headers values
func NewGetOBBRConsentTooManyRequests() *GetOBBRConsentTooManyRequests {
	return &GetOBBRConsentTooManyRequests{}
}

/*
GetOBBRConsentTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type GetOBBRConsentTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this get o b b r consent too many requests response has a 2xx status code
func (o *GetOBBRConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get o b b r consent too many requests response has a 3xx status code
func (o *GetOBBRConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get o b b r consent too many requests response has a 4xx status code
func (o *GetOBBRConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get o b b r consent too many requests response has a 5xx status code
func (o *GetOBBRConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get o b b r consent too many requests response a status code equal to that given
func (o *GetOBBRConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get o b b r consent too many requests response
func (o *GetOBBRConsentTooManyRequests) Code() int {
	return 429
}

func (o *GetOBBRConsentTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentTooManyRequests %s", 429, payload)
}

func (o *GetOBBRConsentTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /servers/{wid}/open-banking-brasil/consents/{consentID}][%d] getOBBRConsentTooManyRequests %s", 429, payload)
}

func (o *GetOBBRConsentTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOBBRConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
