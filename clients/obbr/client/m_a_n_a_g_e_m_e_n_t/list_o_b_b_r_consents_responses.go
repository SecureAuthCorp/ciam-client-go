// Code generated by go-swagger; DO NOT EDIT.

package m_a_n_a_g_e_m_e_n_t

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// ListOBBRConsentsReader is a Reader for the ListOBBRConsents structure.
type ListOBBRConsentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOBBRConsentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOBBRConsentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOBBRConsentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewListOBBRConsentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListOBBRConsentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListOBBRConsentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewListOBBRConsentsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewListOBBRConsentsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /servers/{wid}/open-banking-brasil/consents] listOBBRConsents", response, response.Code())
	}
}

// NewListOBBRConsentsOK creates a ListOBBRConsentsOK with default headers values
func NewListOBBRConsentsOK() *ListOBBRConsentsOK {
	return &ListOBBRConsentsOK{}
}

/*
ListOBBRConsentsOK describes a response with status code 200, with default header values.

Open Banking Brazil Consents
*/
type ListOBBRConsentsOK struct {
	Payload *models.OBBRConsents
}

// IsSuccess returns true when this list o b b r consents o k response has a 2xx status code
func (o *ListOBBRConsentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list o b b r consents o k response has a 3xx status code
func (o *ListOBBRConsentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents o k response has a 4xx status code
func (o *ListOBBRConsentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list o b b r consents o k response has a 5xx status code
func (o *ListOBBRConsentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents o k response a status code equal to that given
func (o *ListOBBRConsentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list o b b r consents o k response
func (o *ListOBBRConsentsOK) Code() int {
	return 200
}

func (o *ListOBBRConsentsOK) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsOK  %+v", 200, o.Payload)
}

func (o *ListOBBRConsentsOK) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsOK  %+v", 200, o.Payload)
}

func (o *ListOBBRConsentsOK) GetPayload() *models.OBBRConsents {
	return o.Payload
}

func (o *ListOBBRConsentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRConsents)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBBRConsentsBadRequest creates a ListOBBRConsentsBadRequest with default headers values
func NewListOBBRConsentsBadRequest() *ListOBBRConsentsBadRequest {
	return &ListOBBRConsentsBadRequest{}
}

/*
ListOBBRConsentsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type ListOBBRConsentsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b b r consents bad request response has a 2xx status code
func (o *ListOBBRConsentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b b r consents bad request response has a 3xx status code
func (o *ListOBBRConsentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents bad request response has a 4xx status code
func (o *ListOBBRConsentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b b r consents bad request response has a 5xx status code
func (o *ListOBBRConsentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents bad request response a status code equal to that given
func (o *ListOBBRConsentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list o b b r consents bad request response
func (o *ListOBBRConsentsBadRequest) Code() int {
	return 400
}

func (o *ListOBBRConsentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListOBBRConsentsBadRequest) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListOBBRConsentsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBBRConsentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBBRConsentsUnauthorized creates a ListOBBRConsentsUnauthorized with default headers values
func NewListOBBRConsentsUnauthorized() *ListOBBRConsentsUnauthorized {
	return &ListOBBRConsentsUnauthorized{}
}

/*
ListOBBRConsentsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListOBBRConsentsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b b r consents unauthorized response has a 2xx status code
func (o *ListOBBRConsentsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b b r consents unauthorized response has a 3xx status code
func (o *ListOBBRConsentsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents unauthorized response has a 4xx status code
func (o *ListOBBRConsentsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b b r consents unauthorized response has a 5xx status code
func (o *ListOBBRConsentsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents unauthorized response a status code equal to that given
func (o *ListOBBRConsentsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list o b b r consents unauthorized response
func (o *ListOBBRConsentsUnauthorized) Code() int {
	return 401
}

func (o *ListOBBRConsentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListOBBRConsentsUnauthorized) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListOBBRConsentsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBBRConsentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBBRConsentsForbidden creates a ListOBBRConsentsForbidden with default headers values
func NewListOBBRConsentsForbidden() *ListOBBRConsentsForbidden {
	return &ListOBBRConsentsForbidden{}
}

/*
ListOBBRConsentsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListOBBRConsentsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b b r consents forbidden response has a 2xx status code
func (o *ListOBBRConsentsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b b r consents forbidden response has a 3xx status code
func (o *ListOBBRConsentsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents forbidden response has a 4xx status code
func (o *ListOBBRConsentsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b b r consents forbidden response has a 5xx status code
func (o *ListOBBRConsentsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents forbidden response a status code equal to that given
func (o *ListOBBRConsentsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list o b b r consents forbidden response
func (o *ListOBBRConsentsForbidden) Code() int {
	return 403
}

func (o *ListOBBRConsentsForbidden) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsForbidden  %+v", 403, o.Payload)
}

func (o *ListOBBRConsentsForbidden) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsForbidden  %+v", 403, o.Payload)
}

func (o *ListOBBRConsentsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBBRConsentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBBRConsentsNotFound creates a ListOBBRConsentsNotFound with default headers values
func NewListOBBRConsentsNotFound() *ListOBBRConsentsNotFound {
	return &ListOBBRConsentsNotFound{}
}

/*
ListOBBRConsentsNotFound describes a response with status code 404, with default header values.

Not found
*/
type ListOBBRConsentsNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b b r consents not found response has a 2xx status code
func (o *ListOBBRConsentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b b r consents not found response has a 3xx status code
func (o *ListOBBRConsentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents not found response has a 4xx status code
func (o *ListOBBRConsentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b b r consents not found response has a 5xx status code
func (o *ListOBBRConsentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents not found response a status code equal to that given
func (o *ListOBBRConsentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list o b b r consents not found response
func (o *ListOBBRConsentsNotFound) Code() int {
	return 404
}

func (o *ListOBBRConsentsNotFound) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsNotFound  %+v", 404, o.Payload)
}

func (o *ListOBBRConsentsNotFound) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsNotFound  %+v", 404, o.Payload)
}

func (o *ListOBBRConsentsNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBBRConsentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBBRConsentsUnprocessableEntity creates a ListOBBRConsentsUnprocessableEntity with default headers values
func NewListOBBRConsentsUnprocessableEntity() *ListOBBRConsentsUnprocessableEntity {
	return &ListOBBRConsentsUnprocessableEntity{}
}

/*
ListOBBRConsentsUnprocessableEntity describes a response with status code 422, with default header values.

Unprocessable entity
*/
type ListOBBRConsentsUnprocessableEntity struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b b r consents unprocessable entity response has a 2xx status code
func (o *ListOBBRConsentsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b b r consents unprocessable entity response has a 3xx status code
func (o *ListOBBRConsentsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents unprocessable entity response has a 4xx status code
func (o *ListOBBRConsentsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b b r consents unprocessable entity response has a 5xx status code
func (o *ListOBBRConsentsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents unprocessable entity response a status code equal to that given
func (o *ListOBBRConsentsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the list o b b r consents unprocessable entity response
func (o *ListOBBRConsentsUnprocessableEntity) Code() int {
	return 422
}

func (o *ListOBBRConsentsUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ListOBBRConsentsUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ListOBBRConsentsUnprocessableEntity) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBBRConsentsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOBBRConsentsTooManyRequests creates a ListOBBRConsentsTooManyRequests with default headers values
func NewListOBBRConsentsTooManyRequests() *ListOBBRConsentsTooManyRequests {
	return &ListOBBRConsentsTooManyRequests{}
}

/*
ListOBBRConsentsTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type ListOBBRConsentsTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this list o b b r consents too many requests response has a 2xx status code
func (o *ListOBBRConsentsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list o b b r consents too many requests response has a 3xx status code
func (o *ListOBBRConsentsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list o b b r consents too many requests response has a 4xx status code
func (o *ListOBBRConsentsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this list o b b r consents too many requests response has a 5xx status code
func (o *ListOBBRConsentsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this list o b b r consents too many requests response a status code equal to that given
func (o *ListOBBRConsentsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the list o b b r consents too many requests response
func (o *ListOBBRConsentsTooManyRequests) Code() int {
	return 429
}

func (o *ListOBBRConsentsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListOBBRConsentsTooManyRequests) String() string {
	return fmt.Sprintf("[POST /servers/{wid}/open-banking-brasil/consents][%d] listOBBRConsentsTooManyRequests  %+v", 429, o.Payload)
}

func (o *ListOBBRConsentsTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ListOBBRConsentsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
