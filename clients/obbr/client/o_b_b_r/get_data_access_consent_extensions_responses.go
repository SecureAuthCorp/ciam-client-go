// Code generated by go-swagger; DO NOT EDIT.

package o_b_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// GetDataAccessConsentExtensionsReader is a Reader for the GetDataAccessConsentExtensions structure.
type GetDataAccessConsentExtensionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDataAccessConsentExtensionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDataAccessConsentExtensionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDataAccessConsentExtensionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetDataAccessConsentExtensionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDataAccessConsentExtensionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDataAccessConsentExtensionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewGetDataAccessConsentExtensionsNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewGetDataAccessConsentExtensionsUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetDataAccessConsentExtensionsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetDataAccessConsentExtensionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDataAccessConsentExtensionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /open-banking/consents/v2/consents/{consentID}/extends] GetDataAccessConsentExtensions", response, response.Code())
	}
}

// NewGetDataAccessConsentExtensionsOK creates a GetDataAccessConsentExtensionsOK with default headers values
func NewGetDataAccessConsentExtensionsOK() *GetDataAccessConsentExtensionsOK {
	return &GetDataAccessConsentExtensionsOK{}
}

/*
GetDataAccessConsentExtensionsOK describes a response with status code 200, with default header values.

Get Customer data access v2 consent extension
*/
type GetDataAccessConsentExtensionsOK struct {
	Payload *models.BrazilGetConsentExtensionsResponse
}

// IsSuccess returns true when this get data access consent extensions o k response has a 2xx status code
func (o *GetDataAccessConsentExtensionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get data access consent extensions o k response has a 3xx status code
func (o *GetDataAccessConsentExtensionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions o k response has a 4xx status code
func (o *GetDataAccessConsentExtensionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get data access consent extensions o k response has a 5xx status code
func (o *GetDataAccessConsentExtensionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions o k response a status code equal to that given
func (o *GetDataAccessConsentExtensionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get data access consent extensions o k response
func (o *GetDataAccessConsentExtensionsOK) Code() int {
	return 200
}

func (o *GetDataAccessConsentExtensionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsOK %s", 200, payload)
}

func (o *GetDataAccessConsentExtensionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsOK %s", 200, payload)
}

func (o *GetDataAccessConsentExtensionsOK) GetPayload() *models.BrazilGetConsentExtensionsResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilGetConsentExtensionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsBadRequest creates a GetDataAccessConsentExtensionsBadRequest with default headers values
func NewGetDataAccessConsentExtensionsBadRequest() *GetDataAccessConsentExtensionsBadRequest {
	return &GetDataAccessConsentExtensionsBadRequest{}
}

/*
GetDataAccessConsentExtensionsBadRequest describes a response with status code 400, with default header values.

Error
*/
type GetDataAccessConsentExtensionsBadRequest struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions bad request response has a 2xx status code
func (o *GetDataAccessConsentExtensionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions bad request response has a 3xx status code
func (o *GetDataAccessConsentExtensionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions bad request response has a 4xx status code
func (o *GetDataAccessConsentExtensionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions bad request response has a 5xx status code
func (o *GetDataAccessConsentExtensionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions bad request response a status code equal to that given
func (o *GetDataAccessConsentExtensionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get data access consent extensions bad request response
func (o *GetDataAccessConsentExtensionsBadRequest) Code() int {
	return 400
}

func (o *GetDataAccessConsentExtensionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsBadRequest %s", 400, payload)
}

func (o *GetDataAccessConsentExtensionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsBadRequest %s", 400, payload)
}

func (o *GetDataAccessConsentExtensionsBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsUnauthorized creates a GetDataAccessConsentExtensionsUnauthorized with default headers values
func NewGetDataAccessConsentExtensionsUnauthorized() *GetDataAccessConsentExtensionsUnauthorized {
	return &GetDataAccessConsentExtensionsUnauthorized{}
}

/*
GetDataAccessConsentExtensionsUnauthorized describes a response with status code 401, with default header values.

Error
*/
type GetDataAccessConsentExtensionsUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions unauthorized response has a 2xx status code
func (o *GetDataAccessConsentExtensionsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions unauthorized response has a 3xx status code
func (o *GetDataAccessConsentExtensionsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions unauthorized response has a 4xx status code
func (o *GetDataAccessConsentExtensionsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions unauthorized response has a 5xx status code
func (o *GetDataAccessConsentExtensionsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions unauthorized response a status code equal to that given
func (o *GetDataAccessConsentExtensionsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get data access consent extensions unauthorized response
func (o *GetDataAccessConsentExtensionsUnauthorized) Code() int {
	return 401
}

func (o *GetDataAccessConsentExtensionsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsUnauthorized %s", 401, payload)
}

func (o *GetDataAccessConsentExtensionsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsUnauthorized %s", 401, payload)
}

func (o *GetDataAccessConsentExtensionsUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsForbidden creates a GetDataAccessConsentExtensionsForbidden with default headers values
func NewGetDataAccessConsentExtensionsForbidden() *GetDataAccessConsentExtensionsForbidden {
	return &GetDataAccessConsentExtensionsForbidden{}
}

/*
GetDataAccessConsentExtensionsForbidden describes a response with status code 403, with default header values.

Error
*/
type GetDataAccessConsentExtensionsForbidden struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions forbidden response has a 2xx status code
func (o *GetDataAccessConsentExtensionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions forbidden response has a 3xx status code
func (o *GetDataAccessConsentExtensionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions forbidden response has a 4xx status code
func (o *GetDataAccessConsentExtensionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions forbidden response has a 5xx status code
func (o *GetDataAccessConsentExtensionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions forbidden response a status code equal to that given
func (o *GetDataAccessConsentExtensionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get data access consent extensions forbidden response
func (o *GetDataAccessConsentExtensionsForbidden) Code() int {
	return 403
}

func (o *GetDataAccessConsentExtensionsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsForbidden %s", 403, payload)
}

func (o *GetDataAccessConsentExtensionsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsForbidden %s", 403, payload)
}

func (o *GetDataAccessConsentExtensionsForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsMethodNotAllowed creates a GetDataAccessConsentExtensionsMethodNotAllowed with default headers values
func NewGetDataAccessConsentExtensionsMethodNotAllowed() *GetDataAccessConsentExtensionsMethodNotAllowed {
	return &GetDataAccessConsentExtensionsMethodNotAllowed{}
}

/*
GetDataAccessConsentExtensionsMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type GetDataAccessConsentExtensionsMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions method not allowed response has a 2xx status code
func (o *GetDataAccessConsentExtensionsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions method not allowed response has a 3xx status code
func (o *GetDataAccessConsentExtensionsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions method not allowed response has a 4xx status code
func (o *GetDataAccessConsentExtensionsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions method not allowed response has a 5xx status code
func (o *GetDataAccessConsentExtensionsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions method not allowed response a status code equal to that given
func (o *GetDataAccessConsentExtensionsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get data access consent extensions method not allowed response
func (o *GetDataAccessConsentExtensionsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetDataAccessConsentExtensionsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsMethodNotAllowed %s", 405, payload)
}

func (o *GetDataAccessConsentExtensionsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsMethodNotAllowed %s", 405, payload)
}

func (o *GetDataAccessConsentExtensionsMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsNotAcceptable creates a GetDataAccessConsentExtensionsNotAcceptable with default headers values
func NewGetDataAccessConsentExtensionsNotAcceptable() *GetDataAccessConsentExtensionsNotAcceptable {
	return &GetDataAccessConsentExtensionsNotAcceptable{}
}

/*
GetDataAccessConsentExtensionsNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type GetDataAccessConsentExtensionsNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions not acceptable response has a 2xx status code
func (o *GetDataAccessConsentExtensionsNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions not acceptable response has a 3xx status code
func (o *GetDataAccessConsentExtensionsNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions not acceptable response has a 4xx status code
func (o *GetDataAccessConsentExtensionsNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions not acceptable response has a 5xx status code
func (o *GetDataAccessConsentExtensionsNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions not acceptable response a status code equal to that given
func (o *GetDataAccessConsentExtensionsNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the get data access consent extensions not acceptable response
func (o *GetDataAccessConsentExtensionsNotAcceptable) Code() int {
	return 406
}

func (o *GetDataAccessConsentExtensionsNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsNotAcceptable %s", 406, payload)
}

func (o *GetDataAccessConsentExtensionsNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsNotAcceptable %s", 406, payload)
}

func (o *GetDataAccessConsentExtensionsNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsUnsupportedMediaType creates a GetDataAccessConsentExtensionsUnsupportedMediaType with default headers values
func NewGetDataAccessConsentExtensionsUnsupportedMediaType() *GetDataAccessConsentExtensionsUnsupportedMediaType {
	return &GetDataAccessConsentExtensionsUnsupportedMediaType{}
}

/*
GetDataAccessConsentExtensionsUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type GetDataAccessConsentExtensionsUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions unsupported media type response has a 2xx status code
func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions unsupported media type response has a 3xx status code
func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions unsupported media type response has a 4xx status code
func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions unsupported media type response has a 5xx status code
func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions unsupported media type response a status code equal to that given
func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the get data access consent extensions unsupported media type response
func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) Code() int {
	return 415
}

func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsUnsupportedMediaType %s", 415, payload)
}

func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsUnsupportedMediaType %s", 415, payload)
}

func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsUnprocessableEntity creates a GetDataAccessConsentExtensionsUnprocessableEntity with default headers values
func NewGetDataAccessConsentExtensionsUnprocessableEntity() *GetDataAccessConsentExtensionsUnprocessableEntity {
	return &GetDataAccessConsentExtensionsUnprocessableEntity{}
}

/*
GetDataAccessConsentExtensionsUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type GetDataAccessConsentExtensionsUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions unprocessable entity response has a 2xx status code
func (o *GetDataAccessConsentExtensionsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions unprocessable entity response has a 3xx status code
func (o *GetDataAccessConsentExtensionsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions unprocessable entity response has a 4xx status code
func (o *GetDataAccessConsentExtensionsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions unprocessable entity response has a 5xx status code
func (o *GetDataAccessConsentExtensionsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions unprocessable entity response a status code equal to that given
func (o *GetDataAccessConsentExtensionsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get data access consent extensions unprocessable entity response
func (o *GetDataAccessConsentExtensionsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetDataAccessConsentExtensionsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsUnprocessableEntity %s", 422, payload)
}

func (o *GetDataAccessConsentExtensionsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsUnprocessableEntity %s", 422, payload)
}

func (o *GetDataAccessConsentExtensionsUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsTooManyRequests creates a GetDataAccessConsentExtensionsTooManyRequests with default headers values
func NewGetDataAccessConsentExtensionsTooManyRequests() *GetDataAccessConsentExtensionsTooManyRequests {
	return &GetDataAccessConsentExtensionsTooManyRequests{}
}

/*
GetDataAccessConsentExtensionsTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type GetDataAccessConsentExtensionsTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions too many requests response has a 2xx status code
func (o *GetDataAccessConsentExtensionsTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions too many requests response has a 3xx status code
func (o *GetDataAccessConsentExtensionsTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions too many requests response has a 4xx status code
func (o *GetDataAccessConsentExtensionsTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this get data access consent extensions too many requests response has a 5xx status code
func (o *GetDataAccessConsentExtensionsTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this get data access consent extensions too many requests response a status code equal to that given
func (o *GetDataAccessConsentExtensionsTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the get data access consent extensions too many requests response
func (o *GetDataAccessConsentExtensionsTooManyRequests) Code() int {
	return 429
}

func (o *GetDataAccessConsentExtensionsTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsTooManyRequests %s", 429, payload)
}

func (o *GetDataAccessConsentExtensionsTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsTooManyRequests %s", 429, payload)
}

func (o *GetDataAccessConsentExtensionsTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDataAccessConsentExtensionsInternalServerError creates a GetDataAccessConsentExtensionsInternalServerError with default headers values
func NewGetDataAccessConsentExtensionsInternalServerError() *GetDataAccessConsentExtensionsInternalServerError {
	return &GetDataAccessConsentExtensionsInternalServerError{}
}

/*
GetDataAccessConsentExtensionsInternalServerError describes a response with status code 500, with default header values.

Error
*/
type GetDataAccessConsentExtensionsInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this get data access consent extensions internal server error response has a 2xx status code
func (o *GetDataAccessConsentExtensionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get data access consent extensions internal server error response has a 3xx status code
func (o *GetDataAccessConsentExtensionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get data access consent extensions internal server error response has a 4xx status code
func (o *GetDataAccessConsentExtensionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get data access consent extensions internal server error response has a 5xx status code
func (o *GetDataAccessConsentExtensionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get data access consent extensions internal server error response a status code equal to that given
func (o *GetDataAccessConsentExtensionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get data access consent extensions internal server error response
func (o *GetDataAccessConsentExtensionsInternalServerError) Code() int {
	return 500
}

func (o *GetDataAccessConsentExtensionsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsInternalServerError %s", 500, payload)
}

func (o *GetDataAccessConsentExtensionsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /open-banking/consents/v2/consents/{consentID}/extends][%d] getDataAccessConsentExtensionsInternalServerError %s", 500, payload)
}

func (o *GetDataAccessConsentExtensionsInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *GetDataAccessConsentExtensionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
