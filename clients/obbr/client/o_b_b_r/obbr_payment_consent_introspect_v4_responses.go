// Code generated by go-swagger; DO NOT EDIT.

package o_b_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// ObbrPaymentConsentIntrospectV4Reader is a Reader for the ObbrPaymentConsentIntrospectV4 structure.
type ObbrPaymentConsentIntrospectV4Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObbrPaymentConsentIntrospectV4Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObbrPaymentConsentIntrospectV4OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewObbrPaymentConsentIntrospectV4Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewObbrPaymentConsentIntrospectV4NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewObbrPaymentConsentIntrospectV4TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect] obbrPaymentConsentIntrospectV4", response, response.Code())
	}
}

// NewObbrPaymentConsentIntrospectV4OK creates a ObbrPaymentConsentIntrospectV4OK with default headers values
func NewObbrPaymentConsentIntrospectV4OK() *ObbrPaymentConsentIntrospectV4OK {
	return &ObbrPaymentConsentIntrospectV4OK{}
}

/*
ObbrPaymentConsentIntrospectV4OK describes a response with status code 200, with default header values.

Introspect Openbanking Brazil Payment Consent V4 Response
*/
type ObbrPaymentConsentIntrospectV4OK struct {
	Payload *models.IntrospectOBBRPaymentConsentResponseV4
}

// IsSuccess returns true when this obbr payment consent introspect v4 o k response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV4OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this obbr payment consent introspect v4 o k response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV4OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v4 o k response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV4OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this obbr payment consent introspect v4 o k response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV4OK) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v4 o k response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV4OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the obbr payment consent introspect v4 o k response
func (o *ObbrPaymentConsentIntrospectV4OK) Code() int {
	return 200
}

func (o *ObbrPaymentConsentIntrospectV4OK) Error() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4OK  %+v", 200, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4OK) String() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4OK  %+v", 200, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4OK) GetPayload() *models.IntrospectOBBRPaymentConsentResponseV4 {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV4OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IntrospectOBBRPaymentConsentResponseV4)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectV4Unauthorized creates a ObbrPaymentConsentIntrospectV4Unauthorized with default headers values
func NewObbrPaymentConsentIntrospectV4Unauthorized() *ObbrPaymentConsentIntrospectV4Unauthorized {
	return &ObbrPaymentConsentIntrospectV4Unauthorized{}
}

/*
ObbrPaymentConsentIntrospectV4Unauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectV4Unauthorized struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect v4 unauthorized response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV4Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect v4 unauthorized response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV4Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v4 unauthorized response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV4Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect v4 unauthorized response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV4Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v4 unauthorized response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV4Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the obbr payment consent introspect v4 unauthorized response
func (o *ObbrPaymentConsentIntrospectV4Unauthorized) Code() int {
	return 401
}

func (o *ObbrPaymentConsentIntrospectV4Unauthorized) Error() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4Unauthorized  %+v", 401, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4Unauthorized) String() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4Unauthorized  %+v", 401, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4Unauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV4Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectV4NotFound creates a ObbrPaymentConsentIntrospectV4NotFound with default headers values
func NewObbrPaymentConsentIntrospectV4NotFound() *ObbrPaymentConsentIntrospectV4NotFound {
	return &ObbrPaymentConsentIntrospectV4NotFound{}
}

/*
ObbrPaymentConsentIntrospectV4NotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectV4NotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect v4 not found response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV4NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect v4 not found response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV4NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v4 not found response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV4NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect v4 not found response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV4NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v4 not found response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV4NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the obbr payment consent introspect v4 not found response
func (o *ObbrPaymentConsentIntrospectV4NotFound) Code() int {
	return 404
}

func (o *ObbrPaymentConsentIntrospectV4NotFound) Error() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4NotFound  %+v", 404, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4NotFound) String() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4NotFound  %+v", 404, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4NotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV4NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectV4TooManyRequests creates a ObbrPaymentConsentIntrospectV4TooManyRequests with default headers values
func NewObbrPaymentConsentIntrospectV4TooManyRequests() *ObbrPaymentConsentIntrospectV4TooManyRequests {
	return &ObbrPaymentConsentIntrospectV4TooManyRequests{}
}

/*
ObbrPaymentConsentIntrospectV4TooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectV4TooManyRequests struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect v4 too many requests response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect v4 too many requests response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v4 too many requests response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect v4 too many requests response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v4 too many requests response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the obbr payment consent introspect v4 too many requests response
func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) Code() int {
	return 429
}

func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) Error() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4TooManyRequests  %+v", 429, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) String() string {
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v4/consents/introspect][%d] obbrPaymentConsentIntrospectV4TooManyRequests  %+v", 429, o.Payload)
}

func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV4TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
