// Code generated by go-swagger; DO NOT EDIT.

package o_b_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// ObbrPaymentConsentIntrospectV3Reader is a Reader for the ObbrPaymentConsentIntrospectV3 structure.
type ObbrPaymentConsentIntrospectV3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObbrPaymentConsentIntrospectV3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObbrPaymentConsentIntrospectV3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewObbrPaymentConsentIntrospectV3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewObbrPaymentConsentIntrospectV3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewObbrPaymentConsentIntrospectV3TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect] obbrPaymentConsentIntrospectV3", response, response.Code())
	}
}

// NewObbrPaymentConsentIntrospectV3OK creates a ObbrPaymentConsentIntrospectV3OK with default headers values
func NewObbrPaymentConsentIntrospectV3OK() *ObbrPaymentConsentIntrospectV3OK {
	return &ObbrPaymentConsentIntrospectV3OK{}
}

/*
ObbrPaymentConsentIntrospectV3OK describes a response with status code 200, with default header values.

Introspect Openbanking Brazil Payment Consent V3 Response
*/
type ObbrPaymentConsentIntrospectV3OK struct {
	Payload *models.IntrospectOBBRPaymentConsentResponseV3
}

// IsSuccess returns true when this obbr payment consent introspect v3 o k response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV3OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this obbr payment consent introspect v3 o k response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV3OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v3 o k response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV3OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this obbr payment consent introspect v3 o k response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV3OK) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v3 o k response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV3OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the obbr payment consent introspect v3 o k response
func (o *ObbrPaymentConsentIntrospectV3OK) Code() int {
	return 200
}

func (o *ObbrPaymentConsentIntrospectV3OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3OK %s", 200, payload)
}

func (o *ObbrPaymentConsentIntrospectV3OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3OK %s", 200, payload)
}

func (o *ObbrPaymentConsentIntrospectV3OK) GetPayload() *models.IntrospectOBBRPaymentConsentResponseV3 {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IntrospectOBBRPaymentConsentResponseV3)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectV3Unauthorized creates a ObbrPaymentConsentIntrospectV3Unauthorized with default headers values
func NewObbrPaymentConsentIntrospectV3Unauthorized() *ObbrPaymentConsentIntrospectV3Unauthorized {
	return &ObbrPaymentConsentIntrospectV3Unauthorized{}
}

/*
ObbrPaymentConsentIntrospectV3Unauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectV3Unauthorized struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect v3 unauthorized response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV3Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect v3 unauthorized response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV3Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v3 unauthorized response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV3Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect v3 unauthorized response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV3Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v3 unauthorized response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV3Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the obbr payment consent introspect v3 unauthorized response
func (o *ObbrPaymentConsentIntrospectV3Unauthorized) Code() int {
	return 401
}

func (o *ObbrPaymentConsentIntrospectV3Unauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3Unauthorized %s", 401, payload)
}

func (o *ObbrPaymentConsentIntrospectV3Unauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3Unauthorized %s", 401, payload)
}

func (o *ObbrPaymentConsentIntrospectV3Unauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectV3NotFound creates a ObbrPaymentConsentIntrospectV3NotFound with default headers values
func NewObbrPaymentConsentIntrospectV3NotFound() *ObbrPaymentConsentIntrospectV3NotFound {
	return &ObbrPaymentConsentIntrospectV3NotFound{}
}

/*
ObbrPaymentConsentIntrospectV3NotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectV3NotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect v3 not found response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV3NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect v3 not found response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV3NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v3 not found response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV3NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect v3 not found response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV3NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v3 not found response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV3NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the obbr payment consent introspect v3 not found response
func (o *ObbrPaymentConsentIntrospectV3NotFound) Code() int {
	return 404
}

func (o *ObbrPaymentConsentIntrospectV3NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3NotFound %s", 404, payload)
}

func (o *ObbrPaymentConsentIntrospectV3NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3NotFound %s", 404, payload)
}

func (o *ObbrPaymentConsentIntrospectV3NotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectV3TooManyRequests creates a ObbrPaymentConsentIntrospectV3TooManyRequests with default headers values
func NewObbrPaymentConsentIntrospectV3TooManyRequests() *ObbrPaymentConsentIntrospectV3TooManyRequests {
	return &ObbrPaymentConsentIntrospectV3TooManyRequests{}
}

/*
ObbrPaymentConsentIntrospectV3TooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectV3TooManyRequests struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect v3 too many requests response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect v3 too many requests response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect v3 too many requests response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect v3 too many requests response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect v3 too many requests response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the obbr payment consent introspect v3 too many requests response
func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) Code() int {
	return 429
}

func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3TooManyRequests %s", 429, payload)
}

func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v3/consents/introspect][%d] obbrPaymentConsentIntrospectV3TooManyRequests %s", 429, payload)
}

func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectV3TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
