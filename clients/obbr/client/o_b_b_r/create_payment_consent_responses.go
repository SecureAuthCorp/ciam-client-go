// Code generated by go-swagger; DO NOT EDIT.

package o_b_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// CreatePaymentConsentReader is a Reader for the CreatePaymentConsent structure.
type CreatePaymentConsentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePaymentConsentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCreatePaymentConsentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreatePaymentConsentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreatePaymentConsentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreatePaymentConsentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreatePaymentConsentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreatePaymentConsentNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreatePaymentConsentUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreatePaymentConsentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreatePaymentConsentTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreatePaymentConsentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/payments/v1/consents] CreatePaymentConsent", response, response.Code())
	}
}

// NewCreatePaymentConsentCreated creates a CreatePaymentConsentCreated with default headers values
func NewCreatePaymentConsentCreated() *CreatePaymentConsentCreated {
	return &CreatePaymentConsentCreated{}
}

/*
CreatePaymentConsentCreated describes a response with status code 201, with default header values.

Customer payment consent
*/
type CreatePaymentConsentCreated struct {
	Payload *models.BrazilCustomerPaymentConsentResponse
}

// IsSuccess returns true when this create payment consent created response has a 2xx status code
func (o *CreatePaymentConsentCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create payment consent created response has a 3xx status code
func (o *CreatePaymentConsentCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent created response has a 4xx status code
func (o *CreatePaymentConsentCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create payment consent created response has a 5xx status code
func (o *CreatePaymentConsentCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent created response a status code equal to that given
func (o *CreatePaymentConsentCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create payment consent created response
func (o *CreatePaymentConsentCreated) Code() int {
	return 201
}

func (o *CreatePaymentConsentCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentCreated %s", 201, payload)
}

func (o *CreatePaymentConsentCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentCreated %s", 201, payload)
}

func (o *CreatePaymentConsentCreated) GetPayload() *models.BrazilCustomerPaymentConsentResponse {
	return o.Payload
}

func (o *CreatePaymentConsentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilCustomerPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentBadRequest creates a CreatePaymentConsentBadRequest with default headers values
func NewCreatePaymentConsentBadRequest() *CreatePaymentConsentBadRequest {
	return &CreatePaymentConsentBadRequest{}
}

/*
CreatePaymentConsentBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreatePaymentConsentBadRequest struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent bad request response has a 2xx status code
func (o *CreatePaymentConsentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent bad request response has a 3xx status code
func (o *CreatePaymentConsentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent bad request response has a 4xx status code
func (o *CreatePaymentConsentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent bad request response has a 5xx status code
func (o *CreatePaymentConsentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent bad request response a status code equal to that given
func (o *CreatePaymentConsentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create payment consent bad request response
func (o *CreatePaymentConsentBadRequest) Code() int {
	return 400
}

func (o *CreatePaymentConsentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentBadRequest %s", 400, payload)
}

func (o *CreatePaymentConsentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentBadRequest %s", 400, payload)
}

func (o *CreatePaymentConsentBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentUnauthorized creates a CreatePaymentConsentUnauthorized with default headers values
func NewCreatePaymentConsentUnauthorized() *CreatePaymentConsentUnauthorized {
	return &CreatePaymentConsentUnauthorized{}
}

/*
CreatePaymentConsentUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreatePaymentConsentUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent unauthorized response has a 2xx status code
func (o *CreatePaymentConsentUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent unauthorized response has a 3xx status code
func (o *CreatePaymentConsentUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent unauthorized response has a 4xx status code
func (o *CreatePaymentConsentUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent unauthorized response has a 5xx status code
func (o *CreatePaymentConsentUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent unauthorized response a status code equal to that given
func (o *CreatePaymentConsentUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create payment consent unauthorized response
func (o *CreatePaymentConsentUnauthorized) Code() int {
	return 401
}

func (o *CreatePaymentConsentUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentUnauthorized %s", 401, payload)
}

func (o *CreatePaymentConsentUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentUnauthorized %s", 401, payload)
}

func (o *CreatePaymentConsentUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentForbidden creates a CreatePaymentConsentForbidden with default headers values
func NewCreatePaymentConsentForbidden() *CreatePaymentConsentForbidden {
	return &CreatePaymentConsentForbidden{}
}

/*
CreatePaymentConsentForbidden describes a response with status code 403, with default header values.

Error
*/
type CreatePaymentConsentForbidden struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent forbidden response has a 2xx status code
func (o *CreatePaymentConsentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent forbidden response has a 3xx status code
func (o *CreatePaymentConsentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent forbidden response has a 4xx status code
func (o *CreatePaymentConsentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent forbidden response has a 5xx status code
func (o *CreatePaymentConsentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent forbidden response a status code equal to that given
func (o *CreatePaymentConsentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create payment consent forbidden response
func (o *CreatePaymentConsentForbidden) Code() int {
	return 403
}

func (o *CreatePaymentConsentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentForbidden %s", 403, payload)
}

func (o *CreatePaymentConsentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentForbidden %s", 403, payload)
}

func (o *CreatePaymentConsentForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentMethodNotAllowed creates a CreatePaymentConsentMethodNotAllowed with default headers values
func NewCreatePaymentConsentMethodNotAllowed() *CreatePaymentConsentMethodNotAllowed {
	return &CreatePaymentConsentMethodNotAllowed{}
}

/*
CreatePaymentConsentMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreatePaymentConsentMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent method not allowed response has a 2xx status code
func (o *CreatePaymentConsentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent method not allowed response has a 3xx status code
func (o *CreatePaymentConsentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent method not allowed response has a 4xx status code
func (o *CreatePaymentConsentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent method not allowed response has a 5xx status code
func (o *CreatePaymentConsentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent method not allowed response a status code equal to that given
func (o *CreatePaymentConsentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create payment consent method not allowed response
func (o *CreatePaymentConsentMethodNotAllowed) Code() int {
	return 405
}

func (o *CreatePaymentConsentMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentMethodNotAllowed %s", 405, payload)
}

func (o *CreatePaymentConsentMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentMethodNotAllowed %s", 405, payload)
}

func (o *CreatePaymentConsentMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentNotAcceptable creates a CreatePaymentConsentNotAcceptable with default headers values
func NewCreatePaymentConsentNotAcceptable() *CreatePaymentConsentNotAcceptable {
	return &CreatePaymentConsentNotAcceptable{}
}

/*
CreatePaymentConsentNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreatePaymentConsentNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent not acceptable response has a 2xx status code
func (o *CreatePaymentConsentNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent not acceptable response has a 3xx status code
func (o *CreatePaymentConsentNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent not acceptable response has a 4xx status code
func (o *CreatePaymentConsentNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent not acceptable response has a 5xx status code
func (o *CreatePaymentConsentNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent not acceptable response a status code equal to that given
func (o *CreatePaymentConsentNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create payment consent not acceptable response
func (o *CreatePaymentConsentNotAcceptable) Code() int {
	return 406
}

func (o *CreatePaymentConsentNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentNotAcceptable %s", 406, payload)
}

func (o *CreatePaymentConsentNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentNotAcceptable %s", 406, payload)
}

func (o *CreatePaymentConsentNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentUnsupportedMediaType creates a CreatePaymentConsentUnsupportedMediaType with default headers values
func NewCreatePaymentConsentUnsupportedMediaType() *CreatePaymentConsentUnsupportedMediaType {
	return &CreatePaymentConsentUnsupportedMediaType{}
}

/*
CreatePaymentConsentUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreatePaymentConsentUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent unsupported media type response has a 2xx status code
func (o *CreatePaymentConsentUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent unsupported media type response has a 3xx status code
func (o *CreatePaymentConsentUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent unsupported media type response has a 4xx status code
func (o *CreatePaymentConsentUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent unsupported media type response has a 5xx status code
func (o *CreatePaymentConsentUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent unsupported media type response a status code equal to that given
func (o *CreatePaymentConsentUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create payment consent unsupported media type response
func (o *CreatePaymentConsentUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreatePaymentConsentUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentUnsupportedMediaType %s", 415, payload)
}

func (o *CreatePaymentConsentUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentUnsupportedMediaType %s", 415, payload)
}

func (o *CreatePaymentConsentUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentUnprocessableEntity creates a CreatePaymentConsentUnprocessableEntity with default headers values
func NewCreatePaymentConsentUnprocessableEntity() *CreatePaymentConsentUnprocessableEntity {
	return &CreatePaymentConsentUnprocessableEntity{}
}

/*
CreatePaymentConsentUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type CreatePaymentConsentUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent unprocessable entity response has a 2xx status code
func (o *CreatePaymentConsentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent unprocessable entity response has a 3xx status code
func (o *CreatePaymentConsentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent unprocessable entity response has a 4xx status code
func (o *CreatePaymentConsentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent unprocessable entity response has a 5xx status code
func (o *CreatePaymentConsentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent unprocessable entity response a status code equal to that given
func (o *CreatePaymentConsentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create payment consent unprocessable entity response
func (o *CreatePaymentConsentUnprocessableEntity) Code() int {
	return 422
}

func (o *CreatePaymentConsentUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentUnprocessableEntity %s", 422, payload)
}

func (o *CreatePaymentConsentUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentUnprocessableEntity %s", 422, payload)
}

func (o *CreatePaymentConsentUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentTooManyRequests creates a CreatePaymentConsentTooManyRequests with default headers values
func NewCreatePaymentConsentTooManyRequests() *CreatePaymentConsentTooManyRequests {
	return &CreatePaymentConsentTooManyRequests{}
}

/*
CreatePaymentConsentTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreatePaymentConsentTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent too many requests response has a 2xx status code
func (o *CreatePaymentConsentTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent too many requests response has a 3xx status code
func (o *CreatePaymentConsentTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent too many requests response has a 4xx status code
func (o *CreatePaymentConsentTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create payment consent too many requests response has a 5xx status code
func (o *CreatePaymentConsentTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create payment consent too many requests response a status code equal to that given
func (o *CreatePaymentConsentTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create payment consent too many requests response
func (o *CreatePaymentConsentTooManyRequests) Code() int {
	return 429
}

func (o *CreatePaymentConsentTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentTooManyRequests %s", 429, payload)
}

func (o *CreatePaymentConsentTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentTooManyRequests %s", 429, payload)
}

func (o *CreatePaymentConsentTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePaymentConsentInternalServerError creates a CreatePaymentConsentInternalServerError with default headers values
func NewCreatePaymentConsentInternalServerError() *CreatePaymentConsentInternalServerError {
	return &CreatePaymentConsentInternalServerError{}
}

/*
CreatePaymentConsentInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreatePaymentConsentInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create payment consent internal server error response has a 2xx status code
func (o *CreatePaymentConsentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create payment consent internal server error response has a 3xx status code
func (o *CreatePaymentConsentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create payment consent internal server error response has a 4xx status code
func (o *CreatePaymentConsentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create payment consent internal server error response has a 5xx status code
func (o *CreatePaymentConsentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create payment consent internal server error response a status code equal to that given
func (o *CreatePaymentConsentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create payment consent internal server error response
func (o *CreatePaymentConsentInternalServerError) Code() int {
	return 500
}

func (o *CreatePaymentConsentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentInternalServerError %s", 500, payload)
}

func (o *CreatePaymentConsentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/payments/v1/consents][%d] createPaymentConsentInternalServerError %s", 500, payload)
}

func (o *CreatePaymentConsentInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreatePaymentConsentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
