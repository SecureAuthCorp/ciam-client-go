// Code generated by go-swagger; DO NOT EDIT.

package o_b_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// ObbrPaymentConsentIntrospectReader is a Reader for the ObbrPaymentConsentIntrospect structure.
type ObbrPaymentConsentIntrospectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObbrPaymentConsentIntrospectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObbrPaymentConsentIntrospectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewObbrPaymentConsentIntrospectUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewObbrPaymentConsentIntrospectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewObbrPaymentConsentIntrospectTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect] obbrPaymentConsentIntrospect", response, response.Code())
	}
}

// NewObbrPaymentConsentIntrospectOK creates a ObbrPaymentConsentIntrospectOK with default headers values
func NewObbrPaymentConsentIntrospectOK() *ObbrPaymentConsentIntrospectOK {
	return &ObbrPaymentConsentIntrospectOK{}
}

/*
ObbrPaymentConsentIntrospectOK describes a response with status code 200, with default header values.

Introspect Openbanking Brazil Payment Consent Response
*/
type ObbrPaymentConsentIntrospectOK struct {
	Payload *models.IntrospectOBBRPaymentConsentResponse
}

// IsSuccess returns true when this obbr payment consent introspect o k response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this obbr payment consent introspect o k response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect o k response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this obbr payment consent introspect o k response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect o k response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the obbr payment consent introspect o k response
func (o *ObbrPaymentConsentIntrospectOK) Code() int {
	return 200
}

func (o *ObbrPaymentConsentIntrospectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectOK %s", 200, payload)
}

func (o *ObbrPaymentConsentIntrospectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectOK %s", 200, payload)
}

func (o *ObbrPaymentConsentIntrospectOK) GetPayload() *models.IntrospectOBBRPaymentConsentResponse {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IntrospectOBBRPaymentConsentResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectUnauthorized creates a ObbrPaymentConsentIntrospectUnauthorized with default headers values
func NewObbrPaymentConsentIntrospectUnauthorized() *ObbrPaymentConsentIntrospectUnauthorized {
	return &ObbrPaymentConsentIntrospectUnauthorized{}
}

/*
ObbrPaymentConsentIntrospectUnauthorized describes a response with status code 401, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectUnauthorized struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect unauthorized response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect unauthorized response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect unauthorized response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect unauthorized response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect unauthorized response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the obbr payment consent introspect unauthorized response
func (o *ObbrPaymentConsentIntrospectUnauthorized) Code() int {
	return 401
}

func (o *ObbrPaymentConsentIntrospectUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectUnauthorized %s", 401, payload)
}

func (o *ObbrPaymentConsentIntrospectUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectUnauthorized %s", 401, payload)
}

func (o *ObbrPaymentConsentIntrospectUnauthorized) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectNotFound creates a ObbrPaymentConsentIntrospectNotFound with default headers values
func NewObbrPaymentConsentIntrospectNotFound() *ObbrPaymentConsentIntrospectNotFound {
	return &ObbrPaymentConsentIntrospectNotFound{}
}

/*
ObbrPaymentConsentIntrospectNotFound describes a response with status code 404, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectNotFound struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect not found response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect not found response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect not found response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect not found response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect not found response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the obbr payment consent introspect not found response
func (o *ObbrPaymentConsentIntrospectNotFound) Code() int {
	return 404
}

func (o *ObbrPaymentConsentIntrospectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectNotFound %s", 404, payload)
}

func (o *ObbrPaymentConsentIntrospectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectNotFound %s", 404, payload)
}

func (o *ObbrPaymentConsentIntrospectNotFound) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObbrPaymentConsentIntrospectTooManyRequests creates a ObbrPaymentConsentIntrospectTooManyRequests with default headers values
func NewObbrPaymentConsentIntrospectTooManyRequests() *ObbrPaymentConsentIntrospectTooManyRequests {
	return &ObbrPaymentConsentIntrospectTooManyRequests{}
}

/*
ObbrPaymentConsentIntrospectTooManyRequests describes a response with status code 429, with default header values.

ErrorResponse
*/
type ObbrPaymentConsentIntrospectTooManyRequests struct {
	Payload *models.GenericError
}

// IsSuccess returns true when this obbr payment consent introspect too many requests response has a 2xx status code
func (o *ObbrPaymentConsentIntrospectTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this obbr payment consent introspect too many requests response has a 3xx status code
func (o *ObbrPaymentConsentIntrospectTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this obbr payment consent introspect too many requests response has a 4xx status code
func (o *ObbrPaymentConsentIntrospectTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this obbr payment consent introspect too many requests response has a 5xx status code
func (o *ObbrPaymentConsentIntrospectTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this obbr payment consent introspect too many requests response a status code equal to that given
func (o *ObbrPaymentConsentIntrospectTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the obbr payment consent introspect too many requests response
func (o *ObbrPaymentConsentIntrospectTooManyRequests) Code() int {
	return 429
}

func (o *ObbrPaymentConsentIntrospectTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectTooManyRequests %s", 429, payload)
}

func (o *ObbrPaymentConsentIntrospectTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/open-banking/payments/v1/consents/introspect][%d] obbrPaymentConsentIntrospectTooManyRequests %s", 429, payload)
}

func (o *ObbrPaymentConsentIntrospectTooManyRequests) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ObbrPaymentConsentIntrospectTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
