// Code generated by go-swagger; DO NOT EDIT.

package o_b_b_r

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// CreateDataAccessConsentExtensionReader is a Reader for the CreateDataAccessConsentExtension structure.
type CreateDataAccessConsentExtensionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateDataAccessConsentExtensionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateDataAccessConsentExtensionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateDataAccessConsentExtensionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateDataAccessConsentExtensionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateDataAccessConsentExtensionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateDataAccessConsentExtensionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 406:
		result := NewCreateDataAccessConsentExtensionNotAcceptable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 415:
		result := NewCreateDataAccessConsentExtensionUnsupportedMediaType()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateDataAccessConsentExtensionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewCreateDataAccessConsentExtensionTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateDataAccessConsentExtensionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking/consents/v2/consents/{consentID}/extends] CreateDataAccessConsentExtension", response, response.Code())
	}
}

// NewCreateDataAccessConsentExtensionOK creates a CreateDataAccessConsentExtensionOK with default headers values
func NewCreateDataAccessConsentExtensionOK() *CreateDataAccessConsentExtensionOK {
	return &CreateDataAccessConsentExtensionOK{}
}

/*
CreateDataAccessConsentExtensionOK describes a response with status code 200, with default header values.

Create Customer data access v2 consent extension
*/
type CreateDataAccessConsentExtensionOK struct {
	Payload *models.BrazilCreateConsentExtensionResponse
}

// IsSuccess returns true when this create data access consent extension o k response has a 2xx status code
func (o *CreateDataAccessConsentExtensionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create data access consent extension o k response has a 3xx status code
func (o *CreateDataAccessConsentExtensionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension o k response has a 4xx status code
func (o *CreateDataAccessConsentExtensionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create data access consent extension o k response has a 5xx status code
func (o *CreateDataAccessConsentExtensionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension o k response a status code equal to that given
func (o *CreateDataAccessConsentExtensionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create data access consent extension o k response
func (o *CreateDataAccessConsentExtensionOK) Code() int {
	return 200
}

func (o *CreateDataAccessConsentExtensionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionOK %s", 200, payload)
}

func (o *CreateDataAccessConsentExtensionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionOK %s", 200, payload)
}

func (o *CreateDataAccessConsentExtensionOK) GetPayload() *models.BrazilCreateConsentExtensionResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BrazilCreateConsentExtensionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionBadRequest creates a CreateDataAccessConsentExtensionBadRequest with default headers values
func NewCreateDataAccessConsentExtensionBadRequest() *CreateDataAccessConsentExtensionBadRequest {
	return &CreateDataAccessConsentExtensionBadRequest{}
}

/*
CreateDataAccessConsentExtensionBadRequest describes a response with status code 400, with default header values.

Error
*/
type CreateDataAccessConsentExtensionBadRequest struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension bad request response has a 2xx status code
func (o *CreateDataAccessConsentExtensionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension bad request response has a 3xx status code
func (o *CreateDataAccessConsentExtensionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension bad request response has a 4xx status code
func (o *CreateDataAccessConsentExtensionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension bad request response has a 5xx status code
func (o *CreateDataAccessConsentExtensionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension bad request response a status code equal to that given
func (o *CreateDataAccessConsentExtensionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create data access consent extension bad request response
func (o *CreateDataAccessConsentExtensionBadRequest) Code() int {
	return 400
}

func (o *CreateDataAccessConsentExtensionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionBadRequest %s", 400, payload)
}

func (o *CreateDataAccessConsentExtensionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionBadRequest %s", 400, payload)
}

func (o *CreateDataAccessConsentExtensionBadRequest) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionUnauthorized creates a CreateDataAccessConsentExtensionUnauthorized with default headers values
func NewCreateDataAccessConsentExtensionUnauthorized() *CreateDataAccessConsentExtensionUnauthorized {
	return &CreateDataAccessConsentExtensionUnauthorized{}
}

/*
CreateDataAccessConsentExtensionUnauthorized describes a response with status code 401, with default header values.

Error
*/
type CreateDataAccessConsentExtensionUnauthorized struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension unauthorized response has a 2xx status code
func (o *CreateDataAccessConsentExtensionUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension unauthorized response has a 3xx status code
func (o *CreateDataAccessConsentExtensionUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension unauthorized response has a 4xx status code
func (o *CreateDataAccessConsentExtensionUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension unauthorized response has a 5xx status code
func (o *CreateDataAccessConsentExtensionUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension unauthorized response a status code equal to that given
func (o *CreateDataAccessConsentExtensionUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create data access consent extension unauthorized response
func (o *CreateDataAccessConsentExtensionUnauthorized) Code() int {
	return 401
}

func (o *CreateDataAccessConsentExtensionUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionUnauthorized %s", 401, payload)
}

func (o *CreateDataAccessConsentExtensionUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionUnauthorized %s", 401, payload)
}

func (o *CreateDataAccessConsentExtensionUnauthorized) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionForbidden creates a CreateDataAccessConsentExtensionForbidden with default headers values
func NewCreateDataAccessConsentExtensionForbidden() *CreateDataAccessConsentExtensionForbidden {
	return &CreateDataAccessConsentExtensionForbidden{}
}

/*
CreateDataAccessConsentExtensionForbidden describes a response with status code 403, with default header values.

Error
*/
type CreateDataAccessConsentExtensionForbidden struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension forbidden response has a 2xx status code
func (o *CreateDataAccessConsentExtensionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension forbidden response has a 3xx status code
func (o *CreateDataAccessConsentExtensionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension forbidden response has a 4xx status code
func (o *CreateDataAccessConsentExtensionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension forbidden response has a 5xx status code
func (o *CreateDataAccessConsentExtensionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension forbidden response a status code equal to that given
func (o *CreateDataAccessConsentExtensionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create data access consent extension forbidden response
func (o *CreateDataAccessConsentExtensionForbidden) Code() int {
	return 403
}

func (o *CreateDataAccessConsentExtensionForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionForbidden %s", 403, payload)
}

func (o *CreateDataAccessConsentExtensionForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionForbidden %s", 403, payload)
}

func (o *CreateDataAccessConsentExtensionForbidden) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionMethodNotAllowed creates a CreateDataAccessConsentExtensionMethodNotAllowed with default headers values
func NewCreateDataAccessConsentExtensionMethodNotAllowed() *CreateDataAccessConsentExtensionMethodNotAllowed {
	return &CreateDataAccessConsentExtensionMethodNotAllowed{}
}

/*
CreateDataAccessConsentExtensionMethodNotAllowed describes a response with status code 405, with default header values.

Error
*/
type CreateDataAccessConsentExtensionMethodNotAllowed struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension method not allowed response has a 2xx status code
func (o *CreateDataAccessConsentExtensionMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension method not allowed response has a 3xx status code
func (o *CreateDataAccessConsentExtensionMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension method not allowed response has a 4xx status code
func (o *CreateDataAccessConsentExtensionMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension method not allowed response has a 5xx status code
func (o *CreateDataAccessConsentExtensionMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension method not allowed response a status code equal to that given
func (o *CreateDataAccessConsentExtensionMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create data access consent extension method not allowed response
func (o *CreateDataAccessConsentExtensionMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateDataAccessConsentExtensionMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionMethodNotAllowed %s", 405, payload)
}

func (o *CreateDataAccessConsentExtensionMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionMethodNotAllowed %s", 405, payload)
}

func (o *CreateDataAccessConsentExtensionMethodNotAllowed) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionNotAcceptable creates a CreateDataAccessConsentExtensionNotAcceptable with default headers values
func NewCreateDataAccessConsentExtensionNotAcceptable() *CreateDataAccessConsentExtensionNotAcceptable {
	return &CreateDataAccessConsentExtensionNotAcceptable{}
}

/*
CreateDataAccessConsentExtensionNotAcceptable describes a response with status code 406, with default header values.

Error
*/
type CreateDataAccessConsentExtensionNotAcceptable struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension not acceptable response has a 2xx status code
func (o *CreateDataAccessConsentExtensionNotAcceptable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension not acceptable response has a 3xx status code
func (o *CreateDataAccessConsentExtensionNotAcceptable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension not acceptable response has a 4xx status code
func (o *CreateDataAccessConsentExtensionNotAcceptable) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension not acceptable response has a 5xx status code
func (o *CreateDataAccessConsentExtensionNotAcceptable) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension not acceptable response a status code equal to that given
func (o *CreateDataAccessConsentExtensionNotAcceptable) IsCode(code int) bool {
	return code == 406
}

// Code gets the status code for the create data access consent extension not acceptable response
func (o *CreateDataAccessConsentExtensionNotAcceptable) Code() int {
	return 406
}

func (o *CreateDataAccessConsentExtensionNotAcceptable) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionNotAcceptable %s", 406, payload)
}

func (o *CreateDataAccessConsentExtensionNotAcceptable) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionNotAcceptable %s", 406, payload)
}

func (o *CreateDataAccessConsentExtensionNotAcceptable) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionNotAcceptable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionUnsupportedMediaType creates a CreateDataAccessConsentExtensionUnsupportedMediaType with default headers values
func NewCreateDataAccessConsentExtensionUnsupportedMediaType() *CreateDataAccessConsentExtensionUnsupportedMediaType {
	return &CreateDataAccessConsentExtensionUnsupportedMediaType{}
}

/*
CreateDataAccessConsentExtensionUnsupportedMediaType describes a response with status code 415, with default header values.

Error
*/
type CreateDataAccessConsentExtensionUnsupportedMediaType struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension unsupported media type response has a 2xx status code
func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension unsupported media type response has a 3xx status code
func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension unsupported media type response has a 4xx status code
func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension unsupported media type response has a 5xx status code
func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension unsupported media type response a status code equal to that given
func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) IsCode(code int) bool {
	return code == 415
}

// Code gets the status code for the create data access consent extension unsupported media type response
func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) Code() int {
	return 415
}

func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionUnsupportedMediaType %s", 415, payload)
}

func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionUnsupportedMediaType %s", 415, payload)
}

func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionUnsupportedMediaType) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionUnprocessableEntity creates a CreateDataAccessConsentExtensionUnprocessableEntity with default headers values
func NewCreateDataAccessConsentExtensionUnprocessableEntity() *CreateDataAccessConsentExtensionUnprocessableEntity {
	return &CreateDataAccessConsentExtensionUnprocessableEntity{}
}

/*
CreateDataAccessConsentExtensionUnprocessableEntity describes a response with status code 422, with default header values.

Error
*/
type CreateDataAccessConsentExtensionUnprocessableEntity struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension unprocessable entity response has a 2xx status code
func (o *CreateDataAccessConsentExtensionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension unprocessable entity response has a 3xx status code
func (o *CreateDataAccessConsentExtensionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension unprocessable entity response has a 4xx status code
func (o *CreateDataAccessConsentExtensionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension unprocessable entity response has a 5xx status code
func (o *CreateDataAccessConsentExtensionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension unprocessable entity response a status code equal to that given
func (o *CreateDataAccessConsentExtensionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create data access consent extension unprocessable entity response
func (o *CreateDataAccessConsentExtensionUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateDataAccessConsentExtensionUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionUnprocessableEntity %s", 422, payload)
}

func (o *CreateDataAccessConsentExtensionUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionUnprocessableEntity %s", 422, payload)
}

func (o *CreateDataAccessConsentExtensionUnprocessableEntity) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionTooManyRequests creates a CreateDataAccessConsentExtensionTooManyRequests with default headers values
func NewCreateDataAccessConsentExtensionTooManyRequests() *CreateDataAccessConsentExtensionTooManyRequests {
	return &CreateDataAccessConsentExtensionTooManyRequests{}
}

/*
CreateDataAccessConsentExtensionTooManyRequests describes a response with status code 429, with default header values.

Error
*/
type CreateDataAccessConsentExtensionTooManyRequests struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension too many requests response has a 2xx status code
func (o *CreateDataAccessConsentExtensionTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension too many requests response has a 3xx status code
func (o *CreateDataAccessConsentExtensionTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension too many requests response has a 4xx status code
func (o *CreateDataAccessConsentExtensionTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this create data access consent extension too many requests response has a 5xx status code
func (o *CreateDataAccessConsentExtensionTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this create data access consent extension too many requests response a status code equal to that given
func (o *CreateDataAccessConsentExtensionTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the create data access consent extension too many requests response
func (o *CreateDataAccessConsentExtensionTooManyRequests) Code() int {
	return 429
}

func (o *CreateDataAccessConsentExtensionTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionTooManyRequests %s", 429, payload)
}

func (o *CreateDataAccessConsentExtensionTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionTooManyRequests %s", 429, payload)
}

func (o *CreateDataAccessConsentExtensionTooManyRequests) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateDataAccessConsentExtensionInternalServerError creates a CreateDataAccessConsentExtensionInternalServerError with default headers values
func NewCreateDataAccessConsentExtensionInternalServerError() *CreateDataAccessConsentExtensionInternalServerError {
	return &CreateDataAccessConsentExtensionInternalServerError{}
}

/*
CreateDataAccessConsentExtensionInternalServerError describes a response with status code 500, with default header values.

Error
*/
type CreateDataAccessConsentExtensionInternalServerError struct {
	Payload *models.OBBRErrorResponse
}

// IsSuccess returns true when this create data access consent extension internal server error response has a 2xx status code
func (o *CreateDataAccessConsentExtensionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create data access consent extension internal server error response has a 3xx status code
func (o *CreateDataAccessConsentExtensionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create data access consent extension internal server error response has a 4xx status code
func (o *CreateDataAccessConsentExtensionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create data access consent extension internal server error response has a 5xx status code
func (o *CreateDataAccessConsentExtensionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create data access consent extension internal server error response a status code equal to that given
func (o *CreateDataAccessConsentExtensionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create data access consent extension internal server error response
func (o *CreateDataAccessConsentExtensionInternalServerError) Code() int {
	return 500
}

func (o *CreateDataAccessConsentExtensionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionInternalServerError %s", 500, payload)
}

func (o *CreateDataAccessConsentExtensionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking/consents/v2/consents/{consentID}/extends][%d] createDataAccessConsentExtensionInternalServerError %s", 500, payload)
}

func (o *CreateDataAccessConsentExtensionInternalServerError) GetPayload() *models.OBBRErrorResponse {
	return o.Payload
}

func (o *CreateDataAccessConsentExtensionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OBBRErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
