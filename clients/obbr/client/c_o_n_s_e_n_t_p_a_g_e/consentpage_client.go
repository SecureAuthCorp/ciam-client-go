// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// New creates a new c o n s e n t p a g e API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

// New creates a new c o n s e n t p a g e API client with basic auth credentials.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - user: user for basic authentication header.
// - password: password for basic authentication header.
func NewClientWithBasicAuth(host, basePath, scheme, user, password string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BasicAuth(user, password)
	return &Client{transport: transport, formats: strfmt.Default}
}

// New creates a new c o n s e n t p a g e API client with a bearer token for authentication.
// It takes the following parameters:
// - host: http host (github.com).
// - basePath: any base path for the API client ("/v1", "/v3").
// - scheme: http scheme ("http", "https").
// - bearerToken: bearer token for Bearer authentication header.
func NewClientWithBearerToken(host, basePath, scheme, bearerToken string) ClientService {
	transport := httptransport.New(host, basePath, []string{scheme})
	transport.DefaultAuthentication = httptransport.BearerToken(bearerToken)
	return &Client{transport: transport, formats: strfmt.Default}
}

/*
Client for c o n s e n t p a g e API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption may be used to customize the behavior of Client methods.
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	AcceptOBBRCustomerDataAccessConsentSystem(params *AcceptOBBRCustomerDataAccessConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AcceptOBBRCustomerDataAccessConsentSystemOK, error)

	AcceptOBBRCustomerPaymentConsentSystem(params *AcceptOBBRCustomerPaymentConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AcceptOBBRCustomerPaymentConsentSystemOK, error)

	GetOBBRCustomerDataAccessConsentSystem(params *GetOBBRCustomerDataAccessConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerDataAccessConsentSystemOK, error)

	GetOBBRCustomerPaymentConsentSystem(params *GetOBBRCustomerPaymentConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerPaymentConsentSystemOK, error)

	GetOBBRCustomerPaymentConsentSystemV2(params *GetOBBRCustomerPaymentConsentSystemV2Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerPaymentConsentSystemV2OK, error)

	GetOBBRCustomerPaymentConsentSystemV3(params *GetOBBRCustomerPaymentConsentSystemV3Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerPaymentConsentSystemV3OK, error)

	RejectOBBRCustomerDataAccessConsentSystem(params *RejectOBBRCustomerDataAccessConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RejectOBBRCustomerDataAccessConsentSystemOK, error)

	RejectOBBRCustomerPaymentConsentSystem(params *RejectOBBRCustomerPaymentConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RejectOBBRCustomerPaymentConsentSystemOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	AcceptOBBRCustomerDataAccessConsentSystem accepts customer data access consent

	Notify Cloudentity that a user allowed access to their data.

Used by a custom Open Banking consent page.

For authorization, pass the `Authorization: Bearer` header with a token as the bearer value. To obtain
the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) AcceptOBBRCustomerDataAccessConsentSystem(params *AcceptOBBRCustomerDataAccessConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AcceptOBBRCustomerDataAccessConsentSystemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAcceptOBBRCustomerDataAccessConsentSystemParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "acceptOBBRCustomerDataAccessConsentSystem",
		Method:             "POST",
		PathPattern:        "/open-banking-brasil/consent/{login}/accept",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AcceptOBBRCustomerDataAccessConsentSystemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AcceptOBBRCustomerDataAccessConsentSystemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for acceptOBBRCustomerDataAccessConsentSystem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	AcceptOBBRCustomerPaymentConsentSystem accepts customer payment initiation consent

	Notify Cloudentity that a user allowed payment initiation.

Used by a custom Open Banking consent page.

For authorization, pass the `Authorization: Bearer` header with a token as the bearer value. To obtain
the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) AcceptOBBRCustomerPaymentConsentSystem(params *AcceptOBBRCustomerPaymentConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*AcceptOBBRCustomerPaymentConsentSystemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAcceptOBBRCustomerPaymentConsentSystemParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "acceptOBBRCustomerPaymentConsentSystem",
		Method:             "POST",
		PathPattern:        "/open-banking-brasil/payment/{login}/accept",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AcceptOBBRCustomerPaymentConsentSystemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AcceptOBBRCustomerPaymentConsentSystemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for acceptOBBRCustomerPaymentConsentSystem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOBBRCustomerDataAccessConsentSystem gets customer data access consent

	Retrieve information about data access consents per client application. This endpoint is used by a custom

Open Banking consent page during the authorization process. It returns consents previously created with the
`POST` **Create Data Access** endpoints.

For authorization, pass the `Authorization: Bearer` with a token as the bearer value. To obtain the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) GetOBBRCustomerDataAccessConsentSystem(params *GetOBBRCustomerDataAccessConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerDataAccessConsentSystemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOBBRCustomerDataAccessConsentSystemParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getOBBRCustomerDataAccessConsentSystem",
		Method:             "GET",
		PathPattern:        "/open-banking-brasil/consent/{login}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOBBRCustomerDataAccessConsentSystemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOBBRCustomerDataAccessConsentSystemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getOBBRCustomerDataAccessConsentSystem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOBBRCustomerPaymentConsentSystem gets customer payment initiation consent

	Retrieve information about payment initiation consents per client application. This endpoint is used by a custom

Open Banking consent page during the authorization process. It returns consents previously created with the
`POST` **Create Payment Consent** endpoints.

For authorization, pass the `Authorization: Bearer` with a token as the bearer value. To obtain the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) GetOBBRCustomerPaymentConsentSystem(params *GetOBBRCustomerPaymentConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerPaymentConsentSystemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOBBRCustomerPaymentConsentSystemParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getOBBRCustomerPaymentConsentSystem",
		Method:             "GET",
		PathPattern:        "/open-banking-brasil/payment/{login}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOBBRCustomerPaymentConsentSystemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOBBRCustomerPaymentConsentSystemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getOBBRCustomerPaymentConsentSystem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOBBRCustomerPaymentConsentSystemV2 gets customer payment initiation consent v2

	Retrieve information about payment initiation consents per client application. This endpoint is used by a custom

Open Banking consent page during the authorization process. It returns consents previously created with the
`POST` **Create Payment Consent** endpoints.

This endpoint is compatible with version 2.0 of the Open Banking Brazil standard.

For authorization, pass the `Authorization: Bearer` with a token as the bearer value. To obtain the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) GetOBBRCustomerPaymentConsentSystemV2(params *GetOBBRCustomerPaymentConsentSystemV2Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerPaymentConsentSystemV2OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOBBRCustomerPaymentConsentSystemV2Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "getOBBRCustomerPaymentConsentSystemV2",
		Method:             "GET",
		PathPattern:        "/open-banking-brasil/payment/v2/{login}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOBBRCustomerPaymentConsentSystemV2Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOBBRCustomerPaymentConsentSystemV2OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getOBBRCustomerPaymentConsentSystemV2: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	GetOBBRCustomerPaymentConsentSystemV3 gets customer payment initiation consent v3

	Retrieve information about payment initiation consents per client application. This endpoint is used by a custom

Open Banking consent page during the authorization process. It returns consents previously created with the
`POST` **Create Payment Consent** endpoints.

This endpoint is compatible with version 3.0 of the Open Banking Brazil payment initiation standard.

For authorization, pass the `Authorization: Bearer` with a token as the bearer value. To obtain the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) GetOBBRCustomerPaymentConsentSystemV3(params *GetOBBRCustomerPaymentConsentSystemV3Params, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetOBBRCustomerPaymentConsentSystemV3OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetOBBRCustomerPaymentConsentSystemV3Params()
	}
	op := &runtime.ClientOperation{
		ID:                 "getOBBRCustomerPaymentConsentSystemV3",
		Method:             "GET",
		PathPattern:        "/open-banking-brasil/payment/v3/{login}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetOBBRCustomerPaymentConsentSystemV3Reader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetOBBRCustomerPaymentConsentSystemV3OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getOBBRCustomerPaymentConsentSystemV3: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	RejectOBBRCustomerDataAccessConsentSystem rejects customer data access consent

	Notify Cloudentity that a user rejected access to their data.

Used by a custom Open Banking consent page.

For authorization, pass the `Authorization: Bearer` header with a token as the bearer value. To obtain
the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) RejectOBBRCustomerDataAccessConsentSystem(params *RejectOBBRCustomerDataAccessConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RejectOBBRCustomerDataAccessConsentSystemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRejectOBBRCustomerDataAccessConsentSystemParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "rejectOBBRCustomerDataAccessConsentSystem",
		Method:             "POST",
		PathPattern:        "/open-banking-brasil/consent/{login}/reject",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RejectOBBRCustomerDataAccessConsentSystemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RejectOBBRCustomerDataAccessConsentSystemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for rejectOBBRCustomerDataAccessConsentSystem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
	RejectOBBRCustomerPaymentConsentSystem rejects customer payment initiation consent

	Notify Cloudentity that a user rejected payment initiation.

Used by a custom Open Banking consent page.

For authorization, pass the `Authorization: Bearer` header with a token as the bearer value. To obtain
the token, apply the
[Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
grant type.
*/
func (a *Client) RejectOBBRCustomerPaymentConsentSystem(params *RejectOBBRCustomerPaymentConsentSystemParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*RejectOBBRCustomerPaymentConsentSystemOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRejectOBBRCustomerPaymentConsentSystemParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "rejectOBBRCustomerPaymentConsentSystem",
		Method:             "POST",
		PathPattern:        "/open-banking-brasil/payment/{login}/reject",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RejectOBBRCustomerPaymentConsentSystemReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RejectOBBRCustomerPaymentConsentSystemOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for rejectOBBRCustomerPaymentConsentSystem: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
