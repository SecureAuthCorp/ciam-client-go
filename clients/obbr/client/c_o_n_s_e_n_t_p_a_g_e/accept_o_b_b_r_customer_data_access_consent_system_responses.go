// Code generated by go-swagger; DO NOT EDIT.

package c_o_n_s_e_n_t_p_a_g_e

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cloudentity/acp-client-go/clients/obbr/models"
)

// AcceptOBBRCustomerDataAccessConsentSystemReader is a Reader for the AcceptOBBRCustomerDataAccessConsentSystem structure.
type AcceptOBBRCustomerDataAccessConsentSystemReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AcceptOBBRCustomerDataAccessConsentSystemReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAcceptOBBRCustomerDataAccessConsentSystemOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAcceptOBBRCustomerDataAccessConsentSystemUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAcceptOBBRCustomerDataAccessConsentSystemForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAcceptOBBRCustomerDataAccessConsentSystemNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewAcceptOBBRCustomerDataAccessConsentSystemTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /open-banking-brasil/consent/{login}/accept] acceptOBBRCustomerDataAccessConsentSystem", response, response.Code())
	}
}

// NewAcceptOBBRCustomerDataAccessConsentSystemOK creates a AcceptOBBRCustomerDataAccessConsentSystemOK with default headers values
func NewAcceptOBBRCustomerDataAccessConsentSystemOK() *AcceptOBBRCustomerDataAccessConsentSystemOK {
	return &AcceptOBBRCustomerDataAccessConsentSystemOK{}
}

/*
AcceptOBBRCustomerDataAccessConsentSystemOK describes a response with status code 200, with default header values.

Consent Accepted
*/
type AcceptOBBRCustomerDataAccessConsentSystemOK struct {
	Payload *models.ConsentAccepted
}

// IsSuccess returns true when this accept o b b r customer data access consent system o k response has a 2xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this accept o b b r customer data access consent system o k response has a 3xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept o b b r customer data access consent system o k response has a 4xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this accept o b b r customer data access consent system o k response has a 5xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) IsServerError() bool {
	return false
}

// IsCode returns true when this accept o b b r customer data access consent system o k response a status code equal to that given
func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the accept o b b r customer data access consent system o k response
func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) Code() int {
	return 200
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemOK %s", 200, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemOK %s", 200, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) GetPayload() *models.ConsentAccepted {
	return o.Payload
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConsentAccepted)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptOBBRCustomerDataAccessConsentSystemUnauthorized creates a AcceptOBBRCustomerDataAccessConsentSystemUnauthorized with default headers values
func NewAcceptOBBRCustomerDataAccessConsentSystemUnauthorized() *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized {
	return &AcceptOBBRCustomerDataAccessConsentSystemUnauthorized{}
}

/*
AcceptOBBRCustomerDataAccessConsentSystemUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AcceptOBBRCustomerDataAccessConsentSystemUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept o b b r customer data access consent system unauthorized response has a 2xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept o b b r customer data access consent system unauthorized response has a 3xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept o b b r customer data access consent system unauthorized response has a 4xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept o b b r customer data access consent system unauthorized response has a 5xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this accept o b b r customer data access consent system unauthorized response a status code equal to that given
func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the accept o b b r customer data access consent system unauthorized response
func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) Code() int {
	return 401
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemUnauthorized %s", 401, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemUnauthorized %s", 401, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptOBBRCustomerDataAccessConsentSystemForbidden creates a AcceptOBBRCustomerDataAccessConsentSystemForbidden with default headers values
func NewAcceptOBBRCustomerDataAccessConsentSystemForbidden() *AcceptOBBRCustomerDataAccessConsentSystemForbidden {
	return &AcceptOBBRCustomerDataAccessConsentSystemForbidden{}
}

/*
AcceptOBBRCustomerDataAccessConsentSystemForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AcceptOBBRCustomerDataAccessConsentSystemForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept o b b r customer data access consent system forbidden response has a 2xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept o b b r customer data access consent system forbidden response has a 3xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept o b b r customer data access consent system forbidden response has a 4xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept o b b r customer data access consent system forbidden response has a 5xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this accept o b b r customer data access consent system forbidden response a status code equal to that given
func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the accept o b b r customer data access consent system forbidden response
func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) Code() int {
	return 403
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemForbidden %s", 403, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemForbidden %s", 403, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptOBBRCustomerDataAccessConsentSystemNotFound creates a AcceptOBBRCustomerDataAccessConsentSystemNotFound with default headers values
func NewAcceptOBBRCustomerDataAccessConsentSystemNotFound() *AcceptOBBRCustomerDataAccessConsentSystemNotFound {
	return &AcceptOBBRCustomerDataAccessConsentSystemNotFound{}
}

/*
AcceptOBBRCustomerDataAccessConsentSystemNotFound describes a response with status code 404, with default header values.

Not found
*/
type AcceptOBBRCustomerDataAccessConsentSystemNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept o b b r customer data access consent system not found response has a 2xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept o b b r customer data access consent system not found response has a 3xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept o b b r customer data access consent system not found response has a 4xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept o b b r customer data access consent system not found response has a 5xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this accept o b b r customer data access consent system not found response a status code equal to that given
func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the accept o b b r customer data access consent system not found response
func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) Code() int {
	return 404
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemNotFound %s", 404, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemNotFound %s", 404, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAcceptOBBRCustomerDataAccessConsentSystemTooManyRequests creates a AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests with default headers values
func NewAcceptOBBRCustomerDataAccessConsentSystemTooManyRequests() *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests {
	return &AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests{}
}

/*
AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests describes a response with status code 429, with default header values.

Too many requests
*/
type AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests struct {
	Payload *models.Error
}

// IsSuccess returns true when this accept o b b r customer data access consent system too many requests response has a 2xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this accept o b b r customer data access consent system too many requests response has a 3xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this accept o b b r customer data access consent system too many requests response has a 4xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this accept o b b r customer data access consent system too many requests response has a 5xx status code
func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this accept o b b r customer data access consent system too many requests response a status code equal to that given
func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) IsCode(code int) bool {
	return code == 429
}

// Code gets the status code for the accept o b b r customer data access consent system too many requests response
func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) Code() int {
	return 429
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemTooManyRequests %s", 429, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /open-banking-brasil/consent/{login}/accept][%d] acceptOBBRCustomerDataAccessConsentSystemTooManyRequests %s", 429, payload)
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *AcceptOBBRCustomerDataAccessConsentSystemTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
