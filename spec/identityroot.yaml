basePath: /api/identity/system
consumes:
- application/json
definitions:
  Argon2Config:
    properties:
      iterations:
        format: int64
        type: integer
        x-nullable: false
      key_length:
        format: int64
        type: integer
        x-nullable: false
      memory_in_kb:
        format: int64
        type: integer
        x-nullable: false
      parallelism:
        format: int64
        type: integer
        x-nullable: false
      salt:
        type: string
        x-nullable: false
      salt_length:
        format: int64
        type: integer
        x-nullable: false
    type: object
  AuthenticationMechanisms:
    items:
      enum:
      - password
      - otp
      - webauthn
      type: string
    type: array
  BcryptConfig:
    properties:
      cost:
        format: int64
        type: integer
        x-nullable: false
    type: object
  Code:
    properties:
      code:
        $ref: '#/definitions/CodeValue'
      created_at:
        format: date-time
        type: string
        x-nullable: false
      expires_at:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: codeID
        type: string
        x-nullable: false
      issued_at:
        format: date-time
        type: string
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        description: general purpose metadata
        type: object
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        enum:
        - activation
        - reset_password
        - challenge
        - verify_address
        - authentication
        example: active
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        example: default
        format: poolID
        type: string
        x-nullable: false
      verifiable_address_id:
        format: verifiableAddressID
        type: string
        x-nullable: false
    required:
    - tenant_id
    - user_pool_id
    - user_id
    - type
    - code
    type: object
  CodeValue:
    properties:
      hashed_code:
        $ref: '#/definitions/Hash'
    type: object
  Codes:
    properties:
      code:
        type: string
        x-nullable: false
      extended_code:
        type: string
        x-nullable: false
    required:
    - extended_code
    - code
    type: object
  Dump:
    properties:
      codes:
        items:
          $ref: '#/definitions/Code'
        type: array
        x-nullable: false
      pools:
        items:
          $ref: '#/definitions/Pool'
        type: array
        x-nullable: false
      schemas:
        items:
          $ref: '#/definitions/Schema'
        type: array
        x-nullable: false
      user_credentials:
        items:
          $ref: '#/definitions/UserCredential'
        type: array
        x-nullable: false
      user_identifiers:
        items:
          $ref: '#/definitions/UserIdentifier'
        type: array
        x-nullable: false
      user_verifiable_addresses:
        items:
          $ref: '#/definitions/UserVerifiableAddress'
        type: array
        x-nullable: false
      users:
        items:
          $ref: '#/definitions/User'
        type: array
        x-nullable: false
    type: object
  Error:
    description: HTTP error response
    properties:
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  Hash:
    properties:
      config:
        $ref: '#/definitions/HashConfig'
      value:
        type: string
        x-nullable: false
    type: object
  HashConfig:
    properties:
      argon2:
        $ref: '#/definitions/Argon2Config'
      bcrypt:
        $ref: '#/definitions/BcryptConfig'
      method:
        enum:
        - bcrypt
        - pbkdf2
        - argon2
        - sha
        type: string
        x-nullable: false
      pbkdf2:
        $ref: '#/definitions/PBKDF2Config'
      sha:
        $ref: '#/definitions/SHAConfig'
    type: object
  OtpConfig:
    properties:
      length:
        format: int64
        type: integer
        x-nullable: false
      ttl:
        format: duration
        type: string
        x-nullable: false
    type: object
  OtpSettings:
    properties:
      activation:
        $ref: '#/definitions/OtpConfig'
      authentication:
        $ref: '#/definitions/OtpConfig'
      challenge:
        $ref: '#/definitions/OtpConfig'
      reset_password:
        $ref: '#/definitions/OtpConfig'
      verify_address:
        $ref: '#/definitions/OtpConfig'
    type: object
  PBKDF2Config:
    properties:
      function:
        type: string
        x-nullable: false
      key_length:
        format: int64
        type: integer
        x-nullable: false
      number_of_iterations:
        format: int64
        type: integer
        x-nullable: false
      salt:
        type: string
        x-nullable: false
      salt_length:
        format: int64
        type: integer
        x-nullable: false
    type: object
  PasswordPolicy:
    properties:
      capital_letters:
        format: uint64
        type: integer
        x-nullable: false
      digits:
        format: uint64
        type: integer
        x-nullable: false
      lowercase_letters:
        format: uint64
        type: integer
        x-nullable: false
      min_length:
        format: uint64
        type: integer
        x-nullable: false
      not_used_since:
        format: uint64
        type: integer
        x-nullable: false
      special_characters:
        format: uint64
        type: integer
        x-nullable: false
      strength:
        enum:
        - any
        - weak
        - fair
        - strong
        - very_strong
        type: string
        x-nullable: false
    type: object
  PasswordSettings:
    properties:
      expires_after:
        format: duration
        type: string
        x-nullable: false
      hashing_method:
        enum:
        - bcrypt
        - pbkdf2
        - argon2
        - sha
        type: string
        x-nullable: false
    type: object
  Pool:
    properties:
      authentication_mechanisms:
        $ref: '#/definitions/AuthenticationMechanisms'
      badge_color:
        type: string
        x-nullable: false
      deleted:
        type: boolean
        x-nullable: false
      description:
        type: string
        x-nullable: false
      id:
        format: poolID
        type: string
        x-nullable: false
      identifier_case_insensitive:
        type: boolean
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      metadata_schema_id:
        format: schemaID
        type: string
        x-nullable: false
      name:
        type: string
        x-nullable: false
      otp_settings:
        $ref: '#/definitions/OtpSettings'
      password_policy:
        $ref: '#/definitions/PasswordPolicy'
      password_settings:
        $ref: '#/definitions/PasswordSettings'
      payload_schema_id:
        format: schemaID
        type: string
        x-nullable: false
      preferred_authentication_mechanism:
        enum:
        - password
        - otp
        - webauthn
        example: password
        type: string
        x-nullable: false
      public_registration_allowed:
        type: boolean
        x-nullable: false
      system:
        type: boolean
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      workspace_id:
        format: serverID
        type: string
        x-nullable: false
    required:
    - tenant_id
    - name
    type: object
  RequestCode:
    properties:
      address:
        type: string
        x-nullable: false
      identifier:
        type: string
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        description: code metadata
        type: object
        x-nullable: false
      type:
        enum:
        - activation
        - reset_password
        - challenge
        - verify_address
        - authentication
        type: string
        x-nullable: false
    required:
    - type
    type: object
  Rfc6902PatchOperation:
    properties:
      op:
        description: |-
          Each operation must have at least one `op` member, which value indicates
          the actual operation to be performed against the target (current) configuration.
          For a detailed description of available operations,
          see the [Operations #4 section of the RFC6902 specification](https://datatracker.ietf.org/doc/html/rfc6902#section-4).
        enum:
        - add
        - remove
        - replace
        - move
        - copy
        - test
        type: string
        x-nullable: false
      path:
        description: |-
          String containing a JSON-Pointer value ([RFC6901](https://datatracker.ietf.org/doc/html/rfc6901))
          that references a location within the target configuration where the operation is performed.

          For available paths, reference the exported configuration.
        type: string
        x-nullable: false
      value:
        description: New object value applied to the patched (target) configuration.
        type: object
        x-nullable: false
    type: object
  Rfc6902PatchOperations:
    items:
      $ref: '#/definitions/Rfc6902PatchOperation'
    type: array
  SHAConfig:
    properties:
      function:
        type: string
        x-nullable: false
      salt:
        type: string
        x-nullable: false
      salt_after_digest_in_hash:
        type: boolean
        x-nullable: false
      salt_length:
        format: int64
        type: integer
        x-nullable: false
    type: object
  Schema:
    properties:
      created_at:
        format: date-time
        type: string
        x-nullable: false
      description:
        type: string
        x-nullable: false
      id:
        format: schemaID
        type: string
        x-nullable: false
      name:
        type: string
        x-nullable: false
      schema:
        $ref: '#/definitions/SupportedJSONSchema'
      system:
        type: boolean
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
    required:
    - tenant_id
    - name
    - schema
    type: object
  SupportedJSONSchema:
    properties:
      additionalProperties:
        type: boolean
        x-nullable: false
      allOf:
        items:
          $ref: '#/definitions/SupportedJSONSchema'
        type: array
        x-nullable: false
      anyOf:
        items:
          $ref: '#/definitions/SupportedJSONSchema'
        type: array
        x-nullable: false
      const:
        type: string
        x-nullable: false
      contains:
        $ref: '#/definitions/SupportedJSONSchema'
      dependentRequired:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
        x-nullable: false
      dependentSchemas:
        additionalProperties:
          $ref: '#/definitions/SupportedJSONSchema'
        type: object
        x-nullable: false
      description:
        type: string
        x-nullable: false
      else:
        $ref: '#/definitions/SupportedJSONSchema'
      enum:
        items:
          type: string
        type: array
        x-nullable: false
      exclusiveMaximum:
        format: int64
        type: integer
        x-nullable: false
      exclusiveMinimum:
        format: int64
        type: integer
        x-nullable: false
      hidden:
        type: boolean
        x-nullable: false
      if:
        $ref: '#/definitions/SupportedJSONSchema'
      items:
        $ref: '#/definitions/SupportedJSONSchema'
      maxContains:
        format: int64
        type: integer
        x-nullable: false
      maxItems:
        description: arrays
        format: int64
        type: integer
        x-nullable: false
      maxLength:
        description: strings
        format: int64
        type: integer
        x-nullable: false
      maxProperties:
        description: objects
        format: int64
        type: integer
        x-nullable: false
      maximum:
        format: int64
        type: integer
        x-nullable: false
      minContains:
        format: int64
        type: integer
        x-nullable: false
      minItems:
        format: int64
        type: integer
        x-nullable: false
      minLength:
        format: int64
        type: integer
        x-nullable: false
      minProperties:
        format: int64
        type: integer
        x-nullable: false
      minimum:
        format: int64
        type: integer
        x-nullable: false
      multipleOf:
        description: numeric
        format: int64
        type: integer
        x-nullable: false
      not:
        $ref: '#/definitions/SupportedJSONSchema'
      oneOf:
        items:
          $ref: '#/definitions/SupportedJSONSchema'
        type: array
        x-nullable: false
      pattern:
        type: string
        x-nullable: false
      patternProperties:
        additionalProperties:
          $ref: '#/definitions/SupportedJSONSchema'
        type: object
        x-nullable: false
      properties:
        additionalProperties:
          $ref: '#/definitions/SupportedJSONSchema'
        type: object
        x-nullable: false
      propertyNames:
        $ref: '#/definitions/SupportedJSONSchema'
      required:
        items:
          type: string
        type: array
        x-nullable: false
      then:
        $ref: '#/definitions/SupportedJSONSchema'
      title:
        type: string
        x-nullable: false
      type:
        description: any
        type: string
        x-nullable: false
      uniqueItems:
        type: boolean
        x-nullable: false
    type: object
  User:
    properties:
      created_at:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: userID
        type: string
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      metadata_schema_id:
        format: schemaID
        type: string
        x-nullable: false
      payload:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      payload_schema_id:
        format: schemaID
        type: string
        x-nullable: false
      status:
        enum:
        - active
        - inactive
        - deleted
        - new
        example: active
        type: string
        x-nullable: false
      status_updated_at:
        format: date-time
        type: string
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
      user_pool_id:
        example: default
        format: poolID
        type: string
        x-nullable: false
      user_type:
        x-nullable: false
    required:
    - tenant_id
    - user_pool_id
    - status
    type: object
  UserCredential:
    properties:
      created_at:
        format: date-time
        type: string
        x-nullable: false
      expires_at:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: userCredentialID
        type: string
        x-nullable: false
      payload:
        example:
          hashed_password: '###'
        type: object
        x-nullable: false
      state:
        enum:
        - valid
        - must_be_reset
        - must_be_changed
        type: string
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        enum:
        - password
        - webauthn
        example: password
        type: string
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        example: default
        format: poolID
        type: string
        x-nullable: false
    required:
    - tenant_id
    - user_pool_id
    - user_id
    - type
    - payload
    - created_at
    - updated_at
    type: object
  UserIdentifier:
    properties:
      created_at:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: userIdentifierID
        type: string
        x-nullable: false
      identifier:
        format: userIdentifierValue
        type: string
        x-nullable: false
      identifier_lc:
        format: userIdentifierValue
        type: string
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        description: general purpose metadata
        type: object
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        enum:
        - email
        - mobile
        - uid
        - external
        - federated
        example: email
        type: string
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        example: default
        format: poolID
        type: string
        x-nullable: false
    required:
    - tenant_id
    - user_pool_id
    - identifier
    - identifier_lc
    - user_id
    - type
    - created_at
    - updated_at
    type: object
  UserVerifiableAddress:
    properties:
      address:
        format: verifiableAddress
        type: string
        x-nullable: false
      address_lc:
        format: verifiableAddress
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: verifiableAddressID
        type: string
        x-nullable: false
      preferred_contact_method:
        enum:
        - sms
        - voice
        example: sms
        type: string
        x-nullable: false
      status:
        enum:
        - active
        - inactive
        example: active
        type: string
        x-nullable: false
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        enum:
        - email
        - mobile
        example: mobile
        type: string
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        example: default
        format: poolID
        type: string
        x-nullable: false
      verified:
        type: boolean
        x-nullable: false
      verified_at:
        format: date-time
        type: string
        x-nullable: false
    required:
    - tenant_id
    - user_pool_id
    - user_id
    - address
    - address_lc
    - type
    - status
    - verified
    - created_at
    - updated_at
    type: object
host: localhost:8443
info:
  description: Cloudentity Root API
  title: Cloudentity API
  version: latest
paths:
  /code/generate:
    post:
      description: |-
        Generate code of a specific type for provided address
        Invalidates previously generated OTPs for action associated with the type.
        Code is valid for specific period of time configured in Identity Pool.

        Keep in mind that `address` attribute for different code types does not mean the same:
        for `reset_password`, `authentication` and `challenge` it must be user's address (verified or unverified)
        for `activation` it is not mandatory (system will pick up address itself if there is only one in user entry) but if provided it must be one of the user's addresses (can be not verified)
        for `verify_address` it must be user's unverified address and that address cannot be someone's else verified address

        For `activation`, `reset_password` and `challenge` there is only one active code for a user (generating new one invalidates previous)
        For `verify_address` there might be many codes for a user. During verification latest for an address is being compared.

        REFACTORED: input field name has been changed from `identifier` to `address`; field `identifier` stays for backward compatibility and overrides `address` if not empty
      operationId: systemGenerateCode
      parameters:
      - in: query
        name: tenantID
        type: string
      - in: query
        name: ipID
        type: string
      - in: query
        name: userID
        type: string
      - in: body
        name: CodeRequest
        schema:
          $ref: '#/definitions/RequestCode'
      responses:
        "201":
          $ref: '#/responses/RootGenerateCodeResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - setup: []
      summary: Generate code of a specific type
      tags:
      - system
  /configuration:
    get:
      operationId: exportConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: query
        name: tid
        type: string
      responses:
        "200":
          description: Dump
          schema:
            $ref: '#/definitions/Dump'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - setup: []
      tags:
      - configuration
    patch:
      description: Patch tenant configuration using RFC 6902 JSON Patch.
      operationId: patchConfiguration
      parameters:
      - default: default
        description: Tenant id
        in: query
        name: tid
        type: string
      - in: body
        name: patch
        schema:
          $ref: '#/definitions/Rfc6902PatchOperations'
      - format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' patch applied'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - setup: []
      summary: Patch configuration
      tags:
      - configuration
    put:
      description: |-
        ACP updates existing values with the values provided in the request.
        API supports only full entries update, not partial, meaning if user is re-imported it should be re-imported with all subentries.
      operationId: importConfiguration
      parameters:
      - in: body
        name: Dump
        schema:
          $ref: '#/definitions/Dump'
      responses:
        "204":
          description: ' configuration has been imported'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - setup: []
      summary: Imports configuration
      tags:
      - configuration
produces:
- application/json
responses:
  RootGenerateCodeResponse:
    description: Code
    schema:
      $ref: '#/definitions/Codes'
  badRequestHTTPError:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'
  conflictHTTPError:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  forbiddenHTTPError:
    description: Forbidden
    schema:
      $ref: '#/definitions/Error'
  internalServerErrorHTTPError:
    description: Internal server error
    schema:
      $ref: '#/definitions/Error'
  methodNotAllowedHTTPError:
    description: Method not allowed
    schema:
      $ref: '#/definitions/Error'
  notFoundHTTPError:
    description: Not found
    schema:
      $ref: '#/definitions/Error'
  payloadTooLargeHTTPError:
    description: Payload too large
    schema:
      $ref: '#/definitions/Error'
  preconditionFailedHTTPError:
    description: Precondition failed
    schema:
      $ref: '#/definitions/Error'
  tooManyRequestsHTTPError:
    description: Too many requests
    schema:
      $ref: '#/definitions/Error'
  unauthorizedHTTPError:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  unprocessableEntityHTTPError:
    description: Unprocessable entity
    schema:
      $ref: '#/definitions/Error'
schemes:
- https
securityDefinitions:
  adminSystem:
    authorizationUrl: /system/admin/oauth2/authorize
    flow: accessCode
    tokenUrl: /system/admin/oauth2/token
    type: oauth2
  setup:
    authorizationUrl: /system/system/oauth2/authorize
    flow: accessCode
    tokenUrl: /system/system/oauth2/token
    type: oauth2
swagger: "2.0"
