basePath: /default/default/identity
consumes:
- application/json
definitions:
  ChangePassword:
    properties:
      new_password:
        type: string
        x-nullable: false
      old_password:
        type: string
        x-nullable: false
    required:
    - old_password
    - new_password
    type: object
  CompleteAddressVerification:
    properties:
      address:
        example: sample@email.com/+48123456789
        type: string
        x-nullable: false
      code:
        type: string
        x-nullable: false
    required:
    - address
    - code
    type: object
  Error:
    description: HTTP error response
    properties:
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  ResetPasswordConfirm:
    properties:
      code:
        type: string
        x-nullable: false
      identifier:
        type: string
        x-nullable: false
      new_password:
        type: string
        x-nullable: false
    required:
    - code
    - new_password
    type: object
  SelfUserIdentifier:
    properties:
      created_at:
        format: date-time
        type: string
        x-nullable: false
      identifier:
        format: userIdentifierValue
        type: string
        x-nullable: false
      type:
        enum:
        - email
        - mobile
        - uid
        - external
        example: email
        type: string
        x-nullable: false
    required:
    - identifier
    - type
    - created_at
    type: object
  SelfUserUpdate:
    properties:
      payload:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
    type: object
  SelfUserVerifiableAddress:
    properties:
      address:
        format: verifiableAddress
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      preferred_contact_method:
        enum:
        - sms
        - voice
        example: sms
        type: string
        x-nullable: false
      status:
        enum:
        - active
        - inactive
        example: active
        type: string
        x-nullable: false
      type:
        enum:
        - email
        - mobile
        example: mobile
        type: string
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
      verified:
        type: boolean
        x-nullable: false
      verified_at:
        format: date-time
        type: string
        x-nullable: false
    required:
    - address
    - type
    - status
    - verified
    - created_at
    - updated_at
    type: object
  SelfUserWithData:
    properties:
      id:
        format: userID
        type: string
        x-nullable: false
      identifiers:
        items:
          $ref: '#/definitions/SelfUserIdentifier'
        type: array
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      payload:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      verifiable_addresses:
        items:
          $ref: '#/definitions/SelfUserVerifiableAddress'
        type: array
        x-nullable: false
    type: object
host: localhost:8443
info:
  description: |-
    Cloudentity Identity API

    It is important for clients to note that most APIs return the `ETag` response header. When executing API flows which modify and retrieve a given resource, clients are expected to follow `ETag` protocols by:
    1. Caching the value of an `ETag` returned by the server when retrieving the resource, and
    2. Supplying the `If-Match` header with the `ETag` value when attempting to modify the resource.

    A `412 Precondition Failed` response will be returned if a write request is delayed after a sufficient length of time while a previous write request was being processed.

    When interacting with APIs, make sure to always supply the If-Match header from the previous ETag header response for full consistency.
    Otherwise, the APIs may use the cached user data, and not return what you expect!
  title: Cloudentity API
  version: latest
paths:
  /public/pools/{ipID}/reset-password/confirm:
    post:
      description: |-
        Resets password for user if the provided OTP is valid. It's the second and final step of the
        flow to reset the password.
        Either user identifier or extended code must be provided.
        Endpoint returns generic `401` regardless of the reason of failure to prevent email/mobile enumeration.
        After a successful password reset, OTP gets invalidated, so it cannot be reused.
        Endpoint is protected by Brute Force mechanism.
      operationId: resetPasswordConfirm
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - in: path
        name: ipID
        required: true
        type: string
      - in: body
        name: ResetPasswordConfirm
        schema:
          $ref: '#/definitions/ResetPasswordConfirm'
      responses:
        "204":
          $ref: '#/responses/ResetPasswordConfirmedResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "412":
          $ref: '#/responses/payloadTooLargeHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
      summary: Confirm Reset Password
      tags:
      - Users
  /self/address-verification/complete:
    post:
      description: |-
        Completes unverified address verification by checking if code is valid or not.
        Both address and code must be provided.
        Fails if address is not user's address or is user's verified or is someone's verified address.
        If the OTP is valid it is removed and a successful response is returned.
        Endpoint is protected by Brute Force mechanism.
      operationId: completeAddressVerification
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - in: body
        name: CompleteAddressVerification
        schema:
          $ref: '#/definitions/CompleteAddressVerification'
      responses:
        "204":
          $ref: '#/responses/AddressVerificationCompletedResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "412":
          $ref: '#/responses/payloadTooLargeHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
      summary: Complete Address Verification
      tags:
      - OTP
  /self/change-password:
    post:
      description: Changes user password if provided password matches current user
        password.
      operationId: changePassword
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - in: body
        name: ChangePassword
        schema:
          $ref: '#/definitions/ChangePassword'
      responses:
        "204":
          $ref: '#/responses/ChangePasswordResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "412":
          $ref: '#/responses/payloadTooLargeHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - self: []
      summary: Change Password
      tags:
      - Users
  /self/me:
    get:
      description: |-
        Returns base view on user entry. Besides basic user entry it returns all user identifiers and addresses.
        Also returns user metadata (only fields not marked as hidden) and payload.
      operationId: getUserProfile
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      responses:
        "200":
          $ref: '#/responses/GetProfileResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "412":
          $ref: '#/responses/payloadTooLargeHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - self: []
      summary: Self Get User Profile
      tags:
      - Users
    put:
      description: |-
        Updates user payload.
        Payload must be valid against schema defined in user entry.

        Returns base view on user entry (see Self Get User Profile endpoint).
      operationId: updateUserProfile
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - in: body
        name: UpdateUser
        schema:
          $ref: '#/definitions/SelfUserUpdate'
      responses:
        "200":
          $ref: '#/responses/GetProfileResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "412":
          $ref: '#/responses/payloadTooLargeHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - self: []
      summary: Self Update User Profile
      tags:
      - Users
produces:
- application/json
responses:
  AddressVerificationCompletedResponse:
    description: Address verification completed
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
  ChangePasswordResponse:
    description: Password has been changed
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
  GetProfileResponse:
    description: User profile data
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
    schema:
      $ref: '#/definitions/SelfUserWithData'
  ResetPasswordConfirmedResponse:
    description: Reset password confirmed
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
  badRequestHTTPError:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'
  conflictHTTPError:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  forbiddenHTTPError:
    description: Forbidden
    schema:
      $ref: '#/definitions/Error'
  internalServerErrorHTTPError:
    description: Internal server error
    schema:
      $ref: '#/definitions/Error'
  methodNotAllowedHTTPError:
    description: Method not allowed
    schema:
      $ref: '#/definitions/Error'
  notFoundHTTPError:
    description: Not found
    schema:
      $ref: '#/definitions/Error'
  payloadTooLargeHTTPError:
    description: Payload too large
    schema:
      $ref: '#/definitions/Error'
  preconditionFailedHTTPError:
    description: Precondition failed
    schema:
      $ref: '#/definitions/Error'
  tooManyRequestsHTTPError:
    description: Too many requests
    schema:
      $ref: '#/definitions/Error'
  unauthorizedHTTPError:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  unprocessableEntityHTTPError:
    description: Unprocessable entity
    schema:
      $ref: '#/definitions/Error'
schemes:
- https
securityDefinitions:
  self:
    authorizationUrl: /default/default/oauth2/authorize
    flow: accessCode
    tokenUrl: /default/default/oauth2/token
    type: oauth2
swagger: "2.0"
