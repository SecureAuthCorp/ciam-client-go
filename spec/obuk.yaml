basePath: /default/default
consumes:
- application/json
definitions:
  AcceptConsentRequest:
    properties:
      account_ids:
        description: List of accounts that user agreed to share on the consent page.
        items:
          type: string
        type: array
        x-nullable: false
      granted_scopes:
        $ref: '#/definitions/GrantedScopes'
      login_state:
        description: |-
          Random string generated by Cloudentity used to mitigate Cross-site request forgery (CSRF) attacks.
          Cloudentity sends state as login_state query param when redirecting to the consent page.
        example: '"cauq8fonbud6q8806bf0"'
        format: loginState
        type: string
        x-nullable: false
    type: object
  AccountAccessConsent:
    properties:
      ConsentId:
        description: Unique identification as assigned to identify the account access
          consent resource.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        $ref: '#/definitions/CreationDateTime'
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire.
          If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Permissions:
        description: permissions
        items:
          type: string
        minItems: 1
        type: array
        x-nullable: false
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Rejected
        - Revoked
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        $ref: '#/definitions/StatusUpdateDateTime'
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period.
          If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period.
          If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Permissions
    - Status
    - StatusUpdateDateTime
    type: object
  AccountAccessConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBReadConsent1Data'
      Risk:
        $ref: '#/definitions/OBRisk2'
    required:
    - Data
    - Risk
    type: object
  AccountAccessConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBReadConsentResponse1Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk2'
    required:
    - Data
    - Risk
    type: object
  ActiveOrHistoricCurrencyCode:
    title: ActiveOrHistoricCurrencyCode A code allocated to a currency by a Maintenance
      Agency under an international identification scheme, as described in the latest
      edition of the international standard ISO 4217 "Codes for the representation
      of currencies and funds".
    type: string
  AuthenticationContext:
    additionalProperties:
      type: object
    type: object
  BuildingNumber:
    title: BuildingNumber Number that identifies the position of a building on a street.
    type: string
  ClientInfo:
    properties:
      client_name:
        description: Human-readable name of a client application.
        example: My app
        type: string
        x-nullable: false
      client_uri:
        description: URI of a client application.
        type: string
        x-nullable: false
      description:
        description: Description of the client application.
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI.
        type: string
        x-nullable: false
      organisation_id:
        description: |-
          External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
          Data Recipient Brand.

          The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
          required for authorization, and represents the audience(s) the JWT is intended for.
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL.
        type: string
        x-nullable: false
    type: object
  ClientJWK:
    properties:
      alg:
        description: |-
          The "alg" (algorithm) parameter identifies the algorithm intended for
          use with the key.  The values used should either be registered in the
          IANA "JSON Web Signature and Encryption Algorithms" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.
        example: RS256
        type: string
        x-nullable: false
      crv:
        example: P-256
        type: string
        x-nullable: false
      d:
        example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        type: string
        x-nullable: false
      dp:
        example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        type: string
        x-nullable: false
      dq:
        example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        type: string
        x-nullable: false
      e:
        example: AQAB
        type: string
        x-nullable: false
      k:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      kid:
        description: |-
          The "kid" (key ID) parameter is used to match a specific key.  This
          is used, for instance, to choose among a set of keys within a JWK Set
          during key rollover.  The structure of the "kid" value is
          unspecified.  When "kid" values are used within a JWK Set, different
          keys within the JWK Set SHOULD use distinct "kid" values.  (One
          example in which different keys might use the same "kid" value is if
          they have different "kty" (key type) values but are considered to be
          equivalent alternatives by the application using them.)  The "kid"
          value is a case-sensitive string.
        example: 1603dfe0af8f4596
        type: string
        x-nullable: false
      kty:
        description: |-
          The "kty" (key type) parameter identifies the cryptographic algorithm
          family used with the key, such as "RSA" or "EC". "kty" values should
          either be registered in the IANA "JSON Web Key Types" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.  The "kty" value is a case-sensitive string.
        example: RSA
        type: string
        x-nullable: false
      "n":
        example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        type: string
        x-nullable: false
      p:
        example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        type: string
        x-nullable: false
      q:
        example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        type: string
        x-nullable: false
      qi:
        example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        type: string
        x-nullable: false
      use:
        description: |-
          Use ("public key use") identifies the intended use of
          the public key. The "use" parameter is employed to indicate whether
          a public key is used for encrypting data or verifying the signature
          on data. Values are commonly "sig" (signature) or "enc" (encryption).
        example: sig
        type: string
        x-nullable: false
      x:
        example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        type: string
        x-nullable: false
      x5c:
        description: |-
          The "x5c" (X.509 certificate chain) parameter contains a chain of one
          or more PKIX certificates [RFC5280].  The certificate chain is
          represented as a JSON array of certificate value strings.  Each
          string in the array is a base64-encoded (Section 4 of [RFC4648] --
          not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
          The PKIX certificate containing the key value MUST be the first
          certificate.
        items:
          type: string
        type: array
        x-nullable: false
      x5t:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      x5t#S256:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      "y":
        example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        type: string
        x-nullable: false
    required:
    - kty
    type: object
  ClientJWKs:
    properties:
      keys:
        example: []
        items:
          $ref: '#/definitions/ClientJWK'
        type: array
        x-nullable: false
    type: object
  ClientPrivacy:
    properties:
      scopes:
        additionalProperties:
          $ref: '#/definitions/ScopePrivacyInformation'
        description: optional privacy information mapping for scopes
        type: object
        x-nullable: false
    type: object
  ClientTokenExchangeConfiguration:
    properties:
      actor_claims:
        description: |-
          Additional actor token claims

          Claims from the actor token that will be injected into the exchanged token under the `act` claim.

          Applies for the token exchange delegation flow only.
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  Confirmation:
    properties:
      jkt:
        type: string
        x-nullable: false
      x5t#S256:
        type: string
        x-nullable: false
    type: object
  ConsentAccepted:
    properties:
      redirect_to:
        description: |-
          A URL to redirect the user.
          It applies for the redirect flow only, i.e the consent page.
        example: https://authorization.cloudentity.com:8443/tenant/server/oauth2/authorize?client_id=bugkgm23g9kregtu051g&consent_verified=true&login_id=cavai7d8s9nelp7k792g&login_state=cauq8fonbud6q8806bf0
        type: string
        x-nullable: false
    type: object
  ConsentRejected:
    properties:
      redirect_to:
        description: |-
          A URL to redirect the user.
          It applies for the redirect flow only, i.e the consent page.
        example: https://authorization.cloudentity.com:8443/tenant/server/oauth2/authorize?client_id=bugkgm23g9kregtu051g&consent_verified=true&login_id=cavai7d8s9nelp7k792g&login_state=cauq8fonbud6q8806bf0
        type: string
        x-nullable: false
    type: object
  ConsentType:
    type: string
  ConsentsRemovedResponse:
    properties:
      number_of_consents_removed:
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentsRequest:
    properties:
      accounts:
        description: |-
          List of accounts.

          It can refer to user bank accounts the client application is allowed to access.
        items:
          type: string
        type: array
        x-nullable: false
      after_consent_id:
        description: |-
          A consent identifier.

          Use it to navigate through the request pagination when the number of consents is greater than
          the `limit` set for results in the response.

          With `after_consent_id`, the list you obtain starts from the subsequent consent after the specified one. Also,
          the response depends on the `sort` and `order` parameters, if any are passed.
        type: string
        x-nullable: false
      before_consent_id:
        description: |-
          A consent identifier.

          Use it to navigate through the request pagination when the number of consents is greater than
          the limit set for results in the response.

          With `before_consent_id`, the list you obtain comprises consents up to the specified one. The specified consent
          isn't included. Also, the response depends on the `sort` and `order` parameters, if any are passed.
        type: string
        x-nullable: false
      client_id:
        description: A client identifier.
        type: string
        x-nullable: false
      limit:
        default: 20
        description: Limit the number of results returned in the response.
        format: int64
        maximum: 100
        minimum: 1
        type: integer
        x-nullable: false
      order:
        default: desc
        description: |-
          Input: `acs` or `desc`.

          Set the order of results returned in the response.
        type: string
        x-nullable: false
      sort:
        description: Sort results returned in the response.
        type: string
        x-nullable: false
      status:
        description: List of the consent statuses.
        items:
          type: string
        type: array
        x-nullable: false
      types:
        description: Consent types.
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  CountryCode:
    title: CountryCode Nation with its own government.
    type: string
  CountrySubDivision:
    title: CountrySubDivision Identifies a subdivision of a country such as state,
      region, county.
    type: string
  CreationDateTime:
    description: |-
      All date-time fields in responses must include the timezone. An example is below:
      2017-04-05T10:43:07+00:00
    format: date-time
    title: CreationDateTime Date and time at which the resource was created.All dates
      in the JSON payloads are represented in ISO 8601 date-time format.
    type: string
  Department:
    title: Department Identification of a division of a large organisation or building.
    type: string
  DomesticPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteDomesticConsentResponse5Data'
    - $ref: '#/definitions/OBRisk1'
  DomesticPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticConsent4Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticScheduledPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5Data'
    - $ref: '#/definitions/OBRisk1'
  DomesticScheduledPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticScheduledPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticStandingOrderConsent:
    allOf:
    - $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6Data'
    - $ref: '#/definitions/OBRisk1'
  DomesticStandingOrderConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  DomesticStandingOrderConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  Error:
    description: HTTP error response
    properties:
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  ErrorResponse:
    properties:
      Code:
        description: High level textual error code, to help categorize the errors.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      Errors:
        description: errors
        items:
          $ref: '#/definitions/OBError1'
        minItems: 1
        type: array
        x-nullable: false
      Id:
        description: A unique reference for the error instance, for audit purposes,
          in case of unknown/unclassified errors.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      Message:
        description: Brief Error message, e.g., 'There is something wrong with the
          request parameters provided'
        maxLength: 500
        minLength: 1
        type: string
        x-nullable: false
    required:
    - Code
    - Errors
    - Message
    title: An array of detail error codes, and messages, and URLs to documentation
      to help remediation.
    type: object
  FilePaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteFileConsentResponse4Data'
  FilePaymentConsentFileRequest:
    type: object
  FilePaymentConsentFileResponse:
    type: object
  FilePaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteFileConsent3Data'
    required:
    - Data
    type: object
  FilePaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteFileConsentResponse4Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
    required:
    - Data
    type: object
  GetAccountAccessConsentResponse:
    properties:
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetDomesticPaymentConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetDomesticScheduledPaymentConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetDomesticStandingOrderConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetFilePaymentConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetInternationalPaymentConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetInternationalScheduledPaymentConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GetInternationalStandingOrderConsentResponse:
    properties:
      account_ids:
        description: List of account identifiers
        items:
          type: string
        type: array
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        description: Consent creation time
        format: date-time
        type: string
        x-nullable: false
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      requested_scopes:
        description: List of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      status:
        description: Consent status
        type: string
        x-nullable: false
      subject:
        description: Subject
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  GrantedScopes:
    items:
      format: scopeName
      type: string
    type: array
  ISODateTime:
    description: |-
      All date-time fields in responses must include the timezone. An example is below:
      2017-04-05T10:43:07+00:00
    format: date-time
    title: ISODateTime All dates in the JSON payloads are represented in ISO 8601
      date-time format.
    type: string
  Identification_0:
    title: Identification0 Identification assigned by an institution to identify an
      account. This identification is known by the account owner.
    type: string
  Identification_1:
    title: Identification1 Unique and unambiguous identification of a financial institution
      or a branch of a financial institution.
    type: string
  InternationalPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteInternationalConsentResponse6Data'
    - $ref: '#/definitions/OBRisk1'
  InternationalPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalConsent5Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalScheduledPaymentConsent:
    allOf:
    - $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6Data'
    - $ref: '#/definitions/OBRisk1'
  InternationalScheduledPaymentConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalScheduledPaymentConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalStandingOrderConsent:
    allOf:
    - $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7Data'
    - $ref: '#/definitions/OBRisk1'
  InternationalStandingOrderConsentRequest:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6Data'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  InternationalStandingOrderConsentResponse:
    properties:
      Data:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7Data'
      Links:
        $ref: '#/definitions/Links'
      Meta:
        $ref: '#/definitions/Meta'
      Risk:
        $ref: '#/definitions/OBRisk1'
    required:
    - Data
    - Risk
    type: object
  IntrospectResponse:
    properties:
      acr:
        description: Authentication context class reference
        type: string
        x-nullable: false
      act:
        additionalProperties:
          type: object
        description: Actor claims used in the Token Exchange flow.
        type: object
        x-nullable: false
      active:
        description: |-
          Active is a boolean indicator of whether or not the presented token
          is currently active. The specifics of a token's `active` state
          varies depending on the implementation of an authorization
          server and the information it keeps about its token. Still, the `true`
          value returned for the `active` property generally indicates
          that a given token has been issued by this authorization server,
          has not been revoked by the resource owner, and is within its
          given time window of validity (e.g., between its issuance and
          expiration time).
        type: boolean
        x-nullable: false
      amr:
        description: Authentication method references
        items:
          type: string
        type: array
        x-nullable: false
      aud:
        description: Audience contains the list of the audiences the token is intended
          for.
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: |-
          A client application identifier for the OAuth 2.0 client that
          requested this token.
        type: string
        x-nullable: false
      cnf:
        $ref: '#/definitions/Confirmation'
      exp:
        description: |-
          ExpiredAt is the integer timestamp measured in the number of seconds
          since January 1 1970 UTC (1970-01-01T00:00:00Z). It indicates when this token will expire.
        format: int64
        type: integer
        x-nullable: false
      ext:
        additionalProperties:
          type: object
        description: Extra is arbitrary data set by the session.
        type: object
        x-nullable: false
      iat:
        description: |-
          IssuedAt is the integer timestamp measured in the number of seconds
          since January 1 1970 UTC. It indicates when this token was
          originally issued.
        format: int64
        type: integer
        x-nullable: false
      idp:
        description: The identifier of an identity provider that user authenticated
          with.
        type: string
        x-nullable: false
      idp_sub:
        description: IDP subject
        type: string
        x-nullable: false
      iss:
        description: Issuer URL is a string representing the issuer of this token.
        type: string
        x-nullable: false
      nbf:
        description: |-
          NotBefore is an integer timestamp measured in the number of seconds
          since January 1 1970 UTC. It indicates this token was not
          used before the specified time.
        format: int64
        type: integer
        x-nullable: false
      refresh_token_expires_at:
        description: |-
          Deprecated and can be removed at any time.
          The integer timestamp measured in the number
          of seconds since January 1 1970 UTC. It indicates when the issued refresh
          token will expire.
        format: int64
        type: integer
        x-nullable: false
      scope:
        description: |-
          Scope is a JSON string containing a space-separated list of
          scopes associated with this token.
        type: string
        x-nullable: false
      server_id:
        description: |-
          The OAuth 2.0 authorization server identifier that
          issued this token.
        type: string
        x-nullable: false
      sub:
        description: |-
          Subject of the token, as defined in JWT [RFC7519].
          Usually a machine-readable identifier of the resource owner who
          authorized this token.
        type: string
        x-nullable: false
      tenant_id:
        description: |-
          TenantID identifies a tenant holding the authorization server that
          issued this token.
        type: string
        x-nullable: false
      token_type:
        description: TokenType is the type of the introspected token. For example,
          `access_token` or `refresh_token`.
        type: string
        x-nullable: false
      username:
        description: |-
          Username is a human-readable identifier for the resource owner who
          authorized this token.
        type: string
        x-nullable: false
    type: object
  Links:
    description: Links Links relevant to the payload
    properties:
      First:
        description: |-
          first
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Last:
        description: |-
          last
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Next:
        description: |-
          next
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Prev:
        description: |-
          prev
          Format: uri
        format: uri
        type: string
        x-nullable: false
      Self:
        description: self
        format: uri
        type: string
        x-nullable: false
    required:
    - Self
    type: object
  Meta:
    description: 'Meta Data relevant to the payload'
    properties:
      FirstAvailableDateTime:
        $ref: '#/definitions/ISODateTime'
      LastAvailableDateTime:
        $ref: '#/definitions/ISODateTime'
      TotalPages:
        description: total pages
        format: int32
        type: integer
        x-nullable: false
    title: Meta MetaData
    type: object
  Metadata:
    additionalProperties:
      type: object
    type: object
  Name:
    title: Name Name by which an agent is known and which is usually used to identify
      that agent.
    type: string
  OBActiveCurrencyAndAmount_SimpleType:
    title: OBActiveCurrencyAndAmountSimpleType A number of monetary units specified
      in an active currency where the unit of currency is explicit and compliant with
      ISO 4217.
    type: string
  OBActiveOrHistoricCurrencyAndAmount:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBActiveOrHistoricCurrencyAndAmount Amount of money associated with the
      charge type.
    type: object
  OBAddressTypeCode:
    title: OBAddressTypeCode Identifies the nature of the postal address.
    type: string
  OBChargeBearerType1Code:
    title: OBChargeBearerType1Code Specifies which party/parties will bear the charges
      associated with the processing of the payment transaction.
    type: string
  OBDebtorIdentification1:
    properties:
      Name:
        description: The account name is the name or names of the account owner(s)
          represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        type: string
        x-nullable: false
    title: OBDebtorIdentification1 Set of elements used to identify a person or an
      organisation.
    type: object
  OBError1:
    description: 'Min Properties: 1'
    properties:
      ErrorCode:
        description: Low level textual error code, e.g., UK.OBIE.Field.Missing
        type: string
        x-nullable: false
      Message:
        description: |-
          A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'
          OBIE doesn't standardise this field
        maxLength: 500
        minLength: 1
        type: string
        x-nullable: false
      Path:
        description: Recommended but optional reference to the JSON Path of the field
          with error, e.g., Data.Initiation.InstructedAmount.Currency
        maxLength: 500
        minLength: 1
        type: string
        x-nullable: false
      Url:
        description: URL to help remediate the problem, or provide more information,
          or to API Reference, or help etc
        type: string
        x-nullable: false
    required:
    - ErrorCode
    - Message
    title: OBError1 o b error1
    type: object
  OBExternalAccountIdentification4Code:
    title: OBExternalAccountIdentification4Code Name of the identification scheme,
      in a coded form as published in an external list.
    type: string
  OBExternalFinancialInstitutionIdentification4Code:
    title: OBExternalFinancialInstitutionIdentification4Code Name of the identification
      scheme, in a coded form as published in an external list.
    type: string
  OBExternalLocalInstrument1Code:
    description: 'Usage: This element is used to specify a local instrument, local
      clearing option and/or further qualify the service or service level.'
    title: OBExternalLocalInstrument1Code User community specific instrument.
    type: string
  OBExternalPaymentChargeType1Code:
    title: OBExternalPaymentChargeType1Code Charge type, in a coded form.
    type: string
  OBPostalAddress6:
    properties:
      AddressLine:
        description: address line
        items:
          type: string
        maxItems: 7
        type: array
        x-nullable: false
      AddressType:
        $ref: '#/definitions/OBAddressTypeCode'
      BuildingNumber:
        $ref: '#/definitions/BuildingNumber'
      Country:
        $ref: '#/definitions/CountryCode'
      CountrySubDivision:
        $ref: '#/definitions/CountrySubDivision'
      Department:
        $ref: '#/definitions/Department'
      PostCode:
        $ref: '#/definitions/PostCode'
      StreetName:
        $ref: '#/definitions/StreetName'
      SubDepartment:
        $ref: '#/definitions/SubDepartment'
      TownName:
        $ref: '#/definitions/TownName'
    title: OBPostalAddress6 Information that locates and identifies a specific address,
      as defined by postal services.
    type: object
  OBReadConsent1Data:
    description: OBReadConsent1Data o b read consent1 data
    properties:
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire.
          If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Permissions:
        description: permissions
        items:
          type: string
        minItems: 1
        type: array
        x-nullable: false
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period.
          If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period.
          If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - Permissions
    type: object
  OBReadConsentResponse1Data:
    description: OBReadConsentResponse1Data o b read consent response1 data
    properties:
      ConsentId:
        description: Unique identification as assigned to identify the account access
          consent resource.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        $ref: '#/definitions/CreationDateTime'
      ExpirationDateTime:
        description: |-
          Specified date and time the permissions will expire.
          If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Permissions:
        description: permissions
        items:
          type: string
        minItems: 1
        type: array
        x-nullable: false
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Rejected
        - Revoked
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        $ref: '#/definitions/StatusUpdateDateTime'
      TransactionFromDateTime:
        description: |-
          Specified start date and time for the transaction query period.
          If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      TransactionToDateTime:
        description: |-
          Specified end date and time for the transaction query period.
          If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Permissions
    - Status
    - StatusUpdateDateTime
    type: object
  OBRisk1:
    properties:
      DeliveryAddress:
        $ref: '#/definitions/OBRisk1DeliveryAddress'
      MerchantCategoryCode:
        description: Category code conform to ISO 18245, related to the type of services
          or goods the merchant provides for the transaction.
        maxLength: 4
        minLength: 3
        type: string
        x-nullable: false
      MerchantCustomerIdentification:
        description: The unique customer identifier of the PSU with the merchant.
        maxLength: 70
        minLength: 1
        type: string
        x-nullable: false
      PaymentContextCode:
        description: Specifies the payment context
        enum:
        - BillPayment
        - EcommerceGoods
        - EcommerceServices
        - Other
        - PartyToParty
        type: string
        x-nullable: false
    title: OBRisk1 The Risk section is sent by the initiating party to the ASPSP.
      It is used to specify additional details for risk scoring for Payments.
    type: object
  OBRisk1DeliveryAddress:
    properties:
      AddressLine:
        description: address line
        items:
          type: string
        maxItems: 2
        type: array
        x-nullable: false
      BuildingNumber:
        $ref: '#/definitions/BuildingNumber'
      Country:
        description: Nation with its own government, occupying a particular territory.
        pattern: ^[A-Z]{2,2}$
        type: string
        x-nullable: false
      CountrySubDivision:
        $ref: '#/definitions/CountrySubDivision'
      PostCode:
        $ref: '#/definitions/PostCode'
      StreetName:
        $ref: '#/definitions/StreetName'
      TownName:
        $ref: '#/definitions/TownName'
    required:
    - Country
    - TownName
    title: OBRisk1DeliveryAddress Information that locates and identifies a specific
      address, as defined by postal services or in free format text.
    type: object
  OBRisk2:
    title: OBRisk2 The Risk section is sent by the initiating party to the ASPSP.
      It is used to specify additional details for risk scoring for Account Info.
    type: object
  OBSupplementaryData1:
    title: OBSupplementaryData1 Additional information that can not be captured in
      the structured fields and/or any other specific block.
    type: object
  OBUKConsentWithClient:
    properties:
      Client:
        $ref: '#/definitions/OpenbankingClient'
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      idempotency_key:
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      request_hash:
        type: string
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        $ref: '#/definitions/SpecVersion'
      status:
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  OBUKConsents:
    properties:
      Consents:
        items:
          $ref: '#/definitions/OBUKConsentWithClient'
        type: array
        x-nullable: false
    type: object
  OBWriteDomesticConsent4Data:
    description: OBWriteDomesticConsent4Data o b write domestic consent4 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticConsent4DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticConsent4DataSCASupportData'
    required:
    - Initiation
    type: object
  OBWriteDomesticConsent4DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticConsent4DataAuthorisation The authorisation type request
      from the TPP.
    type: object
  OBWriteDomesticConsent4DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticConsent4DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteDomesticConsent4DataInitiation The Initiation payload is sent by
      the initiating party to the ASPSP. It is used to request movement of funds from
      the debtor account to a creditor for a single domestic payment.
    type: object
  OBWriteDomesticConsent4DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticConsent4DataInitiationCreditorAccount Unambiguous identification
      of the account of the creditor to which a credit entry will be posted as a result
      of the payment transaction.
    type: object
  OBWriteDomesticConsent4DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticConsent4DataInitiationDebtorAccount Unambiguous identification
      of the account of the debtor to which a debit entry will be made as a result
      of the transaction.
    type: object
  OBWriteDomesticConsent4DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticConsent4DataInitiationInstructedAmount Amount of money to
      be moved between the debtor and creditor, before deduction of charges, expressed
      in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticConsent4DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticConsent4DataInitiationRemittanceInformation Information
      supplied to enable the matching of an entry with the items that the transfer
      is intended to settle, such as commercial invoices in an accounts' receivable
      system.
    type: object
  OBWriteDomesticConsent4DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticConsent4DataSCASupportData Supporting Data provided by TPP,
      when requesting SCA Exemption.
    type: object
  OBWriteDomesticConsentResponse5Data:
    description: OBWriteDomesticConsentResponse5Data o b write domestic consent response5
      data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteDomesticConsentResponse5DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteDomesticConsentResponse5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticConsentResponse5DataAuthorisation The authorisation type
      request from the TPP.
    type: object
  OBWriteDomesticConsentResponse5DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteDomesticConsentResponse5DataChargesItems0 Set of elements used to
      provide details of a charge for the payment initiation.
    type: object
  OBWriteDomesticConsentResponse5DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticConsentResponse5DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteDomesticConsentResponse5DataInitiation The Initiation payload is
      sent by the initiating party to the ASPSP. It is used to request movement of
      funds from the debtor account to a creditor for a single domestic payment.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticConsentResponse5DataInitiationCreditorAccount Unambiguous
      identification of the account of the creditor to which a credit entry will be
      posted as a result of the payment transaction.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticConsentResponse5DataInitiationDebtorAccount Unambiguous
      identification of the account of the debtor to which a debit entry will be made
      as a result of the transaction.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticConsentResponse5DataInitiationInstructedAmount Amount of
      money to be moved between the debtor and creditor, before deduction of charges,
      expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticConsentResponse5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticConsentResponse5DataInitiationRemittanceInformation Information
      supplied to enable the matching of an entry with the items that the transfer
      is intended to settle, such as commercial invoices in an accounts' receivable
      system.
    type: object
  OBWriteDomesticConsentResponse5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticConsentResponse5DataSCASupportData Supporting Data provided
      by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticScheduledConsent4Data:
    description: OBWriteDomesticScheduledConsent4Data o b write domestic scheduled
      consent4 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteDomesticScheduledConsent4DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticScheduledConsent4DataAuthorisation The authorisation type
      request from the TPP.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsent4DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteDomesticScheduledConsent4DataInitiation The Initiation payload is
      sent by the initiating party to the ASPSP. It is used to request movement of
      funds from the debtor account to a creditor for a single scheduled domestic
      payment.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticScheduledConsent4DataInitiationCreditorAccount Unambiguous
      identification of the account of the creditor to which a credit entry will be
      posted as a result of the payment transaction.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticScheduledConsent4DataInitiationDebtorAccount Unambiguous
      identification of the account of the debtor to which a debit entry will be made
      as a result of the transaction.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticScheduledConsent4DataInitiationInstructedAmount Amount of
      money to be moved between the debtor and creditor, before deduction of charges,
      expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticScheduledConsent4DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsent4DataInitiationRemittanceInformation Information
      supplied to enable the matching of an entry with the items that the transfer
      is intended to settle, such as commercial invoices in an accounts' receivable
      system.
    type: object
  OBWriteDomesticScheduledConsent4DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsent4DataSCASupportData Supporting Data provided
      by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticScheduledConsentResponse5Data:
    description: OBWriteDomesticScheduledConsentResponse5Data o b write domestic scheduled
      consent response5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteDomesticScheduledConsentResponse5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticScheduledConsentResponse5DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteDomesticScheduledConsentResponse5DataChargesItems0 Set of elements
      used to provide details of a charge for the payment initiation.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationCreditorAccount'
      CreditorPostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationDebtorAccount'
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      RemittanceInformation:
        $ref: '#/definitions/OBWriteDomesticScheduledConsentResponse5DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteDomesticScheduledConsentResponse5DataInitiation The Initiation payload
      is sent by the initiating party to the ASPSP. It is used to request movement
      of funds from the debtor account to a creditor for a single scheduled domestic
      payment.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationCreditorAccount Unambiguous
      identification of the account of the creditor to which a credit entry will be
      posted as a result of the payment transaction.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationDebtorAccount Unambiguous
      identification of the account of the debtor to which a debit entry will be made
      as a result of the transaction.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationInstructedAmount
      Amount of money to be moved between the debtor and creditor, before deduction
      of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsentResponse5DataInitiationRemittanceInformation
      Information supplied to enable the matching of an entry with the items that
      the transfer is intended to settle, such as commercial invoices in an accounts'
      receivable system.
    type: object
  OBWriteDomesticScheduledConsentResponse5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticScheduledConsentResponse5DataSCASupportData Supporting Data
      provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticStandingOrderConsent5Data:
    description: OBWriteDomesticStandingOrderConsent5Data o b write domestic standing
      order consent5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteDomesticStandingOrderConsent5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticStandingOrderConsent5DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationCreditorAccount'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationDebtorAccount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationFinalPaymentAmount'
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationFirstPaymentAmount'
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency
          sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      RecurringPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsent5DataInitiationRecurringPaymentAmount'
      RecurringPaymentDateTime:
        description: |-
          The date on which the first recurring payment for a Standing Order schedule will be made.
          Usage: This must be populated only if the first recurring date is different to the first payment date.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - FirstPaymentAmount
    - FirstPaymentDateTime
    - Frequency
    title: OBWriteDomesticStandingOrderConsent5DataInitiation The Initiation payload
      is sent by the initiating party to the ASPSP. It is used to request movement
      of funds from the debtor account to a creditor for a domestic standing order.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticStandingOrderConsent5DataInitiationCreditorAccount Identification
      assigned by an institution to identify an account. This identification is known
      by the account owner.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticStandingOrderConsent5DataInitiationDebtorAccount Provides
      the details to identify the debtor account.
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationFinalPaymentAmount:
    description: OBWriteDomesticStandingOrderConsent5DataInitiationFinalPaymentAmount
      The amount of the final Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationFirstPaymentAmount:
    description: OBWriteDomesticStandingOrderConsent5DataInitiationFirstPaymentAmount
      The amount of the first Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsent5DataInitiationRecurringPaymentAmount:
    description: OBWriteDomesticStandingOrderConsent5DataInitiationRecurringPaymentAmount
      The amount of the recurring Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsent5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticStandingOrderConsent5DataSCASupportData Supporting Data
      provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6Data:
    description: OBWriteDomesticStandingOrderConsentResponse6Data o b write domestic
      standing order consent response6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      Initiation:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteDomesticStandingOrderConsentResponse6DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteDomesticStandingOrderConsentResponse6DataChargesItems0 Set of elements
      used to provide details of a charge for the payment initiation.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiation:
    properties:
      CreditorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationCreditorAccount'
      DebtorAccount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationDebtorAccount'
      FinalPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationFinalPaymentAmount'
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationFirstPaymentAmount'
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency
          sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      RecurringPaymentAmount:
        $ref: '#/definitions/OBWriteDomesticStandingOrderConsentResponse6DataInitiationRecurringPaymentAmount'
      RecurringPaymentDateTime:
        description: |-
          The date on which the first recurring payment for a Standing Order schedule will be made.
          Usage: This must be populated only if the first recurring date is different to the first payment date.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - FirstPaymentAmount
    - FirstPaymentDateTime
    - Frequency
    title: OBWriteDomesticStandingOrderConsentResponse6DataInitiation The Initiation
      payload is sent by the initiating party to the ASPSP. It is used to request
      movement of funds from the debtor account to a creditor for a domestic standing
      order.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteDomesticStandingOrderConsentResponse6DataInitiationCreditorAccount
      Identification assigned by an institution to identify an account. This identification
      is known by the account owner.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteDomesticStandingOrderConsentResponse6DataInitiationDebtorAccount
      Provides the details to identify the debtor account.
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationFinalPaymentAmount:
    description: OBWriteDomesticStandingOrderConsentResponse6DataInitiationFinalPaymentAmount
      The amount of the final Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationFirstPaymentAmount:
    description: OBWriteDomesticStandingOrderConsentResponse6DataInitiationFirstPaymentAmount
      The amount of the first Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataInitiationRecurringPaymentAmount:
    description: OBWriteDomesticStandingOrderConsentResponse6DataInitiationRecurringPaymentAmount
      The amount of the recurring Standing Order
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    type: object
  OBWriteDomesticStandingOrderConsentResponse6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteDomesticStandingOrderConsentResponse6DataSCASupportData Supporting
      Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteFileConsent3Data:
    description: OBWriteFileConsent3Data o b write file consent3 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteFileConsent3DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteFileConsent3DataInitiation'
      SCASupportData:
        $ref: '#/definitions/OBWriteFileConsent3DataSCASupportData'
    required:
    - Initiation
    type: object
  OBWriteFileConsent3DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteFileConsent3DataAuthorisation The authorisation type request from
      the TPP.
    type: object
  OBWriteFileConsent3DataInitiation:
    properties:
      ControlSum:
        description: Total of all individual amounts included in the group, irrespective
          of currencies.
        format: double
        type: number
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteFileConsent3DataInitiationDebtorAccount'
      FileHash:
        description: A base64 encoding of a SHA256 hash of the file to be uploaded.
        maxLength: 44
        minLength: 1
        type: string
        x-nullable: false
      FileReference:
        description: Reference for the file.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      FileType:
        description: Specifies the payment file type.
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      NumberOfTransactions:
        description: Number of individual transactions contained in the payment information
          group.
        pattern: '[0-9]{1,15}'
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteFileConsent3DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - FileHash
    - FileType
    title: OBWriteFileConsent3DataInitiation The Initiation payload is sent by the
      initiating party to the ASPSP. It is used to request movement of funds using
      a payment file.
    type: object
  OBWriteFileConsent3DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteFileConsent3DataInitiationDebtorAccount Unambiguous identification
      of the account of the debtor to which a debit entry will be made as a result
      of the transaction.
    type: object
  OBWriteFileConsent3DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteFileConsent3DataInitiationRemittanceInformation Information supplied
      to enable the matching of an entry with the items that the transfer is intended
      to settle, such as commercial invoices in an accounts' receivable system.
    type: object
  OBWriteFileConsent3DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteFileConsent3DataSCASupportData Supporting Data provided by TPP,
      when requesting SCA Exemption.
    type: object
  OBWriteFileConsentResponse4Data:
    description: OBWriteFileConsentResponse4Data o b write file consent response4
      data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteFileConsentResponse4DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      Initiation:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataInitiation'
      SCASupportData:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - AwaitingUpload
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteFileConsentResponse4DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteFileConsentResponse4DataAuthorisation The authorisation type request
      from the TPP.
    type: object
  OBWriteFileConsentResponse4DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteFileConsentResponse4DataChargesItems0 Set of elements used to provide
      details of a charge for the payment initiation.
    type: object
  OBWriteFileConsentResponse4DataInitiation:
    properties:
      ControlSum:
        description: Total of all individual amounts included in the group, irrespective
          of currencies.
        format: double
        type: number
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataInitiationDebtorAccount'
      FileHash:
        description: A base64 encoding of a SHA256 hash of the file to be uploaded.
        maxLength: 44
        minLength: 1
        type: string
        x-nullable: false
      FileReference:
        description: Reference for the file.
        maxLength: 40
        minLength: 1
        type: string
        x-nullable: false
      FileType:
        description: Specifies the payment file type.
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      NumberOfTransactions:
        description: Number of individual transactions contained in the payment information
          group.
        pattern: '[0-9]{1,15}'
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteFileConsentResponse4DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - FileHash
    - FileType
    title: OBWriteFileConsentResponse4DataInitiation The Initiation payload is sent
      by the initiating party to the ASPSP. It is used to request movement of funds
      using a payment file.
    type: object
  OBWriteFileConsentResponse4DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteFileConsentResponse4DataInitiationDebtorAccount Unambiguous identification
      of the account of the debtor to which a debit entry will be made as a result
      of the transaction.
    type: object
  OBWriteFileConsentResponse4DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteFileConsentResponse4DataInitiationRemittanceInformation Information
      supplied to enable the matching of an entry with the items that the transfer
      is intended to settle, such as commercial invoices in an accounts' receivable
      system.
    type: object
  OBWriteFileConsentResponse4DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteFileConsentResponse4DataSCASupportData Supporting Data provided
      by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalConsent5Data:
    description: OBWriteInternationalConsent5Data o b write international consent5
      data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalConsent5DataSCASupportData'
    required:
    - Initiation
    type: object
  OBWriteInternationalConsent5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalConsent5DataAuthorisation The authorisation type request
      from the TPP.
    type: object
  OBWriteInternationalConsent5DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which
          is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify
          a country, a dependency, or another area of particular geopolitical interest,
          on the basis of country names obtained from the United Nations (ISO 3166,
          Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there
          is no corresponding 4 character code available in the ISO20022 list of Purpose
          Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing
          party would like the instructed party to apply to the processing of the
          instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalConsent5DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteInternationalConsent5DataInitiation The Initiation payload is sent
      by the initiating party to the ASPSP. It is used to request movement of funds
      from the debtor account to a creditor for a single international payment.
    type: object
  OBWriteInternationalConsent5DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalConsent5DataInitiationCreditor Party to which an amount
      of money is due.
    type: object
  OBWriteInternationalConsent5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalConsent5DataInitiationCreditorAccount Unambiguous identification
      of the account of the creditor to which a credit entry will be posted as a result
      of the payment transaction.
    type: object
  OBWriteInternationalConsent5DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalConsent5DataInitiationCreditorAgent Financial institution
      servicing an account for the creditor.
    type: object
  OBWriteInternationalConsent5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalConsent5DataInitiationDebtorAccount Unambiguous identification
      of the account of the debtor to which a debit entry will be made as a result
      of the transaction.
    type: object
  OBWriteInternationalConsent5DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract
          agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency
          to another. This reflects the price at which one currency was bought with
          another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency
          exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalConsent5DataInitiationExchangeRateInformation Provides
      details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalConsent5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalConsent5DataInitiationInstructedAmount Amount of money
      to be moved between the debtor and creditor, before deduction of charges, expressed
      in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalConsent5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalConsent5DataInitiationRemittanceInformation Information
      supplied to enable the matching of an entry with the items that the transfer
      is intended to settle, such as commercial invoices in an accounts' receivable
      system.
    type: object
  OBWriteInternationalConsent5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalConsent5DataSCASupportData Supporting Data provided
      by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalConsentResponse6Data:
    description: OBWriteInternationalConsentResponse6Data o b write international
      consent response6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteInternationalConsentResponse6DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataExchangeRateInformation'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiation'
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteInternationalConsentResponse6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalConsentResponse6DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteInternationalConsentResponse6DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteInternationalConsentResponse6DataChargesItems0 Set of elements used
      to provide details of a charge for the payment initiation.
    type: object
  OBWriteInternationalConsentResponse6DataExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract
          agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency
          to another. This reflects the price at which one currency was bought with
          another currency.
        format: double
        type: number
        x-nullable: false
      ExpirationDateTime:
        description: |-
          Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency
          exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - ExchangeRate
    - RateType
    - UnitCurrency
    title: OBWriteInternationalConsentResponse6DataExchangeRateInformation Further
      detailed information on the exchange rate that has been used in the payment
      transaction.
    type: object
  OBWriteInternationalConsentResponse6DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which
          is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify
          a country, a dependency, or another area of particular geopolitical interest,
          on the basis of country names obtained from the United Nations (ISO 3166,
          Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there
          is no corresponding 4 character code available in the ISO20022 list of Purpose
          Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing
          party would like the instructed party to apply to the processing of the
          instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalConsentResponse6DataInitiationRemittanceInformation'
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - EndToEndIdentification
    - InstructedAmount
    - InstructionIdentification
    title: OBWriteInternationalConsentResponse6DataInitiation The Initiation payload
      is sent by the initiating party to the ASPSP. It is used to request movement
      of funds from the debtor account to a creditor for a single international payment.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalConsentResponse6DataInitiationCreditor Party to which
      an amount of money is due.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalConsentResponse6DataInitiationCreditorAccount Unambiguous
      identification of the account of the creditor to which a credit entry will be
      posted as a result of the payment transaction.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalConsentResponse6DataInitiationCreditorAgent Financial
      institution servicing an account for the creditor.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalConsentResponse6DataInitiationDebtorAccount Unambiguous
      identification of the account of the debtor to which a debit entry will be made
      as a result of the transaction.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract
          agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency
          to another. This reflects the price at which one currency was bought with
          another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency
          exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalConsentResponse6DataInitiationExchangeRateInformation
      Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalConsentResponse6DataInitiationInstructedAmount Amount
      of money to be moved between the debtor and creditor, before deduction of charges,
      expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalConsentResponse6DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalConsentResponse6DataInitiationRemittanceInformation
      Information supplied to enable the matching of an entry with the items that
      the transfer is intended to settle, such as commercial invoices in an accounts'
      receivable system.
    type: object
  OBWriteInternationalConsentResponse6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalConsentResponse6DataSCASupportData Supporting Data
      provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalScheduledConsent5Data:
    description: OBWriteInternationalScheduledConsent5Data o b write international
      scheduled consent5 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteInternationalScheduledConsent5DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalScheduledConsent5DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which
          is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify
          a country, a dependency, or another area of particular geopolitical interest,
          on the basis of country names obtained from the United Nations (ISO 3166,
          Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there
          is no corresponding 4 character code available in the ISO20022 list of Purpose
          Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing
          party would like the instructed party to apply to the processing of the
          instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsent5DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteInternationalScheduledConsent5DataInitiation The Initiation payload
      is sent by the initiating party to the ASPSP. It is used to request movement
      of funds from the debtor account to a creditor for a single scheduled international
      payment.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalScheduledConsent5DataInitiationCreditor Party to which
      an amount of money is due.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalScheduledConsent5DataInitiationCreditorAccount Unambiguous
      identification of the account of the creditor to which a credit entry will be
      posted as a result of the payment transaction.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalScheduledConsent5DataInitiationCreditorAgent Financial
      institution servicing an account for the creditor.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalScheduledConsent5DataInitiationDebtorAccount Unambiguous
      identification of the account of the debtor to which a debit entry will be made
      as a result of the transaction.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract
          agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency
          to another. This reflects the price at which one currency was bought with
          another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency
          exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalScheduledConsent5DataInitiationExchangeRateInformation
      Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalScheduledConsent5DataInitiationInstructedAmount Amount
      of money to be moved between the debtor and creditor, before deduction of charges,
      expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalScheduledConsent5DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsent5DataInitiationRemittanceInformation
      Information supplied to enable the matching of an entry with the items that
      the transfer is intended to settle, such as commercial invoices in an accounts'
      receivable system.
    type: object
  OBWriteInternationalScheduledConsent5DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsent5DataSCASupportData Supporting Data
      provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalScheduledConsentResponse6Data:
    description: OBWriteInternationalScheduledConsentResponse6Data o b write international
      scheduled consent response6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataExchangeRateInformation'
      ExpectedExecutionDateTime:
        description: |-
          Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      ExpectedSettlementDateTime:
        description: |-
          Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Initiation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataSCASupportData'
      Status:
        description: Specifies the status of consent resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteInternationalScheduledConsentResponse6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalScheduledConsentResponse6DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteInternationalScheduledConsentResponse6DataChargesItems0 Set of elements
      used to provide details of a charge for the payment initiation.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract
          agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency
          to another. This reflects the price at which one currency was bought with
          another currency.
        format: double
        type: number
        x-nullable: false
      ExpirationDateTime:
        description: |-
          Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency
          exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - ExchangeRate
    - RateType
    - UnitCurrency
    title: OBWriteInternationalScheduledConsentResponse6DataExchangeRateInformation
      Further detailed information on the exchange rate that has been used in the
      payment transaction.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which
          is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify
          a country, a dependency, or another area of particular geopolitical interest,
          on the basis of country names obtained from the United Nations (ISO 3166,
          Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      EndToEndIdentification:
        description: |-
          Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
          Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
          OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRateInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationExchangeRateInformation'
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there
          is no corresponding 4 character code available in the ISO20022 list of Purpose
          Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationInstructedAmount'
      InstructionIdentification:
        description: |-
          Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
          Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      InstructionPriority:
        description: Indicator of the urgency or order of importance that the instructing
          party would like the instructed party to apply to the processing of the
          instruction.
        enum:
        - Normal
        - Urgent
        type: string
        x-nullable: false
      LocalInstrument:
        $ref: '#/definitions/OBExternalLocalInstrument1Code'
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      RemittanceInformation:
        $ref: '#/definitions/OBWriteInternationalScheduledConsentResponse6DataInitiationRemittanceInformation'
      RequestedExecutionDateTime:
        description: |-
          Date at which the initiating party requests the clearing agent to process the payment.
          Usage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - InstructedAmount
    - InstructionIdentification
    - RequestedExecutionDateTime
    title: OBWriteInternationalScheduledConsentResponse6DataInitiation The Initiation
      payload is sent by the initiating party to the ASPSP. It is used to request
      movement of funds from the debtor account to a creditor for a single scheduled
      international payment.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationCreditor Party
      to which an amount of money is due.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAccount
      Unambiguous identification of the account of the creditor to which a credit
      entry will be posted as a result of the payment transaction.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAgent:
    properties:
      Identification:
        $ref: '#/definitions/Identification_1'
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationCreditorAgent
      Financial institution servicing an account for the creditor.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationDebtorAccount
      Unambiguous identification of the account of the debtor to which a debit entry
      will be made as a result of the transaction.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationExchangeRateInformation:
    properties:
      ContractIdentification:
        description: Unique and unambiguous reference to the foreign exchange contract
          agreed between the initiating party/creditor and the debtor agent.
        maxLength: 256
        minLength: 1
        type: string
        x-nullable: false
      ExchangeRate:
        description: The factor used for conversion of an amount from one currency
          to another. This reflects the price at which one currency was bought with
          another currency.
        format: double
        type: number
        x-nullable: false
      RateType:
        description: Specifies the type used to complete the currency exchange.
        enum:
        - Actual
        - Agreed
        - Indicative
        type: string
        x-nullable: false
      UnitCurrency:
        description: Currency in which the rate of exchange is expressed in a currency
          exchange. In the example 1GBP = xxxCUR, the unit currency is GBP.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
    required:
    - RateType
    - UnitCurrency
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationExchangeRateInformation
      Provides details on the currency exchange rate and contract.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationInstructedAmount
      Amount of money to be moved between the debtor and creditor, before deduction
      of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataInitiationRemittanceInformation:
    properties:
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
          OB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Unstructured:
        description: Information supplied to enable the matching/reconciliation of
          an entry with the items that the payment is intended to settle, such as
          commercial invoices in an accounts' receivable system, in an unstructured
          form.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsentResponse6DataInitiationRemittanceInformation
      Information supplied to enable the matching of an entry with the items that
      the transfer is intended to settle, such as commercial invoices in an accounts'
      receivable system.
    type: object
  OBWriteInternationalScheduledConsentResponse6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalScheduledConsentResponse6DataSCASupportData Supporting
      Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalStandingOrderConsent6Data:
    description: OBWriteInternationalStandingOrderConsent6Data o b write international
      standing order consent6 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataAuthorisation'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataSCASupportData'
    required:
    - Initiation
    - Permission
    type: object
  OBWriteInternationalStandingOrderConsent6DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalStandingOrderConsent6DataAuthorisation The authorisation
      type request from the TPP.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which
          is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify
          a country, a dependency, or another area of particular geopolitical interest,
          on the basis of country names obtained from the United Nations (ISO 3166,
          Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there
          is no corresponding 4 character code available in the ISO20022 list of Purpose
          Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsent6DataInitiationInstructedAmount'
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency
          sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - FirstPaymentDateTime
    - Frequency
    - InstructedAmount
    title: OBWriteInternationalStandingOrderConsent6DataInitiation The Initiation
      payload is sent by the initiating party to the ASPSP. It is used to request
      movement of funds from the debtor account to a creditor for an international
      standing order.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalStandingOrderConsent6DataInitiationCreditor Party to
      which an amount of money is due.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAccount
      Provides the details to identify the beneficiary account.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAgent:
    description: This is the servicer of the beneficiary account.
    properties:
      Identification:
        description: Unique and unambiguous identification of the servicing institution.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalStandingOrderConsent6DataInitiationCreditorAgent Party
      that manages the account on behalf of the account owner, that is manages the
      registration and booking of entries on the account, calculates balances on the
      account and provides information about the account.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalStandingOrderConsent6DataInitiationDebtorAccount Provides
      the details to identify the debtor account.
    type: object
  OBWriteInternationalStandingOrderConsent6DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalStandingOrderConsent6DataInitiationInstructedAmount
      Amount of money to be moved between the debtor and creditor, before deduction
      of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalStandingOrderConsent6DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalStandingOrderConsent6DataSCASupportData Supporting
      Data provided by TPP, when requesting SCA Exemption.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7Data:
    description: OBWriteInternationalStandingOrderConsentResponse7Data o b write international
      standing order consent response7 data
    properties:
      Authorisation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataAuthorisation'
      Charges:
        description: charges
        items:
          $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataChargesItems0'
        type: array
        x-nullable: false
      ConsentId:
        description: 'OB: Unique identification as assigned by the ASPSP to uniquely
          identify the consent resource.'
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      CreationDateTime:
        description: |-
          Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      CutOffDateTime:
        description: |-
          Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      Debtor:
        $ref: '#/definitions/OBDebtorIdentification1'
      Initiation:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiation'
      Permission:
        description: Specifies the Open Banking service request types.
        enum:
        - Create
        type: string
        x-nullable: false
      ReadRefundAccount:
        description: Specifies to share the refund account details with PISP
        enum:
        - "No"
        - "Yes"
        type: string
        x-nullable: false
      SCASupportData:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataSCASupportData'
      Status:
        description: Specifies the status of resource in code form.
        enum:
        - Authorised
        - AwaitingAuthorisation
        - Consumed
        - Rejected
        type: string
        x-nullable: false
      StatusUpdateDateTime:
        description: |-
          Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
    required:
    - ConsentId
    - CreationDateTime
    - Initiation
    - Permission
    - Status
    - StatusUpdateDateTime
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataAuthorisation:
    properties:
      AuthorisationType:
        description: Type of authorisation flow requested.
        enum:
        - Any
        - Single
        type: string
        x-nullable: false
      CompletionDateTime:
        description: |-
          Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
    required:
    - AuthorisationType
    title: OBWriteInternationalStandingOrderConsentResponse7DataAuthorisation The
      authorisation type request from the TPP.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataChargesItems0:
    properties:
      Amount:
        $ref: '#/definitions/OBActiveOrHistoricCurrencyAndAmount'
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Type:
        $ref: '#/definitions/OBExternalPaymentChargeType1Code'
    required:
    - Amount
    - ChargeBearer
    - Type
    title: OBWriteInternationalStandingOrderConsentResponse7DataChargesItems0 Set
      of elements used to provide details of a charge for the payment initiation.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiation:
    properties:
      ChargeBearer:
        $ref: '#/definitions/OBChargeBearerType1Code'
      Creditor:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditor'
      CreditorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAccount'
      CreditorAgent:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAgent'
      CurrencyOfTransfer:
        description: Specifies the currency of the to be transferred amount, which
          is different from the currency of the debtor's account.
        pattern: ^[A-Z]{3,3}$
        type: string
        x-nullable: false
      DebtorAccount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationDebtorAccount'
      DestinationCountryCode:
        description: Country in which Credit Account is domiciled. Code to identify
          a country, a dependency, or another area of particular geopolitical interest,
          on the basis of country names obtained from the United Nations (ISO 3166,
          Alpha-2 code).
        pattern: '[A-Z]{2,2}'
        type: string
        x-nullable: false
      ExtendedPurpose:
        description: Specifies the purpose of an international payment, when there
          is no corresponding 4 character code available in the ISO20022 list of Purpose
          Codes.
        maxLength: 140
        minLength: 1
        type: string
        x-nullable: false
      FinalPaymentDateTime:
        description: |-
          The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
          Format: date-time
        format: date-time
        type: string
        x-nullable: false
      FirstPaymentDateTime:
        description: |-
          The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format.
          All date-time fields in responses must include the timezone. An example is below:
          2017-04-05T10:43:07+00:00
        format: date-time
        type: string
        x-nullable: false
      Frequency:
        description: |-
          Individual Definitions:
          EvryDay - Every day
          EvryWorkgDay - Every working day
          IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)
          WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)
          IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-5 to -1, 1 to 31)
          QtrDay - Quarterly (either ENGLISH, SCOTTISH, or RECEIVED).
          ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.
          SCOTTISH = Paid on the 2nd February, 15th May, 1st August and 11th November.
          RECEIVED = Paid on the 20th March, 19th June, 24th September and 20th December.
          Individual Patterns:
          EvryDay (ScheduleCode)
          EvryWorkgDay (ScheduleCode)
          IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek)
          WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek)
          IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)
          QtrDay: + either (ENGLISH, SCOTTISH or RECEIVED) ScheduleCode + QuarterDay
          The regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:
          EvryDay
          EvryWorkgDay
          IntrvlWkDay:0[1-9]:0[1-7]
          WkInMnthDay:0[1-5]:0[1-7]
          IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01])
          QtrDay:(ENGLISH|SCOTTISH|RECEIVED)
          Full Regular Expression:
          ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        pattern: ^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH|SCOTTISH|RECEIVED))$
        type: string
        x-nullable: false
      InstructedAmount:
        $ref: '#/definitions/OBWriteInternationalStandingOrderConsentResponse7DataInitiationInstructedAmount'
      NumberOfPayments:
        description: Number of the payments that will be made in completing this frequency
          sequence including any executed since the sequence start date.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Purpose:
        description: |-
          Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
          The list of valid codes is an external code list published separately.
          External code sets can be downloaded from www.iso20022.org.
        maxLength: 4
        minLength: 1
        type: string
        x-nullable: false
      Reference:
        description: |-
          Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.
          Usage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.
          If the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      SupplementaryData:
        $ref: '#/definitions/OBSupplementaryData1'
    required:
    - CreditorAccount
    - CurrencyOfTransfer
    - FirstPaymentDateTime
    - Frequency
    - InstructedAmount
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiation The Initiation
      payload is sent by the initiating party to the ASPSP. It is used to request
      movement of funds from the debtor account to a creditor for an international
      standing order.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditor:
    properties:
      Name:
        description: Name by which a party is known and which is usually used to identify
          that party.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditor
      Party to which an amount of money is due.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level.
          Note, the account name is not the product name or the nickname of the account.
          OB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - Name
    - SchemeName
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAccount
      Provides the details to identify the beneficiary account.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAgent:
    description: This is the servicer of the beneficiary account.
    properties:
      Identification:
        description: Unique and unambiguous identification of the servicing institution.
        maxLength: 35
        minLength: 1
        type: string
        x-nullable: false
      Name:
        $ref: '#/definitions/Name'
      PostalAddress:
        $ref: '#/definitions/OBPostalAddress6'
      SchemeName:
        $ref: '#/definitions/OBExternalFinancialInstitutionIdentification4Code'
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationCreditorAgent
      Party that manages the account on behalf of the account owner, that is manages
      the registration and booking of entries on the account, calculates balances
      on the account and provides information about the account.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationDebtorAccount:
    properties:
      Identification:
        $ref: '#/definitions/Identification_0'
      Name:
        description: |-
          The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.
          Note, the account name is not the product name or the nickname of the account.
        maxLength: 350
        minLength: 1
        type: string
        x-nullable: false
      SchemeName:
        $ref: '#/definitions/OBExternalAccountIdentification4Code'
      SecondaryIdentification:
        $ref: '#/definitions/SecondaryIdentification'
    required:
    - Identification
    - SchemeName
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationDebtorAccount
      Provides the details to identify the debtor account.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataInitiationInstructedAmount:
    description: 'Usage: This amount has to be transported unchanged through the transaction
      chain.'
    properties:
      Amount:
        $ref: '#/definitions/OBActiveCurrencyAndAmount_SimpleType'
      Currency:
        $ref: '#/definitions/ActiveOrHistoricCurrencyCode'
    required:
    - Amount
    - Currency
    title: OBWriteInternationalStandingOrderConsentResponse7DataInitiationInstructedAmount
      Amount of money to be moved between the debtor and creditor, before deduction
      of charges, expressed in the currency as ordered by the initiating party.
    type: object
  OBWriteInternationalStandingOrderConsentResponse7DataSCASupportData:
    properties:
      AppliedAuthenticationApproach:
        description: |-
          Specifies a character string with a maximum length of 40 characters.
          Usage: This field indicates whether the PSU was subject to SCA performed by the TPP
        enum:
        - CA
        - SCA
        type: string
        x-nullable: false
      ReferencePaymentOrderId:
        description: |-
          Specifies a character string with a maximum length of 140 characters.
          Usage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence.
        maxLength: 128
        minLength: 1
        type: string
        x-nullable: false
      RequestedSCAExemptionType:
        description: This field allows a PISP to request specific SCA Exemption for
          a Payment Initiation
        enum:
        - BillPayment
        - ContactlessTravel
        - EcommerceGoods
        - EcommerceServices
        - Kiosk
        - Parking
        - PartyToParty
        type: string
        x-nullable: false
    title: OBWriteInternationalStandingOrderConsentResponse7DataSCASupportData Supporting
      Data provided by TPP, when requesting SCA Exemption.
    type: object
  OpenbankingClient:
    properties:
      client_uri:
        description: url to a client website
        example: https://example.com
        type: string
        x-nullable: false
      id:
        description: client id
        example: default
        type: string
        x-nullable: false
      logo_uri:
        description: url to a page where client logo is served
        example: https://example.com/logo.png
        type: string
        x-nullable: false
      name:
        description: client name
        example: My app
        type: string
        x-nullable: false
    type: object
  OpenbankingUKDynamicClientRegistrationRequest:
    description: |-
      OpenbankingUKDynamicClientRegistrationRequest represents decoded jwt of dcr obuk request
      Reference: https://openbankinguk.github.io/dcr-docs-pub/v3.2/dynamic-client-registration.html
    properties:
      application_type:
        default: web
        description: |-
          The client application type.

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Apply security measures according to the type of your application.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can
          be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      aud:
        description: |-
          The audience for the request. This should be the unique identifier
          for the ASPSP issued by the issuer of the software statement.
          An ASPSP processing the software statement may validate the value
          of the claim and reject software statements for which the ASPSP
          is not the audience.The value must be a Base62 encoded GUID.
        pattern: ^[0-9a-zA-Z]{1,18}$
        type: string
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience).

          Typically, the audience is a single resource server or a list of resource servers.

          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_encrypted_response_alg:
        description: |-
          Algorithm used for encrypting authorization responses.

          If both signing and encryption are requested, the response is first signed, and then encrypted.
          As a result, a Nested JWT is obtained, as defined in JWT [RFC7519].

          If omitted, no encryption is applied by default.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP-256
        type: string
        x-nullable: false
      authorization_encrypted_response_enc:
        description: |-
          Algorithm used for encrypting authorization responses.

          With `authorization_encrypted_response_alg` specified, the default value is `A128CBC-HS256`.
          When `authorization_encrypted_response_enc` is included, `authorization_encrypted_response_alg`
          MUST also be provided in a request.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A128CBC-HS256
        type: string
        x-nullable: false
      authorization_signed_response_alg:
        description: |-
          Algorithm used for signing authorization responses.

          With this parameter specified, the response is signed using JWS and according to the configured algorithm.

          `none` isn't allowed.
        example: RS256
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS alg algorithm value used by the client application to sign authentication requests.

          When omitted, the client application doesn't send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type, and the token
          delivery mode is set to `ping` or `push`.

          This parameter is the endpoint where an OP (OpenID Provider) posts a notification after end-user authentication.

          Input: an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type.

          Input: `poll`, `ping`, or `push`.
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. A boolean value indicating the `user_code` parameter support by the client application.

          If omitted, the default value is `false`.

          This applies only when the `backchannel_user_code_parameter_supported` OP parameter is `true`.
        type: boolean
        x-nullable: false
      client_id_issued_at:
        description: |-
          The client identifier time of issue.

          The value is the number of seconds between 1970-01-01T00:00:00Z (UTC) and the date/time of issue.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human-readable name of a client application.
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The client secret expiration time.

          If the client secret does not expire, `client_secret_expires_at` = `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application.
        type: string
        x-nullable: false
      created_at:
        description: Date when the client application was created.
        example: "2022-04-07T19:17:31.323187Z"
        format: date-time
        type: string
        x-nullable: false
      description:
        description: Description of the client application.
        type: string
        x-nullable: false
      dpop_bound_access_tokens:
        description: |-
          Boolean value specifying whether the client always uses DPoP for token requests
          If true, the authorization server will reject token requests from this client that do not contain the DPoP header.
        type: boolean
        x-nullable: false
      exp:
        description: |-
          The time at which the request expires expressed as seconds since
          the epoch. An ASPSP processing the request must reject requests
          where the current time is greater than the time specified in the claim.
        format: int64
        type: integer
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types.

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          [Read more](https://cloudentity.com/developers/basics/oauth-grant-types/grant-types-overview/) about grant types.
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      iat:
        description: |-
          The time at which the request was issued by the TPP expressed
          as "seconds since the epoch"
        format: int64
        type: integer
        x-nullable: false
      id_token_encrypted_response_alg:
        description: JWE alg algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        type: string
        x-nullable: false
      id_token_encrypted_response_enc:
        description: JWE enc algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - A256GCM
        - A128CBC-HS256
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application.

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      introspection_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          An introspection endpoint authentication method configured for the client application.

          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      iss:
        description: |-
          Identifier for the TPP. This value must be unique for each TPP
          registered by the issuer of the SSA.The value must be a Base62
          encoded GUID. For SSAs issued by the OB Directory,
          this must be the software_id.
        pattern: ^[0-9a-zA-Z]{1,22}$
        type: string
        x-nullable: false
      jti:
        description: A unique identifier for the JWT. The value must be a UUIDv4 GUID.
        pattern: ^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: A URL of JSON Web Key Set with the public keys used by a client
          application to authenticate to Cloudentity.
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI.
        type: string
        x-nullable: false
      organisation_id:
        description: |-
          External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
          Data Recipient Brand.

          The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
          required for authorization, and represents the audience(s) the JWT is intended for.
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used.
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        $ref: '#/definitions/RedirectURIs'
      request_object_encryption_alg:
        description: Optional JWE alg algorithm the client is declaring that it may
          use for encrypting Request Objects
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP
        type: string
        x-nullable: false
      request_object_encryption_enc:
        description: |-
          Optional JWE enc algorithm the client is declaring that it may use for encrypting Request Objects
          When `request_object_encryption_enc` is included, `request_object_encryption_alg` MUST also be provided.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A256GCM
        type: string
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          Cloudentity supports signing tokens with the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, set the value of this parameter to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      require_pushed_authorization_requests:
        description: Boolean parameter indicating whether the only means of initiating
          an authorization request the client is allowed to use is PAR.
        type: boolean
        x-nullable: false
      response_types:
        $ref: '#/definitions/ResponseTypes'
      revocation_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          A revocation endpoint authentication method configured for the client application.
          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      scope:
        description: Space-separated list of scopes for compatibility with the OAuth
          specification.
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          OPTIONAL. [A URL using the HTTPS scheme](https://openid.net/specs/openid-connect-registration-1_0.html#SectorIdentifierValidation).
          It must reference a JSON file with the array of `redirect_uri` values.

          Pass this parameter when you use multiple domains in your `redirect_uris` or need a mechanism to allow changes in
          domain without affecting consumer consent.

          [Read more](https://openid.net/specs/openid-connect-core-1_0.html)
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher.

          The `software_id` MUST remain the same across
          multiple updates or versions of the same software package. The
          value of this field is not intended to be human-readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          `software_id`. The value of the `software_version` MUST be changed
          with any update of the client software identified by the same
          `software_id`.
        type: string
        x-nullable: false
      subject_type:
        default: public
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
          and are intended to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          To learn more, go to the Authorization Basics > Client Authentication section of this guide.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        default: ES256
        description: |-
          Signing algorithm for the token endpoint

          This field is optional. If empty, a client can use any algorithm supported by the server (see `token_endpoint_auth_signing_alg_values_supported` in the well-known endpoing).

          If provided, depending on the server configuration, client can use of one: HS256, RS256, ES256, PS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        enum:
        - RS256
        - ES256
        - PS256
        - HS256
        - ""
        example: ES256
        type: string
        x-nullable: false
      token_exchange:
        $ref: '#/definitions/ClientTokenExchangeConfiguration'
      tos_uri:
        description: Terms of Service URL.
        type: string
        x-nullable: false
      updated_at:
        description: Date when the client application was updated.
        example: "2022-05-08T01:11:51.1262916Z"
        format: date-time
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        default: none
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is a JWT serialized and signed with JWS.

          If omitted, then by default, UserInfo Response returns the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  OpenbankingUKDynamicClientRegistrationResponse:
    properties:
      application_type:
        default: web
        description: |-
          The client application type.

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Apply security measures according to the type of your application.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can
          be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience).

          Typically, the audience is a single resource server or a list of resource servers.

          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_encrypted_response_alg:
        description: |-
          Algorithm used for encrypting authorization responses.

          If both signing and encryption are requested, the response is first signed, and then encrypted.
          As a result, a Nested JWT is obtained, as defined in JWT [RFC7519].

          If omitted, no encryption is applied by default.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP-256
        type: string
        x-nullable: false
      authorization_encrypted_response_enc:
        description: |-
          Algorithm used for encrypting authorization responses.

          With `authorization_encrypted_response_alg` specified, the default value is `A128CBC-HS256`.
          When `authorization_encrypted_response_enc` is included, `authorization_encrypted_response_alg`
          MUST also be provided in a request.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A128CBC-HS256
        type: string
        x-nullable: false
      authorization_signed_response_alg:
        description: |-
          Algorithm used for signing authorization responses.

          With this parameter specified, the response is signed using JWS and according to the configured algorithm.

          `none` isn't allowed.
        example: RS256
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS alg algorithm value used by the client application to sign authentication requests.

          When omitted, the client application doesn't send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type, and the token
          delivery mode is set to `ping` or `push`.

          This parameter is the endpoint where an OP (OpenID Provider) posts a notification after end-user authentication.

          Input: an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type.

          Input: `poll`, `ping`, or `push`.
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. A boolean value indicating the `user_code` parameter support by the client application.

          If omitted, the default value is `false`.

          This applies only when the `backchannel_user_code_parameter_supported` OP parameter is `true`.
        type: boolean
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          The client identifier time of issue.

          The value is the number of seconds between 1970-01-01T00:00:00Z (UTC) and the date/time of issue.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human-readable name of a client application.
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The client secret expiration time.

          If the client secret does not expire, `client_secret_expires_at` = `0`.
        format: int64
        type: integer
        x-nullable: false
      client_uri:
        description: URI of a client application.
        type: string
        x-nullable: false
      created_at:
        description: Date when the client application was created.
        example: "2022-04-07T19:17:31.323187Z"
        format: date-time
        type: string
        x-nullable: false
      description:
        description: Description of the client application.
        type: string
        x-nullable: false
      dpop_bound_access_tokens:
        description: |-
          Boolean value specifying whether the client always uses DPoP for token requests
          If true, the authorization server will reject token requests from this client that do not contain the DPoP header.
        type: boolean
        x-nullable: false
      dynamically_registered:
        type: boolean
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types.

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          [Read more](https://cloudentity.com/developers/basics/oauth-grant-types/grant-types-overview/) about grant types.
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      id_token_encrypted_response_alg:
        description: JWE alg algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        type: string
        x-nullable: false
      id_token_encrypted_response_enc:
        description: JWE enc algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - A256GCM
        - A128CBC-HS256
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application.

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      introspection_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          An introspection endpoint authentication method configured for the client application.

          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: A URL of JSON Web Key Set with the public keys used by a client
          application to authenticate to Cloudentity.
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI.
        type: string
        x-nullable: false
      organisation_id:
        description: |-
          External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
          Data Recipient Brand.

          The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
          required for authorization, and represents the audience(s) the JWT is intended for.
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used.
        type: string
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        $ref: '#/definitions/RedirectURIs'
      request_object_encryption_alg:
        description: Optional JWE alg algorithm the client is declaring that it may
          use for encrypting Request Objects
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP
        type: string
        x-nullable: false
      request_object_encryption_enc:
        description: |-
          Optional JWE enc algorithm the client is declaring that it may use for encrypting Request Objects
          When `request_object_encryption_enc` is included, `request_object_encryption_alg` MUST also be provided.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A256GCM
        type: string
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          Cloudentity supports signing tokens with the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, set the value of this parameter to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      require_pushed_authorization_requests:
        description: Boolean parameter indicating whether the only means of initiating
          an authorization request the client is allowed to use is PAR.
        type: boolean
        x-nullable: false
      response_types:
        $ref: '#/definitions/ResponseTypes'
      revocation_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          A revocation endpoint authentication method configured for the client application.
          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      scope:
        description: Space-separated list of scopes for compatibility with the OAuth
          specification.
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          OPTIONAL. [A URL using the HTTPS scheme](https://openid.net/specs/openid-connect-registration-1_0.html#SectorIdentifierValidation).
          It must reference a JSON file with the array of `redirect_uri` values.

          Pass this parameter when you use multiple domains in your `redirect_uris` or need a mechanism to allow changes in
          domain without affecting consumer consent.

          [Read more](https://openid.net/specs/openid-connect-core-1_0.html)
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher.

          The `software_id` MUST remain the same across
          multiple updates or versions of the same software package. The
          value of this field is not intended to be human-readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        type: string
        x-nullable: false
      software_version:
        description: |-
          A version identifier string for the client software identified by
          `software_id`. The value of the `software_version` MUST be changed
          with any update of the client software identified by the same
          `software_id`.
        type: string
        x-nullable: false
      subject_type:
        default: public
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
          and are intended to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          To learn more, go to the Authorization Basics > Client Authentication section of this guide.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        default: ES256
        description: |-
          Signing algorithm for the token endpoint

          This field is optional. If empty, a client can use any algorithm supported by the server (see `token_endpoint_auth_signing_alg_values_supported` in the well-known endpoing).

          If provided, depending on the server configuration, client can use of one: HS256, RS256, ES256, PS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        enum:
        - RS256
        - ES256
        - PS256
        - HS256
        - ""
        example: ES256
        type: string
        x-nullable: false
      token_exchange:
        $ref: '#/definitions/ClientTokenExchangeConfiguration'
      tos_uri:
        description: Terms of Service URL.
        type: string
        x-nullable: false
      updated_at:
        description: Date when the client application was updated.
        example: "2022-05-08T01:11:51.1262916Z"
        format: date-time
        type: string
        x-nullable: false
      userinfo_signed_response_alg:
        default: none
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is a JWT serialized and signed with JWS.

          If omitted, then by default, UserInfo Response returns the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    type: object
  PIICategory:
    properties:
      name:
        description: name
        example: HIPAA
        type: string
        x-nullable: false
    type: object
  PostCode:
    title: PostCode Identifier consisting of a group of letters and/or numbers that
      is added to a postal address to assist the sorting of mail.
    type: string
  RFC6749Error:
    properties:
      cause:
        type: string
        x-nullable: false
      error:
        type: string
        x-nullable: false
      error_description:
        type: string
        x-nullable: false
      error_hint:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  RedirectURIs:
    description: |-
      Cloudentity uses redirect URIs to redirect users back to the application after they authorized the application. Along
      with the redirection, an authorization code or access token is added to the URL.

      For backward compatibility reasons, it's also acceptable to pass `redirect_uris` as a string, for example:
      https://example.com/callback.

      example: ["https://example.com/callback"]
    items:
      type: string
    title: OAuth-allowed redirect URIs
    type: array
  RejectConsentRequest:
    properties:
      error:
        description: Rejection error indication.
        example: Rejected
        type: string
        x-nullable: false
      error_cause:
        description: Rejection cause.
        example: Rejected by the user.
        type: string
        x-nullable: false
      error_description:
        description: Rejection error description.
        example: The user rejected authentication.
        type: string
        x-nullable: false
      id:
        description: Login identifier.
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: |-
          Random string generated by Cloudentity used to mitigate cross-site request forgery (CSRF) attacks.
          Cloudentity sends state as the `login_state` query parameter when redirecting to the consent page.
        example: cauq8fonbud6q8806bf0
        format: loginState
        type: string
        x-nullable: false
      status_code:
        description: Rejection HTTP status code.
        example: 403
        format: int64
        type: integer
        x-nullable: false
    type: object
  RequestedScope:
    properties:
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      description:
        description: The scope description displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: The scope name displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: Scope identifier
        example: scope-1
        format: scopeID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        description: Scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      params:
        items:
          type: string
        type: array
        x-nullable: false
      requested_name:
        format: scopeName
        type: string
        x-nullable: false
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      transient:
        description: Disable storage of scope grants
        type: boolean
        x-nullable: false
      with_service:
        type: boolean
        x-nullable: false
    type: object
  ResponseTypes:
    description: |-
      The array may consist of the following arguments:

      `code` - when supplied as the value for the `response_type` parameter, a successful
      response includes an authorization code

      `code token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an access token, an access token type, and an authorization code

      `id_token token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an access token, an access token type, and an ID token

      `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an authorization code, an ID token, an access token, and an access token
      type.

      `token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an access token and its type. This argument is used for the implicit grant
      flow, but is not recommended. Instead, you should use either the authorization code grant
      flow with PKCE or client authentication set to `none` and with the use of PKCE.

      example: ["token", "id_token", "code"]
      default: ["code"]
    items:
      enum:
      - token
      - id_token
      - code
      - code id_token
      - token id_token
      - token code
      - token id_token code
      - none
      type: string
    title: An array of allowed response types
    type: array
  ScopePrivacyInformation:
    properties:
      pii_categories:
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      purpose:
        format: purposeName
        type: string
        x-nullable: false
    type: object
  SecondaryIdentification:
    description: This can be used by building societies to additionally identify accounts
      with a roll number (in addition to a sort code and account number combination).
    title: SecondaryIdentification This is secondary identification of the account,
      as assigned by the account servicing institution.
    type: string
  Service:
    properties:
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      custom_audience:
        description: Custom service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      description:
        description: Service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: Gateway identifier
        example: gateway-1
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: A unique identifier of a service
        example: service-1
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: Service name
        example: My service
        type: string
        x-nullable: false
      system:
        description: '`true` when the service is a system service'
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      type:
        default: user
        description: Service type
        enum:
        - oauth2
        - oidc
        - system
        - user
        - openbanking
        type: string
        x-nullable: false
      updated_at:
        description: The date of service update
        format: date-time
        type: string
        x-nullable: false
      with_specification:
        description: '`true` when the service has the OpenAPI 3.0 specification'
        type: boolean
        x-nullable: false
    type: object
  SpecVersion:
    type: string
  StatusUpdateDateTime:
    description: |-
      All date-time fields in responses must include the timezone. An example is below:
      2017-04-05T10:43:07+00:00
    format: date-time
    title: StatusUpdateDateTime Date and time at which the resource status was updated.All
      dates in the JSON payloads are represented in ISO 8601 date-time format.
    type: string
  StreetName:
    title: StreetName Name of a street or thoroughfare.
    type: string
  SubDepartment:
    title: SubDepartment Identification of a sub-division of a large organisation
      or building.
    type: string
  TownName:
    title: TownName Name of a built-up area, with defined boundaries, and a local
      government.
    type: string
  UKConsent:
    properties:
      account_access_consent:
        $ref: '#/definitions/AccountAccessConsent'
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: Client identifier
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      domestic_payment_consent:
        $ref: '#/definitions/DomesticPaymentConsent'
      domestic_scheduled_payment_consent:
        $ref: '#/definitions/DomesticScheduledPaymentConsent'
      domestic_standing_order_consent:
        $ref: '#/definitions/DomesticStandingOrderConsent'
      file_payment_consent:
        $ref: '#/definitions/FilePaymentConsent'
      idempotency_key:
        type: string
        x-nullable: false
      international_payment_consent:
        $ref: '#/definitions/InternationalPaymentConsent'
      international_scheduled_payment_consent:
        $ref: '#/definitions/InternationalScheduledPaymentConsent'
      international_standing_order_consent:
        $ref: '#/definitions/InternationalStandingOrderConsent'
      request_hash:
        type: string
        x-nullable: false
      server_id:
        description: Server / Workspace identifier
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        $ref: '#/definitions/SpecVersion'
      status:
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  genericError:
    description: Error response
    properties:
      error:
        example: The requested resource could not be found
        type: string
        x-nullable: false
      error_code:
        description: Code represents the error status code (404, 403, 401, ...).
        example: 404
        format: int64
        type: integer
        x-nullable: false
      error_hint:
        example: Object with ID 12345 does not exist
        type: string
        x-nullable: false
    required:
    - error
    type: object
host: localhost:8443
info:
  description: |-
    Cloudentity FDX APIs

    Cloudentity [Open Banking UK](https://cloudentity.com/developers/basics/openfinance/open_banking_uk/) APIs
    empower applications to satisfy criteria set by the Financial Conduct Authority (FCA) for products and
    services of the UK Open Banking ecosystem.

    This API collection enables interactions between participants in the fintech ecosystem. They cover identity
    verification, client application dynamic registration, as well as access, payment, and order consent management,
    analytics, and security.

    A Bearer token is used for authorization. To obtain it, apply
    either the [Authorization Code](https://cloudentity.com/developers/basics/oauth-grant-types/authorization-code-flow/)
    or [Client Credentials](https://cloudentity.com/developers/basics/oauth-grant-types/client-credentials-flow/)
    grant type, depending on an endpoint.
  title: Cloudentity API
  version: latest
paths:
  /open-banking/account-access-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getAccountAccessConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetAccountAccessConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get account-access consent
      tags:
      - CONSENT_PAGE
  /open-banking/account-access-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a account-access.
      operationId: acceptAccountAccessConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept account-access consent
      tags:
      - CONSENT_PAGE
  /open-banking/account-access-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectAccountAccessConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject account-access consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getDomesticPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetDomesticPaymentConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get domestic-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-payment-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a domestic-payment.
      operationId: acceptDomesticPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept domestic-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-payment-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectDomesticPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject domestic-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-scheduled-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getDomesticScheduledPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetDomesticScheduledPaymentConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get domestic-scheduled-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-scheduled-payment-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a domestic-scheduled-payment.
      operationId: acceptDomesticScheduledPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept domestic-scheduled-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-scheduled-payment-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectDomesticScheduledPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject domestic-scheduled-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-standing-order-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getDomesticStandingOrderConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetDomesticStandingOrderConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get domestic-standing-order consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-standing-order-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a domestic-standing-order.
      operationId: acceptDomesticStandingOrderConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept domestic-standing-order consent
      tags:
      - CONSENT_PAGE
  /open-banking/domestic-standing-order-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectDomesticStandingOrderConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject domestic-standing-order consent
      tags:
      - CONSENT_PAGE
  /open-banking/file-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getFilePaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetFilePaymentConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get file-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/file-payment-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a file-payment.
      operationId: acceptFilePaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept file-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/file-payment-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectFilePaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject file-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getInternationalPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetInternationalPaymentConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get international-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-payment-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a international-payment.
      operationId: acceptInternationalPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept international-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-payment-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectInternationalPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject international-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-scheduled-payment-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getInternationalScheduledPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetInternationalScheduledPaymentConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get international-scheduled-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-scheduled-payment-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a international-scheduled-payment.
      operationId: acceptInternationalScheduledPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept international-scheduled-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-scheduled-payment-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectInternationalScheduledPaymentConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject international-scheduled-payment consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-standing-order-consent/{login}:
    get:
      description: |-
        This API can be used by a custom openbanking consent page.
        The consent page must first use client credentials flow to create consent.
      operationId: getInternationalStandingOrderConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/GetInternationalStandingOrderConsentResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get international-standing-order consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-standing-order-consent/{login}/accept:
    post:
      description: This API can be used to notify ACP that user granted consent to
        a international-standing-order.
      operationId: acceptInternationalStandingOrderConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptConsent
        schema:
          $ref: '#/definitions/AcceptConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Accept international-standing-order consent
      tags:
      - CONSENT_PAGE
  /open-banking/international-standing-order-consent/{login}/reject:
    post:
      description: This API can be used to notify ACP that user rejected access.
      operationId: rejectInternationalStandingOrderConsentSystem
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectConsent
        schema:
          $ref: '#/definitions/RejectConsentRequest'
      responses:
        "200":
          $ref: '#/responses/ConsentRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Reject international-standing-order consent
      tags:
      - CONSENT_PAGE
  /open-banking/v3.1/aisp/account-access-consents:
    post:
      description: |-
        The API allows the AISP to ask an ASPSP to create a new account-access-consent resource.

        This API effectively allows the AISP to send a copy of the consent to the ASPSP to authorize
        access to account and transaction information.
        An AISP is not able to pre-select a set of accounts for account-access-consent authorisation.
        This is because the behavior of the pre-selected accounts, after authorisation, is not clear from a Legal perspective.
        An ASPSP creates the account-access-consent resource and responds with a unique ConsentId to
        refer to the resource.
        Prior to calling the API, the AISP must have an access token issued by the ASPSP using a client
        credentials grant.
      operationId: createAccountAccessConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/AccountAccessConsentRequest'
      responses:
        "201":
          $ref: '#/responses/AccountAccessConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - accounts
      summary: Create account access consent
      tags:
      - OBUK
  /open-banking/v3.1/aisp/account-access-consents/{consentID}:
    delete:
      description: Delete account access consent.
      operationId: deleteAccountAccessConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "204":
          description: ' Consent has been deleted'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - accounts
      summary: Delete account access consent
      tags:
      - OBUK
    get:
      description: |-
        An AISP may optionally retrieve an account-access-consent resource that they have created to check its status.

        Prior to calling the API, the AISP must have an access token issued by the ASPSP using a client credentials grant.

        The usage of this API endpoint will be subject to an ASPSP's fair usage policies.
      operationId: getAccountAccessConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/AccountAccessConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - accounts
      summary: Get account access consent
      tags:
      - OBUK
  /open-banking/v3.1/aisp/account-access-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking account access consent.
      operationId: openbankingAccountAccessConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingAccountAccessConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking account access consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new domestic-payment-consent resource.
        The POST action indicates to the ASPSP that a domestic payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the domestic-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the domestic-payment-consent has been created.
      operationId: createDomesticPaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/DomesticPaymentConsentRequest'
      responses:
        "201":
          $ref: '#/responses/DomesticPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create domestic payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-payment-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that
        they have created to check its status.
      operationId: getDomesticPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/DomesticPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get domestic payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking domestic payment consent.
      operationId: openbankingDomesticPaymentConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingDomesticPaymentConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking domestic payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-scheduled-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new domestic-scheduled-payment-consent resource.
        The POST action indicates to the ASPSP that a domestic scheduled payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the domestic-scheduled-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the domestic-scheduled-payment-consent has been created.
      operationId: createDomesticScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/DomesticScheduledPaymentConsentRequest'
      responses:
        "201":
          $ref: '#/responses/DomesticScheduledPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create domestic scheduled payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{consentID}:
    get:
      description: |-
        A PISP can optionally retrieve a payment consent resource that they have created to check its status.
        Once the PSU authorizes the payment-consent resource, the Status of the payment-consent resource will be updated with "Authorised".
        If the PSU rejects the consent or the domestic-scheduled-payment-consent has failed some other ASPSP validation, the Status will be set to "Rejected".
        Once a domestic-scheduled-payment has been successfully created using the domestic-scheduled-payment-consent, the Status of the domestic-scheduled-payment-consent will be set to "Consumed".
      operationId: getDomesticScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/DomesticScheduledPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get domestic scheduled payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-scheduled-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking domestic scheduled payment consent.
      operationId: openbankingDomesticScheduledPaymentConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingDomesticScheduledPaymentConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking domestic scheduled payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-standing-order-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new domestic-standing-order-consent resource.
        The POST action indicates to the ASPSP that a domestic standing order consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the domestic-standing-order-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the domestic-standing-order-consent has been created.
      operationId: createDomesticStandingOrderConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/DomesticStandingOrderConsentRequest'
      responses:
        "201":
          $ref: '#/responses/DomesticStandingOrderConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create standing order consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-standing-order-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that
        they have created to check its status.
      operationId: getDomesticStandingOrderConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/DomesticStandingOrderConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get domestic payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/domestic-standing-order-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: openbankingDomesticStandingOrderConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingDomesticStandingOrderConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking domestic standing order consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/file-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new file-payment-consent resource.
        The POST action indicates to the ASPSP that a domestic standing order consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the file-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingUpload" immediately after the file-payment-consent has been created.
      operationId: createFilePaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/FilePaymentConsentRequest'
      responses:
        "201":
          $ref: '#/responses/FilePaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create standing order consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/file-payment-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that
        they have created to check its status.
      operationId: getFilePaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/FilePaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get file payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/file-payment-consents/{consentID}/file:
    get:
      description: The API endpoint allows the PISP to download a file (that had been
        uploaded against a file-payment-consent resource) from an ASPSP.
      operationId: getFilePaymentConsentFileRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/FilePaymentConsentFileResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get uploaded file for file payment consent
      tags:
      - OBUK
    post:
      description: |-
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize. The PISP must upload the file against the ConsentId before redirecting the PSU to authorize the consent.
        The file structure must match the FileType in the file-payment-consent request.
        An ASPSP must confirm the hash of the file matches with the FileHash provided in the file-payment-consent Metadata.
        The metadata for the file-payment-consent must match the contents of the uploaded file:
        If the content of the metadata does not match the content of the file, the ASPSP must reject the file-payment-consent.
        The file is sent in the HTTP request body.
        HTTP headers (e.g. Content-Type) are used to describe the file.

        The default Status is "AwaitingAuthorisation" immediately after the file has been created.
      operationId: createFilePaymentConsentFile
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/FilePaymentConsentFileRequest'
      responses:
        "200":
          description: ' file created'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Upload file for file payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/file-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: openbankingFilePaymentConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingFilePaymentConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking file payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new international-payment-consent resource.
        The POST action indicates to the ASPSP that a international payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the international-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the international-payment-consent has been created.
      operationId: createInternationalPaymentConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/InternationalPaymentConsentRequest'
      responses:
        "201":
          $ref: '#/responses/InternationalPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create international payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-payment-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that
        they have created to check its status.
      operationId: getInternationalPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/InternationalPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get international payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Introspect openbanking international payment consent.
      operationId: openbankingInternationalPaymentConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingInternationalPaymentConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking international payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-scheduled-payment-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new international-scheduled-payment-consent resource.
        The POST action indicates to the ASPSP that a international scheduled payment consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the international-scheduled-payment-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the international-scheduled-payment-consent has been created.
      operationId: createInternationalScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/InternationalScheduledPaymentConsentRequest'
      responses:
        "201":
          $ref: '#/responses/InternationalScheduledPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create international scheduled payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-scheduled-payment-consents/{consentID}:
    get:
      description: |-
        A PISP can optionally retrieve a payment consent resource that they have created to check its status.
        Once the PSU authorizes the payment-consent resource, the Status of the payment-consent resource will be updated with "Authorised".
        If the PSU rejects the consent or the international-scheduled-payment-consent has failed some other ASPSP validation, the Status will be set to "Rejected".
        Once a international-scheduled-payment has been successfully created using the international-scheduled-payment-consent, the Status of the international-scheduled-payment-consent will be set to "Consumed".
      operationId: getInternationalScheduledPaymentConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/InternationalScheduledPaymentConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get international scheduled payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-scheduled-payment-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: openbankingInternationalScheduledPaymentConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingInternationalScheduledPaymentConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking international scheduled payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-standing-order-consents:
    post:
      description: |-
        The API endpoint allows the PISP to ask an ASPSP to create a new international-standing-order-consent resource.
        The POST action indicates to the ASPSP that a international standing order consent has been staged. At this point, the PSU may not have been identified by the ASPSP, and the request payload may not contain any information of the account that should be debited.
        The endpoint allows the PISP to send a copy of the consent (between PSU and PISP) to the ASPSP for the PSU to authorize.
        The ASPSP creates the international-standing-order-consent resource and responds with a unique ConsentId to refer to the resource.

        The default Status is "AwaitingAuthorisation" immediately after the international-standing-order-consent has been created.
      operationId: createInternationalStandingOrderConsent
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: |-
          Every request will be processed only once per x-idempotency-key.
          The Idempotency Key will be valid for 24 hours
        in: header
        name: x-idempotency-key
        type: string
      - description: Request
        in: body
        name: Request
        schema:
          $ref: '#/definitions/InternationalStandingOrderConsentRequest'
      responses:
        "201":
          $ref: '#/responses/InternationalStandingOrderConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Create standing order consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-standing-order-consents/{consentID}:
    get:
      description: A PISP can optionally retrieve a payment consent resource that
        they have created to check its status.
      operationId: getInternationalStandingOrderConsentRequest
      parameters:
      - description: |-
          The time when the PSU last logged in with the TPP.

          The value is supplied as a HTTP-date as in section 7.1.1.1 of [RFC7231]
        in: header
        name: x-fapi-auth-date
        type: string
      - description: The PSU's IP address if the PSU is currently logged in with the
          TPP.
        in: header
        name: x-fapi-customer-ip-address
        type: string
      - description: |-
          An RFC4122 UID used as a correlation Id.

          If provided, the ASPSP must "play back" this value
          in the x-fapi-interaction-id response header.
        in: header
        name: x-fapi-interaction-id
        type: string
      - description: |-
          The header indicates the user-agent that the PSU is using.

          The TPP may populate this field with the user-agent indicated by the PSU.
          If the PSU is using a TPP mobile app, the TPP must ensure that the user-agent string
          is different from browser based user-agent strings.
        in: header
        name: x-customer-user-agent
        type: string
      - description: |-
          Header containing a detached JWS signature of the body of the payload.

          Refer to resource specific documentation on when this header must be specified.
        in: header
        name: x-jws-signature
        type: string
      - description: Consent id
        format: consentID
        in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/InternationalStandingOrderConsentResponse'
        "400":
          $ref: '#/responses/ErrorResponse'
        "401":
          $ref: '#/responses/ErrorResponse'
        "403":
          $ref: '#/responses/ErrorResponse'
        "405":
          $ref: '#/responses/ErrorResponse'
        "406":
          $ref: '#/responses/ErrorResponse'
        "415":
          $ref: '#/responses/ErrorResponse'
        "429":
          $ref: '#/responses/ErrorResponse'
        "500":
          $ref: '#/responses/ErrorResponse'
      security:
      - defaultcc:
        - payments
      summary: Get international payment consent
      tags:
      - OBUK
  /open-banking/v3.1/pisp/international-standing-order-consents/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: openbankingInternationalStandingOrderConsentIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectOpenbankingInternationalStandingOrderConsentResponse'
        "401":
          $ref: '#/responses/genericError'
        "404":
          $ref: '#/responses/genericError'
        "429":
          $ref: '#/responses/genericError'
      security:
      - default:
        - introspect_openbanking_tokens
      summary: Introspect openbanking international standing order consent
      tags:
      - OBUK
  /openbankinguk/dcr/v3.2/register:
    post:
      consumes:
      - application/jose
      description: |-
        This endpoint can be used to dynamically register new clients.
        Request body must be signed.
        Please take a look at reference to see what fields are required:
        https://openbankinguk.github.io/dcr-docs-pub/v3.2/dynamic-client-registration.html
        Consider adding client credentials grant type to a client to be able to modify it later on.
      operationId: dynamicClientRegistrationOpenbankingUK
      parameters:
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationRequest'
      responses:
        "201":
          $ref: '#/responses/OpenbankingUKDynamicClientRegistrationResponse'
        "400":
          $ref: '#/responses/RFC6749Error'
        "401":
          $ref: '#/responses/RFC6749Error'
        "403":
          $ref: '#/responses/RFC6749Error'
        "404":
          $ref: '#/responses/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic client registration endpoint.
      tags:
      - DCR
  /openbankinguk/dcr/v3.2/register/{cid}:
    delete:
      description: |-
        This endpoint can be used to delete registered client details.
        Use client credentials flow to authorize to this api.
      operationId: dynamicClientRegistrationOpenbankingUKDeleteClient
      parameters:
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' Client has been deleted'
        "400":
          $ref: '#/responses/RFC6749Error'
        "401":
          $ref: '#/responses/RFC6749Error'
        "403":
          $ref: '#/responses/RFC6749Error'
        "404":
          $ref: '#/responses/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic delete client endpoint.
      tags:
      - DCR
    get:
      description: |-
        This endpoint can be used to get registered client details.
        Use client credentials flow to authorize to this api.
      operationId: dynamicClientRegistrationOpenbankingUKGetClient
      parameters:
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/OpenbankingUKDynamicClientRegistrationResponse'
        "400":
          $ref: '#/responses/RFC6749Error'
        "401":
          $ref: '#/responses/RFC6749Error'
        "403":
          $ref: '#/responses/RFC6749Error'
        "404":
          $ref: '#/responses/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic get client endpoint.
      tags:
      - DCR
    put:
      consumes:
      - application/jose
      description: |-
        This endpoint can be used to update registered client details.
        Use client credentials flow to authorize to this api.
      operationId: dynamicClientRegistrationOpenbankingUKUpdateClient
      parameters:
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      - in: body
        name: Client
        schema:
          $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationRequest'
      responses:
        "200":
          $ref: '#/responses/OpenbankingUKDynamicClientRegistrationResponse'
        "400":
          $ref: '#/responses/RFC6749Error'
        "401":
          $ref: '#/responses/RFC6749Error'
        "403":
          $ref: '#/responses/RFC6749Error'
        "404":
          $ref: '#/responses/genericError'
      security:
      - default: []
      summary: Openbanking UK compliant dynamic update client endpoint.
      tags:
      - DCR
  /servers/{wid}/open-banking/consents:
    delete:
      description: |-
        This API revokes openbanking consents matching provided parameters.

        Currently supporting removal by client id.
        Use ?client_id={clientID} to remove all consents by a given client.

        You can also optionally specify which consent should be removed by specifying consent type
        example: ?client_id={clientID}&consent_type=account_access
      operationId: revokeOBUKConsents
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      - description: Client ID
        in: query
        name: client_id
        type: string
      - description: Required consent types
        in: query
        items:
          type: string
        name: consent_types
        type: array
      responses:
        "200":
          $ref: '#/responses/ConsentsRemovedResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Revoke openbanking consents.
      tags:
      - MANAGEMENT
    get:
      deprecated: true
      description: |-
        This API returns the list of openbanking consents.
        You can narrow the list of returned consents using filters defined in query parameters.
        See GetConsentsParams for details.
      operationId: getOBConsents
      parameters:
      - description: |-
          List of accounts.

          It can refer to user bank accounts the client application is allowed to access.
        in: query
        items:
          type: string
        name: accounts
        type: array
      - description: A client identifier.
        in: query
        name: client_id
        type: string
      - description: List of the consent statuses.
        in: query
        items:
          type: string
        name: status
        type: array
      - description: Consent types.
        in: query
        items:
          type: string
        name: types
        type: array
      - description: |-
          A consent identifier.

          Use it to navigate through the request pagination when the number of consents is greater than
          the `limit` set for results in the response.

          With `after_consent_id`, the list you obtain starts from the subsequent consent after the specified one. Also,
          the response depends on the `sort` and `order` parameters, if any are passed.
        in: query
        name: after_consent_id
        type: string
      - description: |-
          A consent identifier.

          Use it to navigate through the request pagination when the number of consents is greater than
          the limit set for results in the response.

          With `before_consent_id`, the list you obtain comprises consents up to the specified one. The specified consent
          isn't included. Also, the response depends on the `sort` and `order` parameters, if any are passed.
        in: query
        name: before_consent_id
        type: string
      - description: Sort results returned in the response.
        in: query
        name: sort
        type: string
      - default: desc
        description: |-
          Input: `acs` or `desc`.

          Set the order of results returned in the response.
        in: query
        name: order
        type: string
      - default: 20
        description: Limit the number of results returned in the response.
        format: int64
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/OBUKConsents'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Get openbanking consents.
      tags:
      - MANAGEMENT
    post:
      description: |-
        This API returns the list of openbanking consents.
        You can narrow the list of returned consents using filters defined in request body.
        See ListConsentsParams for details.
      operationId: listOBConsents
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      - in: body
        name: ConsentsRequest
        schema:
          $ref: '#/definitions/ConsentsRequest'
      responses:
        "200":
          $ref: '#/responses/OBUKConsents'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: List openbanking consents.
      tags:
      - MANAGEMENT
  /servers/{wid}/open-banking/consents/{consentID}:
    delete:
      description: |-
        This API revokes openbanking consent by consent id.

        For backwards compatibility it can also be used to revoke OBBR consents (deprecated)
      operationId: revokeOBUKConsent
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      - in: path
        name: consentID
        required: true
        type: string
      responses:
        "204":
          description: ' Consent has been revoked'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Revoke openbanking consent by ID.
      tags:
      - MANAGEMENT
  /servers/{wid}/open-banking/consents/{consentID}/consume:
    post:
      description: |-
        This API consumes openbanking consent by consent id.

        For backwards compatibility it can also be used to consume OBBR consents and in that case returns BrazilConsent (deprecated)
      operationId: consumeOBUKConsent
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      - in: path
        name: consentID
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/UKConsent'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_openbanking_consents
      summary: Consume openbanking consent by ID.
      tags:
      - MANAGEMENT
produces:
- application/json
responses:
  AccountAccessConsentResponse:
    description: Account access consent
    schema:
      $ref: '#/definitions/AccountAccessConsentResponse'
  ConsentAccepted:
    description: Consent accepted
    schema:
      $ref: '#/definitions/ConsentAccepted'
  ConsentRejected:
    description: Consent rejected
    schema:
      $ref: '#/definitions/ConsentRejected'
  ConsentsRemovedResponse:
    description: ConsentsRemovedResponse
    schema:
      $ref: '#/definitions/ConsentsRemovedResponse'
  DomesticPaymentConsentResponse:
    description: Domestic payment consent
    schema:
      $ref: '#/definitions/DomesticPaymentConsentResponse'
  DomesticScheduledPaymentConsentResponse:
    description: Domestic scheduled payment consent
    schema:
      $ref: '#/definitions/DomesticScheduledPaymentConsentResponse'
  DomesticStandingOrderConsentResponse:
    description: Domestic standing order consent
    schema:
      $ref: '#/definitions/DomesticStandingOrderConsentResponse'
  ErrorResponse:
    description: Error
    schema:
      $ref: '#/definitions/ErrorResponse'
  FilePaymentConsentFileResponse:
    description: File payment consent file
    schema:
      $ref: '#/definitions/FilePaymentConsentFileResponse'
  FilePaymentConsentResponse:
    description: File payment consent
    schema:
      $ref: '#/definitions/FilePaymentConsentResponse'
  GetAccountAccessConsentResponse:
    description: GetAccountAccessConsentResponse
    schema:
      $ref: '#/definitions/GetAccountAccessConsentResponse'
  GetDomesticPaymentConsentResponse:
    description: GetDomesticPaymentConsentResponse
    schema:
      $ref: '#/definitions/GetDomesticPaymentConsentResponse'
  GetDomesticScheduledPaymentConsentResponse:
    description: GetDomesticScheduledPaymentConsentResponse
    schema:
      $ref: '#/definitions/GetDomesticScheduledPaymentConsentResponse'
  GetDomesticStandingOrderConsentResponse:
    description: GetDomesticStandingOrderConsentResponse
    schema:
      $ref: '#/definitions/GetDomesticStandingOrderConsentResponse'
  GetFilePaymentConsentResponse:
    description: GetFilePaymentConsentResponse
    schema:
      $ref: '#/definitions/GetFilePaymentConsentResponse'
  GetInternationalPaymentConsentResponse:
    description: GetInternationalPaymentConsentResponse
    schema:
      $ref: '#/definitions/GetInternationalPaymentConsentResponse'
  GetInternationalScheduledPaymentConsentResponse:
    description: GetInternationalScheduledPaymentConsentResponse
    schema:
      $ref: '#/definitions/GetInternationalScheduledPaymentConsentResponse'
  GetInternationalStandingOrderConsentResponse:
    description: GetInternationalStandingOrderConsentResponse
    schema:
      $ref: '#/definitions/GetInternationalStandingOrderConsentResponse'
  InternationalPaymentConsentResponse:
    description: International payment consent
    schema:
      $ref: '#/definitions/InternationalPaymentConsentResponse'
  InternationalScheduledPaymentConsentResponse:
    description: International scheduler payment consent
    schema:
      $ref: '#/definitions/InternationalScheduledPaymentConsentResponse'
  InternationalStandingOrderConsentResponse:
    description: International standing order consent
    schema:
      $ref: '#/definitions/InternationalStandingOrderConsentResponse'
  IntrospectOpenbankingAccountAccessConsentResponse:
    description: Introspect Openbanking Account Access Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/AccountAccessConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingDomesticPaymentConsentResponse:
    description: IntrospectOpenbankingDomesticPaymentConsentResponse
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/DomesticPaymentConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingDomesticScheduledPaymentConsentResponse:
    description: Introspect Openbanking Domestic Scheduled Payment Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/DomesticScheduledPaymentConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingDomesticStandingOrderConsentResponse:
    description: Introspect Openbanking Domestic Standing Order Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/DomesticStandingOrderConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingFilePaymentConsentResponse:
    description: Introspect Openbanking File Payment Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/FilePaymentConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingInternationalPaymentConsentResponse:
    description: Introspect Openbanking International Payment Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/InternationalPaymentConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingInternationalScheduledPaymentConsentResponse:
    description: Introspect Openbanking International Scheduled Payment Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/InternationalScheduledPaymentConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  IntrospectOpenbankingInternationalStandingOrderConsentResponse:
    description: Introspect Openbanking International Standing Order Consent Response
    schema:
      allOf:
      - $ref: '#/definitions/IntrospectResponse'
      - $ref: '#/definitions/InternationalStandingOrderConsent'
      - properties:
          AccountIDs:
            items:
              type: string
            type: array
        type: object
  OBUKConsents:
    description: Consents
    schema:
      $ref: '#/definitions/OBUKConsents'
  OpenbankingUKDynamicClientRegistrationResponse:
    description: OpenbankingUK Dynamic Client Registration Update Client Response
    schema:
      $ref: '#/definitions/OpenbankingUKDynamicClientRegistrationResponse'
  RFC6749Error:
    description: RFC6749 error
    schema:
      $ref: '#/definitions/RFC6749Error'
  UKConsent:
    description: UKConsent
    schema:
      $ref: '#/definitions/UKConsent'
  badRequestHTTPError:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'
  conflictHTTPError:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  forbiddenHTTPError:
    description: Forbidden
    schema:
      $ref: '#/definitions/Error'
  genericError:
    description: ErrorResponse
    schema:
      $ref: '#/definitions/genericError'
  internalServerErrorHTTPError:
    description: Internal server error
    schema:
      $ref: '#/definitions/Error'
  methodNotAllowedHTTPError:
    description: Method not allowed
    schema:
      $ref: '#/definitions/Error'
  notFoundHTTPError:
    description: Not found
    schema:
      $ref: '#/definitions/Error'
  payloadTooLargeHTTPError:
    description: Payload too large
    schema:
      $ref: '#/definitions/Error'
  preconditionFailedHTTPError:
    description: Precondition failed
    schema:
      $ref: '#/definitions/Error'
  tooManyRequestsHTTPError:
    description: Too many requests
    schema:
      $ref: '#/definitions/Error'
  unauthorizedHTTPError:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  unprocessableEntityHTTPError:
    description: Unprocessable entity
    schema:
      $ref: '#/definitions/Error'
schemes:
- https
securityDefinitions:
  default:
    authorizationUrl: /default/default/oauth2/authorize
    flow: accessCode
    scopes:
      dcr_register: dcr_register
      introspect_openbanking_tokens: introspect_openbanking_tokens
    tokenUrl: /default/default/oauth2/token
    type: oauth2
  defaultcc:
    authorizationUrl: /default/default/oauth2/authorize
    flow: accessCode
    scopes:
      accounts: accounts
      consents: consents
      payments: payments
    tokenUrl: /default/default/oauth2/token
    type: oauth2
  system:
    authorizationUrl: /default/system/oauth2/authorize
    flow: accessCode
    scopes:
      manage_openbanking_consents: manage_openbanking_consents
    tokenUrl: /default/system/oauth2/token
    type: oauth2
swagger: "2.0"
