basePath: /api/system/default
consumes:
- application/json
definitions:
  ACR:
    description: ACR
    properties:
      authorization_server_id:
        description: An authorization server (workspace) identifier holding the ACR.
        example: default
        format: serverID
        type: string
        x-nullable: false
      disabled:
        description: If set to `true`, the ACR is disabled and can't be used
        type: boolean
        x-nullable: false
      id:
        description: ACR unique identifier
        format: acrID
        type: string
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        description: General purpose metadata
        type: object
        x-nullable: false
      tenant_id:
        description: ID of the tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      value:
        description: |-
          ACR value
          Must be unique within the server and contains only the following characters: `a-zA-Z0-9\/:=._-`
        example: urn:secureauth:factor:password
        format: acrValue
        type: string
        x-nullable: false
    required:
    - tenant_id
    - authorization_server_id
    - value
    type: object
  API:
    properties:
      api_type:
        default: rest
        description: api type
        enum:
        - rest
        - graphql
        example: rest
        type: string
        x-nullable: false
      can_have_policy:
        description: if false it is not possible to assign a policy
        type: boolean
        x-nullable: false
      data_classifications:
        description: Data classifications
        items:
          type: string
        type: array
        x-nullable: false
      graphql_schema:
        description: graphql schema
        type: string
        x-nullable: false
      graphql_types:
        $ref: '#/definitions/GraphQLTypes'
      id:
        description: API id
        example: "1"
        format: apiID
        type: string
        x-nullable: false
      method:
        description: HTTP request method
        example: GET
        type: string
        x-nullable: false
      path:
        description: HTTP request path
        example: /pets
        type: string
        x-nullable: false
      policy_id:
        description: optional id of a policy
        example: block
        format: policyID
        type: string
        x-nullable: false
      position:
        description: position of the api in the apis list
        example: 1
        format: int64
        type: integer
        x-nullable: false
      server_id:
        description: server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      service_id:
        description: service id
        example: "1"
        format: serviceID
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  APIGroup:
    properties:
      apis:
        description: List of APIs
        items:
          $ref: '#/definitions/GatewayAPI'
        type: array
        x-nullable: false
      id:
        description: API group ID
        format: apiGroupID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/APIGroupMetadata'
      name:
        description: API group name
        type: string
        x-nullable: false
    type: object
  APIGroupMetadata:
    properties:
      apigee:
        $ref: '#/definitions/ApigeeMetadata'
      aws:
        $ref: '#/definitions/AWSMetadata'
      azure:
        $ref: '#/definitions/AzureMetadata'
      type:
        description: Gateway type
        format: gatewayType
        type: string
        x-nullable: false
    type: object
  AWSMetadata:
    properties:
      api_id:
        type: string
        x-nullable: false
      api_name:
        type: string
        x-nullable: false
      stage:
        type: string
        x-nullable: false
    type: object
  AbortPostAuthnSession:
    properties:
      error:
        description: reject error
        type: string
        x-nullable: false
      error_description:
        description: reject error description
        type: string
        x-nullable: false
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        format: loginState
        type: string
        x-nullable: false
      status_code:
        description: reject http status code
        format: int64
        type: integer
        x-nullable: false
    type: object
  AcceptScopeGrant:
    properties:
      consent_id:
        description: optional consent identifier
        type: string
        x-nullable: false
      granted_authorization_details:
        description: granted authorization details
        items:
          additionalProperties:
            type: object
          type: object
        type: array
        x-nullable: false
      granted_claims:
        $ref: '#/definitions/GrantedClaims'
      granted_scopes:
        $ref: '#/definitions/GrantedScopes'
      granted_verified_claims:
        $ref: '#/definitions/GrantedVerifiedClaims'
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        format: loginState
        type: string
        x-nullable: false
    type: object
  AcceptSession:
    properties:
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        format: loginState
        type: string
        x-nullable: false
      subject:
        description: user identifier
        example: user
        format: subject
        type: string
        x-nullable: false
    required:
    - subject
    type: object
  AccessRequestData:
    properties:
      actor_claims:
        additionalProperties:
          type: object
        description: Actor claims
        type: object
        x-nullable: false
      affected_user_id:
        description: ID of the User in Identity Pool that is affected by an action
        format: userID
        type: string
        x-nullable: false
      affected_user_pool_id:
        description: ID of the Identity Pool of the User that is affected by an action
        format: poolID
        type: string
        x-nullable: false
      authentication_mechanisms:
        description: The authentication mechanisms a user used to login.
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      city:
        description: The visitor's city
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier.
        format: clientID
        type: string
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        type: string
        x-nullable: false
      country_code:
        description: The visitor's country
        type: string
        x-nullable: false
      created_by_developer:
        description: Stores information if the owner of the client application is
          a developer.
        type: boolean
        x-nullable: false
      dbfp:
        description: Arculix DBFP `jwt` cookie.
        type: string
        x-nullable: false
      grant_type:
        description: |-
          Stores the information which grant type was selected to perfom a given action.
          Matches one of allowed OAuth client grant types for a given client.
        type: string
        x-nullable: false
      granted_scopes:
        description: Granted scopes
        items:
          type: string
        type: array
        x-nullable: false
      group_id:
        description: ID of the Group in Identity Pool
        format: groupID
        type: string
        x-nullable: false
      identity_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      idp_id:
        description: IDP identifier
        format: idpID
        type: string
        x-nullable: false
      idp_method:
        description: IDP method
        type: string
        x-nullable: false
      idp_subject:
        description: Subject within the Identity Provider
        format: subject
        type: string
        x-nullable: false
      latitude:
        description: The visitor's latitude
        type: string
        x-nullable: false
      longitude:
        description: The visitor's longitude
        type: string
        x-nullable: false
      may_act_claims:
        additionalProperties:
          type: object
        description: May act claims
        type: object
        x-nullable: false
      organization_id:
        description: ID of the Organization
        format: serverID
        type: string
        x-nullable: false
      public:
        description: Stores information if the client application is a public one.
        type: boolean
        x-nullable: false
      recovery:
        description: True if user had to do login recovery during authentication
        type: boolean
        x-nullable: false
      remote_addr:
        description: Requester IP address obtained from system network socket information.
        type: string
        x-nullable: false
      risk_engine_context:
        $ref: '#/definitions/RiskContext'
      server_id:
        description: ID of the authorization server (workspace) to which an access
          request is tied.
        format: serverID
        type: string
        x-nullable: false
      session_id:
        description: |-
          Session id of a given subject. It's uniform across the authentication processes.
          It can be used as a correlation ID between a different audit events.
        format: loginID
        type: string
        x-nullable: false
      subject:
        description: |-
          Identification of the principal that is the subject of authorization.
          For the authorization grant, the subject typically identifies an authorized accessor for which the access token is being requested.
          For client authentication, the subject is the client_id of the OAuth client.
        format: subject
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's
          application.
        type: boolean
        x-nullable: false
      token_endpoint_authn_method:
        description: Token endpoint authentication method configured for a client
          application.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        type: string
        x-nullable: false
      token_signature:
        description: Token signature
        type: string
        x-nullable: false
      true_client_ip:
        description: Requester IP address obtained from True-Client-IP header.
        type: string
        x-nullable: false
      user_agent:
        description: A characteristic string that lets servers and network peers identify
          the application, operating system, vendor, and/or version of the requesting
          user agent.
        type: string
        x-nullable: false
      user_id:
        description: ID of the User in Identity Pool
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      workspace_id:
        description: ID of the authorization server (workspace) to which a resource
          is tied.
        format: serverID
        type: string
        x-nullable: false
      x_forwarded_for:
        description: Requester IP address obtained from X-Forwarded-For header.
        type: string
        x-nullable: false
      x_real_ip:
        description: Requester IP address obtained from X-Real-IP header.
        type: string
        x-nullable: false
    type: object
  AccessRequestDataWithError:
    properties:
      actor_claims:
        additionalProperties:
          type: object
        description: Actor claims
        type: object
        x-nullable: false
      affected_user_id:
        description: ID of the User in Identity Pool that is affected by an action
        format: userID
        type: string
        x-nullable: false
      affected_user_pool_id:
        description: ID of the Identity Pool of the User that is affected by an action
        format: poolID
        type: string
        x-nullable: false
      authentication_mechanisms:
        description: The authentication mechanisms a user used to login.
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      city:
        description: The visitor's city
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier.
        format: clientID
        type: string
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        type: string
        x-nullable: false
      country_code:
        description: The visitor's country
        type: string
        x-nullable: false
      created_by_developer:
        description: Stores information if the owner of the client application is
          a developer.
        type: boolean
        x-nullable: false
      dbfp:
        description: Arculix DBFP `jwt` cookie.
        type: string
        x-nullable: false
      error:
        description: High level error name (request_forbidden, access_denied, invalid_request).
        type: string
        x-nullable: false
      error_cause:
        description: Error root cause (invalid_pkce, invalid_state, user_policy_failed).
        type: string
        x-nullable: false
      error_description:
        description: Human readable error description
        type: string
        x-nullable: false
      error_hint:
        description: Error hint
        type: string
        x-nullable: false
      external_error:
        description: External error
        type: boolean
        x-nullable: false
      grant_type:
        description: |-
          Stores the information which grant type was selected to perfom a given action.
          Matches one of allowed OAuth client grant types for a given client.
        type: string
        x-nullable: false
      granted_scopes:
        description: Granted scopes
        items:
          type: string
        type: array
        x-nullable: false
      group_id:
        description: ID of the Group in Identity Pool
        format: groupID
        type: string
        x-nullable: false
      identity_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      idp_id:
        description: IDP identifier
        format: idpID
        type: string
        x-nullable: false
      idp_method:
        description: IDP method
        type: string
        x-nullable: false
      idp_subject:
        description: Subject within the Identity Provider
        format: subject
        type: string
        x-nullable: false
      latitude:
        description: The visitor's latitude
        type: string
        x-nullable: false
      longitude:
        description: The visitor's longitude
        type: string
        x-nullable: false
      may_act_claims:
        additionalProperties:
          type: object
        description: May act claims
        type: object
        x-nullable: false
      organization_id:
        description: ID of the Organization
        format: serverID
        type: string
        x-nullable: false
      public:
        description: Stores information if the client application is a public one.
        type: boolean
        x-nullable: false
      recovery:
        description: True if user had to do login recovery during authentication
        type: boolean
        x-nullable: false
      remote_addr:
        description: Requester IP address obtained from system network socket information.
        type: string
        x-nullable: false
      risk_engine_context:
        $ref: '#/definitions/RiskContext'
      server_id:
        description: ID of the authorization server (workspace) to which an access
          request is tied.
        format: serverID
        type: string
        x-nullable: false
      session_id:
        description: |-
          Session id of a given subject. It's uniform across the authentication processes.
          It can be used as a correlation ID between a different audit events.
        format: loginID
        type: string
        x-nullable: false
      subject:
        description: |-
          Identification of the principal that is the subject of authorization.
          For the authorization grant, the subject typically identifies an authorized accessor for which the access token is being requested.
          For client authentication, the subject is the client_id of the OAuth client.
        format: subject
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's
          application.
        type: boolean
        x-nullable: false
      token_endpoint_authn_method:
        description: Token endpoint authentication method configured for a client
          application.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        type: string
        x-nullable: false
      token_signature:
        description: Token signature
        type: string
        x-nullable: false
      true_client_ip:
        description: Requester IP address obtained from True-Client-IP header.
        type: string
        x-nullable: false
      user_agent:
        description: A characteristic string that lets servers and network peers identify
          the application, operating system, vendor, and/or version of the requesting
          user agent.
        type: string
        x-nullable: false
      user_id:
        description: ID of the User in Identity Pool
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      workspace_id:
        description: ID of the authorization server (workspace) to which a resource
          is tied.
        format: serverID
        type: string
        x-nullable: false
      x_forwarded_for:
        description: Requester IP address obtained from X-Forwarded-For header.
        type: string
        x-nullable: false
      x_real_ip:
        description: Requester IP address obtained from X-Real-IP header.
        type: string
        x-nullable: false
    type: object
  AdvancedConfiguration:
    properties:
      acr_values:
        description: Deprecated ACR values to enforce during auth flow (use new ACR
          feature instead)
        items:
          type: string
        type: array
        x-nullable: false
      advertise_only_mtls_aliases_in_well_known:
        description: This option overrides all urls advertised by the well known endpoint
          with their mtls alias
        type: boolean
        x-nullable: false
      block_response_modes:
        description: Block response modes
        type: boolean
        x-nullable: false
      cookies_configuration:
        $ref: '#/definitions/CookiesConfiguration'
      disable_dcr_client_certificate_bound_access_tokens:
        description: |-
          Disable certificate-bound access tokens for new DCR clients

          If true, new DCR clients are created with CertificateBoundAccessToken disabled.
        type: boolean
        x-nullable: false
      disable_par:
        description: Disable PAR
        type: boolean
        x-nullable: false
      disable_rar:
        description: Disable RAR
        type: boolean
        x-nullable: false
      disable_refresh_token_cycling:
        description: |-
          Disable refresh token cycling

          Once disabled, original refresh token can be constantly used to issue new access token.
        type: boolean
        x-nullable: false
      disallow_access_token_in_query_for_protected_resources:
        description: |-
          When enabled, the authorization server will not accept access tokens supplied in the request query parameter
          for protected resources endpoints.
        type: boolean
        x-nullable: false
      disallow_code_response_type_without_jarm:
        description: Disallow code response type without JARM
        type: boolean
        x-nullable: false
      disallowed_response_modes:
        $ref: '#/definitions/ResponseModes'
      do_not_issue_acr_claim_in_id_token:
        description: Do not issue acr claim in ID Token
        type: boolean
        x-nullable: false
      enforce_acr_values:
        description: Enforce acr values
        type: boolean
        x-nullable: false
      ignore_unknown_scopes_for_dcr:
        description: |-
          Ignore unknown scopes for DCR

          If enabled, an attempt to register or update a client with a scope that does not exist in the server will succeed.
        type: boolean
        x-nullable: false
      require_request_or_request_uri_parameter:
        description: Require request or request uri parameter for authorization flow
        type: boolean
        x-nullable: false
      return_iss_parameter_in_authorization_response:
        description: Return iss parameter in the authorization response
        type: boolean
        x-nullable: false
      single_audience_equals_issuer_in_authentication_jwts:
        description: Enforces a single-value audience in authentication JWTs sent
          to the authorization server, matching the server's issuer URL.
        type: boolean
        x-nullable: false
      strict_post_logout_redirect_enforcement:
        description: Disables SSO as a fallback mechanism for post-logout redirect
          URI validation
        type: boolean
        x-nullable: false
    type: object
  AffiliationDescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.5
    properties:
      AffiliateMembers:
        items:
          type: string
        type: array
        x-nullable: false
      AffiliationOwnerID:
        type: string
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
    title: AffiliationDescriptor represents the SAML AffiliationDescriptor object.
    type: object
  ApigeeMetadata:
    properties:
      environment_name:
        description: Apigee environment name. It's a uniqe, immutable name of an environment
          for a given proxy name.
        example: my-default-proxy
        type: string
        x-nullable: false
      organization_name:
        description: Apigee organization name. It's a uniqe, immutable name of an
          Apigee organization.
        example: apigee-x-905913
        type: string
        x-nullable: false
      proxy_name:
        description: Apigee proxy name. It's a uniqe, immutable name of a proxy for
          a given organization id.
        example: my-default-proxy
        type: string
        x-nullable: false
    required:
    - organization_name
    - proxy_name
    - environment_name
    type: object
  AppleCredentials:
    description: Apple IDP specific credentials
    properties:
      private_key:
        description: base64 encoded private key in .p8 format
        type: string
        x-nullable: false
    type: object
  AppleSettings:
    description: Apple IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      key_id:
        description: key id
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      team_id:
        description: team id
        type: string
        x-nullable: false
    type: object
  ArculixAuth:
    properties:
      client_id:
        description: The Arculix client ID.
        type: string
        x-nullable: false
      client_secret:
        description: The Arculix client secret.
        type: string
        x-nullable: false
    required:
    - client_id
    - client_secret
    type: object
  Attr:
    properties:
      Space:
        type: string
        x-nullable: false
      Value:
        type: string
        x-nullable: false
    title: An Attr represents a key-value attribute within an XML element.
    type: object
  Attribute:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf
      §2.7.3.1
    properties:
      FriendlyName:
        type: string
        x-nullable: false
      Name:
        type: string
        x-nullable: false
      NameFormat:
        type: string
        x-nullable: false
      Values:
        items:
          $ref: '#/definitions/AttributeValue'
        type: array
        x-nullable: false
    title: Attribute represents the SAML element Attribute.
    type: object
  AttributeAuthorityDescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.7
    properties:
      AssertionIDRequestServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      AttributeProfiles:
        items:
          type: string
        type: array
        x-nullable: false
      AttributeServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      Attributes:
        items:
          $ref: '#/definitions/Attribute'
        type: array
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPeople:
        items:
          $ref: '#/definitions/ContactPerson'
        type: array
        x-nullable: false
      ErrorURL:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      NameIDFormats:
        items:
          $ref: '#/definitions/NameIDFormat'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      ProtocolSupportEnumeration:
        type: string
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
    title: AttributeAuthorityDescriptor represents the SAML AttributeAuthorityDescriptor
      object.
    type: object
  AttributeConsumingService:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.4.1
    properties:
      Index:
        format: int64
        type: integer
        x-nullable: false
      IsDefault:
        type: boolean
        x-nullable: false
      RequestedAttributes:
        items:
          $ref: '#/definitions/RequestedAttribute'
        type: array
        x-nullable: false
      ServiceDescriptions:
        items:
          $ref: '#/definitions/LocalizedName'
        type: array
        x-nullable: false
      ServiceNames:
        items:
          $ref: '#/definitions/LocalizedName'
        type: array
        x-nullable: false
    title: AttributeConsumingService represents the SAML AttributeConsumingService
      object.
    type: object
  AttributeValue:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf
      §2.7.3.1.1
    properties:
      NameID:
        $ref: '#/definitions/NameID'
      Type:
        type: string
        x-nullable: false
      Value:
        type: string
        x-nullable: false
    title: AttributeValue represents the SAML element AttributeValue.
    type: object
  Attributes:
    items:
      $ref: '#/definitions/AuthenticationContextAttribute'
    type: array
  AuditConsentKind:
    type: string
  AuditEvent:
    properties:
      action:
        description: Name of an action that was performed for a given event subject.
        enum:
        - authenticated
        - challenged
        - authorized
        - unauthorized
        - created
        - updated
        - deleted
        - generated
        - requested
        - confirmed
        - accepted
        - rejected
        - revoked
        - notified
        - issued
        - denied
        - granted
        - attempted
        - failed
        - succeeded
        - sent
        - not_sent
        - executed
        - calculated
        - reset_requested
        - reset_completed
        - add_requested
        - add_completed
        - added_to_group
        - removed_from_group
        example: created
        type: string
        x-nullable: false
      context:
        additionalProperties:
          type: string
        description: Additional audit event context.
        type: object
        x-nullable: false
      event_id:
        description: Event ID - unique audit event identifier.
        format: eventID
        type: string
        x-nullable: false
      event_subject:
        description: Resource or entity that is a subject of a given audit event.
        enum:
        - request
        - gateway_request
        - gateway_policy
        - policy
        - client
        - credential
        - login
        - risk
        - post_authn
        - recovery
        - consent
        - client_consents
        - customer_consents
        - authorization_code
        - access_token
        - saml_assertion
        - scopes
        - claims
        - otp
        - user
        - schema
        - pool
        - password
        - bruteforce
        - dcr
        - script
        - role
        - task
        - jit
        - tokens
        - service
        - server
        - import
        - organization
        - otp_inspect
        - totp
        - webauthn
        - group
        example: client
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/AuditEventMetadata'
      payload:
        $ref: '#/definitions/AuditEventPayloads'
      server_id:
        description: Server ID.
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant ID.
        format: tenantID
        type: string
        x-nullable: false
      timestamp:
        description: Time when the event took place.
        format: date-time
        type: string
        x-nullable: false
    type: object
  AuditEventMetadata:
    properties:
      actor_claims:
        additionalProperties:
          type: object
        description: |-
          Access request actor claims.

          It's only populated if the token has been issued in token exchange delegation flow.
        type: object
        x-nullable: false
      affected_user_id:
        description: ID of the User in Identity Pool that is affected by an action
        format: userID
        type: string
        x-nullable: false
      affected_user_pool_id:
        description: ID of the Identity Pool of the User that is affected by an action
        format: poolID
        type: string
        x-nullable: false
      authorization_correlation_id:
        description: |-
          Authorization correlation ID

          Represents the correlation ID used for the OAuth2 authorization code grant flow.
        format: authorizationCorrelationID
        type: string
        x-nullable: false
      city:
        description: City
        type: string
        x-nullable: false
      client_id:
        description: |-
          Access request client ID related to an audit event.

          May be empty when the access is incorrect or missing.
        format: clientID
        type: string
        x-nullable: false
      country_code:
        description: Country code
        type: string
        x-nullable: false
      dbfp_fingerprint:
        description: DBFP jwt fingerprint
        type: string
        x-nullable: false
      device_browser:
        description: Device browser based on the user agent
        type: string
        x-nullable: false
      device_os:
        description: Device OS based on the user agent
        type: string
        x-nullable: false
      device_type:
        description: Device type based on the user agent (computer, tablet, phone,
          console, wearable, tv)
        type: string
        x-nullable: false
      group_id:
        description: ID of the Group in Identity Pool
        format: groupID
        type: string
        x-nullable: false
      high_risk:
        description: High risk
        type: boolean
        x-nullable: false
      identity_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      idp_id:
        description: IDP identifier
        format: idpID
        type: string
        x-nullable: false
      idp_method:
        description: IDP method
        type: string
        x-nullable: false
      idp_subject:
        description: |-
          Access request subject value from IDP related to a given audit event.

          May be empty when the access is incorrect or missing.
        format: subject
        type: string
        x-nullable: false
      ip:
        description: |-
          IP address.

          It's first not empty value from: X-Forwaded-For, X-Real-IP or network socket IP address
        type: string
        x-nullable: false
      latitude:
        description: Latitude
        format: double
        type: number
        x-nullable: false
      longitude:
        description: Longitude
        format: double
        type: number
        x-nullable: false
      may_act_claims:
        additionalProperties:
          type: object
        description: |-
          Access request may act claims.

          It's only populated if the token has been issued token with may_act claim.
        type: object
        x-nullable: false
      organization_id:
        description: ID of the Organization
        format: serverID
        type: string
        x-nullable: false
      request_correlation_id:
        description: |-
          Request correlation ID

          Represents the correlation ID passed as X-Correlation-ID header to a HTTP request
        format: requestCorrelationID
        type: string
        x-nullable: false
      result:
        description: action result (success, failure)
        type: string
        x-nullable: false
      risk_id:
        $ref: '#/definitions/RiskID'
      risk_loa:
        $ref: '#/definitions/RiskLOA'
      session_id:
        description: |-
          Session id

          Correlation ID in a login process. Returns events related to a particular login process.
          It's empty for audit events that have been created outside login process.
        format: loginID
        type: string
        x-nullable: false
      subject:
        description: |-
          Access request subject ID related to a given audit event.

          May be empty when the access is incorrect or missing.
        format: subject
        type: string
        x-nullable: false
      token_signature:
        description: |-
          Token signature

          Signature of a token that was used to perform an action that has published an audit event.
        type: string
        x-nullable: false
      trace_id:
        description: Trace ID
        type: string
        x-nullable: false
      user_agent:
        description: User-agent that describes a device name that generated the audit
          event.
        type: string
        x-nullable: false
      user_id:
        description: ID of the User in Identity Pool
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
    type: object
  AuditEventPayloads:
    properties:
      access_token_denied:
        $ref: '#/definitions/AccessRequestDataWithError'
      access_token_issued:
        $ref: '#/definitions/AccessRequestData'
      authorization_code_denied:
        $ref: '#/definitions/AccessRequestDataWithError'
      authorization_code_issued:
        $ref: '#/definitions/AccessRequestData'
      bruteforce_deleted:
        $ref: '#/definitions/BruteForceLimit'
      bruteforce_updated:
        $ref: '#/definitions/BruteForceLimit'
      claims_granted:
        $ref: '#/definitions/ClaimsGrantedPayload'
      client_consents_revoked:
        $ref: '#/definitions/ClientConsentsAuditEventPayload'
      client_created:
        $ref: '#/definitions/ClientAuditPayload'
      client_deleted:
        $ref: '#/definitions/ClientAuditPayload'
      client_updated:
        $ref: '#/definitions/ClientAuditPayload'
      consent_accepted:
        $ref: '#/definitions/ConsentAuditEventPayload'
      consent_created:
        $ref: '#/definitions/ConsentAuditEventPayload'
      consent_notified:
        $ref: '#/definitions/ConsentNotifiedPayload'
      consent_rejected:
        $ref: '#/definitions/ConsentAuditEventPayload'
      consent_revoked:
        $ref: '#/definitions/ConsentAuditEventPayload'
      consent_updated:
        $ref: '#/definitions/ConsentAuditEventPayload'
      credential_created:
        $ref: '#/definitions/CredentialPayload'
      credential_updated:
        $ref: '#/definitions/CredentialPayload'
      customer_consents_revoked:
        $ref: '#/definitions/CustomerConsentsAuditEventPayload'
      dcr_created:
        $ref: '#/definitions/DCRCreatedEventPayload'
      dcr_rejected:
        $ref: '#/definitions/DCRRejectedEventPayload'
      gateway_policy_authorized:
        $ref: '#/definitions/RequestValidatedPayload'
      gateway_policy_unauthorized:
        $ref: '#/definitions/RequestValidatedPayload'
      gateway_request_authorized:
        $ref: '#/definitions/RequestValidatedPayload'
      gateway_request_unauthorized:
        $ref: '#/definitions/RequestValidatedPayload'
      group_created:
        $ref: '#/definitions/Group'
      group_deleted:
        $ref: '#/definitions/Group'
      group_updated:
        $ref: '#/definitions/Group'
      import_created:
        $ref: '#/definitions/ConfigImportEventPayload'
      import_failed:
        $ref: '#/definitions/ConfigImportEventPayload'
      jit_created:
        $ref: '#/definitions/JITCreatedPayload'
      jit_denied:
        $ref: '#/definitions/JITDeniedPayload'
      jit_failed:
        $ref: '#/definitions/JITFailedPayload'
      jit_updated:
        $ref: '#/definitions/JITUpdatedPayload'
      login_accepted:
        $ref: '#/definitions/LoginPayload'
      login_attempted:
        $ref: '#/definitions/LoginPayload'
      login_failed:
        $ref: '#/definitions/LoginFailedPayload'
      organization_created:
        $ref: '#/definitions/Org'
      organization_deleted:
        $ref: '#/definitions/Org'
      organization_updated:
        $ref: '#/definitions/Org'
      otp_accepted:
        $ref: '#/definitions/OTPPayload'
      otp_generated:
        $ref: '#/definitions/OTPPayload'
      otp_inspect_failed:
        $ref: '#/definitions/OTPPayload'
      otp_inspect_succeeded:
        $ref: '#/definitions/OTPPayload'
      otp_not_sent:
        $ref: '#/definitions/OTPPayload'
      otp_rejected:
        $ref: '#/definitions/OTPPayload'
      otp_requested:
        $ref: '#/definitions/OTPPayload'
      otp_sent:
        $ref: '#/definitions/OTPPayload'
      password_accepted:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      password_confirmed:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      password_rejected:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      password_requested:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      password_updated:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      policy_authorized:
        $ref: '#/definitions/PolicyEvaluatedPayload'
      policy_unauthorized:
        $ref: '#/definitions/PolicyEvaluatedPayload'
      pool_created:
        $ref: '#/definitions/PoolAuditPayload'
      pool_deleted:
        $ref: '#/definitions/PoolAuditPayload'
      pool_updated:
        $ref: '#/definitions/PoolAuditPayload'
      recovery_confirmed:
        $ref: '#/definitions/RecoveryPayload'
      risk_calculated:
        $ref: '#/definitions/RiskPayload'
      role_granted:
        $ref: '#/definitions/RoleGrantAuditPayload'
      role_revoked:
        $ref: '#/definitions/RoleGrantAuditPayload'
      saml_assertion_denied:
        $ref: '#/definitions/SAMLAssertionDeniedPayload'
      saml_assertion_issued:
        $ref: '#/definitions/SAMLAssertionIssuedPayload'
      schema_created:
        $ref: '#/definitions/SchemaAuditPayload'
      schema_deleted:
        $ref: '#/definitions/SchemaAuditPayload'
      schema_updated:
        $ref: '#/definitions/SchemaAuditPayload'
      scopes_granted:
        $ref: '#/definitions/ScopesGrantedPayload'
      script_executed:
        $ref: '#/definitions/ScriptExecutionAuditPayload'
      server_created:
        $ref: '#/definitions/ServerAuditPayload'
      server_deleted:
        $ref: '#/definitions/ServerAuditPayload'
      server_updated:
        $ref: '#/definitions/ServerAuditPayload'
      service_created:
        $ref: '#/definitions/ServiceAuditPayload'
      service_deleted:
        $ref: '#/definitions/ServiceAuditPayload'
      service_updated:
        $ref: '#/definitions/ServiceAuditPayload'
      task_failed:
        $ref: '#/definitions/TaskAuditPayload'
      task_succeeded:
        $ref: '#/definitions/TaskAuditPayload'
      tokens_revoked:
        $ref: '#/definitions/TokensRevokedPayload'
      totp_reset_completed:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      totp_reset_requested:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      user_added_to_group:
        $ref: '#/definitions/UserInGroupPayload'
      user_authenticated:
        $ref: '#/definitions/UserAuthenticatedPayload'
      user_challenged:
        $ref: '#/definitions/UserAuthenticatedPayload'
      user_created:
        $ref: '#/definitions/UserPayload'
      user_deleted:
        $ref: '#/definitions/UserPayload'
      user_removed_from_group:
        $ref: '#/definitions/UserInGroupPayload'
      user_updated:
        $ref: '#/definitions/UserPayload'
      webauthn_add_completed:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
      webauthn_add_requested:
        $ref: '#/definitions/UserIDAndIdentifierPayload'
    type: object
  AuditEventType:
    type: string
  AuditEvents:
    properties:
      audit_events:
        items:
          $ref: '#/definitions/AuditEvent'
        type: array
        x-nullable: false
    type: object
  Auth0Credentials:
    description: Auth0 IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  Auth0Settings:
    description: Auth0 IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      domain:
        description: String represented domain of the Auth0 for your organization
        example: dev-318ay013.us.auth0.com
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  AuthenticationContext:
    additionalProperties:
      type: object
    type: object
  AuthenticationContextAttribute:
    description: Authentication context attribute
    properties:
      description:
        description: String represented display name of an attribute
        type: string
        x-nullable: false
      labels:
        description: Array of Strings represents attribute labels
        items:
          format: label
          type: string
        type: array
        x-nullable: false
      name:
        description: String represented variable name of an attribute
        type: string
        x-nullable: false
      type:
        description: |-
          The data type of an attribute

          It stores information what kind of data is used as the value of the attribute.

          Available types: `number`, `string`, `bool`, `object`, `number_array`, `string_array`, `bool_array`, `object_array` or `any`.
        format: type
        type: string
        x-nullable: false
    type: object
  AuthenticationContextSettings:
    properties:
      attributes:
        items:
          $ref: '#/definitions/AuthenticationContextAttribute'
        type: array
        x-nullable: false
    type: object
  AuthenticationMechanisms:
    description: AuthenticationMechanisms authentication mechanisms
    items:
      type: string
    type: array
  AuthnAuthorityDescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.5
    properties:
      AssertionIDRequestServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      AuthnQueryServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPeople:
        items:
          $ref: '#/definitions/ContactPerson'
        type: array
        x-nullable: false
      ErrorURL:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      NameIDFormats:
        items:
          $ref: '#/definitions/NameIDFormat'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      ProtocolSupportEnumeration:
        type: string
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
    title: AuthnAuthorityDescriptor represents the SAML AuthnAuthorityDescriptor object.
    type: object
  AuthorizationDetail:
    description: Authorization detail
    properties:
      authorization_server_id:
        description: An authorization server (workspace) identifier holding the client
          application.
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: Description
        example: Authorization detail for payment initiation
        type: string
        x-nullable: false
      id:
        description: Authorization detail unique identifier
        format: authorizationDetailID
        type: string
        x-nullable: false
      metadata:
        additionalProperties:
          type: object
        description: General purpose metadata
        type: object
        x-nullable: false
      name:
        description: Display name
        example: Payment Initiation
        type: string
        x-nullable: false
      schema:
        $ref: '#/definitions/SupportedJSONSchema'
      tenant_id:
        description: ID of the tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/AuthorizationDetailType'
    required:
    - tenant_id
    - authorization_server_id
    - type
    type: object
  AuthorizationDetailType:
    type: string
  AzureB2CCredentials:
    description: Azure IDP B2C specific credentials
    properties:
      client_secret:
        description: Application secret from your Microsoft Azure application settings
        type: string
        x-nullable: false
    type: object
  AzureB2CSettings:
    description: Azure AD B2C authentication settings
    properties:
      client_id:
        description: Application ID from your Microsoft Azure B2C application settings
        example: client
        type: string
        x-nullable: false
      custom_domain:
        description: |-
          Custom domain from your Microsoft Azure application settings when using a custom
          domain such as with Azure Front Door. This is optional.
        example: my.customdomain.com
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          Groups are collections of users and other principals who share access to resources in
          Microsoft services or in your app. Microsoft Graph provides APIs that you can use to create
          and manage different types of groups and group functionality according to your scenario.

          You can only get groups data if you are entitled to call the Microsoft Graph API.
        example: true
        type: boolean
        x-nullable: false
      get_user:
        description: |-
          If enabled, users' data is collected from the Microsoft Graph API

          You can only get user's data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      graph_user_attributes:
        description: An array of user attributes fetched from the Microsoft Graph
          API
        items:
          type: string
        type: array
        x-nullable: false
      group_name_format:
        description: |-
          String represented group name format used for fetching groups

          It's value can be either `id` or `name`.
        example: id
        type: string
        x-nullable: false
      only_security_groups:
        description: If enabled, only security groups a user belongs to are collected.
        example: true
        type: boolean
        x-nullable: false
      policy:
        description: |-
          The user flow to be run.
          Specify the name of a user flow you've created in your Azure AD B2C tenant.
        example: b2c_1_sign_in
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client is going to request
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
      tenant:
        description: Directory ID from your Microsoft Azure B2C application settings
        example: 123-312-123
        type: string
        x-nullable: false
    type: object
  AzureCredentials:
    description: Azure IDP specific credentials
    properties:
      client_secret:
        description: Application secret from your Microsoft Azure application settings
        type: string
        x-nullable: false
    type: object
  AzureMetadata:
    properties:
      apim_id:
        type: string
        x-nullable: false
      apim_name:
        type: string
        x-nullable: false
    type: object
  AzureSettings:
    description: Azure IDP specific settings
    properties:
      client_id:
        description: Application ID from your Microsoft Azure application settings
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          Groups are collections of users and other principals who share access to resources in
          Microsoft services or in your app. Microsoft Graph provides APIs that you can use to create
          and manage different types of groups and group functionality according to your scenario.

          You can only get groups data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      get_user:
        description: |-
          If enabled, users' data is collected from the Microsoft Graph API

          You can only get user's data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      graph_user_attributes:
        description: An array of user attributes fetched from the Microsoft Graph
          API
        items:
          type: string
        type: array
        x-nullable: false
      group_name_format:
        description: |-
          String represented group name format used for fetching groups

          It's value can be either `id` or `name`.
        type: string
        x-nullable: false
      only_security_groups:
        description: If enabled, only security groups a user belongs to are collected.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
      tenant:
        description: Directory ID from your Microsoft Azure application settings
        type: string
        x-nullable: false
    type: object
  BRConsentPayload:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: Client application identifier.
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      idempotency_key:
        type: string
        x-nullable: false
      request_hash:
        type: string
        x-nullable: false
      server_id:
        description: Server / Workspace identifier.
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        $ref: '#/definitions/SpecVersion'
      status:
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier.
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  BruteForceLimit:
    properties:
      block_duration:
        example: 1m0s
        format: duration
        type: string
        x-nullable: false
      max_attempts:
        description: Max number of attempts
        example: 5
        format: int64
        type: integer
        x-nullable: false
      protected_type:
        $ref: '#/definitions/ProtectedType'
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
    required:
    - tenant_id
    - protected_type
    - max_attempts
    - block_duration
    type: object
  CDRArrangement:
    properties:
      account_ids:
        description: |-
          List of accounts.

          It can refer to user's bank accounts that can be accessed by your client application in order to provide consumer
          services.
        items:
          type: string
        type: array
        x-nullable: false
      amending_arrangement_id:
        $ref: '#/definitions/CDRArrangementID'
      authorization_server_id:
        description: Workspace identifier
        example: server
        format: serverID
        type: string
        x-nullable: false
      cdr_arrangement_id:
        $ref: '#/definitions/CDRArrangementID'
      cdr_arrangement_metadata:
        $ref: '#/definitions/CDRArrangementMetadata'
      client_id:
        description: Client application identifier
        example: bugkgm23g9kregtu051g
        format: clientID
        type: string
        x-nullable: false
      created_at:
        description: Arrangement creation date
        example: "2022-07-01T08:52:27.127932Z"
        format: date-time
        type: string
        x-nullable: false
      customer_id:
        $ref: '#/definitions/CDRCustomerID'
      expiry:
        description: Arrangement expiration date
        example: "2023-03-01T09:02:27.127932Z"
        format: date-time
        type: string
        x-nullable: false
      scope_grants:
        description: The detailed list of scopes voluntarily granted by the user for
          the client application to access user data.
        items:
          $ref: '#/definitions/ScopeGrant'
        type: array
        x-nullable: false
      sharing_type:
        description: 'The rule on how a user shares their data: reuse with a token
          or without it, or the user allows one-time access.'
        enum:
        - one_time
        - one_time_with_refresh_token
        - reusable
        example: one_time
        type: string
        x-nullable: false
      spec_version:
        default: v1
        description: |-
          Arrangement version.
          Currently, the version parameter is not used.
        enum:
        - v1
        example: v1
        type: string
        x-nullable: false
      status:
        $ref: '#/definitions/ConsentStatus'
      subject:
        description: |-
          Subject identifies an authenticated user.
          Depending on the workspace configuration, the value can be hashed.
        example: 377eb000a87a471291b5a9869930a2422c670b7b6a06f74143eb74a01ed2fbe1
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      updated_at:
        description: Arrangement last update date
        example: "2022-10-01T08:52:27.127932Z"
        format: date-time
        type: string
        x-nullable: false
    type: object
  CDRArrangementID:
    type: string
  CDRArrangementMetadata:
    properties:
      personal_details:
        $ref: '#/definitions/PersonalDetails'
      revocation_channel:
        $ref: '#/definitions/RevocationChannel'
      revocation_reason:
        $ref: '#/definitions/RevocationReason'
    type: object
  CDRArrangementsAutoRemoval:
    properties:
      enabled:
        description: enable auto removal
        type: boolean
        x-nullable: false
      remove_after_days:
        description: Period in days after which arrangements in Expired status will
          be removed
        format: int64
        type: integer
        x-nullable: false
    type: object
  CDRConfiguration:
    properties:
      adr_validation_enabled:
        description: |-
          Flag to enable / disable ADR validation
          If enabled, register URL must be provided and point to a existing registry
        type: boolean
        x-nullable: false
      arrangements_auto_removal:
        $ref: '#/definitions/CDRArrangementsAutoRemoval'
      brand_id:
        type: string
        x-nullable: false
      dont_cache_trust_anchor_data:
        description: |-
          Do not cache trust anchor data, fetch it from registry every time
          This is useful for testing purposes when the registry might not be fully up when the test is run
        type: boolean
        x-nullable: false
      industry:
        $ref: '#/definitions/CDRIndustry'
      register_api_version:
        $ref: '#/definitions/CDRRegisterAPIVersion'
      register_url:
        $ref: '#/definitions/CDRRegisterURL'
      skip_register_url_validation:
        description: |-
          Flag to disable register URL validation
          If enabled, there will be no error message
          if data from provided register URL can not be fetched
          It is highly not recommended to use this flag if it is not required
        type: boolean
        x-nullable: false
    type: object
  CDRCustomerID:
    type: string
  CDRIndustry:
    type: string
  CDRRegisterAPIVersion:
    type: string
  CDRRegisterURL:
    type: string
  CIBAAuthenticationService:
    properties:
      client_id:
        format: clientID
        type: string
        x-nullable: false
      external:
        $ref: '#/definitions/ExternalCIBAAuthenticationService'
      server_id:
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        format: cibaAuthenticationrServiceType
        type: string
        x-nullable: false
    type: object
  Claim:
    properties:
      authorization_server_id:
        description: authorization server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      description:
        description: description
        type: string
        x-nullable: false
      id:
        description: unique claim id
        example: "1"
        format: claimID
        type: string
        x-nullable: false
      mapping:
        description: |-
          DeprecatedMapping use SourceType and SourcePath instead
          claim mapping - path to attribute in authentication context from where claim value should be picked
        example: email
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ClaimMetadata'
      name:
        description: claim name in outgoing id / access token
        example: email
        type: string
        x-nullable: false
      opaque:
        description: included in userinfo/introspect endpoints only
        type: boolean
        x-nullable: false
      saml_name:
        example: email
        type: string
        x-nullable: false
      saml_name_format:
        example: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        type: string
        x-nullable: false
      scopes:
        description: |-
          list of scopes - when at least one of listed scopes has been granted to a client, then claim will be added to id / access token.
          In case of empty array claim is always added.
        example:
        - email
        - email_verified
        items:
          type: string
        type: array
        x-nullable: false
      source_path:
        description: path to the attribute in source type context where claim value
          should be picked from
        type: string
        x-nullable: false
      source_type:
        $ref: '#/definitions/ClaimSourceType'
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ClaimType'
      verified:
        description: mark claim as verified (required by identity assurance spec)
        type: boolean
        x-nullable: false
    type: object
  ClaimGrant:
    properties:
      claim_name:
        description: The claim name as it's set initially.
        example: email
        format: claimName
        type: string
        x-nullable: false
      claim_type:
        $ref: '#/definitions/ClaimType'
      client_id:
        description: Identifier of a client application that is granted with the claim.
        example: bugkgm23g9kregtu051g
        format: clientID
        type: string
        x-nullable: false
      given_at:
        description: Time when the claim was granted
        format: date-time
        type: string
        x-nullable: false
      language:
        description: Language
        format: language
        type: string
        x-nullable: false
      server_id:
        description: Identifier of a server where the client app is hosted.
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      subject:
        description: Identifier of a user who granted the claim.
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Identifier of the tenant where the client app is hosted.
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      verified:
        description: mark claim as verified (required by identity assurance spec)
        type: boolean
        x-nullable: false
    type: object
  ClaimGroupMembershipMode:
    type: string
  ClaimMetadata:
    properties:
      group_membership_mode:
        $ref: '#/definitions/ClaimGroupMembershipMode'
      pool_id:
        format: poolID
        type: string
        x-nullable: false
    type: object
  ClaimRequest:
    properties:
      essential:
        type: boolean
        x-nullable: false
      value:
        type: object
        x-nullable: false
      values:
        items:
          type: object
        type: array
        x-nullable: false
    type: object
  ClaimSourceType:
    type: string
  ClaimType:
    description: |-
      claim type, one of: id_token, access_token, saml_assertion
      example: id_token
    type: string
  ClaimsGrantedPayload:
    properties:
      new_claim_grants:
        description: List of claims to grant.
        items:
          $ref: '#/definitions/ClaimGrant'
        type: array
        x-nullable: false
    type: object
  ClaimsRequests:
    properties:
      extra:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      id_token:
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        type: object
        x-nullable: false
      userinfo:
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        type: object
        x-nullable: false
    type: object
  ClaimsVerification:
    properties:
      trust_framework:
        $ref: '#/definitions/ClaimRequest'
    type: object
  Client:
    properties:
      app_url:
        description: Application URL
        type: string
        x-nullable: false
      application_type:
        default: web
        description: |-
          The client application type.

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Apply security measures according to the type of your application.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can
          be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience).

          Typically, the audience is a single resource server or a list of resource servers.

          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_details_types:
        description: |-
          Authorization details types

          Indicates what authorization details types the client can use.
        items:
          $ref: '#/definitions/AuthorizationDetailType'
        type: array
        x-nullable: false
      authorization_encrypted_response_alg:
        description: |-
          Algorithm used for encrypting authorization responses.

          If both signing and encryption are requested, the response is first signed, and then encrypted.
          As a result, a Nested JWT is obtained, as defined in JWT [RFC7519].

          If omitted, no encryption is applied by default.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP-256
        type: string
        x-nullable: false
      authorization_encrypted_response_enc:
        description: |-
          Algorithm used for encrypting authorization responses.

          With `authorization_encrypted_response_alg` specified, the default value is `A128CBC-HS256`.
          When `authorization_encrypted_response_enc` is included, `authorization_encrypted_response_alg`
          MUST also be provided in a request.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A128CBC-HS256
        type: string
        x-nullable: false
      authorization_server_id:
        description: An authorization server (workspace) identifier holding the client
          application.
        example: default
        format: serverID
        type: string
        x-nullable: false
      authorization_signed_response_alg:
        description: |-
          Algorithm used for signing authorization responses.

          With this parameter specified, the response is signed using JWS and according to the configured algorithm.

          `none` isn't allowed.
        example: RS256
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS alg algorithm value used by the client application to sign authentication requests.

          When omitted, the client application doesn't send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type, and the token
          delivery mode is set to `ping` or `push`.

          This parameter is the endpoint where an OP (OpenID Provider) posts a notification after end-user authentication.

          Input: an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_logout_session_required:
        description: Boolean value specifying whether the RP requires that a sid (session
          ID) claim be included in the Logout Token to identify the RP session with
          the OP when the backchannel_logout_uri is used.
        type: boolean
        x-nullable: false
      backchannel_logout_uri:
        description: RP URL that will cause the RP to log itself out when sent a Logout
          Token by the OP.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type.

          Input: `poll`, `ping`, or `push`.
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. A boolean value indicating the `user_code` parameter support by the client application.

          If omitted, the default value is `false`.

          This applies only when the `backchannel_user_code_parameter_supported` OP parameter is `true`.
        type: boolean
        x-nullable: false
      certificate:
        description: |-
          Base64 encoded certicate in PEM format that will be automatically converted and stored in jwks

          It is used only as an input parameter for the Create / Import Client.
        type: string
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          The client identifier time of issue.

          The value is the number of seconds between 1970-01-01T00:00:00Z (UTC) and the date/time of issue.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human-readable name of a client application.
        example: My app
        type: string
        x-nullable: false
      client_secret:
        description: |-
          OAuth client secret

          If not provided, a random client secret is generated.
        minLength: 32
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The client secret expiration time.

          If the client secret does not expire, `client_secret_expires_at` = `0`.
        format: int64
        type: integer
        x-nullable: false
      client_status:
        description: |-
          Defines whether the client application is active or not.

          Only clients with the `Active` status can preform authorization, authentication, and PAR requests.
        enum:
        - active
        - inactive
        type: string
        x-nullable: false
      client_type:
        enum:
        - oauth2
        - saml
        type: string
        x-nullable: false
      client_uri:
        description: URI of a client application.
        type: string
        x-nullable: false
      confirmation:
        $ref: '#/definitions/Confirmation'
      created_at:
        description: Date when the client application was created.
        example: "2022-04-07T19:17:31.323187Z"
        format: date-time
        type: string
        x-nullable: false
      default_acr_values:
        description: |-
          default ACR values
          list of ACR values that will be implicitly requested for the client if not explicitly specified
        items:
          format: acrValue
          type: string
        type: array
        x-nullable: false
      description:
        description: Description of the client application.
        type: string
        x-nullable: false
      developer_id:
        description: Optional developer owner of the client application.
        format: subject
        type: string
        x-nullable: false
      developer_metadata:
        $ref: '#/definitions/Metadata'
      dpop_bound_access_tokens:
        description: |-
          Boolean value specifying whether the client always uses DPoP for token requests
          If true, the authorization server will reject token requests from this client that do not contain the DPoP header.
        type: boolean
        x-nullable: false
      dynamically_registered:
        type: boolean
        x-nullable: false
      fdx:
        $ref: '#/definitions/FDXMetadata'
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types.

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          [Read more](https://cloudentity.com/developers/basics/oauth-grant-types/grant-types-overview/) about grant types.
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      hashed_rotated_secrets:
        description: An array of hashed rotated client secrets
        items:
          type: string
        type: array
        x-nullable: false
      hashed_secret:
        description: |-
          Hashed client secret

          Hashing client secrets provides additional security for your secrets storage as it hides
          plaintext secrets from being viewed both in the UI and the database.
        type: string
        x-nullable: false
      id_token_encrypted_response_alg:
        description: JWE alg algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        type: string
        x-nullable: false
      id_token_encrypted_response_enc:
        description: JWE enc algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - A256GCM
        - A128CBC-HS256
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application.

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      introspection_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          An introspection endpoint authentication method configured for the client application (read-only).

          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: A URL of JSON Web Key Set with the public keys used by a client
          application to authenticate to Cloudentity.
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI.
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      obbr:
        $ref: '#/definitions/OBBRMetadata'
      organisation_id:
        description: |-
          External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
          Data Recipient Brand.

          The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
          required for authorization, and represents the audience(s) the JWT is intended for.
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used.
        type: string
        x-nullable: false
      post_logout_redirect_uris:
        description: Array of URLs to which a relying party may request that the user
          be redirected after a logout has been performed.
        items:
          type: string
        type: array
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        $ref: '#/definitions/RedirectURIs'
      registration_token:
        $ref: '#/definitions/RegistrationToken'
      request_object_encryption_alg:
        description: Optional JWE alg algorithm the client is declaring that it may
          use for encrypting Request Objects
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP
        type: string
        x-nullable: false
      request_object_encryption_enc:
        description: |-
          Optional JWE enc algorithm the client is declaring that it may use for encrypting Request Objects
          When `request_object_encryption_enc` is included, `request_object_encryption_alg` MUST also be provided.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A256GCM
        type: string
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          Cloudentity supports signing tokens with the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, set the value of this parameter to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      require_pushed_authorization_requests:
        description: Boolean parameter indicating whether the only means of initiating
          an authorization request the client is allowed to use is PAR.
        type: boolean
        x-nullable: false
      response_types:
        $ref: '#/definitions/ResponseTypes'
      revocation_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          A revocation endpoint authentication method configured for the client application (read-only).
          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      rotated_secrets:
        description: An array of rotated OAuth client secrets
        items:
          type: string
        minLength: 32
        type: array
        x-nullable: false
      saml_allowed_attributes:
        description: Allowed SAML attributes
        items:
          type: string
        type: array
        x-nullable: false
      saml_idp_attributes_override:
        $ref: '#/definitions/SAMLIDPAttributesOverride'
      saml_idp_custom_entity_id:
        description: custom entity id
        type: string
        x-nullable: false
      saml_idp_custom_sso_url:
        description: custom sso url
        type: string
        x-nullable: false
      saml_idp_override_enabled:
        description: enable flag
        type: boolean
        x-nullable: false
      saml_idp_signing_key:
        $ref: '#/definitions/ServerJWK'
      saml_metadata:
        $ref: '#/definitions/EntityDescriptor'
      saml_metadata_updated_at:
        format: date-time
        type: string
        x-nullable: false
      saml_metadata_url:
        type: string
        x-nullable: false
      saml_override_attributes:
        description: If true, then only attributes defined in saml_attributes will
          be used to build the SAML assertion
        type: boolean
        x-nullable: false
      saml_service_provider_id:
        type: string
        x-nullable: false
      saml_signing_hash:
        default: sha-256
        description: SAML Assertion signing hash algorithm.
        enum:
        - sha-1
        - sha-256
        - sha-512
        example: sha-256
        type: string
        x-nullable: false
      saml_subject_name_id:
        description: Allows to override the subject name id.
        type: string
        x-nullable: false
      saml_subject_name_id_format:
        description: Allows to override the subject name id format
        enum:
        - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
        - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
        - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        type: string
        x-nullable: false
      scope:
        description: Space-separated list of scopes for compatibility with the OAuth
          specification.
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          OPTIONAL. [A URL using the HTTPS scheme](https://openid.net/specs/openid-connect-registration-1_0.html#SectorIdentifierValidation).
          It must reference a JSON file with the array of `redirect_uri` values.

          Pass this parameter when you use multiple domains in your `redirect_uris` or need a mechanism to allow changes in
          domain without affecting consumer consent.

          [Read more](https://openid.net/specs/openid-connect-core-1_0.html)
        type: string
        x-nullable: false
      software_id:
        description: |-
          A unique identifier string (e.g., a Universally Unique Identifier
          (UUID)) assigned by the client developer or software publisher.

          The `software_id` MUST remain the same across
          multiple updates or versions of the same software package. The
          value of this field is not intended to be human-readable and is
          usually opaque to the client and authorization server.
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_statement_payload:
        $ref: '#/definitions/Metadata'
      software_version:
        description: |-
          A version identifier string for the client software identified by
          `software_id`. The value of the `software_version` MUST be changed
          with any update of the client software identified by the same
          `software_id`.
        type: string
        x-nullable: false
      subject_type:
        default: public
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
          and are intended to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      system:
        description: Defines whether the client application is a system tenant's application
          or not.
        type: boolean
        x-nullable: false
      tenant_id:
        description: ID of a tenant where the client application is added
        example: default
        format: tenantID
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          To learn more, go to the Authorization Basics > Client Authentication section of this guide.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        default: ES256
        description: |-
          Signing algorithm for the token endpoint

          This field is optional. If empty, a client can use any algorithm supported by the server (see `token_endpoint_auth_signing_alg_values_supported` in the well-known endpoing).

          If provided, depending on the server configuration, client can use of one: HS256, RS256, ES256, PS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        enum:
        - RS256
        - ES256
        - PS256
        - HS256
        - ""
        example: ES256
        type: string
        x-nullable: false
      token_exchange:
        $ref: '#/definitions/ClientTokenExchangeConfiguration'
      token_ttls:
        $ref: '#/definitions/TokenTTLs'
      tos_uri:
        description: Terms of Service URL.
        type: string
        x-nullable: false
      trusted:
        description: |-
          Defines whether the client application is trusted or not.

          For trusted clients, consent pages are skipped during the authorization process.
        type: boolean
        x-nullable: false
      updated_at:
        description: Date when the client application was updated.
        example: "2022-05-08T01:11:51.1262916Z"
        format: date-time
        type: string
        x-nullable: false
      use_custom_token_ttls:
        description: If enabled the client application will be able to set its own
          token TTLs.
        type: boolean
        x-nullable: false
      userinfo_signed_response_alg:
        default: none
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is a JWT serialized and signed with JWS.

          If omitted, then by default, UserInfo Response returns the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - tenant_id
    - authorization_server_id
    title: Defines a client application and its properties.
    type: object
  ClientAuditPayload:
    properties:
      app_url:
        description: Application URL
        type: string
        x-nullable: false
      application_type:
        default: web
        description: |-
          The client application type.

          Client applications can be either of a `web` or `native` types.

          Web applications include clients like server web applications or service apps.

          Native applications include single-page applications (SPAs) and mobile or desktop
          applications.

          Apply security measures according to the type of your application.
        example: web
        type: string
        x-nullable: false
      application_types:
        default:
        - server_web
        description: An array of dynamically calculated application types that can
          be used for filtering
        example:
        - single_page
        - server_web
        - mobile_desktop
        - service
        - legacy
        - dcr
        items:
          enum:
          - single_page
          - server_web
          - mobile_desktop
          - service
          - legacy
          - dcr
          type: string
        readOnly: true
        type: array
        x-nullable: false
      audience:
        default:
        - client_id
        description: |-
          Identity of the intended recipients (the audience).

          Typically, the audience is a single resource server or a list of resource servers.

          It is considered a good practice to limit the audience of the token for security purposes.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_details_types:
        description: |-
          Authorization details types

          Indicates what authorization details types the client can use.
        items:
          $ref: '#/definitions/AuthorizationDetailType'
        type: array
        x-nullable: false
      authorization_encrypted_response_alg:
        description: |-
          Algorithm used for encrypting authorization responses.

          If both signing and encryption are requested, the response is first signed, and then encrypted.
          As a result, a Nested JWT is obtained, as defined in JWT [RFC7519].

          If omitted, no encryption is applied by default.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP-256
        type: string
        x-nullable: false
      authorization_encrypted_response_enc:
        description: |-
          Algorithm used for encrypting authorization responses.

          With `authorization_encrypted_response_alg` specified, the default value is `A128CBC-HS256`.
          When `authorization_encrypted_response_enc` is included, `authorization_encrypted_response_alg`
          MUST also be provided in a request.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A128CBC-HS256
        type: string
        x-nullable: false
      authorization_server_id:
        description: An authorization server (workspace) identifier holding the client
          application.
        example: default
        format: serverID
        type: string
        x-nullable: false
      authorization_signed_response_alg:
        description: |-
          Algorithm used for signing authorization responses.

          With this parameter specified, the response is signed using JWS and according to the configured algorithm.

          `none` isn't allowed.
        example: RS256
        type: string
        x-nullable: false
      backchannel_authentication_request_signing_alg:
        description: |-
          OPTIONAL. The JWS alg algorithm value used by the client application to sign authentication requests.

          When omitted, the client application doesn't send signed authentication requests.
        type: string
        x-nullable: false
      backchannel_client_notification_endpoint:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type, and the token
          delivery mode is set to `ping` or `push`.

          This parameter is the endpoint where an OP (OpenID Provider) posts a notification after end-user authentication.

          Input: an HTTPS URL.
        type: string
        x-nullable: false
      backchannel_logout_session_required:
        description: Boolean value specifying whether the RP requires that a sid (session
          ID) claim be included in the Logout Token to identify the RP session with
          the OP when the backchannel_logout_uri is used.
        type: boolean
        x-nullable: false
      backchannel_logout_uri:
        description: RP URL that will cause the RP to log itself out when sent a Logout
          Token by the OP.
        type: string
        x-nullable: false
      backchannel_token_delivery_mode:
        description: |-
          REQUIRED for requests when the client application uses CIBA as an authorization grant type.

          Input: `poll`, `ping`, or `push`.
        type: string
        x-nullable: false
      backchannel_user_code_parameter:
        description: |-
          OPTIONAL. A boolean value indicating the `user_code` parameter support by the client application.

          If omitted, the default value is `false`.

          This applies only when the `backchannel_user_code_parameter_supported` OP parameter is `true`.
        type: boolean
        x-nullable: false
      certificate:
        description: |-
          Base64 encoded certicate in PEM format that will be automatically converted and stored in jwks

          It is used only as an input parameter for the Create / Import Client.
        type: string
        x-nullable: false
      client_id:
        description: |-
          OAuth client application identifier

          If not provided, a random client ID is generated.
        format: clientID
        type: string
        x-nullable: false
      client_id_issued_at:
        description: |-
          The client identifier time of issue.

          The value is the number of seconds between 1970-01-01T00:00:00Z (UTC) and the date/time of issue.
        format: int64
        type: integer
        x-nullable: false
      client_name:
        description: Human-readable name of a client application.
        example: My app
        type: string
        x-nullable: false
      client_secret_expires_at:
        description: |-
          The client secret expiration time.

          If the client secret does not expire, `client_secret_expires_at` = `0`.
        format: int64
        type: integer
        x-nullable: false
      client_status:
        description: |-
          Defines whether the client application is active or not.

          Only clients with the `Active` status can preform authorization, authentication, and PAR requests.
        enum:
        - active
        - inactive
        type: string
        x-nullable: false
      client_uri:
        description: URI of a client application.
        type: string
        x-nullable: false
      created_at:
        description: Date when the client application was created.
        example: "2022-04-07T19:17:31.323187Z"
        format: date-time
        type: string
        x-nullable: false
      default_acr_values:
        description: |-
          default ACR values
          list of ACR values that will be implicitly requested for the client if not explicitly specified
        items:
          format: acrValue
          type: string
        type: array
        x-nullable: false
      description:
        description: Description of the client application.
        type: string
        x-nullable: false
      developer_id:
        description: Optional developer owner of the client application.
        format: subject
        type: string
        x-nullable: false
      developer_metadata:
        $ref: '#/definitions/Metadata'
      dpop_bound_access_tokens:
        description: |-
          Boolean value specifying whether the client always uses DPoP for token requests
          If true, the authorization server will reject token requests from this client that do not contain the DPoP header.
        type: boolean
        x-nullable: false
      dynamically_registered:
        type: boolean
        x-nullable: false
      grant_types:
        default:
        - authorization_code
        description: |-
          An array of allowed OAuth client grant types.

          The `grantTypes` array stores OAuth flows that are allowed for a given client application.

          [Read more](https://cloudentity.com/developers/basics/oauth-grant-types/grant-types-overview/) about grant types.
        example:
        - password
        - refresh_token
        - client_credentials
        - implicit
        - authorization_code
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      id_token_encrypted_response_alg:
        description: JWE alg algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        type: string
        x-nullable: false
      id_token_encrypted_response_enc:
        description: JWE enc algorithm for encrypting the ID token issued to this
          client application.
        enum:
        - A256GCM
        - A128CBC-HS256
        type: string
        x-nullable: false
      id_token_signed_response_alg:
        description: |-
          Algorithm for signing ID tokens issued for a client application.

          The default value depends on authorization server configuration.
        enum:
        - RS256
        - ES256
        - PS256
        example: ES256
        type: string
        x-nullable: false
      introspection_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          An introspection endpoint authentication method configured for the client application (read-only).

          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: A URL of JSON Web Key Set with the public keys used by a client
          application to authenticate to Cloudentity.
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI.
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      organisation_id:
        description: |-
          External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
          Data Recipient Brand.

          The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
          required for authorization, and represents the audience(s) the JWT is intended for.
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used.
        type: string
        x-nullable: false
      post_logout_redirect_uris:
        description: Array of URLs to which a relying party may request that the user
          be redirected after a logout has been performed.
        items:
          type: string
        type: array
        x-nullable: false
      privacy:
        $ref: '#/definitions/ClientPrivacy'
      redirect_uris:
        $ref: '#/definitions/RedirectURIs'
      request_object_encryption_alg:
        description: Optional JWE alg algorithm the client is declaring that it may
          use for encrypting Request Objects
        enum:
        - RSA-OAEP
        - RSA-OAEP-256
        example: RSA-OAEP
        type: string
        x-nullable: false
      request_object_encryption_enc:
        description: |-
          Optional JWE enc algorithm the client is declaring that it may use for encrypting Request Objects
          When `request_object_encryption_enc` is included, `request_object_encryption_alg` MUST also be provided.
        enum:
        - A256GCM
        - A128CBC-HS256
        example: A256GCM
        type: string
        x-nullable: false
      request_object_signing_alg:
        default: any
        description: |-
          Request object signing algorithm for the token endpoint

          Cloudentity supports signing tokens with the RS256, ES256, and PS256 algorithms. If you do not want
          to use a signing algorithm, set the value of this parameter to `none`.
        enum:
        - any
        - none
        - RS256
        - ES256
        - PS256
        example: none
        type: string
        x-nullable: false
      request_uris:
        description: Array of absolute URIs that points to the Request Object that
          holds authorization request parameters.
        items:
          type: string
        type: array
        x-nullable: false
      require_pushed_authorization_requests:
        description: Boolean parameter indicating whether the only means of initiating
          an authorization request the client is allowed to use is PAR.
        type: boolean
        x-nullable: false
      response_types:
        $ref: '#/definitions/ResponseTypes'
      revocation_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          A revocation endpoint authentication method configured for the client application (read-only).
          If empty, the `token_endpoint_auth_method` is used.

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          [Read more](https://cloudentity.com/developers/basics/oauth-client-authentication/client-authentication-overview/) about client authentication.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        example: client_secret_basic
        type: string
        x-nullable: false
      scope:
        description: Space-separated list of scopes for compatibility with the OAuth
          specification.
        example: email offline_access openid
        type: string
        x-nullable: false
      scopes:
        description: An array of string represented scopes assigned to a client application
        example:
        - email
        - offline_access
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      sector_identifier_uri:
        description: |-
          OPTIONAL. [A URL using the HTTPS scheme](https://openid.net/specs/openid-connect-registration-1_0.html#SectorIdentifierValidation).
          It must reference a JSON file with the array of `redirect_uri` values.

          Pass this parameter when you use multiple domains in your `redirect_uris` or need a mechanism to allow changes in
          domain without affecting consumer consent.

          [Read more](https://openid.net/specs/openid-connect-core-1_0.html)
        type: string
        x-nullable: false
      software_statement:
        description: |-
          A digitally signed or MACed JSON Web Token (JWT) [RFC7519] that
          asserts metadata values about the client software.  In some cases,
          a software statement is issued directly by the client
          developer.  In other cases, a software statement is issued by
          a third-party organization for use by the client developer.

          In both cases, the trust relationship the authorization server has
          with the issuer of the software statement is intended to be used
          as an input to the evaluation of whether the registration request
          is accepted.

          A software statement can be presented to an
          authorization server as part of the client registration request.
        type: string
        x-nullable: false
      software_statement_payload:
        $ref: '#/definitions/Metadata'
      subject_type:
        default: public
        description: |-
          Subject identifier type

          Stores information if the subject identifier is of the `public` or the `pairwise` type.

          Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
          and are intended to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          For the `public` type, the value of the `sub` (subject) token claim is the same for all clients.

          For the `pairwise` type, a different `sub` (subject) token claim is provided for each client.
          Using the `pairwise` subject identifier makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        enum:
        - public
        - pairwise
        example: public
        type: string
        x-nullable: false
      system:
        description: Defines whether the client application is a system tenant's application
          or not.
        type: boolean
        x-nullable: false
      tenant_id:
        description: ID of a tenant where the client application is added
        example: default
        format: tenantID
        type: string
        x-nullable: false
      tls_client_auth_san_dns:
        description: A string containing the value of an expected dNSName SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_email:
        description: A string containing the value of an expected rfc822Name SAN entry
          in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_ip:
        description: A string representation of an IP address in either dotted decimal
          notation (for IPv4) or colon-delimited hexadecimal (for IPv6, as defined
          in [RFC5952]) that is expected to be present as an iPAddress SAN entry in
          the certificate.
        type: string
        x-nullable: false
      tls_client_auth_san_uri:
        description: A string containing the value of an expected uniformResourceIdentifier
          SAN entry in the certificate.
        type: string
        x-nullable: false
      tls_client_auth_subject_dn:
        description: An [RFC4514] string representation of the expected subject distinguished
          name of the certificate.
        type: string
        x-nullable: false
      tls_client_certificate_bound_access_tokens:
        description: Boolean value indicating server support for mutual TLS client
          certificate-bound access tokens. If omitted, the default value is "false".
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        default: client_secret_basic
        description: |-
          Token endpoint authentication method configured for a client application

          Cloudentity supports the following client authentication methods:
          `client_secret_basic`, `client_secret_post`, `client_secret_jwt`, `private_key_jwt`,
          `self_signed_tls_client_auth`, `tls_client_auth`, `none`.

          To learn more, go to the Authorization Basics > Client Authentication section of this guide.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        example: client_secret_basic
        type: string
        x-nullable: false
      token_endpoint_auth_signing_alg:
        default: ES256
        description: |-
          Signing algorithm for the token endpoint

          This field is optional. If empty, a client can use any algorithm supported by the server (see `token_endpoint_auth_signing_alg_values_supported` in the well-known endpoing).

          If provided, depending on the server configuration, client can use of one: HS256, RS256, ES256, PS256 algorithms.

          If your token endpoint authentication is set to the `private_key_jwt` method, the
          `token_endpoint_auth_signing_alg` parameter must be either RS256, ES256, or PS256.

          If your token endpoint authentication is set to the `client_secret_jwt` method,
          the `token_endpoint_auth_signing_alg` parameter must be HS256.
        enum:
        - RS256
        - ES256
        - PS256
        - HS256
        - ""
        example: ES256
        type: string
        x-nullable: false
      token_exchange:
        $ref: '#/definitions/ClientTokenExchangeConfiguration'
      token_ttls:
        $ref: '#/definitions/TokenTTLs'
      tos_uri:
        description: Terms of Service URL.
        type: string
        x-nullable: false
      trusted:
        description: |-
          Defines whether the client application is trusted or not.

          For trusted clients, consent pages are skipped during the authorization process.
        type: boolean
        x-nullable: false
      updated_at:
        description: Date when the client application was updated.
        example: "2022-05-08T01:11:51.1262916Z"
        format: date-time
        type: string
        x-nullable: false
      use_custom_token_ttls:
        description: If enabled the client application will be able to set its own
          token TTLs.
        type: boolean
        x-nullable: false
      userinfo_signed_response_alg:
        default: none
        description: |-
          JWS alg algorithm REQUIRED for signing UserInfo Responses.

          If specified, the response is a JWT serialized and signed with JWS.

          If omitted, then by default, UserInfo Response returns the Claims
          as an UTF-8 encoded JSON object using the application/json content-type.
        enum:
        - none
        - RS256
        - ES256
        example: none
        type: string
        x-nullable: false
    required:
    - tenant_id
    - authorization_server_id
    type: object
  ClientConsentsAuditEventPayload:
    properties:
      client_id:
        description: client id
        format: clientID
        type: string
        x-nullable: false
      number_revoked:
        description: number of consents revoked
        format: int64
        type: integer
        x-nullable: false
    type: object
  ClientInfo:
    properties:
      client_name:
        description: Human-readable name of a client application.
        example: My app
        type: string
        x-nullable: false
      client_uri:
        description: URI of a client application.
        type: string
        x-nullable: false
      description:
        description: Description of the client application.
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI.
        type: string
        x-nullable: false
      organisation_id:
        description: |-
          External organization identifier. It is a unique string assigned by the CDR Register to identify an Accredited
          Data Recipient Brand.

          The value obtained is used as the `aud` claim for message signing, for example, when a JSON Web Token (JWT) is
          required for authorization, and represents the audience(s) the JWT is intended for.
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      policy_uri:
        description: Policy URL to read about how the profile data is used.
        type: string
        x-nullable: false
      tos_uri:
        description: Terms of Service URL.
        type: string
        x-nullable: false
    type: object
  ClientJWK:
    properties:
      alg:
        description: |-
          The "alg" (algorithm) parameter identifies the algorithm intended for
          use with the key.  The values used should either be registered in the
          IANA "JSON Web Signature and Encryption Algorithms" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.
        example: RS256
        type: string
        x-nullable: false
      crv:
        example: P-256
        type: string
        x-nullable: false
      d:
        example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        type: string
        x-nullable: false
      dp:
        example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        type: string
        x-nullable: false
      dq:
        example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        type: string
        x-nullable: false
      e:
        example: AQAB
        type: string
        x-nullable: false
      k:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      kid:
        description: |-
          The "kid" (key ID) parameter is used to match a specific key.  This
          is used, for instance, to choose among a set of keys within a JWK Set
          during key rollover.  The structure of the "kid" value is
          unspecified.  When "kid" values are used within a JWK Set, different
          keys within the JWK Set SHOULD use distinct "kid" values.  (One
          example in which different keys might use the same "kid" value is if
          they have different "kty" (key type) values but are considered to be
          equivalent alternatives by the application using them.)  The "kid"
          value is a case-sensitive string.
        example: 1603dfe0af8f4596
        type: string
        x-nullable: false
      kty:
        description: |-
          The "kty" (key type) parameter identifies the cryptographic algorithm
          family used with the key, such as "RSA" or "EC". "kty" values should
          either be registered in the IANA "JSON Web Key Types" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.  The "kty" value is a case-sensitive string.
        example: RSA
        type: string
        x-nullable: false
      "n":
        example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        type: string
        x-nullable: false
      p:
        example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        type: string
        x-nullable: false
      q:
        example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        type: string
        x-nullable: false
      qi:
        example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        type: string
        x-nullable: false
      use:
        description: |-
          Use ("public key use") identifies the intended use of
          the public key. The "use" parameter is employed to indicate whether
          a public key is used for encrypting data or verifying the signature
          on data. Values are commonly "sig" (signature) or "enc" (encryption).
        example: sig
        type: string
        x-nullable: false
      x:
        example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        type: string
        x-nullable: false
      x5c:
        description: |-
          The "x5c" (X.509 certificate chain) parameter contains a chain of one
          or more PKIX certificates [RFC5280].  The certificate chain is
          represented as a JSON array of certificate value strings.  Each
          string in the array is a base64-encoded (Section 4 of [RFC4648] --
          not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
          The PKIX certificate containing the key value MUST be the first
          certificate.
        items:
          type: string
        type: array
        x-nullable: false
      x5t:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      x5t#S256:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      "y":
        example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        type: string
        x-nullable: false
    required:
    - kty
    type: object
  ClientJWKs:
    properties:
      keys:
        example: []
        items:
          $ref: '#/definitions/ClientJWK'
        type: array
        x-nullable: false
    type: object
  ClientPrivacy:
    properties:
      scopes:
        additionalProperties:
          $ref: '#/definitions/ScopePrivacyInformation'
        description: optional privacy information mapping for scopes
        type: object
        x-nullable: false
    type: object
  ClientTokenExchangeConfiguration:
    properties:
      actor_claims:
        description: |-
          Additional actor token claims

          Claims from the actor token that will be injected into the exchanged token under the `act` claim.

          Applies for the token exchange delegation flow only.
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  Clients:
    description: OAuth clients
    properties:
      clients:
        items:
          $ref: '#/definitions/Client'
        type: array
        x-nullable: false
    type: object
  CognitoCredentials:
    description: Cognito IDP specific settings
    properties:
      client_secret:
        description: Cognito app client secret from your application settings
        type: string
        x-nullable: false
    type: object
  CognitoSettings:
    description: Cognito IDP specific settings
    properties:
      client_id:
        description: Cognito app client ID from your application settings
        example: client
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, additional user data is collected from the `userinfo`
          Cognito API
        type: boolean
        x-nullable: false
      pool_id:
        description: |-
          Cognito pool ID

          A user pool is a user directory in Amazon Cognito. It enables your users to sign in to your
          application through Amazon Cognito. You can find your pool ID in your User Pools > Federated
          Identities settings.
        type: string
        x-nullable: false
      region:
        description: AWS Region where the user pool is hosted
        example: us-east-1
        type: string
        x-nullable: false
      scopes:
        description: |-
          An array of allowed OAuth scopes which the client requests

          The following scopes can be allowed for a Cognito application:
          `phone`, `email`, `openid`, `aws.cognito.signin.user.admin`, `profile`.
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  CompletePostAuthnSession:
    properties:
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        format: loginState
        type: string
        x-nullable: false
    type: object
  ConfigImportEventPayload:
    properties:
      error_message:
        type: string
        x-nullable: false
      tenant_id:
        type: string
        x-nullable: false
      workspace_id:
        type: string
        x-nullable: false
    type: object
  Confirmation:
    properties:
      jkt:
        type: string
        x-nullable: false
      x5t#S256:
        type: string
        x-nullable: false
    type: object
  Consent:
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        example: false
        type: boolean
        x-nullable: false
      description:
        description: consent description
        example: End User License Agreement
        type: string
        x-nullable: false
      id:
        description: consent unique identifier
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      internal_services:
        description: internal services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      name:
        description: consent name
        example: EULA
        type: string
        x-nullable: false
      pii_categories:
        description: PII Categories
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      third_party_services:
        description: third party services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll,
          keepCurrent'
        example: explicitAll
        type: string
        x-nullable: false
      valid_from:
        description: marks the time from which the consent is in use. Can't be set
          to a future time
        example: "2019-12-11T13:44:28.772101Z"
        format: date-time
        type: string
        x-nullable: false
      version:
        description: consent version. When a consent is updated, version is incremented.
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentActionToConsent:
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        example: false
        type: boolean
        x-nullable: false
      description:
        description: consent description
        example: End User License Agreement
        type: string
        x-nullable: false
      id:
        description: consent unique identifier
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      internal_services:
        description: internal services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      name:
        description: consent name
        example: EULA
        type: string
        x-nullable: false
      pii_categories:
        description: PII Categories
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      required:
        description: is consent required
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      third_party_services:
        description: third party services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll,
          keepCurrent'
        example: explicitAll
        type: string
        x-nullable: false
      valid_from:
        description: marks the time from which the consent is in use. Can't be set
          to a future time
        example: "2019-12-11T13:44:28.772101Z"
        format: date-time
        type: string
        x-nullable: false
      version:
        description: consent version. When a consent is updated, version is incremented.
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentActionWithConsents:
    properties:
      consents:
        items:
          $ref: '#/definitions/ConsentActionToConsent'
        type: array
        x-nullable: false
      description:
        description: consent description
        example: Consents required by application X
        type: string
        x-nullable: false
      id:
        description: unique consent action id
        example: "1"
        format: consentActionID
        type: string
        x-nullable: false
      name:
        description: consent action name
        example: application_x
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ConsentAuditEventPayload:
    properties:
      consent:
        $ref: '#/definitions/ConsentPayload'
    type: object
  ConsentDetails:
    properties:
      br:
        $ref: '#/definitions/BRConsentPayload'
      cdr:
        $ref: '#/definitions/CDRArrangement'
      cdr_previous:
        $ref: '#/definitions/CDRArrangement'
      fdx:
        $ref: '#/definitions/FDXConsent'
      uk:
        $ref: '#/definitions/UKConsentPayload'
    type: object
  ConsentGrant:
    properties:
      consent_grant_act_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        example: implicit
        type: string
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      version:
        description: version
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentGrantContext:
    properties:
      device:
        additionalProperties:
          type: object
        description: json object - device print of the End User's device
        type: object
        x-nullable: false
      ip:
        description: string in the form of a valid IP v 4 address, represents the
          current IP of the End User
        example: 52.14.142.76
        type: string
        x-nullable: false
      location:
        description: 2 element array of floats - current geolocation of the end-user,
          the format is [lat, long]
        example:
        - 25.2084
        - 55.2719
        items:
          format: double
          type: number
        type: array
        x-nullable: false
    type: object
  ConsentGrantPatch:
    properties:
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      grant_type:
        description: 'one of: implicit, explicit (explicit is the default value)'
        example: implicit
        type: string
        x-nullable: false
      granted:
        description: boolean flag marking if the user granted or revoked the consent
        example: false
        type: boolean
        x-nullable: false
    type: object
  ConsentGrantPatchRequest:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consents:
        description: an array of consent objects, consisting of consentId and granted
          - boolean flag marking if the user granted or revoked the consent
        items:
          $ref: '#/definitions/ConsentGrantPatch'
        type: array
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        example: "1"
        type: string
        x-nullable: false
    type: object
  ConsentGrantPatchResponse:
    properties:
      ConsentGrantActID:
        description: id of the consent grant action
        format: consentGrantActID
        type: string
        x-nullable: false
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consents:
        description: an array of consent objects, consisting of consentId and granted
          - boolean flag marking if the user granted or revoked the consent
        items:
          $ref: '#/definitions/ConsentGrantPatch'
        type: array
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        example: "1"
        type: string
        x-nullable: false
    type: object
  ConsentGrantedEvent:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consent:
        $ref: '#/definitions/Consent'
      consent_grant_act_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        example: implicit
        type: string
        x-nullable: false
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        example: "1"
        type: string
        x-nullable: false
      version:
        description: version
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentNotifiedPayload:
    properties:
      notification_type:
        description: 'Type of notification, specifies what the client was notified
          of , e.g.: revocation'
        type: string
        x-nullable: false
      payload:
        description: payload of the request sent to the notification endpoint
        type: string
        x-nullable: false
      uri:
        description: uri that was notified of the revocation
        type: string
        x-nullable: false
    type: object
  ConsentPayload:
    properties:
      details:
        $ref: '#/definitions/ConsentDetails'
      id:
        description: consent id
        type: string
        x-nullable: false
      kind:
        $ref: '#/definitions/AuditConsentKind'
      type:
        description: 'Type of a consent, specifies the subject of consent, e.g.: domestic_payment'
        type: string
        x-nullable: false
    type: object
  ConsentRevokedEvent:
    properties:
      collection_timestamp:
        description: time when the grant occurred
        example: 1257894000000000000
        format: int64
        type: integer
        x-nullable: false
      consent:
        $ref: '#/definitions/Consent'
      consent_grant_act_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      consent_id:
        description: consent id
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      context:
        $ref: '#/definitions/ConsentGrantContext'
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: 'grant type, one of: implicit, explicit'
        example: implicit
        type: string
        x-nullable: false
      language:
        description: language in which the consent was obtained [ISO 639]
        example: en
        type: string
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      triggered_by_action:
        description: optional string with action_id - can be set if the consent grant/withdraw
          request was caused when an app asked the user for consent required for a
          specific action
        example: "1"
        type: string
        x-nullable: false
      version:
        description: version
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentService:
    properties:
      name:
        description: name
        type: string
        x-nullable: false
      purposes:
        description: purpose
        items:
          $ref: '#/definitions/Purpose'
        type: array
        x-nullable: false
    type: object
  ConsentStatus:
    type: string
  ConsentType:
    type: string
  ConsentWithGrant:
    properties:
      can_be_withdrawn:
        description: flag determining if can user withdrawn consent
        example: false
        type: boolean
        x-nullable: false
      consent_grant_id:
        description: consent grant id
        example: 27fa83a8-d0a6-48da-8529-42105bfa0ede
        format: consentGrantActID
        type: string
        x-nullable: false
      description:
        description: consent description
        example: End User License Agreement
        type: string
        x-nullable: false
      given_at:
        description: given at timestamp
        format: date-time
        type: string
        x-nullable: false
      grant_type:
        description: grant type
        example: implicit
        type: string
        x-nullable: false
      grant_version:
        description: grant version
        example: 1
        format: int64
        type: integer
        x-nullable: false
      granted:
        description: is consent granted
        example: false
        type: boolean
        x-nullable: false
      id:
        description: consent unique identifier
        example: "1"
        format: consentID
        type: string
        x-nullable: false
      internal_services:
        description: internal services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      name:
        description: consent name
        example: EULA
        type: string
        x-nullable: false
      pii_categories:
        description: PII Categories
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      subject:
        description: subject
        example: peter
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      third_party_services:
        description: third party services
        items:
          $ref: '#/definitions/ConsentService'
        type: array
        x-nullable: false
      update_existing_grants:
        description: 'strategy for upading existing grants, one of: explicitAll, implicitAll,
          keepCurrent'
        example: explicitAll
        type: string
        x-nullable: false
      valid_from:
        description: marks the time from which the consent is in use. Can't be set
          to a future time
        example: "2019-12-11T13:44:28.772101Z"
        format: date-time
        type: string
        x-nullable: false
      version:
        description: consent version. When a consent is updated, version is incremented.
        example: 1
        format: int64
        type: integer
        x-nullable: false
    type: object
  ConsentsWithGrants:
    properties:
      consents:
        description: list of consents
        items:
          $ref: '#/definitions/ConsentWithGrant'
        type: array
        x-nullable: false
    type: object
  ContactPerson:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.3.2.2
    properties:
      Company:
        type: string
        x-nullable: false
      ContactType:
        type: string
        x-nullable: false
      EmailAddresses:
        items:
          type: string
        type: array
        x-nullable: false
      GivenName:
        type: string
        x-nullable: false
      SurName:
        type: string
        x-nullable: false
      TelephoneNumbers:
        items:
          type: string
        type: array
        x-nullable: false
    title: ContactPerson represents the SAML element ContactPerson.
    type: object
  CookiesConfiguration:
    properties:
      same_site:
        $ref: '#/definitions/SameSite'
    type: object
  CreateOrganizationRequest:
    properties:
      authentication_mechanisms:
        description: allowed authentication mechanisms
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      color:
        default: '#007FFF'
        description: Your organization's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      deactivated:
        type: boolean
        x-nullable: false
      description:
        description: Display description of the organization
        example: Organization description
        type: string
        x-nullable: false
      domains:
        description: An array of email domains configured for an organization for
          the purposes of IDP discovery
        items:
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an organization

          If not provided, a random ID is generated.
        example: default
        format: serverID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ServerMetadata'
      name:
        description: Display name of the organization
        example: default
        type: string
        x-nullable: false
      parent_id:
        description: The id of the parent workspace / organization
        format: serverID
        type: string
        x-nullable: false
      template:
        description: If true this organization can be used as a template when creating
          a new ones.
        type: boolean
        x-nullable: false
      template_id:
        description: The id of the organization template that should be used to create
          the new organization
        format: serverID
        type: string
        x-nullable: false
    type: object
  CredentialPayload:
    description: CredentialPayload credential payload
    properties:
      credential_id:
        description: credential id
        type: string
        x-nullable: false
      credential_type:
        description: credential type
        enum:
        - password
        - webauthn
        - totp
        type: string
        x-nullable: false
      operation_type:
        description: operation type
        type: string
        x-nullable: false
      user_id:
        description: user id
        type: string
        x-nullable: false
    type: object
  CrossTenantAPIPolicyBinding:
    properties:
      api_id:
        description: api id
        format: apiID
        type: string
        x-nullable: false
      api_tenant_id:
        description: api tenant id
        example: system
        format: tenantID
        type: string
        x-nullable: false
      policy_id:
        description: policy id
        format: policyID
        type: string
        x-nullable: false
      policy_server_id:
        description: policy server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      policy_tenant_id:
        description: policy tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  Cursor:
    type: string
  CustomApp:
    description: Custom Branding CustomApp
    properties:
      client_id:
        description: ClientID used for the CustomApp
        format: clientID
        type: string
        x-nullable: false
      id:
        description: ID of the CustomApp
        format: customAppID
        type: string
        x-nullable: false
      name:
        description: Name of the CustomApp
        type: string
        x-nullable: false
      server_id:
        description: ID of the server
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: ID of the tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        default: post-authn
        description: Type of the custom app
        enum:
        - post-authn
        example: post-authn
        type: string
        x-nullable: false
      url:
        description: url of the CustomApp
        type: string
        x-nullable: false
    required:
    - id
    - tenant_id
    - server_id
    - url
    type: object
  CustomCredentials:
    description: Custom IDP specific credentials
    type: object
  CustomServerConsent:
    properties:
      scope_grant_url:
        description: Deprecetad scope_grant_url. Use server_consent_url instead
        type: string
        x-nullable: false
      server_consent_url:
        type: string
        x-nullable: false
    type: object
  CustomSettings:
    description: Custom IDP specific settings
    properties:
      login_url:
        description: URL to your custom login page
        example: https://example.com/login
        type: string
        x-nullable: false
      type:
        description: |-
          Type metadata

          There are two type metadatas: `generic` and `cloudentity`. If you choose `cloudentity` and do
          not provide authentication context attributes, it defaults to using the attributes from
          Cloudentity Cloud Identity Plane (CIP).

          If not provided, the `generic` type is set.
        format: customIDPType
        type: string
        x-nullable: false
    type: object
  CustomTranslation:
    properties:
      content:
        additionalProperties:
          type: object
        description: content of the translation
        type: object
        x-nullable: false
      created_at:
        description: timestamp when the translation was created
        format: date-time
        type: string
        x-nullable: false
      enabled:
        type: boolean
        x-nullable: false
      locale:
        format: locale
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      updated_at:
        description: timestamp when the translation was last updated
        format: date-time
        type: string
        x-nullable: false
    type: object
  CustomerConsentsAuditEventPayload:
    properties:
      customer_id:
        description: customer id
        type: string
        x-nullable: false
      number_revoked:
        description: number of consents revoked
        format: int64
        type: integer
        x-nullable: false
    type: object
  DCRCreatedEventPayload:
    properties:
      city:
        description: The visitor's city
        type: string
        x-nullable: false
      client_details:
        $ref: '#/definitions/DCRDetails'
      country_code:
        description: The visitor's country
        type: string
        x-nullable: false
      dbfp:
        description: Arculix DBFP `jwt` cookie.
        type: string
        x-nullable: false
      latitude:
        description: The visitor's latitude
        type: string
        x-nullable: false
      longitude:
        description: The visitor's longitude
        type: string
        x-nullable: false
      remote_addr:
        description: Requester IP address obtained from system network socket information.
        type: string
        x-nullable: false
      true_client_ip:
        description: Requester IP address obtained from True-Client-IP header.
        type: string
        x-nullable: false
      user_agent:
        description: A characteristic string that lets servers and network peers identify
          the application, operating system, vendor, and/or version of the requesting
          user agent.
        type: string
        x-nullable: false
      x_forwarded_for:
        description: Requester IP address obtained from X-Forwarded-For header.
        type: string
        x-nullable: false
      x_real_ip:
        description: Requester IP address obtained from X-Real-IP header.
        type: string
        x-nullable: false
    type: object
  DCRDetails:
    properties:
      certificate_bound_access_token:
        type: boolean
        x-nullable: false
      client_id:
        format: clientID
        type: string
        x-nullable: false
      client_name:
        type: string
        x-nullable: false
      grant_types:
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      scopes:
        items:
          type: string
        type: array
        x-nullable: false
      software_statement_provided:
        type: boolean
        x-nullable: false
      token_endpoint_auth_method:
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        type: string
        x-nullable: false
    type: object
  DCRRejectedEventPayload:
    properties:
      city:
        description: The visitor's city
        type: string
        x-nullable: false
      country_code:
        description: The visitor's country
        type: string
        x-nullable: false
      dbfp:
        description: Arculix DBFP `jwt` cookie.
        type: string
        x-nullable: false
      error:
        description: High level error name (request_forbidden, access_denied, invalid_request).
        type: string
        x-nullable: false
      error_cause:
        description: Error root cause (invalid_pkce, invalid_state, user_policy_failed).
        type: string
        x-nullable: false
      error_description:
        description: Human readable error description
        type: string
        x-nullable: false
      error_hint:
        description: Error hint
        type: string
        x-nullable: false
      external_error:
        description: External error
        type: boolean
        x-nullable: false
      latitude:
        description: The visitor's latitude
        type: string
        x-nullable: false
      longitude:
        description: The visitor's longitude
        type: string
        x-nullable: false
      remote_addr:
        description: Requester IP address obtained from system network socket information.
        type: string
        x-nullable: false
      true_client_ip:
        description: Requester IP address obtained from True-Client-IP header.
        type: string
        x-nullable: false
      user_agent:
        description: A characteristic string that lets servers and network peers identify
          the application, operating system, vendor, and/or version of the requesting
          user agent.
        type: string
        x-nullable: false
      x_forwarded_for:
        description: Requester IP address obtained from X-Forwarded-For header.
        type: string
        x-nullable: false
      x_real_ip:
        description: Requester IP address obtained from X-Real-IP header.
        type: string
        x-nullable: false
    type: object
  DeviceAuthorizationConfiguration:
    properties:
      request_ttl:
        description: |-
          Custom device authorization request TTL
          If not provided, TTL is set to 30 minutes
        format: duration
        type: string
        x-nullable: false
      user_code_character_set:
        $ref: '#/definitions/UserCodeCharacterSet'
      user_code_length:
        description: user code length
        format: int64
        type: integer
        x-nullable: false
    type: object
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
  DurationType:
    type: string
  DynamicClientRegistrationSettings:
    properties:
      cert_bound_registration_token:
        description: Binds registration token to the certificate used to register
          client
        type: boolean
        x-nullable: false
      default_scopes:
        description: |-
          An optional list of scopes to be granted to a client when no scopes are provided in the DCR registration request

          If not provided, the following default scopes are granted for the client application: openid, address, email, phone, profile.
        items:
          type: string
        type: array
        x-nullable: false
      disable_registration_access_token_expiry:
        default: false
        description: |-
          Disable registration access token expiry

          If is flag is on, the registration access token will never expire.
        type: boolean
        x-nullable: false
      disable_registration_token_management:
        description: |-
          Disables client management using registration token

          If disabled, client can manage itself using access token issued by client credentials flow.
        type: boolean
        x-nullable: false
      disable_registration_token_rotation:
        description: Disables registration token rotation
        type: boolean
        x-nullable: false
      enabled:
        description: Enables dynamic client registration
        type: boolean
        x-nullable: false
      initial_access_token:
        $ref: '#/definitions/InitialAccessTokenSettings'
      payload:
        $ref: '#/definitions/PayloadSettings'
      registration_access_token_ttl:
        default: 720h0m0s
        description: |-
          Registration access token TTL

          Time to live of the registration access token (default 30 days).
          The minimum value is 24 hours.
        example: 720h0m0s
        format: duration
        type: string
        x-nullable: false
    type: object
  Element:
    properties:
      Attr:
        items:
          $ref: '#/definitions/Attr'
        type: array
        x-nullable: false
      Child:
        items:
          $ref: '#/definitions/Token'
        type: array
        x-nullable: false
      Space:
        type: string
        x-nullable: false
    title: An Element represents an XML element, its attributes, and its child tokens.
    type: object
  EmailAuth:
    properties:
      auth:
        description: 'SMTP auth mechanism: crammd5, plain or login'
        example: plain
        type: string
        x-nullable: false
      host:
        description: The host of the SMTP server.
        type: string
        x-nullable: false
      password:
        description: Password which is used to authenticate to the SMTP server.
        type: string
        x-nullable: false
      port:
        default: 25
        description: The port of the SMTP server.
        example: 25
        format: int64
        type: integer
        x-nullable: false
      username:
        description: Username which is used to authenticate to the SMTP server.
        type: string
        x-nullable: false
    required:
    - username
    - password
    - auth
    - host
    - port
    type: object
  EmailSettings:
    properties:
      custom_from:
        description: |-
          Custom email From address.

          If not set, the default is used.
        example: noreply@cloudentity.com
        type: string
        x-nullable: false
      custom_message_subject:
        description: |-
          Custom email subject.

          If not set, the default is used.
        type: string
        x-nullable: false
      custom_message_template:
        description: |-
          Custom email template.

          If not set, the default is used.
        type: string
        x-nullable: false
      otp:
        $ref: '#/definitions/OTPConfiguration'
      provider:
        description: Email provider.
        enum:
        - smtp
        - embedded
        example: embedded
        type: string
        x-nullable: false
    type: object
  EncryptionMethod:
    description: EncryptionMethod represents the XMLSEC object of the same name
    properties:
      Algorithm:
        type: string
        x-nullable: false
    type: object
  Endpoint:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.2.2
    properties:
      Binding:
        type: string
        x-nullable: false
      Location:
        type: string
        x-nullable: false
      ResponseLocation:
        type: string
        x-nullable: false
    title: Endpoint represents the SAML EndpointType object.
    type: object
  EntityDescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.3.2
    properties:
      AdditionalMetadataLocations:
        items:
          type: string
        type: array
        x-nullable: false
      AffiliationDescriptor:
        $ref: '#/definitions/AffiliationDescriptor'
      AttributeAuthorityDescriptors:
        items:
          $ref: '#/definitions/AttributeAuthorityDescriptor'
        type: array
        x-nullable: false
      AuthnAuthorityDescriptors:
        items:
          $ref: '#/definitions/AuthnAuthorityDescriptor'
        type: array
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPerson:
        $ref: '#/definitions/ContactPerson'
      EntityID:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      IDPSSODescriptors:
        items:
          $ref: '#/definitions/IDPSSODescriptor'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      PDPDescriptors:
        items:
          $ref: '#/definitions/PDPDescriptor'
        type: array
        x-nullable: false
      RoleDescriptors:
        items:
          $ref: '#/definitions/RoleDescriptor'
        type: array
        x-nullable: false
      SPSSODescriptors:
        items:
          $ref: '#/definitions/SPSSODescriptor'
        type: array
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
      XMLName:
        $ref: '#/definitions/Name'
    title: EntityDescriptor represents the SAML EntityDescriptor object.
    type: object
  Error:
    description: HTTP error response
    properties:
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      error_code:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  EventAddress:
    description: EventAddress event address
    properties:
      value:
        description: value
        type: string
        x-nullable: false
    type: object
  EventIdentifier:
    description: EventIdentifier event identifier
    properties:
      value:
        description: value
        type: string
        x-nullable: false
    type: object
  ExchangeError:
    type: string
  ExternalCIBAAuthenticationService:
    properties:
      credentials:
        $ref: '#/definitions/ExternalServiceCredentials'
      insecure:
        description: Do not validate cert when calling authenticator service
        type: boolean
        x-nullable: false
      url:
        description: url to the ciba authenticator service
        type: string
        x-nullable: false
    type: object
  ExternalCredentials:
    description: External IDP specific credentials
    properties:
      api_key_in:
        description: query or header
        type: string
        x-nullable: false
      api_key_name:
        description: api key name
        type: string
        x-nullable: false
      api_key_value:
        description: api key value
        type: string
        x-nullable: false
      password:
        description: http basic auth password
        type: string
        x-nullable: false
      username:
        description: http basic auth username
        type: string
        x-nullable: false
    type: object
  ExternalServiceCredentials:
    properties:
      api_key_in:
        description: query or header
        type: string
        x-nullable: false
      api_key_name:
        description: api key name
        type: string
        x-nullable: false
      api_key_value:
        description: api key value
        type: string
        x-nullable: false
      password:
        description: http basic auth password
        type: string
        x-nullable: false
      username:
        description: http basic auth username
        type: string
        x-nullable: false
    type: object
  ExternalSettings:
    description: External IDP specific settings
    properties:
      url:
        description: URL to your external datastore service
        example: https://example.com/
        type: string
        x-nullable: false
    type: object
  FDXClientStatus:
    type: string
  FDXConfiguration:
    properties:
      initial_client_status:
        $ref: '#/definitions/FDXClientStatus'
      legal_entity:
        $ref: '#/definitions/LegalEntity'
    type: object
  FDXConsent:
    properties:
      authorization_server_id:
        format: serverID
        type: string
        x-nullable: false
      client_id:
        format: clientID
        type: string
        x-nullable: false
      createdTime:
        description: Time of consent creation
        format: date-time
        type: string
        x-nullable: false
      durationPeriod:
        description: Consent duration, in days, from day of original grant.
        format: int64
        type: integer
        x-nullable: false
      durationType:
        $ref: '#/definitions/DurationType'
      expirationTime:
        description: Time of consent expiration
        format: date-time
        type: string
        x-nullable: false
      granted_resources:
        description: |-
          Enumeration of the Clusters of granted data elements permissioned by this Consent Grant.
          Data Clusters are described in FDX RFC 0167.
        items:
          $ref: '#/definitions/FDXGrantedResource'
        type: array
        x-nullable: false
      id:
        $ref: '#/definitions/FDXConsentID'
      lookbackPeriod:
        description: Period, in days, for which historical data may be requested;
          period is measured from request time, not grant time
        format: int64
        type: integer
        x-nullable: false
      parties:
        description: |-
          A collection of parameters identifying the Parties (including the legal entity operating branded products or services)
          in the data sharing chain. Descriptive information is collected during Data Recipient registration at Data Provider,
          and populated during issuance by DataProvider from its registry;
        items:
          $ref: '#/definitions/FDXConsentGrantParty'
        type: array
        x-nullable: false
      resources:
        description: |-
          Enumeration of the Clusters of requested data elements permissioned by this Consent Grant.
          Data Clusters are described in FDX RFC 0167.
        items:
          $ref: '#/definitions/FDXRequestedResource'
        type: array
        x-nullable: false
      revocationReason:
        $ref: '#/definitions/FDXConsentRevocation'
      status:
        $ref: '#/definitions/ConsentStatus'
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      updatedTime:
        description: Time of last consent's status change
        format: date-time
        type: string
        x-nullable: false
    type: object
  FDXConsentGrantParty:
    description: |-
      Consent Party entity
      Details on the non-end user parties in the Consent Grant. Includes the legal entity operating branded products or services
      in the data sharing chain. Descriptive information is collected during Data Recipient registration at Data Provider,
      and populated during issuance by Data Provider from its registry
    properties:
      homeUri:
        description: URL for party, where an end user could learn more about the company
          or application involved in the data sharing chain
        type: string
        x-nullable: false
      logoUri:
        description: URL for a logo asset to be displayed to the end user
        type: string
        x-nullable: false
      name:
        description: Common name for party, as it should be displayed to the end user
        type: string
        x-nullable: false
      registeredEntityIdentifier:
        description: Registered id of party
        type: string
        x-nullable: false
      registeredEntityName:
        description: Registered name of party
        type: string
        x-nullable: false
      registryName:
        description: The registry with the party's registered name and id
        type: string
        x-nullable: false
    type: object
  FDXConsentID:
    type: string
  FDXConsentRevocation:
    description: Revocation data
    properties:
      initiator:
        description: Revocation initiator
        enum:
        - DATA_ACCESS_PLATFORM
        - DATA_PROVIDER
        - DATA_RECIPIENT
        - INDIVIDUAL
        - MERCHANT
        - VENDOR
        example: '"INDIVIDUAL"'
        type: string
        x-nullable: false
      reason:
        description: Revocation reason
        enum:
        - BUSINESS_RULE
        - USER_ACTION
        example: '"USER_ACTION"'
        type: string
        x-nullable: false
    type: object
  FDXGrantedResource:
    properties:
      dataClusters:
        description: The names of clusters with data elements permitted.
        example:
        - ACCOUNT_DETAILED
        - TRANSACTIONS
        - STATEMENTS
        items:
          type: string
        type: array
        x-nullable: false
      id:
        description: resource ID
        example: b14e1e714693bc00
        type: string
        x-nullable: false
      resourceType:
        description: A type of resource that holds the permitted data elements. This
          parameter can be extended to support additional resource types.
        example: ACCOUNT
        type: string
        x-nullable: false
    type: object
  FDXMetadata:
    properties:
      contacts:
        description: Contact information of individuals responsible for the Data Recipient
          application.
        items:
          type: string
        type: array
        x-nullable: false
      duration_period:
        default: 365
        description: The time window the end-user grants the consent for. Used when
          `duration_type`=`TIME_BOUND`.
        format: int64
        type: integer
        x-nullable: false
      duration_type:
        default:
        - ONE_TIME
        - PERSISTENT
        - TIME_BOUND
        description: |-
          The rule of consent granting by the end-user to indicate whether they must take action
          to revoke access or the consent will be revoked automatically.

          One of: `ONE_TIME`, `PERSISTENT`, `TIME_BOUND`
        example: ONE_TIME
        items:
          $ref: '#/definitions/DurationType'
        type: array
        x-nullable: false
      intermediaries:
        description: An array of the intermediaries for this Data Recipient.
        items:
          $ref: '#/definitions/Intermediary'
        type: array
        x-nullable: false
      lookback_period:
        default: 365
        description: |-
          The maximum number of days allowed for Data Recipient consumers to obtain in transaction history, effective from
          the current date
        format: int64
        type: integer
        x-nullable: false
      registry_references:
        description: |-
          The list of external registries where the Data Recipient is registered. It comprises the following details:
          name, identifier, and the `registry` string with any additional info.
        items:
          $ref: '#/definitions/RegistryReference'
        type: array
        x-nullable: false
      status:
        $ref: '#/definitions/FDXClientStatus'
    type: object
  FDXParty:
    properties:
      home_uri:
        type: string
        x-nullable: false
      logo_uri:
        type: string
        x-nullable: false
      name:
        type: string
        x-nullable: false
      registered_entity_identifier:
        type: string
        x-nullable: false
      registered_entity_name:
        type: string
        x-nullable: false
      registry_name:
        type: string
        x-nullable: false
    type: object
  FDXRequestedResource:
    properties:
      dataClusters:
        description: The names of clusters with data elements permitted.
        example:
        - ACCOUNT_DETAILED
        - TRANSACTIONS
        - STATEMENTS
        items:
          type: string
        type: array
        x-nullable: false
      resourceType:
        description: A type of resource that holds the permitted data elements. This
          parameter can be extended to support additional resource types.
        example: ACCOUNT
        type: string
        x-nullable: false
    type: object
  Feature:
    properties:
      enabled:
        description: Feature flag state that overrides global features configuration
        example: true
        type: boolean
        x-nullable: false
      flag:
        description: Name of the feature flag
        example: visualizer
        type: string
        x-nullable: false
      tenant_id:
        description: ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
    required:
    - flag
    - enabled
    - tenant_id
    type: object
  FilePaymentConsentFileResource:
    properties:
      client_id:
        description: Client application identifier.
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      file:
        items:
          format: uint8
          type: integer
        type: array
        x-nullable: false
      server_id:
        description: Server / Workspace identifier.
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier.
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
    type: object
  FnEnvVersion:
    type: string
  Gateway:
    properties:
      authorization_server_id:
        description: authorization server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: id of a client created for this gateway for authentication
        format: clientID
        type: string
        x-nullable: false
      create_and_bind_services_automatically:
        description: if true services are created automatically for each new discovered
          api group
        type: boolean
        x-nullable: false
      default_policy_id:
        description: default policy id assigned to new APIs
        format: policyID
        type: string
        x-nullable: false
      description:
        description: description
        type: string
        x-nullable: false
      id:
        description: unique gateway id
        example: "1"
        format: gatewayID
        type: string
        x-nullable: false
      last_active:
        description: last time a client fetched configuration
        format: date-time
        type: string
        x-nullable: false
      name:
        description: gateway name
        example: Cloudentity Pyron
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      token_exchange:
        $ref: '#/definitions/GatewayTokenExchangeSettings'
      token_exchange_client_id:
        description: Token exchange client id
        format: clientID
        type: string
        x-nullable: false
      type:
        description: 'gateway type, one of: pyron, aws'
        example: pyron
        format: gatewayType
        type: string
        x-nullable: false
    type: object
  GatewayAPI:
    properties:
      api_type:
        enum:
        - rest
        - graphql
        type: string
        x-nullable: false
      graphql_schema:
        type: string
        x-nullable: false
      method:
        type: string
        x-nullable: false
      path:
        type: string
        x-nullable: false
    type: object
  GatewayAPIGroup:
    properties:
      apis:
        description: List of APIs
        items:
          $ref: '#/definitions/GatewayAPI'
        type: array
        x-nullable: false
      gateway_id:
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: API group ID
        format: apiGroupID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/APIGroupMetadata'
      name:
        description: API group name
        type: string
        x-nullable: false
      server_id:
        format: serverID
        type: string
        x-nullable: false
      service_id:
        format: serviceID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  GatewayConfiguration:
    properties:
      apis:
        description: List of APIs that this gateway should protect.
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      dynamic_scope_separator:
        description: Used to define how to split dynamic scopes
        format: dynamicScopeSeparator
        type: string
        x-nullable: false
      events_per_second:
        description: events per second limit
        format: int64
        type: integer
        x-nullable: false
      issuer_apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      issuer_policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      issuer_url:
        description: Authorization server issuer url.
        type: string
        x-nullable: false
      jwks_url:
        description: Authorization server JWKs url.
        type: string
        x-nullable: false
      policies:
        description: List of policies that can be used to protect APIs.
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      scopes:
        description: List of scopes available in the server.
        items:
          $ref: '#/definitions/ScopeWithService'
        type: array
        x-nullable: false
      server_id:
        description: ServerID that this gateway belongs to.
        format: serverID
        type: string
        x-nullable: false
      services:
        description: List of services that belongs to the server.
        items:
          $ref: '#/definitions/ServiceConnectedToGateway'
        type: array
        x-nullable: false
      tenant_id:
        description: TenantID that this gateway belongs to.
        format: tenantID
        type: string
        x-nullable: false
      token_exchange_enabled:
        description: Is token exchange enabled
        type: boolean
        x-nullable: false
    type: object
  GatewayExchangeResponse:
    properties:
      access_token:
        description: Exchanged access token
        type: string
        x-nullable: false
      error:
        $ref: '#/definitions/ExchangeError'
      exchanged:
        description: has token been exchanged
        type: boolean
        x-nullable: false
      expires_in:
        description: Access token expiration
        format: int64
        type: integer
        x-nullable: false
    type: object
  GatewayRequestEvent:
    properties:
      api_id:
        format: apiID
        type: string
        x-nullable: false
      duration_ms:
        format: int64
        type: integer
        x-nullable: false
      invocation_ctx:
        $ref: '#/definitions/AuthenticationContext'
      output:
        additionalProperties:
          type: string
        type: object
        x-nullable: false
      result:
        $ref: '#/definitions/PolicyValidationResult'
      token:
        type: string
        x-nullable: false
      user_agent:
        type: string
        x-nullable: false
      x_forwarded_for:
        type: string
        x-nullable: false
      x_real_ip:
        type: string
        x-nullable: false
    type: object
  GatewayRequestEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/GatewayRequestEvent'
        type: array
        x-nullable: false
    type: object
  GatewayRequestsEventsResponse:
    properties:
      number_of_pushed_events:
        format: int64
        type: integer
        x-nullable: false
    type: object
  GatewayTokenExchangeSettings:
    properties:
      enabled:
        type: boolean
        x-nullable: false
      trusted_idp_ids:
        items:
          format: idpID
          type: string
        type: array
        x-nullable: false
    type: object
  GithubCredentials:
    description: GitHub IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret from your GitHub Oauth application
          settings
        type: string
        x-nullable: false
    type: object
  GithubSettings:
    description: GitHub IDP specific settings
    properties:
      client_id:
        description: |-
          Client ID of your OAuth application registered in GitHub

          You can find your client ID in GitHub > Settings > Developer Settings > OAuth Apps > Your Application
        example: client
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          If enabled, the `groups` attribute from the authentication context gets populated with the
          user's groups and takes from of `organization_id.group name`
        type: boolean
        x-nullable: false
      scopes:
        description: |-
          An array of allowed OAuth scopes which the client requests

          The following scopes can be configured for GitHub application:
          `phone`, `email`, `openid`, `profile`.
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  GoogleCredentials:
    description: Google IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  GoogleSettings:
    description: Google IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          endpoint.
        type: boolean
        x-nullable: false
      issuer_url:
        description: URL used to define the {baseURL} for any OpenID Connect endpoint
          when authorizing against ACP.
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  GoogleWorkspaceCredentials:
    description: GoogleWorkspace IDP specific credentials
    properties:
      client_secret:
        description: Application secret from your GoogleWorkspace application settings
        type: string
        x-nullable: false
      service_account:
        additionalProperties:
          type: object
        description: |-
          service account JSON containing credentials to fetch groups using admin directory API
          required if `fetch_groups` is set to `true`
        type: object
        x-nullable: false
    type: object
  GoogleWorkspaceSettings:
    description: GoogleWorkspace IDP specific settings
    properties:
      admin_email:
        description: |-
          The email of a super user which the service account will impersonate when listing groups
          required if `fetch_groups` is set to `true`
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      fetch_groups:
        description: Fetch user groups
        type: boolean
        x-nullable: false
      hosted_domains:
        description: List of domains permitted for user authentication
        items:
          type: string
        type: array
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  GrantedClaims:
    items:
      format: claimName
      type: string
    type: array
  GrantedScopes:
    items:
      format: scopeName
      type: string
    type: array
  GrantedVerifiedClaims:
    items:
      format: claimName
      type: string
    type: array
  GraphQLField:
    properties:
      can_have_policy:
        description: if false it is not possible to assign a policy, set to false
          if policy is declaratively assigned
        type: boolean
        x-nullable: false
      name:
        description: name of graphQL field
        example: id
        type: string
        x-nullable: false
      policy_id:
        description: optional id of a policy
        example: block
        format: policyID
        type: string
        x-nullable: false
    type: object
  GraphQLType:
    properties:
      can_have_policy:
        description: if false it is not possible to assign a policy, set to false
          if policy is declaratively assigned
        type: boolean
        x-nullable: false
      fields:
        description: optional fields of graphql type
        items:
          $ref: '#/definitions/GraphQLField'
        type: array
        x-nullable: false
      name:
        description: name of graphQL type, currently supported types are Interfaces
          and Objects
        example: block
        type: string
        x-nullable: false
      policy_id:
        description: optional id of a policy
        example: block
        format: policyID
        type: string
        x-nullable: false
    type: object
  GraphQLTypes:
    items:
      $ref: '#/definitions/GraphQLType'
    type: array
  Group:
    description: Group group
    properties:
      description:
        description: description
        type: string
        x-nullable: false
      id:
        description: id
        type: string
        x-nullable: false
      name:
        description: name
        type: string
        x-nullable: false
      parent_id:
        description: parent id
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        type: string
        x-nullable: false
      user_pool_id:
        description: user pool id
        example: default
        type: string
        x-nullable: false
    required:
    - user_pool_id
    type: object
  IDP:
    properties:
      attributes:
        $ref: '#/definitions/Attributes'
      authorization_server_id:
        description: ID of the authorization server (workspace) to which the IDP is
          connected
        format: serverID
        type: string
        x-nullable: false
      client_id:
        description: |-
          Client application ID

          It serves as a reference to a client application that is created in the System authorization
          server (workspace), when a custom login page is created.
        format: clientID
        type: string
        x-nullable: false
      config:
        $ref: '#/definitions/IDPConfiguration'
      credentials:
        $ref: '#/definitions/IDPCredentials'
      disabled:
        description: |-
          If set to `true`, the IDP is disabled

          When an IDP is disabled, it is not available for the users to be used. It is also not
          displayed on the login page.
        type: boolean
        x-nullable: false
      discovery_settings:
        $ref: '#/definitions/IDPDiscoverySettings'
      display_order:
        description: Can be used to e.g. modify the order in which the Identity Providers
          are presented on the login page.
        example: 1
        format: int64
        type: integer
        x-nullable: false
      hidden:
        description: |-
          If set to `true`, the IDP is not displayed on the login page.

          When an IDP is hidden, it will not be displayed on the login page. It can still be used
          and script extensions can enabled it.
        type: boolean
        x-nullable: false
      id:
        description: |-
          Unique ID of your identity provider

          If not provided, a random ID is generated.
        format: idpID
        type: string
        x-nullable: false
      identity_pool_id:
        description: ID of the Identity Pool to which the IDP is connected
        format: poolID
        type: string
        x-nullable: false
      jit:
        $ref: '#/definitions/JITSettings'
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: |-
          Defines the type of an IDP

          Cloudentity is designed to make it possible for you to bring any of your own IDPs and integrate it
          with Cloudentity as it delivers enterprise connectors for major Cloud IDPs and a possibility for
          custom integration DKS for home-built solutions. You can also use built-in Sandbox IDP, which
          is a static IDP, to create an IDP for testing purposes.
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of your IDP
        type: string
        x-nullable: false
      post_authn_app_id:
        description: Points to the ID of the custom app, null if not set
        format: customAppID
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/IDPSettings'
      sso_settings:
        $ref: '#/definitions/IDPSSOSettings'
      static_amr:
        description: |-
          Authentication method reference

          An array of case sensitive strings for authentication methods that are used in the user
          authentication.

          For example, an IDP may require the user to provide a biometric authentication using facial
          recognition. For that, the value of the authentication method reference is `face`.
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      tenant_id:
        description: ID of the tenant where an IDP is connected
        format: tenantID
        type: string
        x-nullable: false
      token_exchange_settings:
        $ref: '#/definitions/IDPTokenExchangeSettings'
      version:
        description: |-
          IDP version to track internal changes
          version that is currently supported: 3
        format: int64
        type: integer
        x-nullable: false
      workspace_id:
        description: ID of the Workspace to which the IDP is connected
        format: serverID
        type: string
        x-nullable: false
    type: object
  IDPConfiguration:
    properties:
      reload_claims_at_refresh_token:
        description: |-
          If set to `true`, the claims are reloaded while issuing an access token.

          Currently it is only available for Identity Pool IDP.
        type: boolean
        x-nullable: false
      use_embedded:
        description: |-
          Indicates whether the embedded configuration, which functions out of the box, should be used

          This may only apply to specific IDPs, such as LinkedIn.
        type: boolean
        x-nullable: false
    type: object
  IDPCredentials:
    properties:
      apple:
        $ref: '#/definitions/AppleCredentials'
      auth0:
        $ref: '#/definitions/Auth0Credentials'
      azure:
        $ref: '#/definitions/AzureCredentials'
      azureb2c:
        $ref: '#/definitions/AzureB2CCredentials'
      cognito:
        $ref: '#/definitions/CognitoCredentials'
      custom:
        $ref: '#/definitions/CustomCredentials'
      external:
        $ref: '#/definitions/ExternalCredentials'
      github:
        $ref: '#/definitions/GithubCredentials'
      google:
        $ref: '#/definitions/GoogleCredentials'
      google_workspace:
        $ref: '#/definitions/GoogleWorkspaceCredentials'
      intelli_trust:
        $ref: '#/definitions/IntelliTrustCredentials'
      linkedin:
        $ref: '#/definitions/LinkedInCredentials'
      meta:
        $ref: '#/definitions/MetaCredentials'
      microsoft:
        $ref: '#/definitions/MicrosoftCredentials'
      oauth2:
        $ref: '#/definitions/OAuth2Credentials'
      oidc:
        $ref: '#/definitions/OIDCCredentials'
      okta:
        $ref: '#/definitions/OktaCredentials'
      okta_v2:
        $ref: '#/definitions/OktaV2Credentials'
      saml:
        $ref: '#/definitions/SAMLCredentials'
      saml_v2:
        $ref: '#/definitions/SAMLV2Credentials'
      static:
        $ref: '#/definitions/StaticCredentials'
      x:
        $ref: '#/definitions/XCredentials'
    type: object
  IDPDiscovery:
    properties:
      discovery_mode:
        enum:
        - domain_matching
        - script_execution
        type: string
        x-nullable: false
      enabled:
        description: |-
          If enabled, IDP discovery automatically redirects the user to their own IDP and does not
          display IDPs of other users while the users accesses the server/application.
        example: false
        type: boolean
        x-nullable: false
    type: object
  IDPDiscoverySettings:
    properties:
      domains:
        description: |-
          An array of email domains configured for an IDP for the purposes of IDP discovery

          If a domain is connected to an IDP and this domain is used during the login process, the IDP
          is automatically discovered and the user is either presented with a suggested IDP or is
          instantly redirected to their IDP configured for the user's email domain.
        items:
          $ref: '#/definitions/IDPDomain'
        type: array
        x-nullable: false
      fallback_provider:
        description: |-
          When enabled, this provider will appear on the selection list, in case the discovery process
          could not find a matching provider. This can be used to limit the username enumeration attacks
          and at least one of the providers is recommended to be set as fallback provider.
        type: boolean
        x-nullable: false
      identifier_based_matching:
        description: |-
          When enabled, the system will first attempt to find the identifier in the corresponding user store.

          This function is only applicable for Identity Pools and Identity Providers that have Provisioning
          mechanism activated.
        type: boolean
        x-nullable: false
      instant_redirect:
        description: |-
          If the intelligent IDP discovery is enabled and the instant redirect flag is on, the user is
          instantly redirected to a proper Identity Provider as soon as a match is hit based on the
          domain when a user is typing their email in the username field
        type: boolean
        x-nullable: false
    type: object
  IDPDomain:
    type: string
  IDPPayload:
    properties:
      id:
        description: Unique identifierof IDP.
        format: idpID
        type: string
        x-nullable: false
      mappings:
        $ref: '#/definitions/Mappings'
      method:
        description: Defines the type of an IDP, e.g. google, saml
        format: idpMethod
        type: string
        x-nullable: false
      name:
        description: Display name of IDP.
        type: string
        x-nullable: false
    type: object
  IDPSSODescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.3
    properties:
      ArtifactResolutionServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      AssertionIDRequestServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      AttributeProfiles:
        items:
          type: string
        type: array
        x-nullable: false
      Attributes:
        items:
          $ref: '#/definitions/Attribute'
        type: array
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPeople:
        items:
          $ref: '#/definitions/ContactPerson'
        type: array
        x-nullable: false
      ErrorURL:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      ManageNameIDServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      NameIDFormats:
        items:
          $ref: '#/definitions/NameIDFormat'
        type: array
        x-nullable: false
      NameIDMappingServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      ProtocolSupportEnumeration:
        type: string
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      SingleLogoutServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      SingleSignOnServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
      WantAuthnRequestsSigned:
        type: boolean
        x-nullable: false
      XMLName:
        $ref: '#/definitions/Name'
    title: IDPSSODescriptor represents the SAML IDPSSODescriptorType object.
    type: object
  IDPSSOSettings:
    properties:
      disabled:
        description: Opt this IDP out of workspace SSO enablement
        type: boolean
        x-nullable: false
    type: object
  IDPSettings:
    properties:
      apple:
        $ref: '#/definitions/AppleSettings'
      auth0:
        $ref: '#/definitions/Auth0Settings'
      azure:
        $ref: '#/definitions/AzureSettings'
      azureb2c:
        $ref: '#/definitions/AzureB2CSettings'
      cognito:
        $ref: '#/definitions/CognitoSettings'
      custom:
        $ref: '#/definitions/CustomSettings'
      external:
        $ref: '#/definitions/ExternalSettings'
      github:
        $ref: '#/definitions/GithubSettings'
      google:
        $ref: '#/definitions/GoogleSettings'
      google_workspace:
        $ref: '#/definitions/GoogleWorkspaceSettings'
      intelli_trust:
        $ref: '#/definitions/IntelliTrustSettings'
      linkedin:
        $ref: '#/definitions/LinkedInSettings'
      meta:
        $ref: '#/definitions/MetaSettings'
      microsoft:
        $ref: '#/definitions/MicrosoftSettings'
      oauth2:
        $ref: '#/definitions/OAuth2Settings'
      oidc:
        $ref: '#/definitions/OIDCSettings'
      okta:
        $ref: '#/definitions/OktaSettings'
      okta_v2:
        $ref: '#/definitions/OktaV2Settings'
      saml:
        $ref: '#/definitions/SAMLSettings'
      saml_v2:
        $ref: '#/definitions/SAMLV2Settings'
      static:
        $ref: '#/definitions/StaticSettings'
      x:
        $ref: '#/definitions/XSettings'
    type: object
  IDPTokenExchangeSettings:
    properties:
      enabled:
        description: If enabled token issued by this IDP can be used for token exchange
        type: boolean
        x-nullable: false
    type: object
  IDPs:
    items:
      $ref: '#/definitions/IDP'
    type: array
  IdentifierType:
    type: string
  IdentityAssuranceConfiguration:
    properties:
      attachments:
        description: JSON array containing all attachment types supported by the OP.  REQUIRED
          when OP supports attachments. Possible values are external and embedded.
        items:
          type: string
        type: array
        x-nullable: false
      block_verified_claims_via_userinfo:
        description: If enabled, verified claims request via userinfo will be blocked
        type: boolean
        x-nullable: false
      digest_algorithms:
        description: |-
          REQUIRED when OP supports external attachments. JSON array containing all supported digest algorithms which can be used as alg property within
          the digest object of external attachments. If the OP supports external attachments, at least the algorithm sha-256 MUST be supported by the OP as well.
        items:
          type: string
        type: array
        x-nullable: false
      documents:
        description: JSON array containing all identity document types utilized by
          the OP for identity verification. REQUIRED when evidence_supported contains
          "document".
        items:
          type: string
        type: array
        x-nullable: false
      documents_check_methods:
        description: JSON array containing the check methods the OP supports for evidences
          of type "document".
        items:
          type: string
        type: array
        x-nullable: false
      documents_methods:
        description: JSON array containing the methods the OP supports for evidences
          of type "document".
        items:
          type: string
        type: array
        x-nullable: false
      electronic_records:
        description: JSON array containing all electronic record types the OP supports.
          REQUIRED when evidence_supported contains "electronic_record".
        items:
          type: string
        type: array
        x-nullable: false
      enable_verified_claims:
        description: Boolean value indicating support for verified_claims, i.e., the
          OpenID Connect for Identity Assurance extension.
        type: boolean
        x-nullable: false
      evidence:
        description: JSON array containing all types of identity evidence the OP uses.
        items:
          type: string
        type: array
        x-nullable: false
      trust_frameworks:
        description: JSON array containing all supported trust frameworks.
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  IndexedEndpoint:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.2.3
    properties:
      Binding:
        type: string
        x-nullable: false
      Index:
        format: int64
        type: integer
        x-nullable: false
      IsDefault:
        type: boolean
        x-nullable: false
      Location:
        type: string
        x-nullable: false
      ResponseLocation:
        type: string
        x-nullable: false
    title: IndexedEndpoint represents the SAML IndexedEndpointType object.
    type: object
  InitialAccessTokenSettings:
    properties:
      required:
        description: |-
          Enables initial access token for dynamic client registration

          If enabled, the registration endpoint requires an access token with the dcr_register scope granted.
          To issue the access token, you need a separate client with the client credentials grant type.
          Upon successful registration, the access token is terminated.
        type: boolean
        x-nullable: false
    type: object
  IntelliTrustCredentials:
    description: IntelliTrust™ IDP specific credentials
    properties:
      client_secret:
        description: |-
          OAuth client application secret from your Entrust Datacard® IntelliTrust™ Authentication
          Service general settings
        type: string
        x-nullable: false
    type: object
  IntelliTrustSettings:
    description: IntelliTrust™ IDP specific settings
    properties:
      client_id:
        description: |-
          OAuth client application identifier from your Entrust Datacard® IntelliTrust™ Authentication
          Service general settings
        example: client
        type: string
        x-nullable: false
      domain:
        description: String represented domain of the Entrust Datacard® IntelliTrust™
          Authentication Service for your organization
        example: cloudentity-dev.us.trustedauth.com
        type: string
        x-nullable: false
      fetch_groups:
        description: |-
          If enabled, the groups a user belongs to are collected

          If you want to fetch groups from the IntelliTrust™ IDP, you need to add the `groups` claim
          for your application on the IDP side.
        type: boolean
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          IntelliTrust™ endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  Intermediary:
    properties:
      contacts:
        description: Array of strings representing ways to contact people responsible
          for this intermediary
        items:
          type: string
        type: array
        x-nullable: false
      description:
        description: A short description of the intermediary
        type: string
        x-nullable: false
      logo_uri:
        description: A URL string that references a logo for this intermediary
        type: string
        x-nullable: false
      name:
        description: Name of intermediary party
        type: string
        x-nullable: false
      registry_references:
        description: Registry references for this intermediary
        items:
          $ref: '#/definitions/RegistryReference'
        type: array
        x-nullable: false
      uri:
        description: A URL string of a web page providing information about the intermediary
        type: string
        x-nullable: false
    type: object
  InternalAuditEvent:
    properties:
      action:
        enum:
        - authenticated
        - challenged
        - authorized
        - unauthorized
        - created
        - updated
        - deleted
        - generated
        - requested
        - confirmed
        - accepted
        - rejected
        - revoked
        - notified
        - issued
        - denied
        - granted
        - attempted
        - failed
        - succeeded
        - sent
        - not_sent
        - executed
        - calculated
        - reset_requested
        - reset_completed
        - add_requested
        - add_completed
        - added_to_group
        - removed_from_group
        type: string
        x-nullable: false
      event_id:
        format: eventID
        type: string
        x-nullable: false
      event_payload:
        type: object
        x-nullable: false
      event_subject:
        enum:
        - request
        - gateway_request
        - gateway_policy
        - policy
        - client
        - credential
        - login
        - risk
        - post_authn
        - recovery
        - consent
        - client_consents
        - customer_consents
        - authorization_code
        - access_token
        - saml_assertion
        - scopes
        - claims
        - otp
        - user
        - schema
        - pool
        - password
        - bruteforce
        - dcr
        - script
        - role
        - task
        - jit
        - tokens
        - service
        - server
        - import
        - organization
        - otp_inspect
        - totp
        - webauthn
        - group
        type: string
        x-nullable: false
      event_type:
        $ref: '#/definitions/AuditEventType'
      metadata:
        $ref: '#/definitions/AuditEventMetadata'
      server_id:
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      timestamp:
        format: date-time
        type: string
        x-nullable: false
    type: object
  IntrospectResponse:
    properties:
      acr:
        description: Authentication context class reference
        type: string
        x-nullable: false
      act:
        additionalProperties:
          type: object
        description: Actor claims used in the Token Exchange flow.
        type: object
        x-nullable: false
      active:
        description: |-
          Active is a boolean indicator of whether or not the presented token
          is currently active. The specifics of a token's `active` state
          varies depending on the implementation of an authorization
          server and the information it keeps about its token. Still, the `true`
          value returned for the `active` property generally indicates
          that a given token has been issued by this authorization server,
          has not been revoked by the resource owner, and is within its
          given time window of validity (e.g., between its issuance and
          expiration time).
        type: boolean
        x-nullable: false
      amr:
        description: Authentication method references
        items:
          type: string
        type: array
        x-nullable: false
      aud:
        description: Audience contains the list of the audiences the token is intended
          for.
        items:
          type: string
        type: array
        x-nullable: false
      authorization_details:
        description: Granted authorization details
        items:
          additionalProperties:
            type: object
          type: object
        type: array
        x-nullable: false
      client_id:
        description: |-
          A client application identifier for the OAuth 2.0 client that
          requested this token.
        type: string
        x-nullable: false
      cnf:
        $ref: '#/definitions/Confirmation'
      exp:
        description: |-
          ExpiredAt is the integer timestamp measured in the number of seconds
          since January 1 1970 UTC (1970-01-01T00:00:00Z). It indicates when this token will expire.
        format: int64
        type: integer
        x-nullable: false
      ext:
        additionalProperties:
          type: object
        description: Extra is arbitrary data set by the session.
        type: object
        x-nullable: false
      iat:
        description: |-
          IssuedAt is the integer timestamp measured in the number of seconds
          since January 1 1970 UTC. It indicates when this token was
          originally issued.
        format: int64
        type: integer
        x-nullable: false
      idp:
        description: The identifier of an identity provider that user authenticated
          with.
        type: string
        x-nullable: false
      idp_sub:
        description: IDP subject
        type: string
        x-nullable: false
      iss:
        description: Issuer URL is a string representing the issuer of this token.
        type: string
        x-nullable: false
      may_act:
        additionalProperties:
          type: object
        description: May act claims used in the Token Exchange flow.s
        type: object
        x-nullable: false
      nbf:
        description: |-
          NotBefore is an integer timestamp measured in the number of seconds
          since January 1 1970 UTC. It indicates this token was not
          used before the specified time.
        format: int64
        type: integer
        x-nullable: false
      scope:
        description: |-
          Scope is a JSON string containing a space-separated list of
          scopes associated with this token.
        type: string
        x-nullable: false
      server_id:
        description: |-
          The OAuth 2.0 authorization server identifier that
          issued this token.
        type: string
        x-nullable: false
      sub:
        description: |-
          Subject of the token, as defined in JWT [RFC7519].
          Usually a machine-readable identifier of the resource owner who
          authorized this token.
        type: string
        x-nullable: false
      tenant_id:
        description: |-
          TenantID identifies a tenant holding the authorization server that
          issued this token.
        type: string
        x-nullable: false
      token_type:
        description: TokenType is the type of the introspected token. For example,
          `access_token` or `refresh_token`.
        type: string
        x-nullable: false
      username:
        description: |-
          Username is a human-readable identifier for the resource owner who
          authorized this token.
        type: string
        x-nullable: false
    type: object
  JITAdressVerificationMode:
    type: string
  JITCreatedPayload:
    properties:
      admin_role_type:
        type: string
        x-nullable: false
      authentication_flow_control:
        $ref: '#/definitions/PreProvisioningAuthenticationFlowControl'
      idp:
        $ref: '#/definitions/IDPPayload'
      mode:
        $ref: '#/definitions/ProvisioningMode'
      pool_id:
        format: poolID
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
    type: object
  JITDeniedPayload:
    properties:
      authentication_flow_control:
        $ref: '#/definitions/PreProvisioningAuthenticationFlowControl'
      idp:
        $ref: '#/definitions/IDPPayload'
      mode:
        $ref: '#/definitions/ProvisioningMode'
      pool_id:
        format: poolID
        type: string
        x-nullable: false
    type: object
  JITFailedPayload:
    properties:
      authentication_flow_control:
        $ref: '#/definitions/PreProvisioningAuthenticationFlowControl'
      error:
        type: string
        x-nullable: false
      idp:
        $ref: '#/definitions/IDPPayload'
      idp_sub:
        format: subject
        type: string
        x-nullable: false
      mode:
        $ref: '#/definitions/ProvisioningMode'
      pool_id:
        format: poolID
        type: string
        x-nullable: false
      user_mapping:
        $ref: '#/definitions/JITUser'
      user_to_provision:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
    type: object
  JITProvisioning:
    properties:
      admin_role_type:
        description: Admin role assigned to the provisioned user if JIT is enabled
          (available only for admin workspaces only)
        enum:
        - admin
        - business_admin
        - auditor
        - member
        type: string
        x-nullable: false
      identifier_salt:
        type: string
        x-nullable: false
      mode:
        $ref: '#/definitions/ProvisioningMode'
      pool_id:
        format: poolID
        type: string
        x-nullable: false
      pre_provisioning:
        $ref: '#/definitions/PreProvisioningConfiguration'
      user:
        $ref: '#/definitions/JITUser'
    type: object
  JITSettings:
    properties:
      enabled:
        type: boolean
        x-nullable: false
      provisioning:
        $ref: '#/definitions/JITProvisioning'
    type: object
  JITUpdatedPayload:
    properties:
      authentication_flow_control:
        $ref: '#/definitions/PreProvisioningAuthenticationFlowControl'
      idp:
        $ref: '#/definitions/IDPPayload'
      mode:
        $ref: '#/definitions/ProvisioningMode'
      new_account_linked:
        type: boolean
        x-nullable: false
      pool_id:
        format: poolID
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
    type: object
  JITUser:
    properties:
      addresses:
        items:
          $ref: '#/definitions/JITUserAddress'
        type: array
        x-nullable: false
      attributes_mapping:
        $ref: '#/definitions/UserAttributesMapping'
      identifiers:
        items:
          $ref: '#/definitions/JITUserIdentifier'
        type: array
        x-nullable: false
    type: object
  JITUserAddress:
    properties:
      source:
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/IdentifierType'
      verification_mode:
        $ref: '#/definitions/JITAdressVerificationMode'
    type: object
  JITUserIdentifier:
    properties:
      source:
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/IdentifierType'
    type: object
  JWSPayloadSettings:
    properties:
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: URI of the JWKs of the trusted party responsible for signing
          request body
        type: string
        x-nullable: false
      source:
        description: |-
          JWK source - defines where are the keys for validating dcr request signature
          Keys can be defined at server level or can be taken from jwks_uri claim from the software statement sent by the client
        format: jwkSource
        type: string
        x-nullable: false
    type: object
  JobID:
    type: string
  JwtClaims:
    additionalProperties:
      type: object
    type: object
  KSAConsent:
    properties:
      client_id:
        description: Client application identifier
        example: bugkgm23g9kregtu051g
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        description: Consent identifier
        example: cavbbioiagh6fla7koig
        type: string
        x-nullable: false
      created_at:
        description: Consent creation date
        example: "2022-07-01T08:52:27.127932Z"
        format: date-time
        type: string
        x-nullable: false
      expiry:
        description: Consent expiration date
        example: "2023-03-01T09:02:27.127932Z"
        format: date-time
        type: string
        x-nullable: false
      server_id:
        description: Workspace identifier
        example: server
        format: serverID
        type: string
        x-nullable: false
      status:
        $ref: '#/definitions/ConsentStatus'
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
    type: object
  KeyDescriptor:
    description: KeyDescriptor represents the XMLSEC object of the same name
    properties:
      EncryptionMethods:
        items:
          $ref: '#/definitions/EncryptionMethod'
        type: array
        x-nullable: false
      KeyInfo:
        $ref: '#/definitions/KeyInfo'
      Use:
        type: string
        x-nullable: false
    type: object
  KeyInfo:
    description: KeyInfo represents the XMLSEC object of the same name
    properties:
      X509Data:
        $ref: '#/definitions/X509Data'
      XMLName:
        $ref: '#/definitions/Name'
    type: object
  LegalEntity:
    properties:
      party:
        $ref: '#/definitions/FDXParty'
    type: object
  LinkedInCredentials:
    description: LinkedIn IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  LinkedInSettings:
    description: LinkedIn IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  LocalizedName:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.2.4
    properties:
      Lang:
        type: string
        x-nullable: false
      Value:
        type: string
        x-nullable: false
    title: LocalizedName represents the SAML type localizedNameType.
    type: object
  LocalizedURI:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.2.5
    properties:
      Lang:
        type: string
        x-nullable: false
      Value:
        type: string
        x-nullable: false
    title: LocalizedURI represents the SAML type localizedURIType.
    type: object
  LoginAccepted:
    properties:
      redirect_to:
        description: |-
          URL pointing to Cloudentity where the user is redirected to after authenticating with their identity source.
          Applies only for the redirect authorization flows.
        example: https://authorization.cloudentity.com:8443/tenant/server/oauth2/authorize?client_id=bugkgm23g9kregtu051g&6consent_verified=false&login_id=cavai7d8s9nelp7k792g&login_state=cauq8fonbud6q8806bf0
        type: string
        x-nullable: false
    type: object
  LoginFailedPayload:
    properties:
      cause:
        type: string
        x-nullable: false
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      error_description:
        type: string
        x-nullable: false
      error_hint:
        type: string
        x-nullable: false
      idp:
        $ref: '#/definitions/IDPPayload'
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  LoginPayload:
    properties:
      amr:
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      idp:
        $ref: '#/definitions/IDPPayload'
    type: object
  LoginRejected:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  LoginSessionResponse:
    properties:
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      allowed_scopes:
        additionalProperties:
          type: boolean
        description: scopes that passed policy validation
        type: object
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      authorization_correlation_id:
        description: authorization correlation id
        format: authorizationCorrelationID
        type: string
        x-nullable: false
      authorization_details:
        description: authorization details
        items:
          additionalProperties:
            type: object
          type: object
        type: array
        x-nullable: false
      client_id:
        description: OAuth client identifier
        example: default
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      error:
        $ref: '#/definitions/RFC6749Error'
      granted_audience:
        description: list of granted audience
        items:
          type: string
        type: array
        x-nullable: false
      granted_scopes:
        description: list of granted scopes
        example:
        - email
        - profile
        - openid
        items:
          format: scopeName
          type: string
        type: array
        x-nullable: false
      id:
        description: unique id of login session
        format: loginID
        type: string
        x-nullable: false
      idp_id:
        description: idp identifier
        format: idpID
        type: string
        x-nullable: false
      idp_subject:
        description: idp subject
        format: subject
        type: string
        x-nullable: false
      login_approved:
        description: is login approved
        example: false
        type: boolean
        x-nullable: false
      login_rejected:
        description: is login rejected
        example: false
        type: boolean
        x-nullable: false
      max_age:
        description: max age for a session to live
        format: duration
        type: string
        x-nullable: false
      request_query_params:
        $ref: '#/definitions/Values'
      request_url:
        description: original url requested by oauth client
        type: string
        x-nullable: false
      requested_acr:
        description: requested acr
        items:
          type: string
        type: array
        x-nullable: false
      requested_at:
        description: time when oauth client made a request
        format: date-time
        type: string
        x-nullable: false
      requested_audience:
        description: list of requested audiences
        items:
          type: string
        type: array
        x-nullable: false
      requested_claims:
        $ref: '#/definitions/ClaimsRequests'
      requested_claims_to_consent:
        description: requested claims to display on consent page
        items:
          type: string
        type: array
        x-nullable: false
      requested_grant_type:
        description: requested grant type
        type: string
        x-nullable: false
      requested_max_age:
        description: requested max age
        type: string
        x-nullable: false
      requested_redirect_uri:
        description: requested redirect uri
        type: string
        x-nullable: false
      requested_scopes:
        description: list of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      requested_verified_claims:
        $ref: '#/definitions/VerifiedClaimsRequests'
      scope_grant_approved:
        description: is scope grant approved
        example: true
        type: boolean
        x-nullable: false
      scope_grant_rejected:
        description: is scope grant rejected
        example: false
        type: boolean
        x-nullable: false
      server_id:
        description: authorization server identifier
        example: default
        format: serverID
        type: string
        x-nullable: false
      subject:
        description: user identifier
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant identifier
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  MFAAuth:
    properties:
      arculix:
        $ref: '#/definitions/ArculixAuth'
      email:
        $ref: '#/definitions/EmailAuth'
      sms:
        $ref: '#/definitions/SMSAuth'
    type: object
  MFAMethod:
    properties:
      auth:
        $ref: '#/definitions/MFAAuth'
      enabled:
        type: boolean
        x-nullable: false
      id:
        format: mfaMethodID
        type: string
        x-nullable: false
      mechanism:
        enum:
        - sms
        - email
        example: email
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/MFASettings'
      tenant_id:
        example: default
        format: tenantID
        type: string
        x-nullable: false
    required:
    - tenant_id
    - mechanism
    - enabled
    type: object
  MFASettings:
    properties:
      email:
        $ref: '#/definitions/EmailSettings'
      sms:
        $ref: '#/definitions/SMSSettings'
    type: object
  Mapping:
    description: Source and target must be provided.
    properties:
      allow_weak_decoding:
        description: |-
          If enabled, the decoder makes the following "weak" conversions:

          Bools to string (true = "1", false = "0")

          numbers to string (base 10)

          bools to int/uint (true = 1, false = 0)

          strings to int/uint (base implied by prefix)

          int to bool (true if value != 0)

          string to bool (accepts only the following: 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False)

          empty array = empty map and vice versa

          negative numbers to overflowed uint values (base 10)

          slice of maps to a merged map

          single values are converted to slices if required. Each element is weakly decoded.
        example: false
        type: boolean
        x-nullable: false
      mode:
        $ref: '#/definitions/MappingMode'
      source:
        description: |-
          Source attribute.

          Source path to the attribute(s) which should be copied to the authentication context.
          Use '.' to copy everything.
          Required for dynamic mode.
        example: access_token
        type: string
        x-nullable: false
      static:
        description: When static mode is used, this field contains a value that will
          be populated into a target attribute.
        type: object
        x-nullable: false
      target:
        description: |-
          Target attribute.

          Target path in the authentication context where source attribute(s) should be pasted.
          Use '.' to paste to the context top level object.
        example: .
        type: string
        x-nullable: false
      type:
        description: |-
          Type of the target attribute

          The `type` parameter accepts the following values:
          `number`, `string`, `bool`, `number_array`, `string_array`, `bool_array`, `any`.
        example: string
        format: type
        type: string
        x-nullable: false
    required:
    - target
    - type
    title: Attribute mapping.
    type: object
  MappingMode:
    description: mapping mode
    type: string
  Mappings:
    description: |-
      Mapping is used to unify attributes from external IDPs and propagate them to the authentication
      context to be used later on. By mapping your authentication context attributes, you unify attributes from
      all IDPs that your users authenticate with. It allows you to use a set of unified attributes
      throughout ACP for multiple purposes.
    items:
      $ref: '#/definitions/Mapping'
    title: An array of mappings
    type: array
  MetaCredentials:
    description: Meta IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  MetaSettings:
    description: Meta IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  Metadata:
    additionalProperties:
      type: object
    type: object
  MicrosoftCredentials:
    description: Microsoft IDP specific credentials
    properties:
      client_secret:
        description: Application secret from your Microsoft application settings
        type: string
        x-nullable: false
    type: object
  MicrosoftSettings:
    description: Microsoft IDP specific settings
    properties:
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      get_user:
        description: |-
          If enabled, users' data is collected from the Microsoft Graph API

          You can only get user's data if you are entitled to call the Microsoft Graph API.
        type: boolean
        x-nullable: false
      graph_user_attributes:
        description: An array of user attributes fetched from the Microsoft Graph
          API
        items:
          type: string
        type: array
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
    type: object
  Name:
    description: |-
      A Name represents an XML name (Local) annotated
      with a name space identifier (Space).
      In tokens returned by [Decoder.Token], the Space identifier
      is given as a canonical URL, not the short prefix used
      in the document being parsed.
    properties:
      Space:
        type: string
        x-nullable: false
    type: object
  NameID:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf
      §2.2.3
    properties:
      Format:
        type: string
        x-nullable: false
      NameQualifier:
        type: string
        x-nullable: false
      SPNameQualifier:
        type: string
        x-nullable: false
      SPProvidedID:
        type: string
        x-nullable: false
      Value:
        type: string
        x-nullable: false
    title: NameID represents the SAML element NameID.
    type: object
  NameIDFormat:
    description: NameIDFormat is the format of the id
    type: string
  OAuth2Credentials:
    description: OAuth2 IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  OAuth2Settings:
    description: OAuth2 IDP specific settings
    properties:
      authorization_endpoint:
        description: OAuth2 authorization endpoint
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      token_endpoint:
        description: OAuth2 token endpoint
        type: string
        x-nullable: false
    type: object
  OBBRConfiguration:
    properties:
      industry:
        $ref: '#/definitions/OBBRIndustry'
    type: object
  OBBRIndustry:
    type: string
  OBBRMetadata:
    properties:
      webhook_uris:
        description: An array of hosts subscribed to Open Finance Webhook Notifications
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  OBConsent:
    description: OBConsent this type is only meant to be used for importing and exporting
      consents for testing
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: Client application identifier.
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      idempotency_key:
        type: string
        x-nullable: false
      request_hash:
        type: string
        x-nullable: false
      server_id:
        description: Server / Workspace identifier.
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        $ref: '#/definitions/SpecVersion'
      status:
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier.
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  OIDCCredentials:
    description: OIDC IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
      private_key_jwt:
        $ref: '#/definitions/PrivateKeyJWTCredentials'
    type: object
  OIDCServerConsent:
    type: object
  OIDCSettings:
    description: OIDC IDP specific settings
    properties:
      authentication_method:
        description: Client authentication method
        enum:
        - client_secret
        - private_key_jwt
        - none
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          endpoint.
        type: boolean
        x-nullable: false
      issuer_url:
        description: URL used to define the {baseURL} for any OpenID Connect endpoint
          when authorizing against ACP.
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
      use_pkce:
        description: Use PKCE
        type: boolean
        x-nullable: false
    type: object
  OTPConfiguration:
    properties:
      expiration:
        default: 5m
        description: The maximum time one-time code is valid.
        example: 5m
        format: duration
        type: string
        x-nullable: false
      length:
        default: 6
        description: The number of characters for one-time code.
        example: 6
        format: int64
        maximum: 10
        minimum: 4
        type: integer
        x-nullable: false
    required:
    - length
    - expiration
    type: object
  OTPPayload:
    properties:
      address:
        type: string
        x-nullable: false
      failure_reason:
        type: string
        x-nullable: false
      otp_id:
        type: string
        x-nullable: false
      purpose:
        type: string
        x-nullable: false
      type:
        enum:
        - sms
        - email
        type: string
        x-nullable: false
      user_id:
        format: userID
        type: string
        x-nullable: false
    type: object
  OktaCredentials:
    description: Okta IDP specific credentials
    properties:
      supervisor_client:
        $ref: '#/definitions/OktaSupervisorClient'
    type: object
  OktaSettings:
    description: Okta IDP specific settings
    properties:
      authorization_server_id:
        description: |-
          ID of a custom authorization server

          If the `use_org_authorization_server` parameter is set to `false`, use this field to specify
          the ID of a custom authorization server.

          If not provided, the `default` value is used.
        type: string
        x-nullable: false
      domain:
        description: String represented domain of the Okta Authentication Service
          for your organization
        example: dev-316761.okta.com
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
      use_org_authorization_server:
        description: If set to `true`, the built-in authorization server is used
        type: boolean
        x-nullable: false
    type: object
  OktaSupervisorClient:
    description: |-
      The `supervisor_client` parameter holds credentials for Okta's OAuth client application that are
      used to authorize to Okta to be able to create new client applications.
    properties:
      client_id:
        description: client id
        type: string
        x-nullable: false
      private_key:
        description: client private key
        type: string
        x-nullable: false
    type: object
  OktaV2Credentials:
    description: OktaV2 IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
      private_key_jwt:
        $ref: '#/definitions/PrivateKeyJWTCredentials'
    type: object
  OktaV2Settings:
    description: OktaV2 IDP specific settings
    properties:
      authentication_method:
        description: Client authentication method
        enum:
        - client_secret
        - private_key_jwt
        - none
        type: string
        x-nullable: false
      authorization_server_id:
        description: |-
          ID of a custom authorization server

          If the `use_org_authorization_server` parameter is set to `false`, use this field to specify
          the ID of a custom authorization server.

          If not provided, the `default` value is used.
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      domain:
        description: String represented domain of the Okta Authentication Service
          for your organization
        example: dev-316761.okta.com
        type: string
        x-nullable: false
      get_user_info:
        description: If enabled, users' data is collected by calling the `userinfo`
          endpoint.
        type: boolean
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
      send_login_hint:
        description: Whether to send the identifier as a `login_hint` parameter to
          the IDP
        type: boolean
        x-nullable: false
      use_org_authorization_server:
        description: If set to `true`, the built-in authorization server is used
        type: boolean
        x-nullable: false
      use_pkce:
        description: Use PKCE
        type: boolean
        x-nullable: false
    type: object
  OpenbankingServerConsent:
    properties:
      bank_url:
        description: If empty it defaults to demo bank embedded in acp
        type: string
        x-nullable: false
    type: object
  Org:
    properties:
      authentication_mechanisms:
        description: allowed authentication mechanisms
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      color:
        default: '#007FFF'
        description: Your organization's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      deactivated:
        type: boolean
        x-nullable: false
      description:
        description: Display description of the organization
        example: Organization description
        type: string
        x-nullable: false
      domains:
        description: An array of email domains configured for an organization for
          the purposes of IDP discovery
        items:
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an organization

          If not provided, a random ID is generated.
        example: default
        format: serverID
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ServerMetadata'
      name:
        description: Display name of the organization
        example: default
        type: string
        x-nullable: false
      parent_id:
        description: The id of the parent workspace / organization
        format: serverID
        type: string
        x-nullable: false
      template:
        description: If true this organization can be used as a template when creating
          a new ones.
        type: boolean
        x-nullable: false
    type: object
  Organization:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.3.2.1
    properties:
      OrganizationDisplayNames:
        items:
          $ref: '#/definitions/LocalizedName'
        type: array
        x-nullable: false
      OrganizationNames:
        items:
          $ref: '#/definitions/LocalizedName'
        type: array
        x-nullable: false
      OrganizationURLs:
        items:
          $ref: '#/definitions/LocalizedURI'
        type: array
        x-nullable: false
    title: Organization represents the SAML Organization object.
    type: object
  OrganizationConfiguration:
    properties:
      domains:
        description: An array of email domains configured for an organization for
          the purposes of IDP discovery
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  OrganizationMetadata:
    properties:
      payload:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
    type: object
  OrganizationResponse:
    properties:
      authentication_mechanisms:
        description: allowed authentication mechanisms
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      color:
        default: '#007FFF'
        description: Your organization's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      deactivated:
        type: boolean
        x-nullable: false
      description:
        description: Display description of the organization
        example: Organization description
        type: string
        x-nullable: false
      domains:
        description: An array of email domains configured for an organization for
          the purposes of IDP discovery
        items:
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an organization

          If not provided, a random ID is generated.
        example: default
        format: serverID
        type: string
        x-nullable: false
      issuer_url:
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ServerMetadata'
      name:
        description: Display name of the organization
        example: default
        type: string
        x-nullable: false
      number_of_child_organizations:
        format: int64
        type: integer
        x-nullable: false
      parent_id:
        description: The id of the parent workspace / organization
        format: serverID
        type: string
        x-nullable: false
      subject_format:
        enum:
        - hash
        - legacy
        - custom
        type: string
        x-nullable: false
      subject_identifier_algorithm_salt:
        type: string
        x-nullable: false
      template:
        description: If true this organization can be used as a template when creating
          a new ones.
        type: boolean
        x-nullable: false
      theme_id:
        format: themeID
        type: string
        x-nullable: false
    type: object
  OrganizationsResponse:
    properties:
      organizations:
        items:
          $ref: '#/definitions/OrganizationResponse'
        type: array
        x-nullable: false
    type: object
  PDPDescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.6
    properties:
      AssertionIDRequestServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      AuthzServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPeople:
        items:
          $ref: '#/definitions/ContactPerson'
        type: array
        x-nullable: false
      ErrorURL:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      NameIDFormats:
        items:
          $ref: '#/definitions/NameIDFormat'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      ProtocolSupportEnumeration:
        type: string
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
    title: PDPDescriptor represents the SAML PDPDescriptor object.
    type: object
  PIICategory:
    properties:
      name:
        description: name
        example: HIPAA
        type: string
        x-nullable: false
    type: object
  PayloadSettings:
    properties:
      format:
        default: json
        description: payload format
        enum:
        - json
        - jws
        format: payloadFormat
        type: string
        x-nullable: false
      jws_payload:
        $ref: '#/definitions/JWSPayloadSettings'
    type: object
  PersonalDetails:
    properties:
      user_id:
        type: string
        x-nullable: false
    type: object
  Policy:
    properties:
      definition:
        description: The definition of an Open Policy Agent (OPA) policy provided
          using the REGO language.
        type: string
        x-nullable: false
      env_version:
        $ref: '#/definitions/FnEnvVersion'
      id:
        description: Unique ID of your policy
        example: "1"
        format: policyID
        type: string
        x-nullable: false
      language:
        description: |-
          Language of a policy

          ACP supports creating Cloudentity policies (using a visual editor or defined using JSON or
          YAML) and policies defined using REGO (language used by Open Policy Agent (OPA)).
        example: cloudentity
        format: policyLanguage
        type: string
        x-nullable: false
      policy_name:
        description: Display name for your policy
        example: check_consent
        type: string
        x-nullable: false
      server_id:
        description: ID of your authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: |-
          Define a type of your policy

          ACP is provided with the following policy types: user, developer, machine, dcr, api.

          Depending on the policy type the policy can be assigned to different policy
          execution points.

          A policy of the `user` type can be assigned only to the following scopes: `scope_user_grant`,
          `server_user_token`, `client_user_token`.

          A `developer` policy can be assigned only to the `scope_client_assignment` and
          `server_client_assignment` scopes.

          A policy of the `machine` type can be assigned only to the following scopes:
          `scope_machine_grant`, `server_machine_token`, `client_machine_token`.

          A `dcr` policy can be assigned only to the `scope_dynamic_client_registration` and the
          `server_dynamic_client_registration` scopes.

          An `api` policy can be assigned to all of the policy execution points.

          Each of the policies type has its defined and provided out of the box policy validators.
        example: user
        format: policyType
        type: string
        x-nullable: false
      validators:
        description: An array of validators for a Cloudentity policy
        items:
          $ref: '#/definitions/ValidatorConfig'
        type: array
        x-nullable: false
    type: object
  PolicyEvaluatedPayload:
    properties:
      output:
        additionalProperties:
          type: string
        description: Policy output
        type: object
        x-nullable: false
      policy:
        $ref: '#/definitions/PolicyPayload'
      recovery:
        description: An array of recovery methods that take place when a policy validation
          fails.
        items: {}
        type: array
        x-nullable: false
      result:
        description: The result of policy validation.
        type: string
        x-nullable: false
    type: object
  PolicyExecutionPoint:
    properties:
      policy_id:
        description: Optional policy ID
        example: "1"
        format: policyID
        type: string
        x-nullable: false
      server_id:
        description: The ID of your authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      target_fk:
        description: String representation of the target's ID
        example: "1"
        type: string
        x-nullable: false
      tenant_id:
        description: The ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: |-
          String representation of the policy execution point type

          Policies can be assigned to different policy execution points. For example, you can create a
          policy that you want to trigger while calls are made to your APIs. In this
          case, the type of the policy execution point is `api`. While
          choosing the policies that are applied for API calls, only those with the
          `api` type are available.
        example: scope_client_assignment
        format: policyExecutionPoint
        type: string
        x-nullable: false
    type: object
  PolicyPayload:
    properties:
      execution_point_type:
        description: String representation of the policy execution point type
        format: policyExecutionPoint
        type: string
        x-nullable: false
      key:
        description: |-
          Unique key, derived from execution point, of protected resource where the policy is assigned.

          Example key for policy in default tenant, default server protecting scope email for machine access.
          default/default/scope/email/machine
        format: policyKey
        type: string
        x-nullable: false
      policy_id:
        description: Policy id
        format: policyID
        type: string
        x-nullable: false
      type:
        description: |-
          Define a type of your policy

          ACP is provided with the following policy types: user, developer, machine, dcr, api.
        format: policyType
        type: string
        x-nullable: false
    type: object
  PolicyValidationFailure:
    description: Defines the failure that took place for a policy validation
    properties:
      details:
        description: Details on the failed validation for a policy
        type: string
        x-nullable: false
      message:
        description: Message displayed for failed validation
        type: string
        x-nullable: false
      validator:
        description: String representation of the validator for which the policy failed
          validation
        type: string
        x-nullable: false
    type: object
  PolicyValidationRecovery:
    properties:
      id:
        type: string
        x-nullable: false
      type:
        type: string
        x-nullable: false
    type: object
  PolicyValidationResult:
    description: Provides information on the results of a policy validation
    properties:
      failure:
        description: An array of failures that took place during the policy validation
          process
        items:
          $ref: '#/definitions/PolicyValidationFailure'
        type: array
        x-nullable: false
      recovery:
        description: An array of recovery methods that take place when a policy validation
          fails
        items:
          $ref: '#/definitions/PolicyValidationRecovery'
        type: array
        x-nullable: false
      result:
        description: String representation of the policy validation result
        type: string
        x-nullable: false
    type: object
  PoolAuditPayload:
    properties:
      authentication_mechanisms:
        $ref: '#/definitions/AuthenticationMechanisms'
      description:
        type: string
        x-nullable: false
      name:
        type: string
        x-nullable: false
      pool_id:
        type: string
        x-nullable: false
      public_registration_allowed:
        type: boolean
        x-nullable: false
    type: object
  PostAuthnAborted:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  PostAuthnCompleted:
    properties:
      redirect_to:
        description: url where user should be redirected
        type: string
        x-nullable: false
    type: object
  PreProvisioningAuthenticationFlowControl:
    type: string
  PreProvisioningConfiguration:
    properties:
      authentication_flow_control:
        $ref: '#/definitions/PreProvisioningAuthenticationFlowControl'
    type: object
  PrivacyLedgerEvent:
    properties:
      date:
        format: date-time
        type: string
        x-nullable: false
      id:
        format: privacyLedgerEventID
        type: string
        x-nullable: false
      payload:
        $ref: '#/definitions/PrivacyLedgerPayload'
      payload_signature:
        type: string
        x-nullable: false
      subject:
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
    type: object
  PrivacyLedgerEventType:
    type: string
  PrivacyLedgerPayload:
    properties:
      consent_granted:
        $ref: '#/definitions/ConsentGrantedEvent'
      consent_revoked:
        $ref: '#/definitions/ConsentRevokedEvent'
      event_type:
        $ref: '#/definitions/PrivacyLedgerEventType'
    type: object
  PrivateKeyJWTCredentials:
    description: PrivateKeyJWT authentication settings
    properties:
      algorithm:
        description: Algorithm used to sign the client_assertion (see JWS) - default
          RS256
        type: string
        x-nullable: false
      exp:
        description: ExpiresIn defines how long client_assertion is valid for - default
          30 seconds
        format: duration
        type: string
        x-nullable: false
      key:
        description: Key is a PEM formatted private key used to sign client_assertion
        type: string
        x-nullable: false
    type: object
  ProtectedType:
    type: string
  ProvisioningMode:
    type: string
  Purpose:
    properties:
      name:
        description: name
        example: Core Function
        format: purposeName
        type: string
        x-nullable: false
      primary:
        description: is the purpose primary. If there are multiple purposes defined,
          one of them must be marked as primary.
        example: true
        type: boolean
        x-nullable: false
    type: object
  QueueName:
    type: string
  RFC6749Error:
    properties:
      cause:
        type: string
        x-nullable: false
      details:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      error_description:
        type: string
        x-nullable: false
      error_hint:
        type: string
        x-nullable: false
      status_code:
        format: int64
        type: integer
        x-nullable: false
    type: object
  RecoveryConfig:
    properties:
      type:
        type: string
        x-nullable: false
    type: object
  RecoveryPayload:
    properties:
      amr:
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      recovery_methods:
        items: {}
        type: array
        x-nullable: false
      recovery_steps:
        items: {}
        type: array
        x-nullable: false
    type: object
  RecurringJob:
    properties:
      cron:
        description: cron expression
        type: string
        x-nullable: false
      id:
        $ref: '#/definitions/JobID'
      paused:
        description: is paused
        type: boolean
        x-nullable: false
      payload:
        description: payload
        type: object
        x-nullable: false
      queue:
        $ref: '#/definitions/QueueName'
      scheduled_at:
        description: next execution time
        format: date-time
        type: string
        x-nullable: false
      starting_from:
        description: job starting from
        format: date-time
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        format: tenantID
        type: string
        x-nullable: false
    type: object
  RedirectURIs:
    description: |-
      Cloudentity uses redirect URIs to redirect users back to the application after they authorized the application. Along
      with the redirection, an authorization code or access token is added to the URL.

      For backward compatibility reasons, it's also acceptable to pass `redirect_uris` as a string, for example:
      https://example.com/callback.

      example: ["https://example.com/callback"]
    items:
      type: string
    title: OAuth-allowed redirect URIs
    type: array
  RegistrationToken:
    properties:
      client_uri:
        type: string
        x-nullable: false
      expires_in:
        format: int64
        type: integer
        x-nullable: false
      signature:
        type: string
        x-nullable: false
    type: object
  RegistryReference:
    description: Used for registry references. In snake case to match IETF RFC 7591
      naming formats
    properties:
      registered_entity_id:
        description: An identifier of the intermediary that can be looked up from
          a legal identity registry source.
        type: string
        x-nullable: false
      registered_entity_name:
        description: The legal company name for the intermediary.
        type: string
        x-nullable: false
      registry:
        type: string
        x-nullable: false
    type: object
  RejectScopeGrant:
    properties:
      error:
        description: Rejection error indication.
        example: Rejected
        type: string
        x-nullable: false
      error_cause:
        description: Rejection cause.
        example: Rejected by the user.
        type: string
        x-nullable: false
      error_description:
        description: Rejection error description.
        example: The user rejected authentication.
        type: string
        x-nullable: false
      id:
        description: Login identifier.
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: |-
          Random string generated by Cloudentity used to mitigate cross-site request forgery (CSRF) attacks.
          Cloudentity sends state as the `login_state` query parameter when redirecting to the consent page.
        example: cauq8fonbud6q8806bf0
        format: loginState
        type: string
        x-nullable: false
      status_code:
        description: Rejection HTTP status code.
        example: 403
        format: int64
        type: integer
        x-nullable: false
    type: object
  RejectSession:
    properties:
      error:
        description: reject error
        type: string
        x-nullable: false
      error_description:
        description: reject error description
        type: string
        x-nullable: false
      id:
        description: login identifier
        format: loginID
        type: string
        x-nullable: false
      login_state:
        description: login state
        format: loginState
        type: string
        x-nullable: false
      status_code:
        description: reject http status code
        format: int64
        type: integer
        x-nullable: false
    type: object
  RequestValidatedData:
    properties:
      anonymous:
        type: boolean
        x-nullable: false
      api:
        $ref: '#/definitions/API'
      claims:
        $ref: '#/definitions/JwtClaims'
      duration_ms:
        format: int64
        type: integer
        x-nullable: false
      gateway:
        $ref: '#/definitions/Gateway'
      invalid_token:
        type: boolean
        x-nullable: false
      output:
        additionalProperties:
          type: string
        type: object
        x-nullable: false
      result:
        $ref: '#/definitions/PolicyValidationResult'
      service:
        $ref: '#/definitions/Service'
    type: object
  RequestValidatedPayload:
    properties:
      access_request_data:
        $ref: '#/definitions/AccessRequestData'
      request_validated_data:
        $ref: '#/definitions/RequestValidatedData'
    type: object
  RequestedAttribute:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.4.2
    properties:
      FriendlyName:
        type: string
        x-nullable: false
      IsRequired:
        type: boolean
        x-nullable: false
      Name:
        type: string
        x-nullable: false
      NameFormat:
        type: string
        x-nullable: false
      Values:
        items:
          $ref: '#/definitions/AttributeValue'
        type: array
        x-nullable: false
    title: RequestedAttribute represents the SAML RequestedAttribute object.
    type: object
  RequestedScope:
    properties:
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      description:
        description: The scope description displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: The scope name displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: Scope identifier
        example: scope-1
        format: scopeID
        type: string
        x-nullable: false
      implicit:
        description: Request this scope by default for all clients who subscribed
          to this scope
        type: boolean
        x-nullable: false
      implicit_grant:
        description: Do not ask for consent for this scope
        type: boolean
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        description: Scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      params:
        items:
          type: string
        type: array
        x-nullable: false
      requested_name:
        format: scopeName
        type: string
        x-nullable: false
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      transient:
        description: Disable storage of scope grants
        type: boolean
        x-nullable: false
      with_service:
        type: boolean
        x-nullable: false
    type: object
  RequestedVerifiedClaims:
    properties:
      claims:
        additionalProperties:
          $ref: '#/definitions/ClaimRequest'
        type: object
        x-nullable: false
      verification:
        $ref: '#/definitions/ClaimsVerification'
    type: object
  ResponseModes:
    items:
      enum:
      - query
      - fragment
      - form_post
      - query.jwt
      - fragment.jwt
      - form_post.jwt
      - jwt
      type: string
    type: array
  ResponseTypes:
    description: |-
      The array may consist of the following arguments:

      `code` - when supplied as the value for the `response_type` parameter, a successful
      response includes an authorization code

      `code token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an access token, an access token type, and an authorization code

      `id_token token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an access token, an access token type, and an ID token

      `code id_token token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an authorization code, an ID token, an access token, and an access token
      type.

      `token` - when supplied as the value for the `response_type` parameter, a successful
      response includes an access token and its type. This argument is used for the implicit grant
      flow, but is not recommended. Instead, you should use either the authorization code grant
      flow with PKCE or client authentication set to `none` and with the use of PKCE.

      example: ["token", "id_token", "code"]
      default: ["code"]
    items:
      enum:
      - token
      - id_token
      - code
      - code id_token
      - token id_token
      - token code
      - token id_token code
      - none
      type: string
    title: An array of allowed response types
    type: array
  RevocationChannel:
    type: string
  RevocationReason:
    type: string
  RevokeTokenRequest:
    properties:
      idp_id:
        description: optional idp id - if provided subjects will be recalculated if
          server is using hashed subject type
        format: idpID
        type: string
        x-nullable: false
      subjects:
        description: list of subjects (min 1, max 100)
        items:
          format: subject
          type: string
        type: array
        x-nullable: false
    type: object
  RevokeTokensByPoolRequest:
    properties:
      users:
        description: list of userIds (min 1, max 100)
        items:
          format: userID
          type: string
        type: array
        x-nullable: false
    type: object
  Rfc6902PatchOperation:
    properties:
      op:
        description: |-
          Each operation must have at least one `op` member, which value indicates
          the actual operation to be performed against the target (current) configuration.
          For a detailed description of available operations,
          see the [Operations #4 section of the RFC6902 specification](https://datatracker.ietf.org/doc/html/rfc6902#section-4).
        enum:
        - add
        - remove
        - replace
        - move
        - copy
        - test
        type: string
        x-nullable: false
      path:
        description: |-
          String containing a JSON-Pointer value ([RFC6901](https://datatracker.ietf.org/doc/html/rfc6901))
          that references a location within the target configuration where the operation is performed.

          For available paths, reference the exported configuration.
        type: string
        x-nullable: false
      value:
        description: New object value applied to the patched (target) configuration.
        type: object
        x-nullable: false
    type: object
  Rfc6902PatchOperations:
    items:
      $ref: '#/definitions/Rfc6902PatchOperation'
    type: array
  RiskContext:
    properties:
      analyzers:
        additionalProperties:
          format: double
          type: number
        type: object
        x-nullable: false
      dbfp_fingerprint:
        type: string
        x-nullable: false
      high_risk:
        type: boolean
        x-nullable: false
      id:
        $ref: '#/definitions/RiskID'
      loa:
        $ref: '#/definitions/RiskLOA'
      risks:
        items:
          type: string
        type: array
        x-nullable: false
    type: object
  RiskID:
    description: Risk engine transaction id
    type: string
  RiskLOA:
    description: Risk engine level of assurance
    format: double
    type: number
  RiskPayload:
    properties:
      dbfp:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      risk_engine_context:
        $ref: '#/definitions/RiskContext'
    type: object
  Role:
    properties:
      resource:
        $ref: '#/definitions/RoleResource'
      role:
        enum:
        - admin
        - business_admin
        - auditor
        - manager
        - user_manager
        - member
        type: string
        x-nullable: false
      subject:
        $ref: '#/definitions/RoleSubject'
    type: object
  RoleDescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.1
    properties:
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPeople:
        items:
          $ref: '#/definitions/ContactPerson'
        type: array
        x-nullable: false
      ErrorURL:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      ProtocolSupportEnumeration:
        type: string
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
    title: RoleDescriptor represents the SAML element RoleDescriptor.
    type: object
  RoleGrantAuditPayload:
    properties:
      resource:
        $ref: '#/definitions/RoleResource'
      role:
        enum:
        - admin
        - business_admin
        - auditor
        - manager
        - user_manager
        - member
        type: string
        x-nullable: false
      subject:
        $ref: '#/definitions/RoleSubject'
    type: object
  RoleResource:
    properties:
      identity_pool_id:
        format: poolID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        enum:
        - tenant
        - workspace
        - identity_pool
        type: string
        x-nullable: false
      workspace_id:
        format: serverID
        type: string
        x-nullable: false
    type: object
  RoleSubject:
    properties:
      identity_pool_id:
        description: identity pool user pool id
        format: poolID
        type: string
        x-nullable: false
      identity_pool_user_id:
        description: identity pool user id
        format: userID
        type: string
        x-nullable: false
      idp_id:
        description: idp user idp id
        format: idpID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        enum:
        - identity_pool_user
        - idp
        type: string
        x-nullable: false
      workspace_id:
        description: idp user workspace id
        format: serverID
        type: string
        x-nullable: false
    type: object
  RotateClientSecretResponse:
    properties:
      secret:
        type: string
        x-nullable: false
    type: object
  SAMLAssertionDeniedPayload:
    properties:
      actor_claims:
        additionalProperties:
          type: object
        description: Actor claims
        type: object
        x-nullable: false
      affected_user_id:
        description: ID of the User in Identity Pool that is affected by an action
        format: userID
        type: string
        x-nullable: false
      affected_user_pool_id:
        description: ID of the Identity Pool of the User that is affected by an action
        format: poolID
        type: string
        x-nullable: false
      authentication_mechanisms:
        description: The authentication mechanisms a user used to login.
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      city:
        description: The visitor's city
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier.
        format: clientID
        type: string
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        type: string
        x-nullable: false
      country_code:
        description: The visitor's country
        type: string
        x-nullable: false
      created_by_developer:
        description: Stores information if the owner of the client application is
          a developer.
        type: boolean
        x-nullable: false
      dbfp:
        description: Arculix DBFP `jwt` cookie.
        type: string
        x-nullable: false
      error:
        description: High level error name (request_forbidden, access_denied, invalid_request).
        type: string
        x-nullable: false
      error_cause:
        description: Error root cause (invalid_pkce, invalid_state, user_policy_failed).
        type: string
        x-nullable: false
      error_description:
        description: Human readable error description
        type: string
        x-nullable: false
      error_hint:
        description: Error hint
        type: string
        x-nullable: false
      external_error:
        description: External error
        type: boolean
        x-nullable: false
      grant_type:
        description: |-
          Stores the information which grant type was selected to perfom a given action.
          Matches one of allowed OAuth client grant types for a given client.
        type: string
        x-nullable: false
      granted_scopes:
        description: Granted scopes
        items:
          type: string
        type: array
        x-nullable: false
      group_id:
        description: ID of the Group in Identity Pool
        format: groupID
        type: string
        x-nullable: false
      identity_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      idp_id:
        description: IDP identifier
        format: idpID
        type: string
        x-nullable: false
      idp_initiated:
        type: boolean
        x-nullable: false
      idp_method:
        description: IDP method
        type: string
        x-nullable: false
      idp_subject:
        description: Subject within the Identity Provider
        format: subject
        type: string
        x-nullable: false
      latitude:
        description: The visitor's latitude
        type: string
        x-nullable: false
      longitude:
        description: The visitor's longitude
        type: string
        x-nullable: false
      may_act_claims:
        additionalProperties:
          type: object
        description: May act claims
        type: object
        x-nullable: false
      organization_id:
        description: ID of the Organization
        format: serverID
        type: string
        x-nullable: false
      public:
        description: Stores information if the client application is a public one.
        type: boolean
        x-nullable: false
      recovery:
        description: True if user had to do login recovery during authentication
        type: boolean
        x-nullable: false
      remote_addr:
        description: Requester IP address obtained from system network socket information.
        type: string
        x-nullable: false
      risk_engine_context:
        $ref: '#/definitions/RiskContext'
      server_id:
        description: ID of the authorization server (workspace) to which an access
          request is tied.
        format: serverID
        type: string
        x-nullable: false
      service_provider_id:
        type: string
        x-nullable: false
      session_id:
        description: |-
          Session id of a given subject. It's uniform across the authentication processes.
          It can be used as a correlation ID between a different audit events.
        format: loginID
        type: string
        x-nullable: false
      subject:
        description: |-
          Identification of the principal that is the subject of authorization.
          For the authorization grant, the subject typically identifies an authorized accessor for which the access token is being requested.
          For client authentication, the subject is the client_id of the OAuth client.
        format: subject
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's
          application.
        type: boolean
        x-nullable: false
      token_endpoint_authn_method:
        description: Token endpoint authentication method configured for a client
          application.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        type: string
        x-nullable: false
      token_signature:
        description: Token signature
        type: string
        x-nullable: false
      true_client_ip:
        description: Requester IP address obtained from True-Client-IP header.
        type: string
        x-nullable: false
      user_agent:
        description: A characteristic string that lets servers and network peers identify
          the application, operating system, vendor, and/or version of the requesting
          user agent.
        type: string
        x-nullable: false
      user_id:
        description: ID of the User in Identity Pool
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      workspace_id:
        description: ID of the authorization server (workspace) to which a resource
          is tied.
        format: serverID
        type: string
        x-nullable: false
      x_forwarded_for:
        description: Requester IP address obtained from X-Forwarded-For header.
        type: string
        x-nullable: false
      x_real_ip:
        description: Requester IP address obtained from X-Real-IP header.
        type: string
        x-nullable: false
    type: object
  SAMLAssertionIssuedPayload:
    properties:
      actor_claims:
        additionalProperties:
          type: object
        description: Actor claims
        type: object
        x-nullable: false
      affected_user_id:
        description: ID of the User in Identity Pool that is affected by an action
        format: userID
        type: string
        x-nullable: false
      affected_user_pool_id:
        description: ID of the Identity Pool of the User that is affected by an action
        format: poolID
        type: string
        x-nullable: false
      authentication_mechanisms:
        description: The authentication mechanisms a user used to login.
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      city:
        description: The visitor's city
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier.
        format: clientID
        type: string
        x-nullable: false
      client_name:
        description: Human readable name of a client application
        type: string
        x-nullable: false
      country_code:
        description: The visitor's country
        type: string
        x-nullable: false
      created_by_developer:
        description: Stores information if the owner of the client application is
          a developer.
        type: boolean
        x-nullable: false
      dbfp:
        description: Arculix DBFP `jwt` cookie.
        type: string
        x-nullable: false
      grant_type:
        description: |-
          Stores the information which grant type was selected to perfom a given action.
          Matches one of allowed OAuth client grant types for a given client.
        type: string
        x-nullable: false
      granted_scopes:
        description: Granted scopes
        items:
          type: string
        type: array
        x-nullable: false
      group_id:
        description: ID of the Group in Identity Pool
        format: groupID
        type: string
        x-nullable: false
      identity_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      idp_id:
        description: IDP identifier
        format: idpID
        type: string
        x-nullable: false
      idp_initiated:
        type: boolean
        x-nullable: false
      idp_method:
        description: IDP method
        type: string
        x-nullable: false
      idp_subject:
        description: Subject within the Identity Provider
        format: subject
        type: string
        x-nullable: false
      latitude:
        description: The visitor's latitude
        type: string
        x-nullable: false
      longitude:
        description: The visitor's longitude
        type: string
        x-nullable: false
      may_act_claims:
        additionalProperties:
          type: object
        description: May act claims
        type: object
        x-nullable: false
      organization_id:
        description: ID of the Organization
        format: serverID
        type: string
        x-nullable: false
      public:
        description: Stores information if the client application is a public one.
        type: boolean
        x-nullable: false
      recovery:
        description: True if user had to do login recovery during authentication
        type: boolean
        x-nullable: false
      remote_addr:
        description: Requester IP address obtained from system network socket information.
        type: string
        x-nullable: false
      risk_engine_context:
        $ref: '#/definitions/RiskContext'
      server_id:
        description: ID of the authorization server (workspace) to which an access
          request is tied.
        format: serverID
        type: string
        x-nullable: false
      service_provider_id:
        type: string
        x-nullable: false
      session_id:
        description: |-
          Session id of a given subject. It's uniform across the authentication processes.
          It can be used as a correlation ID between a different audit events.
        format: loginID
        type: string
        x-nullable: false
      subject:
        description: |-
          Identification of the principal that is the subject of authorization.
          For the authorization grant, the subject typically identifies an authorized accessor for which the access token is being requested.
          For client authentication, the subject is the client_id of the OAuth client.
        format: subject
        type: string
        x-nullable: false
      system:
        description: Stores information if the client application is a system tenant's
          application.
        type: boolean
        x-nullable: false
      token_endpoint_authn_method:
        description: Token endpoint authentication method configured for a client
          application.
        enum:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        - unspecified
        type: string
        x-nullable: false
      token_signature:
        description: Token signature
        type: string
        x-nullable: false
      true_client_ip:
        description: Requester IP address obtained from True-Client-IP header.
        type: string
        x-nullable: false
      user_agent:
        description: A characteristic string that lets servers and network peers identify
          the application, operating system, vendor, and/or version of the requesting
          user agent.
        type: string
        x-nullable: false
      user_id:
        description: ID of the User in Identity Pool
        format: userID
        type: string
        x-nullable: false
      user_pool_id:
        description: ID of the Identity Pool
        format: poolID
        type: string
        x-nullable: false
      workspace_id:
        description: ID of the authorization server (workspace) to which a resource
          is tied.
        format: serverID
        type: string
        x-nullable: false
      x_forwarded_for:
        description: Requester IP address obtained from X-Forwarded-For header.
        type: string
        x-nullable: false
      x_real_ip:
        description: Requester IP address obtained from X-Real-IP header.
        type: string
        x-nullable: false
    type: object
  SAMLAttribute:
    properties:
      name:
        description: claim name
        type: string
        x-nullable: false
      saml_name:
        example: email
        type: string
        x-nullable: false
      saml_name_format:
        example: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        type: string
        x-nullable: false
      source_path:
        description: path to the attribute in source type context where claim value
          should be picked from
        type: string
        x-nullable: false
      source_type:
        $ref: '#/definitions/ClaimSourceType'
    type: object
  SAMLConfiguration:
    properties:
      organization_display_name:
        description: Organization display name
        type: string
        x-nullable: false
      organization_name:
        description: Organization name
        type: string
        x-nullable: false
      organization_url:
        description: Organization URL
        type: string
        x-nullable: false
      response_binding_mode:
        $ref: '#/definitions/SAMLResponseBindingMode'
      signing_hash_algorithms:
        default:
        - sha-256
        description: Allowed SAML Assertion signing hash algorithms.
        example:
        - sha-256
        items:
          enum:
          - sha-1
          - sha-256
          - sha-512
          type: string
        type: array
        x-nullable: false
      subject_name_id:
        description: |-
          Allows to change default subject name id.

          The default one will be idp's subject, even if the value is empty.
        type: string
        x-nullable: false
      subject_name_id_format:
        description: Allows to set the subject name id format
        enum:
        - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
        - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
        - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        type: string
        x-nullable: false
    type: object
  SAMLCredentials:
    description: SAML IDP specific credentials
    properties:
      idp_certificate:
        description: |-
          The certificate of your IDP

          The certificate must start with `-----BEGIN CERTIFICATE-----` and end with `-----END CERTIFICATE-----`.
        type: string
        x-nullable: false
    type: object
  SAMLIDPAttributesOverride:
    items:
      $ref: '#/definitions/SAMLAttribute'
    type: array
  SAMLResponseBindingMode:
    type: string
  SAMLSettings:
    description: SAML IDP specific settings
    properties:
      entity_issuer:
        description: Unique id of a service provider
        example: https://localhost:8443/default/default/login
        type: string
        x-nullable: false
      identifier_attribute:
        description: |-
          The attribute name from the `AttributeStatement` SAML response which is used as an identifier in ACP

          Applies only when `identifierSource` parameter is set to `attribute`.
        type: string
        x-nullable: false
      identifier_source:
        description: |-
          The source for an identifier

          The `identifierSource` parameter can have either the `subject` or the `attribute` value.

          It is used to provide an unique user attribute that is used as an identifier in ACP.

          Depending on which identifier source you choose, you must define either the
          `identifierAttribute` or the `subjectNameIDFormat` parameter.
        type: string
        x-nullable: false
      metadata_url:
        description: IDP metadata URL
        type: string
        x-nullable: false
      metadata_xml:
        description: IDP metadata xml
        type: string
        x-nullable: false
      skip_in_response_to_verification:
        description: |-
          If enabled, the verification, if the `InResponseTo` parameter matches the original ID attribute
          sent from ACP, is skipped.

          Enable the `skipInResponseToVerification` flag when the `InResponseTo` parameter is not
          returned by your IDP.
        type: boolean
        x-nullable: false
      sso_url:
        description: String represented SSO URL (endpoint) where the SAML request
          is sent
        example: https://test-dev-ed.my.salesforce.com/idp/endpoint/HttpPost
        type: string
        x-nullable: false
      subject_name_id_format:
        description: |-
          Name ID format of a SAML subject

          It applies only when the `identifierSource` parameter is set to `subject`.

          Allowed values:

          `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress`

          `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`

          `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName`

          `urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:entity`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`

          `urn:oasis:names:tc:SAML:2.0:nameid-format:transient`

          default value:
          `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`
        type: string
        x-nullable: false
    type: object
  SAMLV2Credentials:
    properties:
      signing_cert:
        description: saml authn request signing cert
        type: string
        x-nullable: false
      signing_key:
        description: saml authn request signing key
        type: string
        x-nullable: false
    type: object
  SAMLV2Settings:
    properties:
      metadata_url:
        description: IDP metadata URL
        type: string
        x-nullable: false
      metadata_xml:
        description: IDP metadata xml
        type: string
        x-nullable: false
      name_id_format:
        default: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        description: |-
          SAML name id format.

          Format used in the NameIDPolicy for authentication requests
        enum:
        - urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        - urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified
        - urn:oasis:names:tc:SAML:2.0:nameid-format:transient
        - urn:oasis:names:tc:SAML:2.0:nameid-format:persistent
        example: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
        type: string
        x-nullable: false
      signing_method:
        default: rsa-sha-1
        description: SAML signing method
        enum:
        - rsa-sha-256
        - rsa-sha-512
        - rsa-sha-1
        example: rsa-sha-256
        type: string
        x-nullable: false
      user_id_attribute:
        description: |-
          SAML Assertion attribute that will be mapped to the Subject

          If empty than NameID will be used instead.
        type: string
        x-nullable: false
    type: object
  SMSAuth:
    properties:
      auth_token:
        description: The Twilio Auth Token.
        type: string
        x-nullable: false
      sid:
        description: The Twilio Account SID.
        type: string
        x-nullable: false
    required:
    - sid
    - auth_token
    type: object
  SMSSettings:
    properties:
      custom_message_template:
        description: |-
          Custom message template.

          If not set, the default is used.
        type: string
        x-nullable: false
      custom_source:
        description: |-
          Custom SMS From phone number.

          If not set, the default is used.
        type: string
        x-nullable: false
      otp:
        $ref: '#/definitions/OTPConfiguration'
      provider:
        description: SMS provider.
        enum:
        - twilio
        - embedded
        example: embedded
        type: string
        x-nullable: false
    type: object
  SPSSODescriptor:
    description: See http://docs.oasis-open.org/security/saml/v2.0/saml-metadata-2.0-os.pdf
      §2.4.2
    properties:
      ArtifactResolutionServices:
        items:
          $ref: '#/definitions/IndexedEndpoint'
        type: array
        x-nullable: false
      AssertionConsumerServices:
        items:
          $ref: '#/definitions/IndexedEndpoint'
        type: array
        x-nullable: false
      AttributeConsumingServices:
        items:
          $ref: '#/definitions/AttributeConsumingService'
        type: array
        x-nullable: false
      AuthnRequestsSigned:
        type: boolean
        x-nullable: false
      CacheDuration:
        $ref: '#/definitions/Duration'
      ContactPeople:
        items:
          $ref: '#/definitions/ContactPerson'
        type: array
        x-nullable: false
      ErrorURL:
        type: string
        x-nullable: false
      ID:
        type: string
        x-nullable: false
      KeyDescriptors:
        items:
          $ref: '#/definitions/KeyDescriptor'
        type: array
        x-nullable: false
      ManageNameIDServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      NameIDFormats:
        items:
          $ref: '#/definitions/NameIDFormat'
        type: array
        x-nullable: false
      Organization:
        $ref: '#/definitions/Organization'
      ProtocolSupportEnumeration:
        type: string
        x-nullable: false
      Signature:
        $ref: '#/definitions/Element'
      SingleLogoutServices:
        items:
          $ref: '#/definitions/Endpoint'
        type: array
        x-nullable: false
      ValidUntil:
        format: date-time
        type: string
        x-nullable: false
      WantAssertionsSigned:
        type: boolean
        x-nullable: false
      XMLName:
        $ref: '#/definitions/Name'
    title: SPSSODescriptor represents the SAML SPSSODescriptorType object.
    type: object
  SSOConfiguration:
    properties:
      domain:
        description: Domain for the SSO cookie
        type: string
        x-nullable: false
      enabled:
        description: If enabled, single-sign-on (SSO) is active for all IDPs in this
          workspace.
        example: false
        type: boolean
        x-nullable: false
      loa_threshold:
        $ref: '#/definitions/RiskLOA'
      logout_redirect_domains:
        description: Additional domains permitted in the logout redirect_to parameter
        items:
          type: string
        type: array
        x-nullable: false
      max_age:
        description: Active TTL - Active SSO sessions expire after MaxAge nanoseconds.
        format: duration
        type: string
        x-nullable: false
      max_idle:
        description: Idle TTL - Idle SSO sessions expire after MaxIdle nanoseconds.
        format: duration
        type: string
        x-nullable: false
      post_logout_url:
        description: Admin-configured target URL after logout, if redirect_to omitted
          or invalid
        type: string
        x-nullable: false
    type: object
  SameSite:
    type: string
  SchemaAuditPayload:
    properties:
      created_at:
        format: date-time
        type: string
        x-nullable: false
      description:
        type: string
        x-nullable: false
      name:
        type: string
        x-nullable: false
      schema_id:
        type: string
        x-nullable: false
      system:
        type: boolean
        x-nullable: false
      updated_at:
        format: date-time
        type: string
        x-nullable: false
    type: object
  Scope:
    properties:
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      description:
        description: The scope description displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: The scope name displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: Scope identifier
        example: scope-1
        format: scopeID
        type: string
        x-nullable: false
      implicit:
        description: Request this scope by default for all clients who subscribed
          to this scope
        type: boolean
        x-nullable: false
      implicit_grant:
        description: Do not ask for consent for this scope
        type: boolean
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        description: Scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      transient:
        description: Disable storage of scope grants
        type: boolean
        x-nullable: false
    type: object
  ScopeClaimFormat:
    type: string
  ScopeGrant:
    properties:
      client_id:
        description: Identifier of a client application that is granted with the scope.
        example: bugkgm23g9kregtu051g
        format: clientID
        type: string
        x-nullable: false
      given_at:
        description: Time when the scope was granted
        format: date-time
        type: string
        x-nullable: false
      granted_scope_name:
        description: The scope name with its actual value
        example: accounts.read.own
        format: scopeName
        type: string
        x-nullable: false
      language:
        description: Language
        format: language
        type: string
        x-nullable: false
      pool_id:
        description: pool id of a user who granted the scope
        format: poolID
        type: string
        x-nullable: false
      scope_name:
        description: |-
          The scope name as it's set initially. This parameter supports dynamic scope syntax, thus can include a scope
          root—a fixed core of the dynamic scope name supplemented with a wildcard—a symbol representing
          an adjustable extension to the scope root allowing to retrieve a specific requested scope.

          The basic dynamic scope template is as follows: `[scope-root.*]` where `*` is a wildcard.
        example: accounts.read.*
        format: scopeName
        type: string
        x-nullable: false
      server_id:
        description: Identifier of a server where the client app is hosted.
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      subject:
        description: Identifier of a user who granted the scope.
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: Identifier of the tenant where the client app is hosted.
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      user_id:
        description: user id of a user who granted the scope
        format: userID
        type: string
        x-nullable: false
    type: object
  ScopeGrantAccepted:
    properties:
      redirect_to:
        description: |-
          A URL to redirect the user.
          It applies for the redirect flow only, i.e the consent page.
        example: https://authorization.cloudentity.com:8443/tenant/server/oauth2/authorize?client_id=bugkgm23g9kregtu051g&consent_verified=true&login_id=cavai7d8s9nelp7k792g&login_state=cauq8fonbud6q8806bf0
        type: string
        x-nullable: false
    type: object
  ScopeGrantRejected:
    properties:
      redirect_to:
        description: |-
          A URL to redirect the user.
          It applies for the redirect flow only, i.e the consent page.
        example: https://authorization.cloudentity.com:8443/tenant/server/oauth2/authorize?client_id=bugkgm23g9kregtu051g&consent_verified=true&login_id=cavai7d8s9nelp7k792g&login_state=cauq8fonbud6q8806bf0
        type: string
        x-nullable: false
    type: object
  ScopeGrantSessionResponse:
    properties:
      acr:
        description: authentication context class reference
        format: acr
        type: string
        x-nullable: false
      allowed_scopes:
        additionalProperties:
          type: boolean
        description: scopes that passed policy validation
        type: object
        x-nullable: false
      amr:
        description: authentication methods references
        items:
          format: amr
          type: string
        type: array
        x-nullable: false
      auth_time:
        description: time when user authenticated
        format: date-time
        type: string
        x-nullable: false
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      authorization_correlation_id:
        description: authorization correlation id
        format: authorizationCorrelationID
        type: string
        x-nullable: false
      authorization_details:
        description: authorization details
        items:
          additionalProperties:
            type: object
          type: object
        type: array
        x-nullable: false
      client_id:
        description: OAuth client identifier
        example: default
        format: clientID
        type: string
        x-nullable: false
      client_info:
        $ref: '#/definitions/ClientInfo'
      error:
        $ref: '#/definitions/RFC6749Error'
      granted_audience:
        description: list of granted audience
        items:
          type: string
        type: array
        x-nullable: false
      granted_scopes:
        description: list of granted scopes
        example:
        - email
        - profile
        - openid
        items:
          format: scopeName
          type: string
        type: array
        x-nullable: false
      id:
        description: unique id of login session
        format: loginID
        type: string
        x-nullable: false
      idp_id:
        description: idp identifier
        format: idpID
        type: string
        x-nullable: false
      idp_subject:
        description: idp subject
        format: subject
        type: string
        x-nullable: false
      login_approved:
        description: is login approved
        example: false
        type: boolean
        x-nullable: false
      login_rejected:
        description: is login rejected
        example: false
        type: boolean
        x-nullable: false
      max_age:
        description: max age for a session to live
        format: duration
        type: string
        x-nullable: false
      request_query_params:
        $ref: '#/definitions/Values'
      request_url:
        description: original url requested by oauth client
        type: string
        x-nullable: false
      requested_acr:
        description: requested acr
        items:
          type: string
        type: array
        x-nullable: false
      requested_at:
        description: time when oauth client made a request
        format: date-time
        type: string
        x-nullable: false
      requested_audience:
        description: list of requested audiences
        items:
          type: string
        type: array
        x-nullable: false
      requested_claims:
        $ref: '#/definitions/ClaimsRequests'
      requested_claims_to_consent:
        description: requested claims to display on consent page
        items:
          type: string
        type: array
        x-nullable: false
      requested_grant_type:
        description: requested grant type
        type: string
        x-nullable: false
      requested_max_age:
        description: requested max age
        type: string
        x-nullable: false
      requested_redirect_uri:
        description: requested redirect uri
        type: string
        x-nullable: false
      requested_scopes:
        description: list of requested scopes
        items:
          $ref: '#/definitions/RequestedScope'
        type: array
        x-nullable: false
      requested_verified_claims:
        $ref: '#/definitions/VerifiedClaimsRequests'
      scope_grant_approved:
        description: is scope grant approved
        example: true
        type: boolean
        x-nullable: false
      scope_grant_rejected:
        description: is scope grant rejected
        example: false
        type: boolean
        x-nullable: false
      server_id:
        description: authorization server identifier
        example: default
        format: serverID
        type: string
        x-nullable: false
      subject:
        description: user identifier
        format: subject
        type: string
        x-nullable: false
      tenant_id:
        description: tenant identifier
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ScopePrivacyInformation:
    properties:
      pii_categories:
        items:
          $ref: '#/definitions/PIICategory'
        type: array
        x-nullable: false
      purpose:
        format: purposeName
        type: string
        x-nullable: false
    type: object
  ScopeWithService:
    properties:
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      description:
        description: The scope description displayed as a hint on a consent page
        example: This scope value requests offline access using refresh token
        type: string
        x-nullable: false
      display_name:
        description: The scope name displayed on a consent page
        example: Offline Access
        type: string
        x-nullable: false
      id:
        description: Scope identifier
        example: scope-1
        format: scopeID
        type: string
        x-nullable: false
      implicit:
        description: Request this scope by default for all clients who subscribed
          to this scope
        type: boolean
        x-nullable: false
      implicit_grant:
        description: Do not ask for consent for this scope
        type: boolean
        x-nullable: false
      metadata:
        $ref: '#/definitions/Metadata'
      name:
        description: Scope name
        example: offline_access
        format: scopeName
        type: string
        x-nullable: false
      service:
        $ref: '#/definitions/Service'
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      transient:
        description: Disable storage of scope grants
        type: boolean
        x-nullable: false
      with_service:
        type: boolean
        x-nullable: false
    type: object
  ScopesGrantedPayload:
    properties:
      new_scope_grants:
        description: List of scopes to grant.
        items:
          $ref: '#/definitions/ScopeGrant'
        type: array
        x-nullable: false
    type: object
  ScopesWithServices:
    properties:
      scopes:
        items:
          $ref: '#/definitions/ScopeWithService'
        type: array
        x-nullable: false
    type: object
  Script:
    properties:
      authorization_server_id:
        description: ID of the authorization server (workspace) where the script is
          created
        format: serverID
        type: string
        x-nullable: false
      body:
        description: Script body
        format: scriptBody
        type: string
        x-nullable: false
      env_version:
        $ref: '#/definitions/FnEnvVersion'
      id:
        description: |-
          Unique ID of your script

          If not provided, a random ID is generated.
        format: scriptID
        type: string
        x-nullable: false
      name:
        description: Display name of your script
        type: string
        x-nullable: false
      tenant_id:
        description: ID of the tenant where the script is created
        format: tenantID
        type: string
        x-nullable: false
      test_input:
        description: Input data for testing this script
        type: string
        x-nullable: false
    required:
    - tenant_id
    - authorization_server_id
    type: object
  ScriptExecutionAuditPayload:
    properties:
      caught_err:
        type: string
        x-nullable: false
      duration:
        format: duration
        type: string
        x-nullable: false
      error:
        type: string
        x-nullable: false
      executed_at:
        format: date-time
        type: string
        x-nullable: false
      execution_point:
        enum:
        - post_authn_ctx
        - allowed_idp_ids
        - identifier_idp_selection
        - token_minting
        - client_token_minting
        type: string
        x-nullable: false
      input:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      log_level:
        type: string
        x-nullable: false
      output:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      script_id:
        format: scriptID
        type: string
        x-nullable: false
      script_name:
        type: string
        x-nullable: false
      stderr:
        type: string
        x-nullable: false
      stdout:
        type: string
        x-nullable: false
    type: object
  ScriptExecutionPoint:
    properties:
      script_id:
        description: Optional script ID
        example: "1"
        format: scriptID
        type: string
        x-nullable: false
      server_id:
        description: The ID of your authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      target_fk:
        description: String representation of the target's ID
        example: "1"
        type: string
        x-nullable: false
      tenant_id:
        description: The ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        description: String representation of the script execution point type
        enum:
        - post_authn_ctx
        - allowed_idp_ids
        - identifier_idp_selection
        - token_minting
        - client_token_minting
        example: post_authn_ctx
        type: string
        x-nullable: false
    required:
    - tenant_id
    - server_id
    - type
    - target_fk
    type: object
  Secret:
    properties:
      created_at:
        description: Time when the secret was created
        format: date-time
        type: string
        x-nullable: false
      id:
        description: Unique ID of your secret
        example: secret-pet
        format: secretID
        type: string
        x-nullable: false
      secret:
        description: Value of a secret
        example: cat
        type: string
        x-nullable: false
      server_id:
        description: ID of your authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: ID of your tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      value:
        type: string
        x-nullable: false
    required:
    - id
    - server_id
    - tenant_id
    - secret
    type: object
  SecretsResponse:
    properties:
      secrets:
        items:
          $ref: '#/definitions/Secret'
        type: array
        x-nullable: false
    type: object
  SecureOptions:
    description: nolint
    properties:
      AllowedHosts:
        description: AllowedHosts is a slice of fully qualified domain names that
          are allowed. Default is an empty slice, which allows any and all host names.
        items:
          type: string
        type: array
        x-nullable: false
      AllowedHostsAreRegex:
        description: AllowedHostsAreRegex determines, if the provided `AllowedHosts`
          slice contains valid regular expressions. If this flag is set to true, every
          request's host will be checked against these expressions. Default is false.
        type: boolean
        x-nullable: false
      BrowserXssFilter:
        description: If BrowserXssFilter is true, adds the X-XSS-Protection header
          with the value `1; mode=block`. Default is false.
        type: boolean
        x-nullable: false
      ContentSecurityPolicy:
        description: ContentSecurityPolicy allows the Content-Security-Policy header
          value to be set with a custom value. Default is "".
        type: string
        x-nullable: false
      ContentSecurityPolicyReportOnly:
        description: ContentSecurityPolicyReportOnly allows the Content-Security-Policy-Report-Only
          header value to be set with a custom value. Default is "".
        type: string
        x-nullable: false
      ContentTypeNosniff:
        description: If ContentTypeNosniff is true, adds the X-Content-Type-Options
          header with the value `nosniff`. Default is false.
        type: boolean
        x-nullable: false
      CrossOriginOpenerPolicy:
        description: |-
          CrossOriginOpenerPolicy allows you to ensure a top-level document does not share a browsing context group with cross-origin documents. Default is "".
          Reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy
        type: string
        x-nullable: false
      CustomBrowserXssValue:
        description: CustomBrowserXssValue allows the X-XSS-Protection header value
          to be set with a custom value. This overrides the BrowserXssFilter option.
          Default is "".
        type: string
        x-nullable: false
      CustomFrameOptionsValue:
        description: |-
          Passing a template string will replace `$NONCE` with a dynamic nonce value of 16 bytes for each request which can be later retrieved using the Nonce function.
          Eg: script-src $NONCE -> script-src 'nonce-a2ZobGFoZg=='
          CustomFrameOptionsValue allows the X-Frame-Options header value to be set with a custom value. This overrides the FrameDeny option. Default is "".
        type: string
        x-nullable: false
      ExpectCTHeader:
        description: ExpectCTHeader allows the Expect-CT header value to be set with
          a custom value. Default is "".
        type: string
        x-nullable: false
      FeaturePolicy:
        description: |-
          FeaturePolicy allows to selectively enable and disable use of various browser features and APIs. Default is "".
          Deprecated: This header has been renamed to Permissions-Policy.
        type: string
        x-nullable: false
      ForceSTSHeader:
        description: If ForceSTSHeader is set to true, the STS header will be added
          even when the connection is HTTP. Default is false.
        type: boolean
        x-nullable: false
      FrameDeny:
        description: If FrameDeny is set to true, adds the X-Frame-Options header
          with the value of `DENY`. Default is false.
        type: boolean
        x-nullable: false
      HostsProxyHeaders:
        description: HostsProxyHeaders is a set of header keys that may hold a proxied
          hostname value for the request.
        items:
          type: string
        type: array
        x-nullable: false
      IsDevelopment:
        description: |-
          When developing, the AllowedHosts, SSL, and STS options can cause some unwanted effects. Usually testing happens on http, not https, and on localhost, not your production domain... so set this to true for dev environment.
          If you would like your development environment to mimic production with complete Host blocking, SSL redirects, and STS headers, leave this as false. Default if false.
        type: boolean
        x-nullable: false
      PermissionsPolicy:
        description: PermissionsPolicy allows to selectively enable and disable use
          of various browser features and APIs. Default is "".
        type: string
        x-nullable: false
      PublicKey:
        description: |-
          PublicKey implements HPKP to prevent MITM attacks with forged certificates. Default is "".
          Deprecated: This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible.
        type: string
        x-nullable: false
      ReferrerPolicy:
        description: ReferrerPolicy allows sites to control when browsers will pass
          the Referer header to other sites. Default is "".
        type: string
        x-nullable: false
      SSLForceHost:
        description: If SSLForceHost is true and SSLHost is set, requests will be
          forced to use SSLHost even the ones that are already using SSL. Default
          is false.
        type: boolean
        x-nullable: false
      SSLHost:
        description: SSLHost is the host name that is used to redirect http requests
          to https. Default is "", which indicates to use the same host.
        type: string
        x-nullable: false
      SSLProxyHeaders:
        additionalProperties:
          type: string
        description: 'SSLProxyHeaders is set of header keys with associated values
          that would indicate a valid https request. Useful when using Nginx: `map[string]string{"X-Forwarded-Proto":
          "https"}`. Default is blank map.'
        type: object
        x-nullable: false
      SSLRedirect:
        description: If SSLRedirect is set to true, then only allow https requests.
          Default is false.
        type: boolean
        x-nullable: false
      SSLTemporaryRedirect:
        description: If SSLTemporaryRedirect is true, the a 302 will be used while
          redirecting. Default is false (301).
        type: boolean
        x-nullable: false
      STSIncludeSubdomains:
        description: If STSIncludeSubdomains is set to true, the `includeSubdomains`
          will be appended to the Strict-Transport-Security header. Default is false.
        type: boolean
        x-nullable: false
      STSPreload:
        description: If STSPreload is set to true, the `preload` flag will be appended
          to the Strict-Transport-Security header. Default is false.
        type: boolean
        x-nullable: false
      STSSeconds:
        description: STSSeconds is the max-age of the Strict-Transport-Security header.
          Default is 0, which would NOT include the header.
        format: int64
        type: integer
        x-nullable: false
      SecureContextKey:
        description: SecureContextKey allows a custom key to be specified for context
          storage.
        type: string
        x-nullable: false
    type: object
  ServerAuditPayload:
    properties:
      access_token_strategy:
        default: jwt
        description: |-
          Access token strategy

          You can choose to go either with `JWT` or `opaque` tokens.

          The content of JSON Web Tokens is readable and it is possible to be decoded by anyone that
          has a secret or a public key in their possession.

          Opaque tokens are in a proprietary form that contains an identifier to information stored on
          the athorization server. To validate an opaque token, the recipient must call the server that
          issued the token.
        enum:
        - jwt
        - opaque
        example: jwt
        type: string
        x-nullable: false
      access_token_ttl:
        default: 1h0m0s
        description: |-
          Access token time to live

          After an access token reaches its time to live, it expires and it cannot be used to
          authenticate the client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      advanced:
        $ref: '#/definitions/AdvancedConfiguration'
      authentication_context_settings:
        $ref: '#/definitions/AuthenticationContextSettings'
      authentication_mechanisms:
        description: allowed authentication mechanisms for users in the identity pools
        example:
        - password
        - totp
        - otp
        - webauthn
        - sms_otp
        - email_otp
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      authorization_code_ttl:
        description: |-
          Authorization code time to live

          After an authorization code reaches its time to live, it expires and it cannot be used to
          authorize the request to the `/token` endpoint.
        example: 10m0s
        format: duration
        type: string
        x-nullable: false
      backchannel_token_delivery_modes_supported:
        default:
        - poll
        - ping
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_user_code_parameter_supported:
        default: false
        type: boolean
        x-nullable: false
      cdr:
        $ref: '#/definitions/CDRConfiguration'
      color:
        default: '#007FFF'
        description: Your server's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      consent_id_namespace:
        description: |-
          Namespace used when creating Open Banking Brasil consent IDs

          Consent IDs will have the form of urn:<consent_id_namespace>:<uid> when this is set.
          If this is empty, the tenant id is used by default
        type: string
        x-nullable: false
      cookie_max_age:
        description: |-
          Cookie max age

          Defines how long a cookie can live until it expires.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      custom_issuer_url:
        description: |-
          Defines a custom issuer URL that can be used as the value of the `iss` claim in an access
          token.

          If not provided, it is built dynamically based on the server's URL.
        example: http://example.com/default/default
        type: string
        x-nullable: false
      description:
        description: Display description of the workspace
        example: Server description
        type: string
        x-nullable: false
      device_authorization:
        $ref: '#/definitions/DeviceAuthorizationConfiguration'
      dynamic_client_registration:
        $ref: '#/definitions/DynamicClientRegistrationSettings'
      dynamic_scope_separator:
        default: .
        description: |-
          You can use this property to define a separator that is used for dynamic scopes.

          For example, the default separator is `.`, so the scope could look like the following:
          `users.*`.

          For Open Banking Brazil compliant servers, the `:` separator should be used.
        format: dynamicScopeSeparator
        type: string
        x-nullable: false
      enable_idp_discovery:
        description: |-
          Deprecated: Use IDPDiscovery instead

          If enabled, IDP discovery automatically redirects the user to their own IDP and does not
          display IDPs of other users while the users accesses the server/application.
        example: false
        type: boolean
        x-nullable: false
      enable_legacy_clients_with_no_software_statement:
        description: |-
          Deprecated

          If enabled, it is possible to manually register clients withouth the use of software
          statements.

          This flag is enabled, when the `enable_trust_anchor` flag is set to `false`. You can disable
          it using API, but it cannot be manually enabled.
        type: boolean
        x-nullable: false
      enable_quick_access:
        description: If enabled, the server is visible on the Quick Access tab on
          the login page.
        type: boolean
        x-nullable: false
      enable_trust_anchor:
        default: false
        description: |-
          If enabled, it makes it obligatory to provide a software statement signed by a trusted certificate authority

          when registering a client application with the use of the Dynamic Client Registration (DCR).

          In public key infrastructure (PKI), trust anchors are certification authorities. They are
          represented by a certificate that is used to verify the signature of a certificate issued by
          a particular trust anchor.
        type: boolean
        x-nullable: false
      enforce_id_token_encryption:
        description: When enabled, the authorization server will enforce encrypted
          id tokens it issues
        type: boolean
        x-nullable: false
      enforce_pkce:
        default: false
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for both
          private and public clients.

          PKCE is an OAuth security extension that prevents malicious applications or codes that
          intercepted authorization code from exchanging it for an access token.
        example: false
        type: boolean
        x-nullable: false
      enforce_pkce_for_public_clients:
        default: false
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for
          public clients.

          Public clients, like mobile applications or JavaScript-based applications, by their design,
          cannot store client secrets securely. For such clients, even encrypting the client secret
          inside the application’s code is not a reliable way of protecting secrets as the application
          can be decompiled and the client secret can be extracted while it is decrypted in the memory
          of the application.

          For those reasons, ACP supports the use of PKCE as an addition to the authorization code
          grant flow to provide a secure alternative to the implicit grant flow.
        example: false
        type: boolean
        x-nullable: false
      fdx:
        $ref: '#/definitions/FDXConfiguration'
      grant_types:
        default:
        - authorization_code
        - implicit
        - client_credentials
        - refresh_token
        description: An array that defines which of the OAuth 2.0 grant types are
          enabled for the authorization server.
        example:
        - authorization_code
        - implicit
        - refresh_token
        - client_credentials
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an authorization server (workspace)

          If not provided, a random ID is generated.
        example: default
        format: serverID
        type: string
        x-nullable: false
      id_token_ttl:
        description: |-
          ID token time to live

          After an ID token reaches its time to live, it expires and it cannot be used to provide
          user profile information to a client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      identity_assurance:
        $ref: '#/definitions/IdentityAssuranceConfiguration'
      idp_discovery:
        $ref: '#/definitions/IDPDiscovery'
      issuer_id:
        description: |-
          Issuer ID that will be used to set `iss` claim on signed messages

          If issuer_id is not set then default issuer_url will be used
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      key_type:
        default: ecdsa
        description: |-
          Determines which type of asymmetric algorithms (RSA or ECDSA) is used to generate keys for signing access and
          ID tokens.

          It is used only as an input parameter for the Create Authorization Server API.
        enum:
        - rsa
        - ecdsa
        - ps
        example: rsa
        type: string
        x-nullable: false
      legal_entity:
        $ref: '#/definitions/LegalEntity'
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ServerMetadata'
      name:
        description: |-
          Display name of the workspace

          If not provided, a random ID is generated.
        example: default
        type: string
        x-nullable: false
      obbr:
        $ref: '#/definitions/OBBRConfiguration'
      organization:
        $ref: '#/definitions/OrganizationConfiguration'
      parent_id:
        description: Optional ID of a parent server
        format: serverID
        type: string
        x-nullable: false
      preferences:
        $ref: '#/definitions/ServerPreferences'
      profile:
        default: default
        description: |-
          The profile of a server

          ACP is delivered with preconfigured workspace templates that enable quick and easy setup for
          specific configuration patterns. For example, you can instantly create an Open Banking
          compliant workspace that has all of the required mechanisms and settings already in place.
        enum:
        - default
        - demo
        - workforce
        - workforce_v2
        - consumer
        - partners
        - third_party
        - fapi_advanced
        - fapi_rw
        - fapi_ro
        - openbanking_uk_fapi_advanced
        - openbanking_uk
        - openbanking_br
        - openbanking_br_unico
        - cdr_australia
        - cdr_australia_fapi_rw
        - fdx
        - openbanking_ksa
        - fapi_20_security
        - fapi_20_message_signing
        - connect_id
        - agentic_ai
        example: default
        type: string
        x-nullable: false
      pushed_authorization_request_ttl:
        description: |-
          Custom pushed authentication request TTL
          If not provided, TTL is set to 60 seconds.
        format: duration
        type: string
        x-nullable: false
      refresh_token_ttl:
        default: 720h0m0s
        description: |-
          Refresh token time to live

          After a refresh token reaches its time to live, it expires and it cannot be used to obtain
          new access tokens for a client application.
        example: 720h0m0s
        format: duration
        type: string
        x-nullable: false
      require_pushed_authorization_requests:
        description: Boolean parameter indicating whether the authorization server
          accepts authorization request data only via PAR.
        type: boolean
        x-nullable: false
      response_types:
        $ref: '#/definitions/ResponseTypes'
      saml:
        $ref: '#/definitions/SAMLConfiguration'
      scope_claim_formats:
        default:
        - scp_array
        description: formats of the scope claim that will be included in the access
          token
        example:
        - scp_array
        - scope_space_separated
        items:
          $ref: '#/definitions/ScopeClaimFormat'
        type: array
        x-nullable: false
      settings:
        $ref: '#/definitions/ServerSettings'
      sso:
        $ref: '#/definitions/SSOConfiguration'
      styling:
        $ref: '#/definitions/Styling'
      subject_custom_attribute:
        description: The authentication context attribute name that will be used as
          subject when the custom subject format is used.
        type: string
        x-nullable: false
      subject_format:
        description: |-
          Define the format of a subject
          When set to hash sub value is a one way hash of idp id and idp sub
        enum:
        - hash
        - legacy
        - custom
        type: string
        x-nullable: false
      subject_identifier_types:
        default:
        - public
        - pairwise
        description: |-
          An array that defines supported subject identifier types.

          Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
          and are intended to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          `public` identifiers provide the same `sub` claim value to all client applications.
          `pairwise` identifiers provide different `sub` claim values to each client application. With
          this approach, it makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        example:
        - public
        - pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
      template:
        description: If true this workspace can be used as a template when creating
          a new ones.
        type: boolean
        x-nullable: false
      tenant_id:
        description: ID of a tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      token_endpoint_auth_methods:
        default:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        description: |-
          An array that lists all of the supported token endpoint authentication methods for the
          authorization server.
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          - unspecified
          type: string
        type: array
        x-nullable: false
      token_endpoint_auth_signing_alg_values:
        description: |-
          Token endpoint auth signing supported alg values

          Supported algorithms: HS256, RS256, ES256, PS256

          At least one algorithm must be set.

          The default values depends on the server security profile.
        items:
          type: string
        type: array
        x-nullable: false
      token_endpoint_authn_methods:
        description: 'Deprecated: Use TokenEndpointAuthMethods instead'
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          - unspecified
          type: string
        type: array
        x-nullable: false
      trust_anchor_configuration:
        $ref: '#/definitions/TrustAnchorConfiguration'
      type:
        default: regular
        description: |-
          Server type

          It is an internal property used to recognize if the server is created for an admin portal,
          a developer portal, or if it is a system or a regular workspace.
        enum:
        - admin
        - developer
        - system
        - regular
        - organization
        example: regular
        type: string
        x-nullable: false
      version:
        default: 3
        description: |-
          server version to track internal changes
          version that is currently the latest: 3
        format: int64
        type: integer
        x-nullable: false
      workforce:
        $ref: '#/definitions/WorkforceConfiguration'
    required:
    - tenant_id
    type: object
  ServerConsent:
    properties:
      client_id:
        format: clientID
        type: string
        x-nullable: false
      custom:
        $ref: '#/definitions/CustomServerConsent'
      oidc:
        $ref: '#/definitions/OIDCServerConsent'
      openbanking:
        $ref: '#/definitions/OpenbankingServerConsent'
      server_id:
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        format: tenantID
        type: string
        x-nullable: false
      type:
        format: serverConsentType
        type: string
        x-nullable: false
    type: object
  ServerDump:
    properties:
      access_token_strategy:
        default: jwt
        description: |-
          Access token strategy

          You can choose to go either with `JWT` or `opaque` tokens.

          The content of JSON Web Tokens is readable and it is possible to be decoded by anyone that
          has a secret or a public key in their possession.

          Opaque tokens are in a proprietary form that contains an identifier to information stored on
          the athorization server. To validate an opaque token, the recipient must call the server that
          issued the token.
        enum:
        - jwt
        - opaque
        example: jwt
        type: string
        x-nullable: false
      access_token_ttl:
        default: 1h0m0s
        description: |-
          Access token time to live

          After an access token reaches its time to live, it expires and it cannot be used to
          authenticate the client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      advanced:
        $ref: '#/definitions/AdvancedConfiguration'
      authentication_context_settings:
        $ref: '#/definitions/AuthenticationContextSettings'
      authentication_mechanisms:
        description: allowed authentication mechanisms for users in the identity pools
        example:
        - password
        - totp
        - otp
        - webauthn
        - sms_otp
        - email_otp
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      authorization_code_ttl:
        description: |-
          Authorization code time to live

          After an authorization code reaches its time to live, it expires and it cannot be used to
          authorize the request to the `/token` endpoint.
        example: 10m0s
        format: duration
        type: string
        x-nullable: false
      backchannel_token_delivery_modes_supported:
        default:
        - poll
        - ping
        items:
          type: string
        type: array
        x-nullable: false
      backchannel_user_code_parameter_supported:
        default: false
        type: boolean
        x-nullable: false
      cdr:
        $ref: '#/definitions/CDRConfiguration'
      color:
        default: '#007FFF'
        description: Your server's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      consent_id_namespace:
        description: |-
          Namespace used when creating Open Banking Brasil consent IDs

          Consent IDs will have the form of urn:<consent_id_namespace>:<uid> when this is set.
          If this is empty, the tenant id is used by default
        type: string
        x-nullable: false
      cookie_max_age:
        description: |-
          Cookie max age

          Defines how long a cookie can live until it expires.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      custom_issuer_url:
        description: |-
          Defines a custom issuer URL that can be used as the value of the `iss` claim in an access
          token.

          If not provided, it is built dynamically based on the server's URL.
        example: http://example.com/default/default
        type: string
        x-nullable: false
      description:
        description: Display description of the workspace
        example: Server description
        type: string
        x-nullable: false
      device_authorization:
        $ref: '#/definitions/DeviceAuthorizationConfiguration'
      do_not_create_default_claims:
        description: flag to skip default claims creation (applicable only if server
          does not exist)
        type: boolean
        x-nullable: false
      dynamic_client_registration:
        $ref: '#/definitions/DynamicClientRegistrationSettings'
      dynamic_scope_separator:
        default: .
        description: |-
          You can use this property to define a separator that is used for dynamic scopes.

          For example, the default separator is `.`, so the scope could look like the following:
          `users.*`.

          For Open Banking Brazil compliant servers, the `:` separator should be used.
        format: dynamicScopeSeparator
        type: string
        x-nullable: false
      enable_idp_discovery:
        description: |-
          Deprecated: Use IDPDiscovery instead

          If enabled, IDP discovery automatically redirects the user to their own IDP and does not
          display IDPs of other users while the users accesses the server/application.
        example: false
        type: boolean
        x-nullable: false
      enable_legacy_clients_with_no_software_statement:
        description: |-
          Deprecated

          If enabled, it is possible to manually register clients withouth the use of software
          statements.

          This flag is enabled, when the `enable_trust_anchor` flag is set to `false`. You can disable
          it using API, but it cannot be manually enabled.
        type: boolean
        x-nullable: false
      enable_quick_access:
        description: If enabled, the server is visible on the Quick Access tab on
          the login page.
        type: boolean
        x-nullable: false
      enable_trust_anchor:
        default: false
        description: |-
          If enabled, it makes it obligatory to provide a software statement signed by a trusted certificate authority

          when registering a client application with the use of the Dynamic Client Registration (DCR).

          In public key infrastructure (PKI), trust anchors are certification authorities. They are
          represented by a certificate that is used to verify the signature of a certificate issued by
          a particular trust anchor.
        type: boolean
        x-nullable: false
      enforce_id_token_encryption:
        description: When enabled, the authorization server will enforce encrypted
          id tokens it issues
        type: boolean
        x-nullable: false
      enforce_pkce:
        default: false
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for both
          private and public clients.

          PKCE is an OAuth security extension that prevents malicious applications or codes that
          intercepted authorization code from exchanging it for an access token.
        example: false
        type: boolean
        x-nullable: false
      enforce_pkce_for_public_clients:
        default: false
        description: |-
          Define whether you want to enforce using the Proof Key of Code Exchange (PKCE) for
          public clients.

          Public clients, like mobile applications or JavaScript-based applications, by their design,
          cannot store client secrets securely. For such clients, even encrypting the client secret
          inside the application’s code is not a reliable way of protecting secrets as the application
          can be decompiled and the client secret can be extracted while it is decrypted in the memory
          of the application.

          For those reasons, ACP supports the use of PKCE as an addition to the authorization code
          grant flow to provide a secure alternative to the implicit grant flow.
        example: false
        type: boolean
        x-nullable: false
      fdx:
        $ref: '#/definitions/FDXConfiguration'
      grant_types:
        default:
        - authorization_code
        - implicit
        - client_credentials
        - refresh_token
        description: An array that defines which of the OAuth 2.0 grant types are
          enabled for the authorization server.
        example:
        - authorization_code
        - implicit
        - refresh_token
        - client_credentials
        items:
          enum:
          - authorization_code
          - implicit
          - client_credentials
          - refresh_token
          - password
          - urn:ietf:params:oauth:grant-type:jwt-bearer
          - urn:openid:params:grant-type:ciba
          - urn:ietf:params:oauth:grant-type:token-exchange
          - urn:ietf:params:oauth:grant-type:device_code
          type: string
        type: array
        x-nullable: false
      id:
        description: |-
          Unique identifier of an authorization server (workspace)

          If not provided, a random ID is generated.
        example: default
        format: serverID
        type: string
        x-nullable: false
      id_token_ttl:
        description: |-
          ID token time to live

          After an ID token reaches its time to live, it expires and it cannot be used to provide
          user profile information to a client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      identity_assurance:
        $ref: '#/definitions/IdentityAssuranceConfiguration'
      idp_discovery:
        $ref: '#/definitions/IDPDiscovery'
      initialize:
        description: flag to initialize server default configuration (applicable only
          if server does not exist)
        type: boolean
        x-nullable: false
      issuer_id:
        description: |-
          Issuer ID that will be used to set `iss` claim on signed messages

          If issuer_id is not set then default issuer_url will be used
        example: 5647fe90-f6bc-11eb-9a03-0242ac130003
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ServerJWKs'
      key_type:
        default: ecdsa
        description: |-
          Determines which type of asymmetric algorithms (RSA or ECDSA) is used to generate keys for signing access and
          ID tokens.

          It is used only as an input parameter for the Create Authorization Server API.
        enum:
        - rsa
        - ecdsa
        - ps
        example: rsa
        type: string
        x-nullable: false
      legal_entity:
        $ref: '#/definitions/LegalEntity'
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ServerMetadata'
      name:
        description: |-
          Display name of the workspace

          If not provided, a random ID is generated.
        example: default
        type: string
        x-nullable: false
      obbr:
        $ref: '#/definitions/OBBRConfiguration'
      organization:
        $ref: '#/definitions/OrganizationConfiguration'
      parent_id:
        description: Optional ID of a parent server
        format: serverID
        type: string
        x-nullable: false
      preferences:
        $ref: '#/definitions/ServerPreferences'
      profile:
        default: default
        description: |-
          The profile of a server

          ACP is delivered with preconfigured workspace templates that enable quick and easy setup for
          specific configuration patterns. For example, you can instantly create an Open Banking
          compliant workspace that has all of the required mechanisms and settings already in place.
        enum:
        - default
        - demo
        - workforce
        - workforce_v2
        - consumer
        - partners
        - third_party
        - fapi_advanced
        - fapi_rw
        - fapi_ro
        - openbanking_uk_fapi_advanced
        - openbanking_uk
        - openbanking_br
        - openbanking_br_unico
        - cdr_australia
        - cdr_australia_fapi_rw
        - fdx
        - openbanking_ksa
        - fapi_20_security
        - fapi_20_message_signing
        - connect_id
        - agentic_ai
        example: default
        type: string
        x-nullable: false
      pushed_authorization_request_ttl:
        description: |-
          Custom pushed authentication request TTL
          If not provided, TTL is set to 60 seconds.
        format: duration
        type: string
        x-nullable: false
      refresh_token_ttl:
        default: 720h0m0s
        description: |-
          Refresh token time to live

          After a refresh token reaches its time to live, it expires and it cannot be used to obtain
          new access tokens for a client application.
        example: 720h0m0s
        format: duration
        type: string
        x-nullable: false
      require_pushed_authorization_requests:
        description: Boolean parameter indicating whether the authorization server
          accepts authorization request data only via PAR.
        type: boolean
        x-nullable: false
      response_types:
        $ref: '#/definitions/ResponseTypes'
      root_cas:
        description: |-
          You can provide root Certificate Authority (CA) certificates encoded to the Privacy-Enhanced
          Mail (PEM) file format which are used for the `tls_client_auth` and the
          `self_signed_tls_client_auth` client authentication methods that use the Mutual
          Transport Layer Security (mTLS).

          If not set, the system root CA certifiates are used instead.
        type: string
        x-nullable: false
      rotated_secrets:
        description: An array of rotated secrets that are still used to validate tokens
        example:
        - jFpwIvuKJP46J71WqszPv1SrzoUr-cSILP9EPdlClB4
        items:
          type: string
        type: array
        x-nullable: false
      saml:
        $ref: '#/definitions/SAMLConfiguration'
      scope_claim_formats:
        default:
        - scp_array
        description: formats of the scope claim that will be included in the access
          token
        example:
        - scp_array
        - scope_space_separated
        items:
          $ref: '#/definitions/ScopeClaimFormat'
        type: array
        x-nullable: false
      secret:
        description: |-
          Secret used for hashing

          It must have at least 32 characters. If not provided, it is generated.
        example: hW5WhKX_7w7BLwUQ6mn7Cp70_OoKI_F1y1hLS5U8lIU
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/ServerSettings'
      sso:
        $ref: '#/definitions/SSOConfiguration'
      styling:
        $ref: '#/definitions/Styling'
      subject_custom_attribute:
        description: The authentication context attribute name that will be used as
          subject when the custom subject format is used.
        type: string
        x-nullable: false
      subject_format:
        description: |-
          Define the format of a subject
          When set to hash sub value is a one way hash of idp id and idp sub
        enum:
        - hash
        - legacy
        - custom
        type: string
        x-nullable: false
      subject_identifier_algorithm_salt:
        description: |-
          Salt used to hash `subject` when the `pairwise` subject type is used.

          Salt is a random data which is used as an additional input to one-way functions that hashes
          data, passwords, and, in this case, subjects.

          It is recommended that your salt value is long for security reasons. Preferably, the salt
          value should be at least the same length as the output of the hash.

          If not provided, it is generated.
        type: string
        x-nullable: false
      subject_identifier_types:
        default:
        - public
        - pairwise
        description: |-
          An array that defines supported subject identifier types.

          Subject identifiers identify an end-user. They are locally unique and never reassigned within the Issuer,
          and are intended to be consumed by client applications. There are two types
          of subject identifiers: `public` and `pairwise`.

          `public` identifiers provide the same `sub` claim value to all client applications.
          `pairwise` identifiers provide different `sub` claim values to each client application. With
          this approach, it makes it impossible for client applications to correlate the end-user's
          activity without their permission.
        example:
        - public
        - pairwise
        items:
          enum:
          - public
          - pairwise
          type: string
        type: array
        x-nullable: false
      template:
        description: If true this workspace can be used as a template when creating
          a new ones.
        type: boolean
        x-nullable: false
      tenant_id:
        description: ID of a tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      token_endpoint_auth_methods:
        default:
        - client_secret_basic
        - client_secret_post
        - client_secret_jwt
        - private_key_jwt
        - self_signed_tls_client_auth
        - tls_client_auth
        - none
        description: |-
          An array that lists all of the supported token endpoint authentication methods for the
          authorization server.
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          - unspecified
          type: string
        type: array
        x-nullable: false
      token_endpoint_auth_signing_alg_values:
        description: |-
          Token endpoint auth signing supported alg values

          Supported algorithms: HS256, RS256, ES256, PS256

          At least one algorithm must be set.

          The default values depends on the server security profile.
        items:
          type: string
        type: array
        x-nullable: false
      token_endpoint_authn_methods:
        description: 'Deprecated: Use TokenEndpointAuthMethods instead'
        items:
          enum:
          - client_secret_basic
          - client_secret_post
          - client_secret_jwt
          - private_key_jwt
          - self_signed_tls_client_auth
          - tls_client_auth
          - none
          - unspecified
          type: string
        type: array
        x-nullable: false
      trust_anchor_configuration:
        $ref: '#/definitions/TrustAnchorConfiguration'
      type:
        default: regular
        description: |-
          Server type

          It is an internal property used to recognize if the server is created for an admin portal,
          a developer portal, or if it is a system or a regular workspace.
        enum:
        - admin
        - developer
        - system
        - regular
        - organization
        example: regular
        type: string
        x-nullable: false
      version:
        default: 3
        description: |-
          server version to track internal changes
          version that is currently the latest: 3
        format: int64
        type: integer
        x-nullable: false
      workforce:
        $ref: '#/definitions/WorkforceConfiguration'
    required:
    - tenant_id
    type: object
  ServerJWK:
    properties:
      alg:
        description: |-
          The "alg" (algorithm) parameter identifies the algorithm intended for
          use with the key.  The values used should either be registered in the
          IANA "JSON Web Signature and Encryption Algorithms" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.
        example: RS256
        type: string
        x-nullable: false
      created_at:
        description: Time when key was generated
        format: date-time
        type: string
        x-nullable: false
      crv:
        example: P-256
        type: string
        x-nullable: false
      d:
        example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        type: string
        x-nullable: false
      dp:
        example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        type: string
        x-nullable: false
      dq:
        example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        type: string
        x-nullable: false
      e:
        example: AQAB
        type: string
        x-nullable: false
      k:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      kid:
        description: |-
          The "kid" (key ID) parameter is used to match a specific key.  This
          is used, for instance, to choose among a set of keys within a JWK Set
          during key rollover.  The structure of the "kid" value is
          unspecified.  When "kid" values are used within a JWK Set, different
          keys within the JWK Set SHOULD use distinct "kid" values.  (One
          example in which different keys might use the same "kid" value is if
          they have different "kty" (key type) values but are considered to be
          equivalent alternatives by the application using them.)  The "kid"
          value is a case-sensitive string.
        example: 1603dfe0af8f4596
        type: string
        x-nullable: false
      kty:
        description: |-
          The "kty" (key type) parameter identifies the cryptographic algorithm
          family used with the key, such as "RSA" or "EC". "kty" values should
          either be registered in the IANA "JSON Web Key Types" registry
          established by [JWA] or be a value that contains a Collision-
          Resistant Name.  The "kty" value is a case-sensitive string.
        example: RSA
        type: string
        x-nullable: false
      "n":
        example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        type: string
        x-nullable: false
      p:
        example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        type: string
        x-nullable: false
      promoted_at:
        description: Time when key was set as current key in use
        format: date-time
        type: string
        x-nullable: false
      q:
        example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        type: string
        x-nullable: false
      qi:
        example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        type: string
        x-nullable: false
      revoked_at:
        description: Time when key was revoked
        format: date-time
        type: string
        x-nullable: false
      rotated_at:
        description: Time when key was rotated
        format: date-time
        type: string
        x-nullable: false
      use:
        description: |-
          Use ("public key use") identifies the intended use of
          the public key. The "use" parameter is employed to indicate whether
          a public key is used for encrypting data or verifying the signature
          on data. Values are commonly "sig" (signature) or "enc" (encryption).
        example: sig
        type: string
        x-nullable: false
      x:
        example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        type: string
        x-nullable: false
      x5c:
        description: |-
          The "x5c" (X.509 certificate chain) parameter contains a chain of one
          or more PKIX certificates [RFC5280].  The certificate chain is
          represented as a JSON array of certificate value strings.  Each
          string in the array is a base64-encoded (Section 4 of [RFC4648] --
          not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.
          The PKIX certificate containing the key value MUST be the first
          certificate.
        items:
          type: string
        type: array
        x-nullable: false
      x5t:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      x5t#S256:
        example: GawgguFyGrWKav7AX4VKUg
        type: string
        x-nullable: false
      "y":
        example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        type: string
        x-nullable: false
    required:
    - kty
    type: object
  ServerJWKs:
    properties:
      keys:
        example: []
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      next_encryption_key:
        $ref: '#/definitions/ServerJWK'
      next_signing_key:
        $ref: '#/definitions/ServerJWK'
      revoked_encryption_keys:
        description: |-
          An array of revoked encryption keys

          Revoked encryption keys cannot be used to encrypt payloads between servers and client applications
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      revoked_keys_limit:
        description: The maximum number of revoked keys that ACP stores.
        format: int64
        type: integer
        x-nullable: false
      revoked_signing_keys:
        description: |-
          An array of revoked sigining keys

          Revoked signing keys cannot be used to sign any tokens.
          Any attempt to authenticate using a token signed with a revoked signing key results
          in failed authentication.
        items:
          $ref: '#/definitions/ServerJWK'
        type: array
        x-nullable: false
      rotated_keys_limit:
        description: The maximum number of rotated keys that ACP stores.
        format: int64
        type: integer
        x-nullable: false
    type: object
  ServerMetadata:
    properties:
      payload:
        additionalProperties:
          type: object
        description: metadata payload
        type: object
        x-nullable: false
      schema:
        $ref: '#/definitions/SupportedJSONSchema'
    type: object
  ServerPreferences:
    properties:
      display_identity_pool_idp:
        description: display identity pool IDP
        type: boolean
        x-nullable: false
      display_organization_idp:
        description: display organization IDP
        type: boolean
        x-nullable: false
    type: object
  ServerSettings:
    properties:
      deactivated:
        type: boolean
        x-nullable: false
      default_client_id:
        format: clientID
        type: string
        x-nullable: false
      default_post_authn_ctx_script_id:
        format: scriptID
        type: string
        x-nullable: false
    type: object
  ServerToServer:
    properties:
      dependent:
        description: dependent server id
        example: default
        format: serverID
        type: string
        x-nullable: false
      server_id:
        description: authorization server id
        example: developer
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
    type: object
  ServerToTheme:
    properties:
      server_id:
        description: authorization server id
        example: developer
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: tenant id
        example: default
        format: tenantID
        type: string
        x-nullable: false
      theme_id:
        description: theme id
        example: acme
        format: themeID
        type: string
        x-nullable: false
    type: object
  Service:
    properties:
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      custom_audience:
        description: Custom service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      description:
        description: Service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: Gateway identifier
        example: gateway-1
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: A unique identifier of a service
        example: service-1
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: Service name
        example: My service
        type: string
        x-nullable: false
      system:
        description: '`true` when the service is a system service'
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      type:
        default: user
        description: Service type
        enum:
        - oauth2
        - oidc
        - system
        - user
        - openbanking
        type: string
        x-nullable: false
      updated_at:
        description: The date of service update
        format: date-time
        type: string
        x-nullable: false
      with_specification:
        description: '`true` when the service has the OpenAPI 3.0 specification'
        type: boolean
        x-nullable: false
    type: object
  ServiceAuditPayload:
    properties:
      custom_audience:
        description: Custom service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      description:
        description: Service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: Gateway identifier
        example: gateway-1
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: A unique identifier of a service
        example: service-1
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: Service name
        example: My service
        type: string
        x-nullable: false
      system:
        description: '`true` when the service is a system service'
        example: false
        type: boolean
        x-nullable: false
      type:
        default: user
        description: Service type
        enum:
        - oauth2
        - oidc
        - system
        - user
        - openbanking
        type: string
        x-nullable: false
      updated_at:
        description: The date of service update
        format: date-time
        type: string
        x-nullable: false
      with_specification:
        description: '`true` when the service has the OpenAPI 3.0 specification'
        type: boolean
        x-nullable: false
    type: object
  ServiceConnectedToGateway:
    properties:
      api_group_id:
        description: Optional id of api group id connected to the service
        format: apiGroupID
        type: string
        x-nullable: false
      api_group_metadata:
        $ref: '#/definitions/APIGroupMetadata'
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      custom_audience:
        description: Custom service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      description:
        description: Service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: Gateway identifier
        example: gateway-1
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: A unique identifier of a service
        example: service-1
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: Service name
        example: My service
        type: string
        x-nullable: false
      system:
        description: '`true` when the service is a system service'
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      type:
        default: user
        description: Service type
        enum:
        - oauth2
        - oidc
        - system
        - user
        - openbanking
        type: string
        x-nullable: false
      updated_at:
        description: The date of service update
        format: date-time
        type: string
        x-nullable: false
      with_specification:
        description: '`true` when the service has the OpenAPI 3.0 specification'
        type: boolean
        x-nullable: false
    type: object
  ServiceWithScopesAndAPIsAndAuthorizationDetails:
    properties:
      apis:
        description: list of apis
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      authorization_details:
        description: list of authorization details
        items:
          $ref: '#/definitions/AuthorizationDetail'
        type: array
        x-nullable: false
      authorization_server_id:
        description: Authorization server identifier
        example: my-server
        format: serverID
        type: string
        x-nullable: false
      custom_audience:
        description: Custom service audience
        example: https://api.example.com
        type: string
        x-nullable: false
      description:
        description: Service description
        example: Service description
        type: string
        x-nullable: false
      gateway_id:
        description: Gateway identifier
        example: gateway-1
        format: gatewayID
        type: string
        x-nullable: false
      id:
        description: A unique identifier of a service
        example: service-1
        format: serviceID
        type: string
        x-nullable: false
      name:
        description: Service name
        example: My service
        type: string
        x-nullable: false
      scopes:
        description: list of scopes
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      system:
        description: '`true` when the service is a system service'
        example: false
        type: boolean
        x-nullable: false
      tenant_id:
        description: Tenant identifier
        example: my-company
        format: tenantID
        type: string
        x-nullable: false
      type:
        default: user
        description: Service type
        enum:
        - oauth2
        - oidc
        - system
        - user
        - openbanking
        type: string
        x-nullable: false
      updated_at:
        description: The date of service update
        format: date-time
        type: string
        x-nullable: false
      with_specification:
        description: '`true` when the service has the OpenAPI 3.0 specification'
        type: boolean
        x-nullable: false
    type: object
  SetGatewayConfigurationRequest:
    properties:
      api_groups:
        description: List of api groups
        items:
          $ref: '#/definitions/APIGroup'
        type: array
        x-nullable: false
    type: object
  SetGatewayConfigurationResponse:
    properties:
      number_of_added_api_groups:
        format: int64
        type: integer
        x-nullable: false
    type: object
  SpecVersion:
    type: string
  StaticCredentials:
    description: Static IDP specific credentials
    properties:
      users:
        description: |-
          An array of users, their credentials and authentication context.

          The `users` parameter accepts a JSON of user data. You can add multiple users, define their
          usernames and passwords. You can also enrich their authentication context.
        items:
          $ref: '#/definitions/StaticUser'
        type: array
        x-nullable: false
    type: object
  StaticSettings:
    description: Static IDP specific settings
    properties:
      hint:
        description: If enabled, a hint message is displayed
        type: boolean
        x-nullable: false
    type: object
  StaticUser:
    properties:
      additional_attributes:
        $ref: '#/definitions/AuthenticationContext'
      authentication_context:
        $ref: '#/definitions/AuthenticationContext'
      email:
        description: User's preferred email.
        type: string
        x-nullable: false
      email_verified:
        description: If set to true, indicates that the user's email was verified.
        type: boolean
        x-nullable: false
      password:
        description: User password.
        example: secret
        type: string
        x-nullable: false
      phone_number:
        description: User's preferred phone number
        type: string
        x-nullable: false
      phone_number_verified:
        description: If set to true, indicates that the user's phone number was verified.
        type: boolean
        x-nullable: false
      username:
        description: User login.
        example: peter
        type: string
        x-nullable: false
    type: object
  Styling:
    properties:
      colors:
        properties:
          background:
            type: string
            x-nullable: false
          header:
            type: string
            x-nullable: false
          primary:
            type: string
            x-nullable: false
        type: object
        x-nullable: false
      font_url:
        type: string
        x-nullable: false
      logo_size:
        type: string
        x-nullable: false
      logo_url:
        type: string
        x-nullable: false
    type: object
  SupportedJSONSchema:
    properties:
      additionalProperties:
        type: boolean
        x-nullable: false
      allOf:
        items:
          $ref: '#/definitions/SupportedJSONSchema'
        type: array
        x-nullable: false
      anyOf:
        items:
          $ref: '#/definitions/SupportedJSONSchema'
        type: array
        x-nullable: false
      const:
        type: string
        x-nullable: false
      contains:
        $ref: '#/definitions/SupportedJSONSchema'
      dependentRequired:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
        x-nullable: false
      dependentSchemas:
        additionalProperties:
          $ref: '#/definitions/SupportedJSONSchema'
        type: object
        x-nullable: false
      description:
        type: string
        x-nullable: false
      else:
        $ref: '#/definitions/SupportedJSONSchema'
      enum:
        items:
          type: string
        type: array
        x-nullable: false
      exclusiveMaximum:
        format: int64
        type: integer
        x-nullable: false
      exclusiveMinimum:
        format: int64
        type: integer
        x-nullable: false
      hidden:
        type: boolean
        x-nullable: false
      if:
        $ref: '#/definitions/SupportedJSONSchema'
      items:
        $ref: '#/definitions/SupportedJSONSchema'
      maxContains:
        format: int64
        type: integer
        x-nullable: false
      maxItems:
        description: arrays
        format: int64
        type: integer
        x-nullable: false
      maxLength:
        description: strings
        format: int64
        type: integer
        x-nullable: false
      maxProperties:
        description: objects
        format: int64
        type: integer
        x-nullable: false
      maximum:
        format: int64
        type: integer
        x-nullable: false
      minContains:
        format: int64
        type: integer
        x-nullable: false
      minItems:
        format: int64
        type: integer
        x-nullable: false
      minLength:
        format: int64
        type: integer
        x-nullable: false
      minProperties:
        format: int64
        type: integer
        x-nullable: false
      minimum:
        format: int64
        type: integer
        x-nullable: false
      multipleOf:
        description: numeric
        format: int64
        type: integer
        x-nullable: false
      not:
        $ref: '#/definitions/SupportedJSONSchema'
      oneOf:
        items:
          $ref: '#/definitions/SupportedJSONSchema'
        type: array
        x-nullable: false
      pattern:
        type: string
        x-nullable: false
      patternProperties:
        additionalProperties:
          $ref: '#/definitions/SupportedJSONSchema'
        type: object
        x-nullable: false
      properties:
        additionalProperties:
          $ref: '#/definitions/SupportedJSONSchema'
        type: object
        x-nullable: false
      propertyNames:
        $ref: '#/definitions/SupportedJSONSchema'
      required:
        items:
          type: string
        type: array
        x-nullable: false
      then:
        $ref: '#/definitions/SupportedJSONSchema'
      title:
        type: string
        x-nullable: false
      type:
        description: any
        type: string
        x-nullable: false
      uniqueItems:
        type: boolean
        x-nullable: false
    type: object
  TaskAuditPayload:
    properties:
      attributes:
        type: object
        x-nullable: false
      error:
        type: string
        x-nullable: false
      name:
        type: string
        x-nullable: false
    type: object
  Template:
    description: Custom Branding template
    properties:
      content:
        description: content of the template
        type: string
        x-nullable: false
      created_at:
        description: timestamp when the template was created
        format: date-time
        type: string
        x-nullable: false
      fs_path:
        description: path to the template in a filesystem zip archive
        format: fsPath
        type: string
        x-nullable: false
      tenant_id:
        description: ID of the tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      theme_id:
        description: theme unique identifier
        format: themeID
        type: string
        x-nullable: false
      updated_at:
        description: timestamp when the template was last updated
        format: date-time
        type: string
        x-nullable: false
    required:
    - fs_path
    - tenant_id
    - theme_id
    type: object
  Tenant:
    properties:
      id:
        description: |-
          tenant unique identifier
          exampe: default
        format: tenantID
        type: string
        x-nullable: false
      jwks:
        $ref: '#/definitions/ServerJWKs'
      metadata:
        $ref: '#/definitions/TenantMetadata'
      name:
        description: tenant name
        example: Default
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/TenantSettings'
      styling:
        $ref: '#/definitions/Styling'
      url:
        description: optional custom tenant url. If not provided the server url is
          used instead
        example: https://example.com/default
        type: string
        x-nullable: false
    type: object
  TenantDump:
    properties:
      acrs:
        items:
          $ref: '#/definitions/ACR'
        type: array
        x-nullable: false
      apis:
        items:
          $ref: '#/definitions/API'
        type: array
        x-nullable: false
      audit_events:
        items:
          $ref: '#/definitions/InternalAuditEvent'
        type: array
        x-nullable: false
      authorization_details:
        items:
          $ref: '#/definitions/AuthorizationDetail'
        type: array
        x-nullable: false
      brute_force_limits:
        items:
          $ref: '#/definitions/BruteForceLimit'
        type: array
        x-nullable: false
      cdr_arrangements:
        items:
          $ref: '#/definitions/CDRArrangement'
        type: array
        x-nullable: false
      ciba_authentication_services:
        items:
          $ref: '#/definitions/CIBAAuthenticationService'
        type: array
        x-nullable: false
      claim_grants:
        items:
          $ref: '#/definitions/ClaimGrant'
        type: array
        x-nullable: false
      claims:
        items:
          $ref: '#/definitions/Claim'
        type: array
        x-nullable: false
      clients:
        items:
          $ref: '#/definitions/Client'
        type: array
        x-nullable: false
      consent_actions:
        items:
          $ref: '#/definitions/ConsentActionWithConsents'
        type: array
        x-nullable: false
      consent_grants:
        items:
          $ref: '#/definitions/ConsentGrant'
        type: array
        x-nullable: false
      consents:
        items:
          $ref: '#/definitions/Consent'
        type: array
        x-nullable: false
      cross_tenant_api_policy_bindings:
        items:
          $ref: '#/definitions/CrossTenantAPIPolicyBinding'
        type: array
        x-nullable: false
      custom_apps:
        items:
          $ref: '#/definitions/CustomApp'
        type: array
        x-nullable: false
      feature_flags:
        items:
          $ref: '#/definitions/Feature'
        type: array
        x-nullable: false
      gateway_api_groups:
        items:
          $ref: '#/definitions/GatewayAPIGroup'
        type: array
        x-nullable: false
      gateways:
        items:
          $ref: '#/definitions/Gateway'
        type: array
        x-nullable: false
      idps:
        $ref: '#/definitions/IDPs'
      mfa_methods:
        items:
          $ref: '#/definitions/MFAMethod'
        type: array
        x-nullable: false
      openbanking_br_consents:
        items:
          $ref: '#/definitions/OBConsent'
        type: array
        x-nullable: false
      openbanking_fdx_consents:
        items:
          $ref: '#/definitions/FDXConsent'
        type: array
        x-nullable: false
      openbanking_file_payment_consent_file_resources:
        items:
          $ref: '#/definitions/FilePaymentConsentFileResource'
        type: array
        x-nullable: false
      openbanking_ksa_consents:
        items:
          $ref: '#/definitions/KSAConsent'
        type: array
        x-nullable: false
      openbanking_uk_consents:
        items:
          $ref: '#/definitions/OBConsent'
        type: array
        x-nullable: false
      policies:
        items:
          $ref: '#/definitions/Policy'
        type: array
        x-nullable: false
      policy_execution_points:
        items:
          $ref: '#/definitions/PolicyExecutionPoint'
        type: array
        x-nullable: false
      privacy_ledger_events:
        items:
          $ref: '#/definitions/PrivacyLedgerEvent'
        type: array
        x-nullable: false
      recurring_jobs:
        items:
          $ref: '#/definitions/RecurringJob'
        type: array
        x-nullable: false
      roles:
        items:
          $ref: '#/definitions/Role'
        type: array
        x-nullable: false
      scope_grants:
        items:
          $ref: '#/definitions/ScopeGrant'
        type: array
        x-nullable: false
      scopes_without_service:
        items:
          $ref: '#/definitions/Scope'
        type: array
        x-nullable: false
      script_execution_points:
        items:
          $ref: '#/definitions/ScriptExecutionPoint'
        type: array
        x-nullable: false
      scripts:
        items:
          $ref: '#/definitions/Script'
        type: array
        x-nullable: false
      secrets:
        items:
          $ref: '#/definitions/Secret'
        type: array
        x-nullable: false
      server_consents:
        items:
          $ref: '#/definitions/ServerConsent'
        type: array
        x-nullable: false
      servers:
        items:
          $ref: '#/definitions/ServerDump'
        type: array
        x-nullable: false
      servers_bindings:
        items:
          $ref: '#/definitions/ServerToServer'
        type: array
        x-nullable: false
      services:
        items:
          $ref: '#/definitions/ServiceWithScopesAndAPIsAndAuthorizationDetails'
        type: array
        x-nullable: false
      templates:
        items:
          $ref: '#/definitions/Template'
        type: array
        x-nullable: false
      tenant:
        $ref: '#/definitions/Tenant'
      theme_bindings:
        items:
          $ref: '#/definitions/ServerToTheme'
        type: array
        x-nullable: false
      themes:
        items:
          $ref: '#/definitions/Theme'
        type: array
        x-nullable: false
      translations:
        items:
          $ref: '#/definitions/CustomTranslation'
        type: array
        x-nullable: false
      vanity_domains:
        items:
          $ref: '#/definitions/VanityDomain'
        type: array
        x-nullable: false
      webhooks:
        items:
          $ref: '#/definitions/Webhook'
        type: array
        x-nullable: false
    type: object
  TenantMetadata:
    additionalProperties:
      type: object
    type: object
  TenantSettings:
    properties:
      default_template_id:
        format: serverID
        type: string
        x-nullable: false
      default_workspace_id:
        format: serverID
        type: string
        x-nullable: false
      security:
        $ref: '#/definitions/SecureOptions'
      translations:
        $ref: '#/definitions/TenantTranslationsSettings'
      well_known:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
      workforce:
        $ref: '#/definitions/WorkforceSettings'
    type: object
  TenantTranslationsSettings:
    properties:
      default_locale:
        description: Default locale
        format: locale
        type: string
        x-nullable: false
      disabled_translations:
        description: Disabled built-in translations
        items:
          format: locale
          type: string
        type: array
        x-nullable: false
      enabled:
        description: Are translations enabled
        type: boolean
        x-nullable: false
      selector_enabled:
        description: Is locale selector enabled in templates
        type: boolean
        x-nullable: false
    type: object
  Theme:
    description: Custom Branding theme
    properties:
      id:
        description: theme unique identifier
        format: themeID
        type: string
        x-nullable: false
      logo_url:
        description: theme logo url
        type: string
        x-nullable: false
      name:
        description: Display name of the theme
        example: acme
        type: string
        x-nullable: false
      tenant_id:
        description: ID of the tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
    required:
    - tenant_id
    type: object
  Token:
    description: |-
      A Token is an interface type used to represent XML elements, character
      data, CDATA sections, XML comments, XML directives, and XML processing
      instructions.
    properties:
      Index:
        format: int64
        type: integer
        x-nullable: false
      Parent:
        $ref: '#/definitions/Element'
    type: object
  TokenTTLs:
    properties:
      access_token_ttl:
        default: 1h0m0s
        description: |-
          Access token time to live

          After an access token reaches its time to live, it expires and it cannot be used to
          authenticate the client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      authorization_code_ttl:
        description: |-
          Authorization code time to live

          After an authorization code reaches its time to live, it expires and it cannot be used to
          authorize the request to the `/token` endpoint.
        example: 10m0s
        format: duration
        type: string
        x-nullable: false
      id_token_ttl:
        description: |-
          ID token time to live

          After an ID token reaches its time to live, it expires and it cannot be used to provide
          user profile information to a client application.
        example: 1h10m30s
        format: duration
        type: string
        x-nullable: false
      refresh_token_ttl:
        default: 720h0m0s
        description: |-
          Refresh token time to live

          After a refresh token reaches its time to live, it expires and it cannot be used to obtain
          new access tokens for a client application.
        example: 720h0m0s
        format: duration
        type: string
        x-nullable: false
    type: object
  TokensRevokedPayload:
    properties:
      consent_id:
        description: consent ID for which the token has been revoked (populated only
          if type equals consent)
        type: string
        x-nullable: false
      type:
        description: entity type for which token has been revoked
        example: consent
        type: string
        x-nullable: false
    type: object
  TrustAnchorConfiguration:
    properties:
      jwks:
        $ref: '#/definitions/ClientJWKs'
      jwks_uri:
        description: URI of the JWKs of the trusted party responsible for signing
          the Software Statement
        type: string
        x-nullable: false
    type: object
  UKConsentPayload:
    properties:
      account_ids:
        items:
          type: string
        type: array
        x-nullable: false
      client_id:
        description: Client application identifier.
        example: '"cauqo9c9vpbs0aj2b2v0"'
        format: clientID
        type: string
        x-nullable: false
      consent_id:
        format: consentID
        type: string
        x-nullable: false
      created_at:
        format: date-time
        type: string
        x-nullable: false
      idempotency_key:
        type: string
        x-nullable: false
      request_hash:
        type: string
        x-nullable: false
      server_id:
        description: Server / Workspace identifier.
        example: '"server"'
        format: serverID
        type: string
        x-nullable: false
      spec:
        type: string
        x-nullable: false
      spec_version:
        $ref: '#/definitions/SpecVersion'
      status:
        type: string
        x-nullable: false
      tenant_id:
        description: Tenant identifier.
        example: '"tenant"'
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/ConsentType'
    type: object
  UserAttributeMapping:
    properties:
      allow_weak_decoding:
        description: |-
          If enabled, the decoder makes the following "weak" conversions:

          Bools to string (true = "1", false = "0")

          numbers to string (base 10)

          bools to int/uint (true = 1, false = 0)

          strings to int/uint (base implied by prefix)

          int to bool (true if value != 0)

          string to bool (accepts only the following: 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False)

          empty array = empty map and vice versa

          negative numbers to overflowed uint values (base 10)

          slice of maps to a merged map

          single values are converted to slices if required. Each element is weakly decoded.
        example: false
        type: boolean
        x-nullable: false
      mode:
        $ref: '#/definitions/MappingMode'
      source:
        description: |-
          Source attribute.

          Source path to the attribute(s) which should be copied to the authentication context.
          Use '.' to copy everything.
          Required for dynamic mode.
        example: access_token
        type: string
        x-nullable: false
      static:
        description: When static mode is used, this field contains a value that will
          be populated into a target attribute.
        type: object
        x-nullable: false
      target:
        description: |-
          Target attribute.

          Target path in the authentication context where source attribute(s) should be pasted.
          Use '.' to paste to the context top level object.
        example: .
        type: string
        x-nullable: false
      type:
        description: |-
          Type of the target attribute

          The `type` parameter accepts the following values:
          `number`, `string`, `bool`, `number_array`, `string_array`, `bool_array`, `any`.
        example: string
        format: type
        type: string
        x-nullable: false
      update_on_sign_in:
        type: boolean
        x-nullable: false
    required:
    - target
    - type
    type: object
  UserAttributesMapping:
    items:
      $ref: '#/definitions/UserAttributeMapping'
    type: array
  UserAuthenticatedPayload:
    description: UserAuthenticatedPayload user authenticated payload
    properties:
      authn_method:
        description: authn method
        enum:
        - totp
        - password
        - otp
        - email_otp
        - sms_otp
        - webauthn
        type: string
        x-nullable: false
      failure_reason:
        description: failure reason
        type: string
        x-nullable: false
      identifier:
        description: identifier
        type: string
        x-nullable: false
      mfa:
        description: mfa
        enum:
        - totp
        - password
        - otp
        - email_otp
        - sms_otp
        - webauthn
        type: string
        x-nullable: false
      mfa_skipped:
        description: mfa skipped
        type: boolean
        x-nullable: false
      password_mode:
        description: password mode
        type: boolean
        x-nullable: false
      success:
        description: success
        type: boolean
        x-nullable: false
    required:
    - success
    type: object
  UserCodeCharacterSet:
    type: string
  UserIDAndIdentifierPayload:
    description: UserIDAndIdentifierPayload user ID and identifier payload
    properties:
      code_id:
        description: code id
        type: string
        x-nullable: false
      failure_reason:
        description: failure reason
        type: string
        x-nullable: false
      identifier:
        description: identifier
        type: string
        x-nullable: false
      operation_type:
        description: operation type
        type: string
        x-nullable: false
      user_id:
        description: user id
        type: string
        x-nullable: false
    type: object
  UserInGroupPayload:
    description: UserInGroupPayload user in group payload
    properties:
      group_id:
        description: group id
        type: string
        x-nullable: false
      user_id:
        description: user id
        type: string
        x-nullable: false
    type: object
  UserOrganizationsResponse:
    properties:
      cursor:
        $ref: '#/definitions/Cursor'
      organizations:
        items:
          $ref: '#/definitions/OrganizationResponse'
        type: array
        x-nullable: false
    type: object
  UserPayload:
    description: UserPayload user payload
    properties:
      address:
        description: address
        type: string
        x-nullable: false
      identifier:
        description: identifier
        type: string
        x-nullable: false
      identifiers:
        description: identifiers
        items:
          type: string
        type: array
        x-nullable: false
      payload:
        additionalProperties:
          type: object
        description: payload
        type: object
        x-nullable: false
      status:
        description: status
        enum:
        - active
        - inactive
        - deleted
        - new
        type: string
        x-nullable: false
      update_details:
        description: update details
        type: string
        x-nullable: false
      user_addresses:
        description: user addresses
        items:
          $ref: '#/definitions/EventAddress'
        type: array
        x-nullable: false
      user_id:
        description: user id
        type: string
        x-nullable: false
      user_identifiers:
        description: user identifiers
        items:
          $ref: '#/definitions/EventIdentifier'
        type: array
        x-nullable: false
    type: object
  UserWorkspacesResponse:
    properties:
      cursor:
        $ref: '#/definitions/Cursor'
      workspaces:
        items:
          $ref: '#/definitions/WorkspaceResponse'
        type: array
        x-nullable: false
    type: object
  ValidatorConfig:
    description: Depending on the type of a policy different validators are available.
    properties:
      conf:
        additionalProperties:
          type: object
        description: |-
          Configuration of the validator provided in the JSON format

          Validators configuration is an array of fields where each node consists of a comparator used,
          validated field, and a value for comparison. Configuration can be also branched, which means
          that it is possible to create conditional validators. It allows to define complex
          authorization scenarios based on the results from other policy validators.
        type: object
        x-nullable: false
      name:
        description: The name of your validator
        example: identity-context
        type: string
        x-nullable: false
      recovery:
        items:
          $ref: '#/definitions/RecoveryConfig'
        type: array
        x-nullable: false
    title: Configuration of a policy validator
    type: object
  Values:
    additionalProperties:
      items:
        type: string
      type: array
    description: |-
      It is typically used for query parameters and form values.
      Unlike in the http.Header map, the keys in a Values map
      are case-sensitive.
    title: Values maps a string key to a list of values.
    type: object
  VanityDomain:
    properties:
      api_key:
        description: api key
        type: string
        x-nullable: false
      base_path:
        description: base path to use with a configured vanity domain
        example: /prefix
        type: string
        x-nullable: false
      cert:
        description: domain cerificate
        type: string
        x-nullable: false
      domain:
        description: vanity domain
        example: example.com
        type: string
        x-nullable: false
      id:
        description: ID
        format: vanityDomainID
        type: string
        x-nullable: false
      key:
        description: domain private key
        type: string
        x-nullable: false
      server_id:
        description: Unique identifier of an authorization server (workspace)
        example: default
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: ID of a tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      type:
        $ref: '#/definitions/VanityDomainType'
    required:
    - domain
    type: object
  VanityDomainType:
    type: string
  VerifiedClaimsRequests:
    properties:
      id_token:
        $ref: '#/definitions/RequestedVerifiedClaims'
      userinfo:
        $ref: '#/definitions/RequestedVerifiedClaims'
    type: object
  Webhook:
    description: Custom Branding Webhook
    properties:
      active:
        description: Active
        type: boolean
        x-nullable: false
      api_key:
        description: API Key
        type: string
        x-nullable: false
      events:
        additionalProperties:
          items:
            type: string
          type: array
        description: events
        type: object
        x-nullable: false
      insecure:
        description: Insecure
        type: boolean
        x-nullable: false
      server_id:
        description: ID of the server
        format: serverID
        type: string
        x-nullable: false
      tenant_id:
        description: ID of the tenant
        example: default
        format: tenantID
        type: string
        x-nullable: false
      url:
        description: url of the Webhook
        type: string
        x-nullable: false
      webhook_id:
        description: ID to the Webhook
        format: webhookID
        type: string
        x-nullable: false
    required:
    - webhook_id
    - tenant_id
    - server_id
    type: object
  WorkforceConfiguration:
    properties:
      status:
        $ref: '#/definitions/WorkforceProvisioningStatus'
      tenant_slug:
        description: workforce tenant slug
        type: string
        x-nullable: false
    type: object
  WorkforceProvisioningStatus:
    type: string
  WorkforceSettings:
    properties:
      faye_url:
        type: string
        x-nullable: false
      manifest_url:
        type: string
        x-nullable: false
      url:
        type: string
        x-nullable: false
    type: object
  WorkspaceMetadata:
    properties:
      payload:
        additionalProperties:
          type: object
        type: object
        x-nullable: false
    type: object
  WorkspaceResponse:
    properties:
      authentication_context_settings:
        $ref: '#/definitions/AuthenticationContextSettings'
      authentication_mechanisms:
        description: allowed authentication mechanisms for users in the identity pools
        example:
        - password
        - totp
        - otp
        - webauthn
        items:
          enum:
          - totp
          - password
          - otp
          - email_otp
          - sms_otp
          - webauthn
          type: string
        type: array
        x-nullable: false
      color:
        default: '#007FFF'
        description: Your server's label color in a HEX format.
        example: '#007FFF'
        type: string
        x-nullable: false
      description:
        description: Display description of the workspace
        example: Server description
        type: string
        x-nullable: false
      id:
        description: Unique identifier of an workspace
        example: default
        format: serverID
        type: string
        x-nullable: false
      idp_discovery:
        $ref: '#/definitions/IDPDiscovery'
      issuer_url:
        type: string
        x-nullable: false
      logo_uri:
        description: Logo URI
        type: string
        x-nullable: false
      metadata:
        $ref: '#/definitions/ServerMetadata'
      name:
        description: |-
          Display name of the workspace

          If not provided, a random ID is generated.
        example: default
        type: string
        x-nullable: false
      number_of_child_organizations:
        format: int64
        type: integer
        x-nullable: false
      preferences:
        $ref: '#/definitions/ServerPreferences'
      profile:
        default: default
        description: |-
          The profile of a server

          ACP is delivered with preconfigured workspace templates that enable quick and easy setup for
          specific configuration patterns. For example, you can instantly create an Open Banking
          compliant workspace that has all of the required mechanisms and settings already in place.
        enum:
        - default
        - demo
        - workforce
        - workforce_v2
        - consumer
        - partners
        - third_party
        - fapi_advanced
        - fapi_rw
        - fapi_ro
        - openbanking_uk_fapi_advanced
        - openbanking_uk
        - openbanking_br
        - openbanking_br_unico
        - cdr_australia
        - cdr_australia_fapi_rw
        - fdx
        - openbanking_ksa
        - fapi_20_security
        - fapi_20_message_signing
        - connect_id
        - agentic_ai
        example: default
        type: string
        x-nullable: false
      settings:
        $ref: '#/definitions/ServerSettings'
      sso:
        $ref: '#/definitions/SSOConfiguration'
      subject_format:
        description: Subject format
        enum:
        - hash
        - legacy
        - custom
        type: string
        x-nullable: false
      subject_identifier_algorithm_salt:
        description: Subject identifier algorithm salt
        type: string
        x-nullable: false
      template:
        type: boolean
        x-nullable: false
      theme_id:
        description: optional theme id
        format: themeID
        type: string
        x-nullable: false
      type:
        default: regular
        description: |-
          Server type

          It is an internal property used to recognize if the server is created for an admin portal,
          a developer portal, or if it is a system or a regular workspace.
        enum:
        - admin
        - developer
        - system
        - regular
        - organization
        example: regular
        type: string
        x-nullable: false
      workforce:
        $ref: '#/definitions/WorkforceConfiguration'
    type: object
  WorkspacesResponse:
    properties:
      workspaces:
        items:
          $ref: '#/definitions/WorkspaceResponse'
        type: array
        x-nullable: false
    type: object
  X509Certificate:
    description: X509Certificate represents the XMLSEC object of the same name
    properties:
      Data:
        type: string
        x-nullable: false
      XMLName:
        $ref: '#/definitions/Name'
    type: object
  X509Data:
    description: X509Data represents the XMLSEC object of the same name
    properties:
      X509Certificates:
        items:
          $ref: '#/definitions/X509Certificate'
        type: array
        x-nullable: false
      XMLName:
        $ref: '#/definitions/Name'
    type: object
  XCredentials:
    description: X IDP specific credentials
    properties:
      client_secret:
        description: OAuth client application secret
        type: string
        x-nullable: false
    type: object
  XSettings:
    description: X IDP specific settings
    properties:
      authentication_method:
        description: Client authentication method
        enum:
        - client_secret
        - none
        type: string
        x-nullable: false
      client_id:
        description: OAuth client application identifier
        example: client
        type: string
        x-nullable: false
      scopes:
        description: An array of additional scopes your client requests
        example:
        - email
        - profile
        - openid
        items:
          type: string
        type: array
        x-nullable: false
    type: object
host: localhost:8443
info:
  description: |-
    Cloudentity System API

    The POST APIs support idempotency for safely retrying requests without accidentally performing the same operation twice.

    To use idempotent requests:

    1. Generate a unique idempotency key (32-255 characters long).
    2. Include the key in the X-Idempotency-Key header of your POST request.
    3. Retry failed requests with the same key within 1 minute.

    Responses for replayed requests will include the X-Idempotent-Replayed: true header.
  title: Cloudentity API
  version: latest
paths:
  /client/{cid}:
    get:
      description: If client has been created by a developer, client's secret will
        be empty.
      operationId: getClient
      parameters:
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/Client'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - view_clients
      summary: Get client.
      tags:
      - clients
  /client/{cid}/revokeRotatedSecrets:
    post:
      description: Revoke all rotated client's secrets.
      operationId: revokeRotatedClientSecrets
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      responses:
        "204":
          description: ' all client''s rotated secrets has been revoked'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_clients
      summary: Revoke rotated secrets.
      tags:
      - clients
  /client/{cid}/rotateSecret:
    post:
      description: |-
        Generate a new client secret, move old secret to rotated secrets list and return
        new client secret as a response. The max number of client rotated secrets is 2.
        The rotated secrets over the limit are dropped.

        It is possible to set expiration time for rotated secrets. When the `AutoRevokeAfter` parameter
        is set to a value greater than zero, rotated secrets that reach their expiry time are revoked.
        The `AutoRevokeAfter` parameter accepts values in the go-openapi duration format, for example,
        `1s`, `5m`, `2h`.
      operationId: rotateClientSecret
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Client id
        in: path
        name: cid
        required: true
        type: string
      - default: "0"
        description: Auto revoke after
        in: query
        name: auto_revoke_after
        type: string
      responses:
        "200":
          $ref: '#/responses/RotateClientSecretResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_clients
      summary: Rotate client's secret.
      tags:
      - clients
  /clients/{wid}:
    get:
      description: 'This API lists clients by server'
      operationId: listClientsSystem
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/Clients'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - view_clients
      summary: List clients by authorization server
      tags:
      - clients
  /configuration:
    get:
      description: |-
        Returns a JSON with the configuration of the specified tenant.

        With Cloudentity system API, you can export a specified tenant's
        configuration. You can, for example, move your tenant's configuration between different ACP deployments
        using the export API and, then, import it to a different ACP deployment using the import API.
        For example, a company that delivers its services to financial institutions and uses
        ACP to protect their APIs, may want to export an Open Banking directive compliant
        tenant's configuration from one of their deployments and import it the deployment of their customers.

        To export your tenant configuration, your client application must have the `manage_configuration`
        scope assigned. When requesting an access token, you should also provide this scope as the one you
        would like to request.

        Use the `tid` path parameter to specify which tenant is to have the configuration exported.
      operationId: exportTenantConfiguration
      parameters:
      - in: query
        name: workspace_id
        type: string
      - in: query
        name: with_data
        type: boolean
      responses:
        "200":
          $ref: '#/responses/TenantDump'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - read_configuration
      summary: Export tenant's configuration
      tags:
      - tenants
    patch:
      description: Patch tenant configuration using RFC 6902 JSON Patch.
      operationId: patchTenantConfiguration
      parameters:
      - in: body
        name: patch
        schema:
          $ref: '#/definitions/Rfc6902PatchOperations'
      - format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' patch applied'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: Patch tenant configuration
      tags:
      - tenants
    put:
      description: |-
        Allows to quickly import the specified tenant configuration.

        With Cloudentity system API, you can import a specific tenant's
        configuration. You can, for example, move your tenant's configuration between different ACP deployments.
        For example, a company that delivers its services to financial institutions and uses
        ACP to protect their APIs, may want to import an Open Banking directive compliant
        tenant's configuration from one of their deployments to the deployment of their customers.

        To import your tenant configuration, your client application must have the `manage_configuration`
        scope assigned. When requesting an access token, you should also provide this scope as the one you
        would like to request.

        Use the `tid` path parameter to specify which tenant is to have the configuration imported.
      operationId: importTenantConfiguration
      parameters:
      - in: body
        name: TenantDump
        schema:
          $ref: '#/definitions/TenantDump'
      - description: |-
          Insert mode

          Defines what happens in case of configuration import conflicts.

          The `mode` parameter defines
          what happens if there are any conflicts when importing your configuration. For example, if a
          client already exists within ACP and you are trying to import a
          configuration that also has a client with this ID, there are the following ways
          ACP can handle the request:

          `mode` set to `ignore` - ACP ignores the changes that come from your configuration import.

          `mode` set to `fail` - ACP stops processing the import and returns an error.

          `mode` set to `update` - ACP updates the value from the previous configuration with the value
          provided in the request.
        format: insertMode
        in: query
        name: mode
        type: string
      responses:
        "204":
          description: ' configuration has been imported'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: Import tenant configuration
      tags:
      - tenants
  /consents:
    get:
      description: |-
        User identifier must be provided in the header.

        To limit list of consents, you can provide consent identifiers in query param.
      operationId: listUserConsentsSystem
      parameters:
      - in: query
        items:
          type: string
        name: consent_id
        type: array
      - description: user identifier
        in: header
        name: x-subject
        type: string
      responses:
        "200":
          $ref: '#/responses/ConsentsWithGrants'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - view_consents
      summary: List user consents
      tags:
      - consents
    patch:
      description: |-
        This is a non-standardized PATCH request.

        Allows to update multiple consents approval in one API call.

        User identifier must be provided in the header.

        See ConsentGrantPatchRequest object for more information.
      operationId: patchConsentGrantsSystem
      parameters:
      - in: body
        name: ConsentGrantPatchRequest
        schema:
          $ref: '#/definitions/ConsentGrantPatchRequest'
      - description: user identifier
        in: header
        name: x-subject
        type: string
      responses:
        "201":
          $ref: '#/responses/ConsentGrantPatchResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_consents
      summary: Patch consent grants
      tags:
      - consents
  /consents/{action}:
    get:
      description: User identifier must be provided in the header.
      operationId: listUserConsentsByActionSystem
      parameters:
      - default: default
        description: Consent action id
        in: path
        name: action
        required: true
        type: string
      - description: user identifier
        in: header
        name: x-subject
        type: string
      responses:
        "200":
          $ref: '#/responses/ConsentsWithGrants'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - view_consents
      summary: List user consents by action
      tags:
      - consents
  /gateways/configuration:
    get:
      description: This endpoint is used by api authorizers to fetch rules, policies
        and services to protect.
      operationId: getGatewayConfiguration
      parameters:
      - default: latest
        description: Authorizer version
        in: query
        name: authorizer_version
        type: string
      - description: Tenant id
        in: query
        name: tenant_id
        type: string
      - description: Server id
        in: query
        name: server_id
        type: string
      responses:
        "200":
          $ref: '#/responses/GatewayConfiguration'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - read_gateway_configuration
      summary: Get configuration for a gateway
      tags:
      - gateways
    post:
      description: This endpoint is used to push apis protected by api gateway to
        acp.
      operationId: setGatewayConfiguration
      parameters:
      - in: body
        name: SetGatewayConfigurationRequest
        schema:
          $ref: '#/definitions/SetGatewayConfigurationRequest'
      - default: latest
        description: Authorizer version
        in: query
        name: authorizer_version
        type: string
      responses:
        "200":
          $ref: '#/responses/SetGatewayConfigurationResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - write_gateway_configuration
      summary: Set configuration for a gateway
      tags:
      - gateways
  /gateways/exchange:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: gatewayExchange
      parameters:
      - in: formData
        name: subject_token
        type: string
      - default: original_token
        in: formData
        name: request_scopes
        type: string
      responses:
        "200":
          $ref: '#/responses/GatewayExchangeResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
      security:
      - system:
        - gateway_exchange_tokens
      summary: Exchange token endpoint as a gateway
      tags:
      - system
  /gateways/introspect:
    post:
      consumes:
      - application/x-www-form-urlencoded
      operationId: gatewayIntrospect
      parameters:
      - in: formData
        name: token
        type: string
      responses:
        "200":
          $ref: '#/responses/IntrospectResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
      security:
      - system:
        - introspect_tokens
      summary: Introspect access token endpoint as a gateway
      tags:
      - system
  /gateways/requests:
    post:
      description: Push gateway request.
      operationId: pushGatewayRequests
      parameters:
      - in: body
        name: GatewayRequestEvents
        schema:
          $ref: '#/definitions/GatewayRequestEvents'
      - default: latest
        description: Authorizer version
        in: query
        name: authorizer_version
        type: string
      responses:
        "200":
          $ref: '#/responses/GatewayRequestsEventsResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - push_gateway_requests
      summary: Push gateway request
      tags:
      - gateways
  /logins/{login}:
    get:
      description: This API is used by a login page to make a decision if user should
        authenticate.
      operationId: getLoginRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/LoginSessionResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_logins
      summary: Get login request
      tags:
      - logins
  /logins/{login}/accept:
    post:
      description: This API is used by a login page to notify ACP that user has successfully
        authenticated.
      operationId: acceptLoginRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptLogin
        schema:
          $ref: '#/definitions/AcceptSession'
      responses:
        "200":
          $ref: '#/responses/LoginAccepted'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_logins
      summary: Accept login request
      tags:
      - logins
  /logins/{login}/reject:
    post:
      description: This API is used by a login page to notify ACP that login has been
        rejected.
      operationId: rejectLoginRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectLogin
        schema:
          $ref: '#/definitions/RejectSession'
      responses:
        "200":
          $ref: '#/responses/LoginRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_logins
      summary: Reject login request
      tags:
      - logins
  /organizations:
    get:
      description: List organizations.
      operationId: listOrganizations
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - description: |-
          Optional search phrase: organization id OR organization name substring (case insensitive)
          SearchPhrase
        in: query
        name: search_phrase
        type: string
      - description: optional flag to filter by template
        in: query
        name: template
        type: boolean
      - description: |-
          optional list organizations after given id
          AfterServerID
        in: query
        name: after_organization_id
        type: string
      - description: |-
          optional list organizations before given id
          BeforeServerID
        in: query
        name: before_organization_id
        type: string
      - description: |-
          optional sort organizations by given field
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          optional order organizations by given direction
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          optional limit results
          Limit
        format: int64
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      - description: Count child organizations for each organization
        in: query
        name: with_child_count
        type: boolean
      responses:
        "200":
          $ref: '#/responses/Orgs'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: List organizations
      tags:
      - organizations
    post:
      operationId: createOrganization
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - in: body
        name: Org
        schema:
          $ref: '#/definitions/CreateOrganizationRequest'
      responses:
        "201":
          $ref: '#/responses/Org'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: Create organization
      tags:
      - organizations
  /organizations/{wid}:
    delete:
      description: Delete organization.
      operationId: deleteOrganization
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Organization id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "204":
          description: ' Organization has been deleted'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: Delete organization
      tags:
      - organizations
    get:
      description: Get organization.
      operationId: getOrganization
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Organization id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/Org'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: Get organization
      tags:
      - organizations
    put:
      description: Update organization.
      operationId: updateOrganization
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Organization id
        in: path
        name: wid
        required: true
        type: string
      - in: body
        name: Org
        schema:
          $ref: '#/definitions/Org'
      responses:
        "200":
          $ref: '#/responses/Org'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_configuration
      summary: Update organization
      tags:
      - organizations
  /pools/{ipID}/tokens:
    delete:
      description: |-
        Revoke tokens for given set of userIds (min 1, max 100 userIds can be specified).

        Tokens includes access and refresh tokens but also authorization codes, authorization requests,
        sso sessions and scopes grants.
      operationId: revokeTokensByPool
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Identity pool id
        in: path
        name: ipID
        required: true
        type: string
      - in: body
        name: Request
        schema:
          $ref: '#/definitions/RevokeTokensByPoolRequest'
      responses:
        "204":
          description: ' tokens revoked'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
      security:
      - system:
        - revoke_tokens
      summary: Revoke tokens for users in pool
      tags:
      - tokens
  /post-authn/{login}:
    get:
      description: This API is used by a postAuthn page to make a decision if user
        should post authn.
      operationId: getPostAuthnRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/LoginSessionResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_post_authn
      summary: Get postAuthn request
      tags:
      - post-authn
  /post-authn/{login}/abort:
    post:
      description: This API is used by a postAuthn page to notify ACP that postAuthn
        has been aborted.
      operationId: abortPostAuthnRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AbortPostAuthn
        schema:
          $ref: '#/definitions/AbortPostAuthnSession'
      responses:
        "200":
          $ref: '#/responses/PostAuthnAborted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_post_authn
      summary: Abort postAuthn request
      tags:
      - post-authn
  /post-authn/{login}/complete:
    post:
      description: This API is used by a postAuthn page to notify ACP that postAuthn
        has been successfully stored.
      operationId: completePostAuthnRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: CompletePostAuthn
        schema:
          $ref: '#/definitions/CompletePostAuthnSession'
      responses:
        "200":
          $ref: '#/responses/PostAuthnCompleteed'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_post_authn
      summary: Complete postAuthn request
      tags:
      - post-authn
  /scope-grants/{login}:
    get:
      description: This API is used by a consent page to display requested scopes.
      operationId: getScopeGrantRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: query
        name: login_state
        type: string
      responses:
        "200":
          $ref: '#/responses/ScopeGrantSessionResponse'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_scope_grants
      summary: Get scope grants
      tags:
      - logins
  /scope-grants/{login}/accept:
    post:
      description: This API is used to notify ACP that user granted consent.
      operationId: acceptScopeGrantRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: AcceptScopeGrant
        schema:
          $ref: '#/definitions/AcceptScopeGrant'
      responses:
        "200":
          $ref: '#/responses/ScopeGrantAccepted'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_scope_grants
      summary: Accept scope grant
      tags:
      - logins
  /scope-grants/{login}/reject:
    post:
      description: This API is used to notify ACP that scope grant has been rejected.
      operationId: rejectScopeGrantRequest
      parameters:
      - in: path
        name: login
        required: true
        type: string
      - in: body
        name: RejectScopeGrant
        schema:
          $ref: '#/definitions/RejectScopeGrant'
      responses:
        "200":
          $ref: '#/responses/ScopeGrantRejected'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_scope_grants
      summary: Reject scope grant
      tags:
      - logins
  /scopes/{wid}:
    get:
      description: 'This API lists scopes for a given authorization server'
      operationId: listScopesSystem
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "200":
          description: ScopesWithServices
          schema:
            $ref: '#/definitions/ScopesWithServices'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - view_scopes
      summary: List scopes for authorization server
      tags:
      - scopes
  /servers/{wid}:
    delete:
      description: Delete authorization server.
      operationId: deleteAuthorizationServer
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "204":
          description: ' Authorization server has been deleted'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_servers
      summary: Delete authorization server
      tags:
      - servers
  /servers/{wid}/audit-events:
    get:
      description: Returns list of audit events.
      operationId: listAuditEvents
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: admin
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      - description: |-
          optional list audit events with a given client id
          ClientID
        in: query
        name: client_id
        type: string
      - description: |-
          optional list audit events with a given subject
          Subject
        in: query
        name: subject
        type: string
      - description: |-
          optional list audit events with a given ip address
          IP
        in: query
        name: ip
        type: string
      - description: |-
          optional list audit events with high risk
          IP
        in: query
        name: high_risk
        type: string
      - description: |-
          optional list audit events with a given result (success/failure)
          IP
        in: query
        name: result
        type: string
      - description: |-
          optional list audit events with a given session id

          it can be used as a correlation id for listing all login related audit events
          SessionID
        in: query
        name: session_id
        type: string
      - description: optional list audit events with a given authorization correlation
          id
        in: query
        name: authorization_correlation_id
        type: string
      - description: |-
          optional list audit events with a given IDP subject
          IDPSubject
        in: query
        name: idp_subject
        type: string
      - description: |-
          optional list audit events with a given IDP id
          IDPID
        in: query
        name: idp_id
        type: string
      - description: |-
          optional list audit events with a given user identity pool id
          UserPoolID
        in: query
        name: user_pool_id
        type: string
      - description: |-
          optional list audit events with a given user id
          UserID
        in: query
        name: user_id
        type: string
      - description: |-
          optional list audit events with a given IDP method
          IDPMethod
        in: query
        name: idp_method
        type: string
      - description: optional organization id
        in: query
        name: organization_id
        type: string
      - description: |-
          optional list audit events with a given affected user identity pool id
          AffectedUserPoolID
        in: query
        name: affected_user_pool_id
        type: string
      - description: |-
          optional list audit events with a given affected user id
          AffectedUserID
        in: query
        name: affected_user_id
        type: string
      - description: |-
          optional list audit events with a given group id
          GroupID
        in: query
        name: group_id
        type: string
      - description: |-
          Optional list of event subjects, one of: request client gateway_request policy consent authorization_code recovery login access_token scopes otp gateway_policy user credential dcr role jit tokens service server
          EventSubject
        in: query
        items:
          type: string
        name: event_subject
        type: array
      - description: |-
          Optional list of event types, one of: authorized unauthorized created updated deleted requested accepted rejected issued denied granted attempted failed sent not_sent revoked generated reset_requested reset_completed add_requested add_completed
          EventType
        in: query
        items:
          type: string
        name: event_action
        type: array
      - description: |-
          list all events after a given time
          TimestampFrom
        format: date-time
        in: query
        name: timestamp_from
        type: string
      - description: |-
          list all events before a given time
          TimestampTo
        format: date-time
        in: query
        name: timestamp_to
        type: string
      - description: |-
          optional list events before a given event id
          BeforeEventID
        in: query
        name: before_event_id
        type: string
      - description: |-
          optional list audit events after a given event id
          AfterEventID
        in: query
        name: after_event_id
        type: string
      - description: |-
          optional sort audit events by a given field
          Sort
        in: query
        name: sort
        type: string
      - description: |-
          optional order audit events by given direction
          Order
        in: query
        name: order
        type: string
      - default: 20
        description: |-
          optional limit results, min 1, max 100
          Limit
        format: int64
        in: query
        maximum: 100
        minimum: 1
        name: limit
        type: integer
      responses:
        "200":
          $ref: '#/responses/AuditEventsResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - view_audit_events
      summary: List audit events
      tags:
      - auditEvents
  /servers/{wid}/revokeRotatedSecrets:
    post:
      description: Revoke all rotated server's secrets.
      operationId: revokeRotatedServerSecrets
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "204":
          description: ' all server''s rotated secrets has been revoked'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_servers
      summary: Revoke rotated secrets.
      tags:
      - servers
  /servers/{wid}/rotateSecret:
    post:
      description: Generate a new server secret and move old secret to rotated secrets
        list.
      operationId: rotateServerSecret
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "204":
          description: ' secret has been rotated'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_servers
      summary: Rotate server's secret.
      tags:
      - servers
  /servers/{wid}/secrets:
    get:
      description: |-
        List previously created secrets for a given tenant id and authorization server (workspace).
        The secret value is ciphered when it's created.
      operationId: listSecrets
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/SecretsResponse'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - read_secrets
      summary: List secrets
      tags:
      - secrets
    post:
      description: |-
        Creates a secret for a given tenant id and authorization server (workspace).
        Secrets API is storage for keeping encrypted sensitive variables that may be used within rego policies or scripts.
      operationId: createSecret
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      - in: body
        name: Secret
        schema:
          $ref: '#/definitions/Secret'
      responses:
        "201":
          $ref: '#/responses/Secret'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "409":
          $ref: '#/responses/conflictHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_secrets
      summary: Create secret
      tags:
      - secrets
  /servers/{wid}/secrets/{sid}:
    delete:
      description: Delete previously created secrets for a given tenant id and authorization
        server (workspace).
      operationId: deleteSecret
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      - default: default
        in: path
        name: sid
        required: true
        type: string
      responses:
        "204":
          description: ' Secret has been deleted'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_secrets
      summary: Delete secret
      tags:
      - secrets
    put:
      description: Updates a secret for a given tenant id and authorization server
        (workspace).
      operationId: updateSecret
      parameters:
      - description: A server will only return requested resources if the resource
          matches one of the listed ETag value
        format: etag
        in: header
        name: if-match
        type: string
      - description: Unique identifier included in audit events for request tracking
        in: header
        name: x-correlation-id
        type: string
      - description: Key used to safely retry failed requests without duplicate processing
        in: header
        name: x-idempotency-key
        type: string
      - default: default
        description: Authorization server id
        in: path
        name: wid
        required: true
        type: string
      - default: default
        in: path
        name: sid
        required: true
        type: string
      - in: body
        name: Secret
        schema:
          $ref: '#/definitions/Secret'
      responses:
        "201":
          $ref: '#/responses/Secret'
        "400":
          $ref: '#/responses/badRequestHTTPError'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
        "429":
          $ref: '#/responses/tooManyRequestsHTTPError'
      security:
      - system:
        - manage_secrets
      summary: Update secret
      tags:
      - secrets
  /servers/{wid}/tokens:
    delete:
      description: |-
        This API can be utilized for one of the following purposes:

        Revoke by consent ID**: If a `consent_id` is provided in the query parameter,
        the tokens issued for that consent ID will be revoked. This option takes precedence
        over subject-based revocation.

        Subject-based revocation**: If no `consent_id` is provided, the API will revoke
        tokens for the specified set of subjects provided in the body.

        #Subject-based revocation:

        Tokens will be revoked for the specified set of subjects, which can include access tokens,
        refresh tokens, authorization codes, authorization requests, SSO sessions, and scope grants.

        Additionally, if an optional `idp_id` is provided, the subject values will be recalculated
        if the server is using hashed subject types.
      operationId: revokeTokens
      parameters:
      - default: default
        description: Workspace id
        in: path
        name: wid
        required: true
        type: string
      - description: Consent ID
        in: query
        name: consent_id
        type: string
      - in: body
        name: Request
        schema:
          $ref: '#/definitions/RevokeTokenRequest'
      responses:
        "204":
          description: ' Tokens removed'
        "401":
          $ref: '#/responses/unauthorizedHTTPError'
        "403":
          $ref: '#/responses/forbiddenHTTPError'
        "404":
          $ref: '#/responses/notFoundHTTPError'
        "422":
          $ref: '#/responses/unprocessableEntityHTTPError'
      security:
      - system:
        - revoke_tokens
      summary: Revoke tokens
      tags:
      - system
produces:
- application/json
responses:
  AuditEventsResponse:
    description: AuditEvents
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/AuditEvents'
  Client:
    description: Client
    schema:
      $ref: '#/definitions/Client'
  Clients:
    description: Clients
    schema:
      $ref: '#/definitions/Clients'
  ConsentGrantPatchResponse:
    description: Consent grant patch response
    schema:
      $ref: '#/definitions/ConsentGrantPatchResponse'
  ConsentsWithGrants:
    description: Consents with grants
    schema:
      $ref: '#/definitions/ConsentsWithGrants'
  GatewayConfiguration:
    description: Gateway configuration
    schema:
      $ref: '#/definitions/GatewayConfiguration'
  GatewayExchangeResponse:
    description: Gateway Exchange response
    schema:
      $ref: '#/definitions/GatewayExchangeResponse'
  GatewayRequestsEventsResponse:
    description: Gateway requests events response
    schema:
      $ref: '#/definitions/GatewayRequestsEventsResponse'
  IntrospectResponse:
    description: Introspect
    schema:
      $ref: '#/definitions/IntrospectResponse'
  LoginAccepted:
    description: Login accepted
    schema:
      $ref: '#/definitions/LoginAccepted'
  LoginRejected:
    description: Login rejected
    schema:
      $ref: '#/definitions/LoginRejected'
  LoginSessionResponse:
    description: Login session
    schema:
      $ref: '#/definitions/LoginSessionResponse'
  Org:
    description: Org
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/OrganizationResponse'
  OrganizationMetadata:
    description: Organization metadata
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/OrganizationMetadata'
  Orgs:
    description: Orgs
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/OrganizationsResponse'
  PostAuthnAborted:
    description: Login aborted
    schema:
      $ref: '#/definitions/PostAuthnAborted'
  PostAuthnCompleteed:
    description: PostAuthn completeed
    schema:
      $ref: '#/definitions/PostAuthnCompleted'
  RotateClientSecretResponse:
    description: Rotate client secret response
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/RotateClientSecretResponse'
  ScopeGrantAccepted:
    description: Scope grant accepted
    schema:
      $ref: '#/definitions/ScopeGrantAccepted'
  ScopeGrantRejected:
    description: Scope grant rejected
    schema:
      $ref: '#/definitions/ScopeGrantRejected'
  ScopeGrantSessionResponse:
    description: Scope grant session
    schema:
      $ref: '#/definitions/ScopeGrantSessionResponse'
  Scopes:
    description: Scopes
    schema:
      $ref: '#/definitions/ScopesWithServices'
  Secret:
    description: Secret
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/Secret'
  SecretsResponse:
    description: Secrets
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/SecretsResponse'
  SetGatewayConfigurationResponse:
    description: Set gateway configuration response
    schema:
      $ref: '#/definitions/SetGatewayConfigurationResponse'
  TenantDump:
    description: Tenant dump
    schema:
      $ref: '#/definitions/TenantDump'
  UserOrgs:
    description: User orgs
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/UserOrganizationsResponse'
  UserWorkspaces:
    description: User Workspaces
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/UserWorkspacesResponse'
  Workspace:
    description: Workspace
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/WorkspaceResponse'
  WorkspaceMetadata:
    description: Workspace metadata
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/WorkspaceMetadata'
  Workspaces:
    description: Workspaces
    headers:
      etag:
        description: |-
          The ETag HTTP header is an identifier for a specific version of a resource

          in:header
        format: etag
        type: string
      x-external-error:
        description: |-
          Indicates that a 5xx error was caused by tenant-provided code

          in:header
        type: string
      x-trace-id:
        description: |-
          OpenTelemetry trace identifier

          in:header
        type: string
    schema:
      $ref: '#/definitions/WorkspacesResponse'
  badRequestHTTPError:
    description: Bad request
    schema:
      $ref: '#/definitions/Error'
  conflictHTTPError:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  forbiddenHTTPError:
    description: Forbidden
    schema:
      $ref: '#/definitions/Error'
  internalServerErrorHTTPError:
    description: Internal server error
    schema:
      $ref: '#/definitions/Error'
  methodNotAllowedHTTPError:
    description: Method not allowed
    schema:
      $ref: '#/definitions/Error'
  notFoundHTTPError:
    description: Not found
    schema:
      $ref: '#/definitions/Error'
  payloadTooLargeHTTPError:
    description: Payload too large
    schema:
      $ref: '#/definitions/Error'
  preconditionFailedHTTPError:
    description: Precondition failed
    schema:
      $ref: '#/definitions/Error'
  tooManyRequestsHTTPError:
    description: Too many requests
    schema:
      $ref: '#/definitions/Error'
  unauthorizedHTTPError:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  unprocessableEntityHTTPError:
    description: Unprocessable entity
    schema:
      $ref: '#/definitions/Error'
schemes:
- https
securityDefinitions:
  system:
    authorizationUrl: /default/system/oauth2/authorize
    flow: application
    scopes:
      introspect_tokens: introspect_tokens
      manage_clients: manage_clients
      manage_configuration: manage_configuration
      manage_consents: manage_consents
      manage_logins: manage_logins
      manage_post_authn: manage_post_authn
      manage_scope_grants: manage_scope_grants
      push_gateway_requests: push_gateway_requests
      read_configuration: read_configuration
      read_gateway_configuration: read_gateway_configuration
      view_audit_events: view_audit_events
      view_clients: view_clients
      view_consents: view_consents
      write_gateway_configuration: write_gateway_configuration
    tokenUrl: /default/system/oauth2/token
    type: oauth2
swagger: "2.0"
